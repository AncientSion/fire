{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"assemble",
				"assembleBallistics"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getHit",
				"getHitSection"
			],
			[
				"getMis",
				"getMissionTypeString"
			],
			[
				"setPostMo",
				"setPostMoveImage"
			],
			[
				"geu",
				"getUnitById"
			],
			[
				"getUnt",
				"getUnitById"
			],
			[
				"order",
				"ordered"
			],
			[
				"target",
				"targetid"
			],
			[
				"dodepl",
				"doDeployFlight"
			],
			[
				"reset",
				"resetHover"
			],
			[
				"getU",
				"getUnitByClick"
			],
			[
				"hasInvali",
				"hasInvalidPower"
			],
			[
				"confirm",
				"confirmFiringOrders"
			],
			[
				"unit",
				"unitSize"
			],
			[
				"getPo",
				"getPowerReq"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"getRema",
				"getRemainingDelay"
			],
			[
				"getRem",
				"getCurrentImpulse"
			],
			[
				"getRemain",
				"getRemainingEP"
			],
			[
				"add",
				"addClass"
			],
			[
				"getRe",
				"getReinforcements"
			],
			[
				"getAmg",
				"getAngleFromTo"
			],
			[
				"getPositi",
				"getCurrentPosition"
			],
			[
				"col",
				"colspan"
			],
			[
				"gethit",
				"getHitSystem"
			],
			[
				"fire",
				"handleFireClick"
			],
			[
				"getpla",
				"getPlannedPosition"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"play",
				"playerName"
			],
			[
				"getbase",
				"getBaseOffsetPos"
			],
			[
				"setPre",
				"setPreMovePosition"
			],
			[
				"bac",
				"background-color"
			],
			[
				"getImp",
				"getImpulseStep"
			],
			[
				"ren",
				"reinforce"
			],
			[
				"setRemain",
				"setRemainingDelay"
			],
			[
				"remai",
				"remainingDelay"
			],
			[
				"rema",
				"remainingImpulse"
			],
			[
				"remaining",
				"remainingImpulse"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"getRei",
				"getReinforcementShips"
			],
			[
				"draw",
				"drawSystemAxis"
			],
			[
				"font-",
				"font-size"
			],
			[
				"se",
				"select"
			],
			[
				"roate",
				"rotate270size90"
			],
			[
				"getre",
				"getRemainingImpulse"
			],
			[
				"getImpu",
				"getImpulseChangeCost"
			],
			[
				"getTurn",
				"getMaxTurnAngle"
			],
			[
				"turn",
				"turnAngle"
			],
			[
				"baseI",
				"baseImpulseCost"
			],
			[
				"getPlann",
				"getPlannedPosition"
			],
			[
				"getPlanned",
				"getPlannedPosition"
			],
			[
				"switchM",
				"switchTurnMode"
			],
			[
				"getPla",
				"getPlannedPosition"
			],
			[
				"getD",
				"getDefensiveBonus"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			],
			[
				"array_m",
				"array_merge"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5896,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 5204,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 13739,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 20083,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shipclasses.js",
			"settings":
			{
				"buffer_size": 83815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6013,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3783,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3039,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2505,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 19129,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 1703,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1619,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3748,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2568,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2273,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1611,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 4540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 5058,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 1991,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 4810,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4744,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 5055,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6634,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 2518,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 6846,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4755,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"contents": "function Salvo(data){\n\tMixed.call(this, data);\n\tthis.salvo = 1;\n\n\tthis.setSize = function(){\n\t\tthis.size = 18;\n\t}\n\n\tthis.setLayout = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tthis.layout.push({x: range(-14, 14)});\n\t\t}\n\t}\t\n\n\tthis.getAttachment = function(div){\n\t\tvar color = \"red\";\n\n\t\tif (this.friendly){color = \"green\";}\n\t\tvar attachDiv = $(\"<div>\").addClass(\"attachDiv\")\n\t\t\t.append($(\"<div>\").css(\"display\", \"block\").addClass(\"center15 \" + color)\n\t\t\t\t.html(\"Salvo #\" + this.id + (\" (click to select)\"))\n\t\t\t.append($(\"<div>\").css(\"display\", \"block\").addClass(\"center15 \" + color)\n\t\t\t\t.html(\"Auto-Targetting: \" + this.getTarget().name + \" #\" + this.mission.targetid)))\n\t\t\t.data(\"id\", this.id)\n\t\t\t.click(function(){\n\t\t\t\tif (aUnit){\n\t\t\t\t\tvar ship = game.getUnitById(aUnit);\n\t\t\t\t\tif (ship.hasWeaponsSelected()){\n\t\t\t\t\t\tvar target = game.getUnitById($(this).data(\"id\"));\n\t\t\t\t\t\tif (ship.userid != target.userid){\n\t\t\t\t\t\t\thandleFireClick(ship, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\t\tship.doUnselect();\n\t\t\t\t\t\tship.switchDiv();\n\t\t\t\t\t\tgame.getUnitById($(this).data(\"id\")).select();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse game.getUnitById($(this).data(\"id\")).select();\n\t\t\t\t\n\t\t\t})\n\t\t\t.hover(function(e){\n\t\t\t\tvar vessel = game.getUnitById($(this).data(\"id\"));\n\t\t\t\tif (aUnit && aUnit != vessel.id){\n\t\t\t\t\tvar\tship = game.getUnitById(aUnit);\n\t\t\t\t\tif (ship.salvo){return;}\n\t\t\t\t\tif (ship.hasWeaponsSelected()){\n\t\t\t\t\t\tif (ship.id != vessel.id){\n\t\t\t\t\t\t\thandleWeaponAimEvent(ship, vessel, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgame.target = 0;\n\t\t\t\t\t\t$(\"#weaponAimTableWrapper\").hide()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\n\t\tfor (var j = 0; j < this.structures.length; j++){\n\t\t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n\t\t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase()].src)));\n\t\t}\n\n\t\tdiv.append(attachDiv);\n\t\treturn div;\n\t}\n\n\tthis.getDamageEntriesByFireId = function(fire){\n\t\tvar dmgs = [];\n\t\tvar lookup = 0;\n\n\t\tfor (var i = 0; i < fire.hits.length; i++){\n\t\t\tlookup += fire.hits[i]\n\t\t}\n\n\t\tif (!lookup){\n\t\t\treturn dmgs;\n\t\t}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = this.structures[i].damages.length-1; j >= 0; j--){\n\t\t\t\tif (this.structures[i].damages[j].fireid == fire.id){\n\t\t\t\t\tdmgs.push(this.structures[i].damages[j]);\n\t\t\t\t\tdmgs[dmgs.length-1].system = \"Missile\";\n\t\t\t\t\tlookup--;\n\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].damages[j].turn < fire.turn){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dmgs;\n\t}\n\n\tthis.getDamage = function(){\n\t\tvar min = this.getMinDmg();\n\t\tvar max = this.getMaxDmg();\n\n\t\tif (min == max){\n\t\t\treturn min;\n\t\t}\n\t\telse {\n\t\t\treturn min + \" - \" + max;\n\t\t}\n\t}\n\n\tthis.getMinDmg = function(){\n\t\treturn this.structures[0].minDmg;\n\t}\n\n\tthis.getMaxDmg = function(){\n\t\treturn this.structures[0].maxDmg;\n\t}\n\n\tthis.getCurrentImpulse = function(){\n\t\tif (game.phase >= 3){\n\t\t\treturn this.currentImpulse + this.baseImpulse*(1-this.destroyed);\n\t\t} else return this.currentImpulse;\n\t}\n\n\tthis.getTrackingString = function(){\n\t\tvar t = this.getTarget().traverse;\n\t\tvar html = \"\";\n\t\tvar d = Math.max(0, (this.structures[0].traverse - t));\n\t\thtml += game.getUnitType(this.structures[0].traverse) + \"<span class=\";\n\n\t\tif (d > 0){\n\t\t\thtml += \"'red'>\";\n\t\t} else html += \"'green'>\";\n\t\t\n\t\treturn html + \" (\" + Math.floor(100-d*20) + \"%)</span>\";\n\t}\n\t\n\tthis.getDefensiveBonus = function(s){\n\t\treturn 0;\n\t}\n\n\tthis.createBaseDiv = function(){\n\t\tvar owner = \"friendly\";\n\t\tif (this.userid != game.userid){owner = \"hostile\";}\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.className = \"ammoDiv \" + owner + \" disabled\";\n\t\t\t$(div).data(\"ammoId\", this.id);\n\t\t\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.style.width = \"95%\"\n\n\t\tvar tr = table.insertRow(-1);\n\t\tvar td = tr.insertCell(-1); td.className = \"header\";\t\n\t\t\ttd.innerHTML = this.structures.length + \"x '\" + this.structures[0].name + \"' #\" + this.id; td.colSpan = 4;\n\n\t\tvar tr = table.insertRow(-1);\n\t\tvar td = tr.insertCell(-1); td.className = \"subHeader\";\n\t\t\ttd.innerHTML = this.structures[0].display; td.colSpan = 4;\n\n\t\tvar target = this.getTarget();\n\t\tvar dist = Math.ceil(getDistance(this.getPlannedPosition(), target.getPlannedPosition()));\n\t\tvar tr = table.insertRow(-1);\n\t\tvar td = tr.insertCell(-1);\n\t\t\ttd.className = \"subHeader\"; td.colSpan = 4;\n\t\t\ttd.innerHTML = \"Target: <span class='red size15'>\" + target.name + \" #\" + target.id + \"</span>,  distance: \" + dist + \"px\";\n\t\tdiv.appendChild(table);\n\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.style.width = \"95%\"; table.style.marginTop = \"10px\";\n    \t$(table)\n\t\t\t.append($(\"<tr>\")\n\t    \t\t.append($(\"<th>\").html(\"Thrust / Accel\"))\n\t    \t\t.append($(\"<th>\").html(\"Armour\"))\n\t    \t\t.append($(\"<th>\").html(\"Damage\"))\n\t    \t\t.append($(\"<th>\").html(\"Tracking up to\"))\n\t\t\t)\n\t\t\t.append($(\"<tr>\")\n\t    \t\t.append($(\"<td>\").html(this.getCurrentImpulse() + \" (+\" + Math.floor(this.getBaseImpulse()) + \" per Turn)\"))\n\t    \t\t.append($(\"<td>\").html(this.structures[0].negation))\n\t    \t\t.append($(\"<td>\").html(this.getDamage()))\n\t    \t\t.append($(\"<td>\").html(this.getTrackingString()))\n\t\t\t)\n\n\t\tdiv.appendChild(table);\n\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.style.borderCollapse = \"collapse\";\n\t\t\ttable.style.margin = \"auto\";\n\t\tvar tr = document.createElement(\"tr\");\n\n\t\tvar max = Math.min(5, this.structures.length);\n\n\t\tvar impact = false;\n\t\tif (this.actions.lenght && this.actions[this.actions.length-1].type == \"impact\"){\n\t\t\timpact = true;\n\t\t}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (i % max === 0){\n\t\t\t    var tbody = table.appendChild(document.createElement(\"tbody\"));\n\t\t\t    var tr1 = tbody.insertRow(-1);\n\t\t\t    var tr2 = tbody.insertRow(-1);\n\t\t\t}\n\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.className = \"iconContainer\"; \n\t\t\t\t$(td).data(\"id\", this.structures[i].id);\n\t\t\t\ttd.addEventListener(\"click\", function(){\n\t\t\t\t\tconsole.log(game.getUnitById(aUnit).getSystemById($(this).data(\"id\")));\n\t\t\t\t})\n\n\t\t\t\tif (this.structures[i].destroyed || this.structures[i].disabled){\n\t\t\t\tvar img = new Image();\n\t\t\t\t\timg.className = \"ammoOverlay\";\n\t\t\t\t\timg.src = \"varIcons/destroyed.png\";\n\t\t\t\t\ttd.appendChild(img);\n\t\t\t\t}\n\t\t\t\t/*else if (impact){\n\t\t\t\t\tif (true){\n\t\t\t\t\t\timg.src = \"varIcons/ammoHit.png\";\n\t\t\t\t\t} else img.src = \"varIcons/ammoMiss.png\";\n\t\t\t\t}*/\n\t\t\t\t$(td).append($(this.img.cloneNode(true)).addClass(\"size40\"));\n\n\t\t\ttr1.appendChild(td);\n\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.className = \"iconIntegrity\";\n\n\t\t\tvar rem = this.structures[i].getRemainingIntegrity();\n\n\t\t\tvar bgDiv = document.createElement(\"div\");\n\t\t\t\tbgDiv.className = \"integrityAmount\"; bgDiv.style.top = 2;\n\t\t\t\tbgDiv.style.fontSize = \"12px\";\n\t\t\t\tbgDiv.innerHTML = rem + \" / \" + this.structures[i].integrity;\n\t\t\t\ttd.appendChild(bgDiv);\n\n\t\t\tvar lowerDiv = document.createElement(\"div\");\n\t\t\t\tlowerDiv.className = \"integrityNow\"; lowerDiv.style.top = 0; lowerDiv.style.height = \"100%\";\n\t\t\t\tlowerDiv.style.width = rem/this.structures[i].integrity * 100 + \"%\";\n\t\t\t\ttd.appendChild(lowerDiv);\n\t\t\t\t\n\t\t\tvar upperDiv = document.createElement(\"div\");\n\t\t\t\tupperDiv.className = \"integrityFull\"; upperDiv.style.top = 0;\n\t\t\t\ttd.appendChild(upperDiv);\n\n\t\t\ttr2.appendChild(td);\n\t\t}\n\t\tdiv.appendChild(table);\n\n\t\t$(div).contextmenu(function(e){\n\t\t\te.stopPropagation();\n\t\t//\te.preventDefault();\n\t\t//\t$(this).addClass(\"disabled\");\n\t\t}).drag();\n\t\t\n\t\tthis.element = div;\n\t\tdocument.getElementById(\"game\").appendChild(div);\n\t}\n\n\tthis.setDisplay = function(){\n\t\tthis.display = this.structures[0].display;\n\t}\n\n\tthis.setLayouta = function(){\n\t\tif (this.structures.length == 1){\n\t\t\tthis.layout.push({x: range(-3, 3), y: range(-3, 3)});\n\t\t\treturn;\n\t\t}\n\t\tvar size = 15;\n\t\tvar r = 0; // row\n\t\tvar c = 0; // col\n\t\tvar d = Math.ceil(this.structures.length/4) // depth\n\t\tfor (var i = 0; i < d*2; i++){\n\t\t\tthis.layout.push(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tx: -size/3 - size*c/2,\n\t\t\t\t \t\t\t\t\ty:  (d-1)*size/2 -r*size + range(-4, 4)\n\t\t\t\t \t\t\t\t}\n\t\t\t \t\t\t\t);\n\t\t\tthis.layout.push(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tx: size/3 + size*c/2,\n\t\t\t\t \t\t\t\t\ty: (d-1)*size/2 -r*size + range(-4, 4)\n\t\t\t\t \t\t\t\t}\n\t\t\t \t\t\t\t);\n\t\t\tif (i % 2 == 1){\n\t\t\t\tr++;\n\t\t\t\tc = 0;\n\t\t\t}\n\t\t\tc++\n\t\t}\n\t}\n\n\tthis.getHitChanceFromAngle = function(){\n\t\treturn Math.floor(Math.sqrt(this.structures[0].mass) * 15);\n\t}\n\n\tthis.getTrajectoryStart = function(){\n\t\treturn {x: this.x, y: this.y};\n\t}\n\n\tthis.getFiringPosition = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n\t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n\t\t)\n\t}\n\n\tthis.getTargettingPos = function(){\n\t\tif (this.actions[this.actions.length-1].type == \"impact\"){\n\t\t\treturn new Point(\n\t\t\t\tthis.actions[this.actions.length-2].x + range(-10, 10),\n\t\t\t\tthis.actions[this.actions.length-2].y + range(-10, 10)\n\t\t\t)\t\n\t\t}\n\t\telse {\n\t\t\treturn new Point(\n\t\t\t\tthis.actions[this.actions.length-1].x + range(-10, 10),\n\t\t\t\tthis.actions[this.actions.length-1].y + range(-10, 10)\n\t\t\t)\n\t\t}\n\t}\n}\n\nSalvo.prototype = Object.create(Mixed.prototype);\n\nSalvo.prototype.getArmourString = function(a){\n\treturn this.structures[0].negation;\n}\n\nSalvo.prototype.getShortInfo = function(){\n\tvar ele = $(\"#shortInfo\");\n\tif (this.userid == game.userid){\n\t\t$(ele).attr(\"class\", \"friendly\");\n\t} else $(ele).attr(\"class\", \"hostile\");\n\n\tvar table = document.createElement(\"table\");\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Salvo #\" + this.id + \" (\" + this.structures.length + \"x\" + this.structures[0].name + \")\";\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + this.getCurrentImpulse();\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Base Hit: \" + this.getHitChanceFromAngle() + \"%\";\n\n\tif (!this.mission.arrived && game.phase < 1 && this.inRange()){\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"<span class='red'>ARRIVAL IMMINENT</span>\";\n\t}\n\n\treturn table;\n}\n\nSalvo.prototype.setImage = function(){\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = this.size*2;\n\t\tt.height = this.size*2;\n\tvar ctx = t.getContext(\"2d\");\n\n\tctx.translate(t.width/2, t.height/2);\n\tctx.rotate((this.getDrawFacing()+90) * (Math.PI/180));\n\tctx.drawImage(\n\t\tthis.img,\n\t\t0 -this.size/2,\n\t\t0 -this.size/2,\n\t\tthis.size, \n\t\tthis.size\n\t)\n\t//ctx.translate(this.size/2, this.size/2);\n\t//ctx.rotate((this.getDrawFacing()+90) * (Math.PI/180));\n\tctx.setTransform(1,0,0,1,0,0);\n\n\tthis.drawImg = t;\n}\n\nSalvo.prototype.setRawImage = function(){\n\tthis.img = window.shipImages[this.structures[0].name.toLowerCase()].cloneNode(true);\n}",
			"file": "salvo.js",
			"file_size": 10847,
			"file_write_time": 131480743711347824,
			"settings":
			{
				"buffer_size": 10476,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 30576,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4111,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 84899,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8397,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1590,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 16368,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 6997,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 49343,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 48851,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nfunction Game(data, userid){\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.status = data.status;\n\tthis.userid = userid;\n\tthis.turn = data.turn;\n\tthis.phase = data.phase;\n\tthis.ships = data.ships;\n\tthis.reinforcements = data.reinforcements;\n\tthis.incoming = data.incoming;\n\tthis.fireOrders = []\n\tthis.mode = false;\n\tthis.deploying = false;\n\tthis.flightDeploy = false;\n\tthis.adjustMission = false;\n\tthis.canSubmit = false;\n\tthis.index = 1;\n\tthis.reinforcePoints = 0;\n\tthis.animating = false;\n\tthis.deployArea = [];\n\tthis.deployBlock = [];\n\tthis.vector = false;\n\tthis.opacity = false;\n\tthis.markers = [];\n\tthis.ballistics = [];\n\tthis.antiBallistics = [];\n\tthis.shortInfo = false;\n\tthis.turnMode = 0;\n\tthis.zIndex = 10;\n\tthis.sensorMode = 0;\n\tthis.target = 0;\n\tthis.deploys = data.deploys;\n\tthis.animShip = 0;\n\tthis.animFlight = 0;\n\tthis.animSalvo = 0;\n\tthis.mission;\n\n\tthis.doDeployShip = function(e, ship, pos){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id == ship.id){\n\t\t\t\tthis.ships[i].doDeploy(pos);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ships.push(ship);\n\t\tthis.ships[this.ships.length-1].doDeploy(pos);\n\t}\n\n\tthis.getUniqueID = function(){\n\t\tvar id = 0;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tid = Math.max(id, this.ships[i].id);\n\t\t}\n\t\treturn id+1;\n\t}\n\n\tthis.getNewMissions = function(){\n\t\tvar data = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].flight && this.ships[i].available < game.turn){\n\t\t\t\tif (this.ships[i].mission.turn == game.turn){\n\t\t\t\t\tdata.push(this.ships[i].mission);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\tthis.isCloseCombat = function(a, b){\n\t\tfor (var i = 0; i < a.cc.length; i++){\n\t\t\tif (a.cc[i] == b.id){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getMissionTypeString = function(val){\n\t\tswitch (val){\n\t\t\tcase 1: return \"PATROL\";\n\t\t\tcase 2: return \"STRIKE / ESCORT\";\n\t\t\tdefault: return \"ERROR\";\n\t\t}\n\t}\n\n\tthis.getMissionTargetString = function(mission){\n\t\tif (mission.targetid){\n\t\t\tvar t = game.getUnitById(mission.targetid);\n\t\t\treturn t.name + \" #\" + t.id;\n\t\t}\n\t\telse return \"\";\n\t}\n\n\tthis.enableFlightDeployment = function(){\n\t\tthis.flightDeploy = this.getUnitById(aUnit).getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\"));\n\t\tvar mission = this.getMissionTypeString(this.flightDeploy.mission);\n\n\t\t$(\"#game\").find(\"#deployOverlay\").find(\"#deployType\").html(\"Select target for </br>\" + mission + \"</br></span>\");\n\t}\n\n\tthis.handleFlightDeployMove = function(e, pos, unit){\n\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\n\t\tif (this.shortInfo){\n\t\t\tthis.getUnitById(this.shortInfo).drawEW();\n\t\t} else if (aUnit){\n\t\t\tthis.getUnitById(aUnit).drawEW();\n\t\t}\n\n\t\tvar valid = false;\n\t\tif (this.flightDeploy.mission == 1){ // patrol\n\t\t\tvalid = true;\n\t\t\tvar s = 0;\n\t\t\tfor (var i = 0; i < this.flightDeploy.loads.length; i++){\n\t\t\t\ts += this.flightDeploy.loads[i].launch;\n\t\t\t}\n\t\t\ts = 35 + s*8;\n\t\t\ts = Math.floor(s/2);\n\n\t\t\tsalvoCtx.translate(cam.o.x, cam.o.y);\n\t\t\tsalvoCtx.scale(cam.z, cam.z);\n\t\t\tsalvoCtx.translate(pos.x, pos.y);\n\t\t\tsalvoCtx.beginPath();\t\t\t\n\t\t\tsalvoCtx.arc(0, 0, s, 0, 2*Math.PI, false);\n\t\t\tsalvoCtx.closePath();\n\t\t\tsalvoCtx.fillStyle = \"green\";\n\t\t\tsalvoCtx.globalAlpha = 0.3;\n\t\t\tsalvoCtx.fill();\n\t\t\tsalvoCtx.globalAlpha = 1;\n\t\t\tsalvoCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t\telse if (this.userid != unit.userid && this.flightDeploy.mission == 2 && unit && unit.ship){ // strike\n\t\t\tvalid = true\n\t\t} \n\t\telse if (this.userid != unit.userid && this.flightDeploy.mission == 3 && unit && (!unit.ship)){ // int\n\t\t\tvalid = true;\n\t\t}\n\n\n\t\tvar ele = $(\"#deployOverlay\");\n\t\tvar w = $(ele).width()/2;\n\t\tvar top = (e.clientY) + 50;\n\t\tvar left = (e.clientX) - w;\n\t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n\t\t/*if (valid){\n\t\t\tif (game.flightDeploy.mission > 1){\n\t\t\t\tele.find(\"#deployTarget\").html(unit.name + \" #\" + unit.id);\n\t\t\t} else ele.find(\"#deployTarget\").html(unit.name + \" #\" + unit.id);\n\t\t} else ele.find(\"#deployTarget\").html(\"\");\n\t\t*/return;\n\t}\n\n\tthis.issueMission = function(pos){\n\t\tvar valid = false;\n\t\tvar t = 0;\n\t\tvar dest;\n\n\t\tif (this.mission.new == 1){\n\t\t\tconsole.log(\"PATROL\");\n\t\t\tdest = pos;\t\t\n\t\t\tvalid = true;\n\t\t}\n\t\telse if (this.shortInfo){\n\t\t\tt = game.getUnitById(this.shortInfo);\n\t\t\tif (t){\n\t\t\t\tvalid = true;\n\t\t\t\tdest = t.getPlannedPosition();\n\t\t\t\tif (t.ship){\n\t\t\t\t\tconsole.log(\"STRIKE / ESCORT\");\n\t\t\t\t} else if (t.flight){\n\t\t\t\t\tconsole.log(\"INTERCEPT\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!valid){\n\t\t\treturn false;\n\t\t}\n\n\t\tvar s = this.getUnitById(aUnit);\n\t\tif (s.cc.length){\n\t\t\tvar free = 0;\n\t\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tfor (var j = 0; j < s.cc.length; j++){\n\t\t\t\t\t\tif (s.cc[j] == this.ships[i].id){\n\t\t\t\t\t\t\tthis.ships[i].detachFlight(s.id);\n\t\t\t\t\t\t\tfree = 1;\n\t\t\t\t\t\t\ts.doDraw = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (free){break;}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar o = s.getPlannedPosition();\n\t\tvar facing = getAngleFromTo(o, dest);\n\t\t\ts.facing = facing;\n\t\tvar p = getPointInDirection(20, facing, o.x, o.y);\n\t\tvar mission = {unitid: aUnit, turn: this.turn, type: this.mission.new, targetid: t.id || 0, x: dest.x, y: dest.y, arrived: 0};\n\n\t\tif (t && o.x == dest.x && o.y == dest.y){\n\t\t\tmission.arrived = game.turn-1;\n\t\t\tmission.turn = game.turn-1;\n\t\t\ts.doDraw = 0;\n\t\t\tt.attachFlight(s.id);\n\t\t}\n\t\telse {\n\t\t\ts.mission = mission;\n\t\t\ts.setTarget();\n\t\t\ts.setLayout();\n\t\t\ts.setImage();\n\t\t}\n\n\t\ts.disableMissionMode();\n\t\tthis.mission = 0;\n\t\tgame.draw();\n\n\t}\n\n\tthis.doDeployFlight = function(pos){\n\t\tvar valid = false;\n\t\tvar t = 0;\n\t\tvar dest;\n\n\t\tif (this.flightDeploy.mission == 1){ // Patrol\n\t\t\t//console.log(\"PATROL\");\n\t\t\tdest = pos;\t\t\n\t\t\tvalid = true;\n\t\t}\n\t\telse if (this.shortInfo){\n\t\t\tt = game.getUnitById(this.shortInfo);\n\t\t\tif (t && t.ship){\n\t\t\t\tvalid = true;\n\t\t\t\tdest = t.getPlannedPosition();\n\t\t\t}\n\t\t}\n\n\t\tif (!valid){\n\t\t\treturn false;\n\t\t}\n\n\t\tvar s = this.getUnitById(aUnit);\n\t\tvar o = s.getPlannedPosition();\n\t\tvar facing = getAngleFromTo(o, dest);\n\t\tvar p = getPointInDirection(20, facing, o.x, o.y);\n\t\tvar mission = {unitid: aUnit, turn: this.turn, type: this.flightDeploy.mission, targetid: t.id || 0, x: dest.x, y: dest.y, arrived: 0};\n\n\t\tif (t.id == aUnit){\n\t\t\tp = dest;\n\t\t\tmission.arrived = 1;\n\t\t}\n\n\t\tvar flight = new Flight(\n\t\t\t{id: -this.ships.length-20, name: \"Flight\", shipType: \"Flight\", mission: mission,\n\t\t\tx: p.x, y: p.y, mass: 0, facing: facing, ep: 0, baseImpulse: 0, currentImpulse: 0, fSize: 15, baseSize: 30, unitSize: 6, userid: this.userid, available: this.turn}\n\t\t);\n\n\t\tflight.deployed = 1;\n\t\tflight.friendly = 1;\n\t\tflight.primary = new Primary(0, flight.id, 0, 0, 0);\n\t\tflight.actions.push(new Move(-1, \"deploy\", 0, p.x, p.y, facing, 0, 0));\n\t\tflight.launchData = {\n\t\t\tshipid: aUnit,\n\t\t\tsystemid: this.flightDeploy.id,\n\t\t\tloads: this.flightDeploy.loads,\n\t\t\tx: dest.x,\n\t\t\ty: dest.y\n\t\t};\n\n\t\tfor (var i = 0; i < this.flightDeploy.loads.length; i++){\n\t\t\tfor (var j = 1; j <= this.flightDeploy.loads[i].launch; j++){\n\t\t\t\tvar f = new Fighter({id: j, name: this.flightDeploy.loads[i].name, ep: 0, mass: this.flightDeploy.loads[i].mass, integrity: this.flightDeploy.loads[i].integrity, value: 0, negation: 0, crits: 0, destroyed: 0})\n\t\t\t\tflight.structures.push(f);\n\t\t\t}\n\t\t}\n\n\t\tflight.create();\n\t\tflight.createBaseDiv();\n\t\tflight.setTarget();\n\t\tgame.ships.push(flight);\n\n\t\t$(\"#instructWrapper\").hide();\n\t\t$(\"#deployOverlay\").hide();\n\t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select();\n\t\tgame.flightDeploy = false;\n\t\tflight.disableMissionMode();\n\n\t\tif (t.id == aUnit){\n\t\t\tgame.getUnitById(aUnit).attachFlight(flight.id);\n\t\t}\n\t\tthis.draw();\n\t}\n\n\tthis.doDeployFlighta = function(e, pos){\n\t\tvar facing = Math.floor(getAngleFromTo(game.getUnitById(aUnit).getPlannedPosition(), {x: pos.x, y: pos.y}))\n\n\t\t//id, name, shipType, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\t\tvar flight = new Flight(\n\t\t\t{id: this.getUniqueID(), name: \"Flight\", shipType: \"Flight\",\n\t\t\tx: pos.x, y: pos.y, facing: facing, ep: 0, fSize: 20, baseSize: 35, unitSize: 8, userid: this.userid, available: this.turn}\n\t\t);\n\n\t\tflight.deployed = 1;\n\t\tflight.friendly = 1;\n\t\tflight.primary = new Primary(0, flight.id, 0, 0, 0);\n\t\tflight.actions.push(new Move(-1, \"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n\t\tflight.launchData = {\n\t\t\tshipid: aUnit,\n\t\t\tsystemid: hangar.id,\n\t\t\tloads: hangar.loads\n\t\t}\n\n\t\tfor (var i = 0; i < hangar.loads.length; i++){\n\t\t\tfor (var j = 1; j <= hangar.loads[i].launch; j++){\n\t\t\t\tvar f = new Fighter({id: j, name: hangar.loads[i].name, ep: 0, mass: 0, integrity: 0, value: 0, negation: 0, crits: 0, destroyed: 0})\n\t\t\t\tflight.structures.push(f);\n\t\t\t}\n\t\t}\n\t\tflight.size = flight.baseSize + (flight.structures.length-1)*flight.unitSize;\n\t\tflight.create();\n\t\tflight.createBaseDiv();\n\t\tgame.ships.push(flight);\n\n\t\t$(\"#instructWrapper\").hide();\n\t\t$(\"#deployOverlay\").hide();\n\t\tgame.getUnitById(aUnit).getSystemById(hangar.id).setFireOrder().select(e);\n\t\tgame.flightDeploy = false;\n\t\tthis.draw();\n\t}\n\t\n\tthis.getDeployedFlights = function(){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (this.ships[i].flight && this.ships[i].available == this.turn){\n\t\t\t\t\tvar flight = {\n\t\t\t\t\t\ttype: \"Flight\",\n\t\t\t\t\t\tname: \"Flight\",\n\t\t\t\t\t\tmission: this.ships[i].mission,\n\t\t\t\t\t\tlaunchData: this.ships[i].launchData,\n\t\t\t\t\t\tactions: this.ships[i].actions,\n\t\t\t\t\t\tturn: this.turn,\n\t\t\t\t\t\teta: 0,\n\t\t\t\t\t\tupgrades: []\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = flight.launchData.loads.length-1; j >= 0; j--){\n\t\t\t\t\t\tif (flight.launchData.loads[j].amount == 0){\n\t\t\t\t\t\t\tflight.launchData.loads.splice(j, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret.push(flight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.getEWSettings = function(){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].ship && this.ships[i].userid == this.userid){\n\t\t\t\tret.push(this.ships[i].getEWSettings());\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.hasInvalidDeploy = function(){\n\t\tif (game.turn > 1){return;}\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (this.ships[i].available <= this.turn && !this.ships[i].actions.length){\n\t\t\t\t\tpopup(\"You need to deploy all arriving vessels.\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasInvalidPower = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid && this.ships[i].available <= game.turn){\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tfor (var j = 0; j < this.ships[i].primary.systems.length; j++){\n\t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Reactor\"){\n\t\t\t\t\t\t\tif (this.ships[i].primary.systems[j].getOutput() < 0){\n\t\t\t\t\t\t\t\tpopup(\"You have units with invalid Reactor settings (#\" + this.ships[i].id + \")\"); \n\t\t\t\t\t\t\t\tthis.ships[i].select();\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasBasicEW = function(){\n\t\tvar data = [];\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid && this.ships[i].available <= game.turn){\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tfor (var j = 0; j < this.ships[i].primary.systems.length; j++){\n\t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Sensor\" && !this.ships[i].primary.systems[j].disabled && !this.ships[i].primary.systems[j].destroyed){\n\t\t\t\t\t\t\tif (!this.ships[i].primary.systems[j].used){\n\t\t\t\t\t\t\t\tdata.push(this.ships[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (data.length){\n\t\t\tvar html = \"The following units have only basic sensor settings:\";\n\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\thtml += \"<p onclick='game.switchToUnit(\" + data[i].id + \")'>\" + data[i].name + \" #\" + data[i].id;\n\t\t\t}\n\t\t\thtml += \"</p><span style='cursor: pointer; padding: 3px; border: 1px solid white; font-size: 24px' onclick='ajax.confirmDeployment(goToLobby)'>Confirm Orders</span>\";\n\t\t\tpopup(html);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasOpenMoves = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif ((game.phase == 0 && this.ships[i].ship) || (game.phase == 1 && this.ships[i].flight)){\n\t\t\t\t\tif (this.ships[i].getRemainingImpulse() > 0){\n\t\t\t\t\t\tpopup(\"You have units with unused Impulse (#\" + this.ships[i].id + \")\");\n\t\t\t\t\t\tif (aUnit){this.getUnitById(aUnit).doUnselect();}\n\t\t\t\t\t\tthis.ships[i].select();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.hasNoFires = function(){\n\t\tvar data = [];\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (this.ships[i].salvo){continue;}\n\t\t\t\tif (this.ships[i].flight){\n\t\t\t\t\tif (!this.ships[i].cc.length){continue;}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar doTest = false;\n\t\t\t\t\t\ttest:\n\t\t\t\t\t\tfor (var j = 0; j < this.ships[i].cc.length; j++){\n\t\t\t\t\t\t\tfor (var k = 0; k < this.ships.length; k++){\n\t\t\t\t\t\t\t\tif (this.ships[i].cc[j] == this.ships[k].id){\n\t\t\t\t\t\t\t\t\tif (this.ships[k].userid != this.ships[i].userid){\n\t\t\t\t\t\t\t\t\t\tdoTest = true;\n\t\t\t\t\t\t\t\t\t\tbreak test;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!doTest){continue;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar hasFire = false;\n\t\t\t\t\n\t\t\t\tcheck:\n\t\t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n\t\t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].weapon){\n\t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].isPowered() && this.ships[i].structures[j].systems[k].getLoadLevel() >= 1){\n\t\t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].hasFireOrder()){\n\t\t\t\t\t\t\t\t\thasFire = true;\n\t\t\t\t\t\t\t\t\tbreak check;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasFire){\n\t\t\t\t\tdata.push((this.ships[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (data.length){\n\t\t\tvar html = \"The following units have no fireorders:\";\n\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\thtml += \"<p onclick='game.switchToUnit(\" + data[i].id + \")'>\" + data[i].name + \" #\" + data[i].id;\n\t\t\t}\n\t\t\thtml += \"</p><span style='cursor: pointer; padding: 3px; border: 1px solid white; font-size: 24px' onclick='ajax.confirmFiringOrders(goToLobby)'>Confirm Orders</span>\";\n\t\t\tpopup(html);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.switchToUnit = function(id){\n\t\tif (aUnit){\n\t\t\tgame.getUnitById(aUnit).doUnselect();\n\t\t}\n\t\tgame.getUnitById(id).select();\n\t}\n\n\tthis.endPhase = function(){\n\t\tif (this.canSubmit){\n\t\t\tif (aUnit){game.getUnitById(aUnit).select();}\n\t\t\tif (this.phase == -1){\n\t\t\t\tif (this.hasInvalidDeploy() || this.hasInvalidPower() || this.hasBasicEW()){return;}\n\t\t\t\telse {ajax.confirmDeployment(goToLobby);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.phase == 0 || this.phase == 1){ // SHIP MOVEMENT\n\t\t\t\tif (this.hasOpenMoves()){return;}\n\t\t\t\telse ajax.confirmMovement(goToLobby);\n\t\t\t}\n\t\t\telse if (this.phase == 2){\n\t\t\t\tif (this.hasNoFires()){return;}\n\t\t\t\telse ajax.confirmFiringOrders(goToLobby);\n\t\t\t}\n\t\t\telse if (this.phase == 3){ajax.confirmDamageControl(goToLobby);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tpopup(\"You have already confirmed your orders\");\n\t\t}\n\t}\n\n\tthis.undoDeployment = function(id){\n\t\tfor (var i = this.ships.length-1; i >= 0; i--){\n\t\t\tif (this.ships[i].id == id){\n\t\t\t\tthis.ships.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.enableDeployment = function(id){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id == id){\n\t\t\t\tthis.deploying = id;\n\t\t\t\t//if (this.ships[i].actions.length){this.ships[i].doSelect();}\n\t\t\t\tthis.setupDeploymentDiv(this.ships[i])\n\t\t\t//\tthis.setupDeploymentZone();\n\t\t\t\tthis.drawDeploymentZone();\n\t\t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\".requestReinforcements\").each(function(){\n\t\t\t\t\tif ($(this).data(\"id\") == id){\n\t\t\t\t\t\t$(this).addClass(\"selected\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.reinforcements.length; i++){\n\t\t\tif (this.reinforcements[i].id == id){\n\t\t\t\tthis.deploying = id;\n\t\t\t\tthis.setupDeploymentDiv(this.reinforcements[i])\n\t\t\t//\tthis.setupDeploymentZone();\n\t\t\t\tthis.drawDeploymentZone();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.disableDeployment = function(){\n\t\tthis.deploying = false;\n\t\tthis.deployArea = [];\n\t\tthis.deployBlock = false;\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#deployOverlay\").hide();\n\t\tif (aUnit){\n\t\t\tgame.getUnitById(aUnit).doUnselect();\n\t\t}\n\t\tgame.draw();\n\t}\n\n\tthis.setupDeploymentDiv = function(unit){\n\t\tvar ele = (\"#deployOverlay\");\n\t\tif (game.flightDeploy){\n\t\t\t//img.src = game.getUnitById(game.flightDeploy).img.src;\n\t\t\t$(ele).find(\"span\").html(\"Deploy Flight\").end().find(\".img\").html(\"\");\n\t\t}\n\t\telse if (game.deploying){\n\t\t\t//var img = new Image();\n\t\t\t//\timg.className = \"img80\";\n\t\t\t//\timg.src = window.reinforcements[i].img.src;\n\n\t\t\t//td.appendChild(window.shipImages[this.name.toLowerCase()].cloneNode(true))\n\n\n\t\t\t$(ele).find(\"span\").html(\"Deploy Ship\").end().find(\".img\").html(\"\").append($(window.shipImages[unit.name.toLowerCase()].cloneNode(true)).addClass(\"img80\"));\n\t\t}\n\t}\n\n\tthis.setupDeploymentZone = function(){\n\n\t\tif (game.turn == 1){\n\t\t\tfor (var i = 0; i < window.playerstatus.length; i++){\n\n\t\t\t\tvar step;\n\t\t\t\tvar h = 700;\n\t\t\t\tvar w = 200;\n\t\t\t\tvar x = 600;\n\t\t\t\tvar y = h/2;\n\n\t\t\t\tif (i % 2 == 0){\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\n\t\t\t\tif (window.playerstatus[i].userid == this.userid){\n\t\t\t\t\tvar id = this.userid;\n\t\t\t\t\tvar color = \"green\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar id = 0;\n\t\t\t\t\tvar color = \"red\";\n\t\t\t\t}\n\n\t\t\t\tthis.deployArea.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tx: 0 + (x * step),\n\t\t\t\t\ty: y/2*-1,\n\t\t\t\t\tw: w * step,\n\t\t\t\t\th: h,\n\t\t\t\t\tc: color\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.deployArea.push({\n\t\t\t\tid: this.userid,\n\t\t\t\tx: -800,\n\t\t\t\ty: -800,\n\t\t\t\tw: 1600,\n\t\t\t\th: 1600,\n\t\t\t\tc: \"green\"\n\t\t\t});\n\t\t}\n\t}\n\n\tthis.drawDeploymentZone = function(){\n\n\t\t//drawCtx.globalAlpha = 0.3;\n\t\tif (game.turn >= 2){\n\t\t\tdrawCtx.translate(cam.o.x, cam.o.y)\n\t\t\tdrawCtx.scale(cam.z, cam.z)\n\t\t\tdrawCtx.beginPath();\n\t\t\tdrawCtx.arc(0, 0, 750, 0, 2*Math.PI);\n\t\t\tdrawCtx.fillStyle = \"green\";\n\t\t\tdrawCtx.fill();\n\t\t\tdrawCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.deploys.length; i++){\n\t\t\t\tdrawCtx.translate(cam.o.x, cam.o.y)\n\t\t\t\tdrawCtx.scale(cam.z, cam.z)\n\t\t\t\tdrawCtx.beginPath();\n\t\t\t\tdrawCtx.arc(this.deploys[i].x, this.deploys[i].y, this.deploys[i].s, 0, 2*Math.PI);\n\t\t\t\tif (this.deploys[i].userid == this.userid){\n\t\t\t\t\tdrawCtx.fillStyle = \"green\";\n\t\t\t\t} else drawCtx.fillStyle = \"red\";\n\t\t\t\tdrawCtx.fill();\n\t\t\t\tdrawCtx.setTransform(1,0,0,1,0,0);\n\t\t\t};\n\t\t}\n\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.globalAlpha = 0.3;\n\t\tplanCtx.drawImage(drawCanvas, 0, 0);\n\t\tdrawCtx.clearRect(0, 0, res.x, res.y);\n\t\treturn;\n\n\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.globalAlpha = 0.3;\n\t\tfor (var i = 0; i < this.deployArea.length; i++){\n\t\t\tplanCtx.translate(cam.o.x, cam.o.y)\n\t\t\tplanCtx.scale(cam.z, cam.z)\n\t\t\tplanCtx.beginPath();\n\t\t\tplanCtx.rect(this.deployArea[i].x, this.deployArea[i].y, this.deployArea[i].w, this.deployArea[i].h);\n\t\t\tplanCtx.closePath();\n\t\t\tplanCtx.fillStyle = this.deployArea[i].c;\n\t\t\tplanCtx.fill();\n\t\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t\tplanCtx.globalAlpha = 1;\n\t\treturn;\n\t}\n\n\tthis.drawControlZone = function(zone){\n\t\tif (zone){\n\t\t\tplanCtx.translate(cam.o.x, cam.o.y)\n\t\t\tplanCtx.scale(cam.z, cam.z)\n\t\t\tplanCtx.beginPath();\n\t\t\tplanCtx.arc(zone.pos.x, zone.pos.y, zone.s, 0, 2*Math.PI, false);\n\t\t\tplanCtx.closePath();\n\t\t\tplanCtx.fillStyle = \"red\";\n\t\t\tplanCtx.fill();\n\t\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\tthis.drawSelf = function(){\n\t\tctx.save();\n\t\tctx.translate(this.x, this.y)\n\t\tctx.rotate(this.facing * Math.PI/180);\n\t\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\t\tctx.restore();\n\t}\n\n\tthis.drawJumpMarker = function(id){\n\t\tvar s = game.getUnitById(id);\n\t\tif (s.userid != this.userid && game.phase == 0){return;}\n\t\tif (game.turn == 1 && game.phase == -1){return;}\n\t\tthis.setShipTransform();\n\t\tvar size;\n\n\t\tif (s.userid == this.userid){\n\t\t\tsize = s.size || 40;\n\t\t} else size = 100;\n\n\t\tctx.beginPath();\n\t\tif (s instanceof Ship){\n\t\t\tctx.arc(s.actions[0].x, s.actions[0].y, size/2, 0, 2*Math.PI, false);\n\t\t} else ctx.arc(s.x, s.y, size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.fillStyle = \"blue\";\n\t\tctx.globalAlpha = 0.3;\n\t\tctx.fill();\n\t\tctx.lineWidth = 2;\n\t\tctx.globalAlpha = 1;\n\t\tctx.stroke();\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = \"black\";\n\n\t\tif (s instanceof Ship && s.userid == this.userid){\n\t\t\tctx.save();\n\t\t\tctx.translate(s.actions[0].x, s.actions[0].y);\n\t\t\tctx.rotate(s.actions[0].a * Math.PI/180);\n\t\t\tctx.drawImage(window.shipImages[s.name.toLowerCase()], -size/2, -size/2, size, size);\n\t\t\tctx.restore();\n\t\t}\n\t\telse if (s.userid == this.userid){\n\t\t\tctx.save();\n\t\t\tctx.translate(s.x, s.y);\n\t\t\tctx.rotate(s.a * Math.PI/180);\n\t\t\tctx.drawImage(window.shipImages[s.name.toLowerCase()], -size/2, -size/2, size, size);\n\t\t\tctx.restore();\n\t\t}\n\n\t\tctx.strokeStyle = \"black\";\n\t\tthis.resetShipTransform();\n\t}\n\n\tthis.initDeployment = function(){\n\t\tcam.setZoom(0.6);\n\t\tgame.draw();\n\t\t//cam.setFocus()\n\t\t$(\"#deployWrapper\").removeClass(\"disabled\");\n\t}\n\n\tthis.movementResolved = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].flight){\n\t\t\t\tif (this.ships[i].mission.arrived){\n\t\t\t\t\tif (this.ships[i].mission.type == 1){\n\t\t\t\t\t\tthis.ships[i].setPostMoveSize();\n\t\t\t\t\t\tthis.ships[i].setPostMoveImage();\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.ships[i].mission.type > 1){\n\t\t\t\t\t\tthis.ships[i].doDraw = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.ships[i].setPostMoveSize();\n\t\t\t\t//this.ships[i].setPostMoveImage();\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].ship){\n\t\t\t\tthis.ships[i].setEscortImage();\n\t\t\t}\n\t\t}\n\t\tgame.draw();\n\t\tconsole.log(\"movementResolved\");\n\t}\n\n\tthis.initDamageControl = function(){\n\t\tthis.resolveFire();\n\t}\n\n\tthis.fireResolved = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].flight){\n\t\t\t\tthis.ships[i].setPostFireImage();\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].ship){\n\t\t\t\tthis.ships[i].setEscortImage();\n\t\t\t}\n\t\t}\n\t\tthis.draw();\n\t\tconsole.log(\"fireResolved\");\n\t}\n\n\tthis.setShipDivs = function(){\n\t\tvar x = 50;\n\t\tvar y = 200;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar ele = $(this.ships[i].element);\n\t\t\tvar w = $(ele).width();\n\t\t\tvar h = $(ele).height();\n\n\n\t\t\tx += 40;\n\t\t\ty += 50;\n\n\t\t\t$(ele)\n\t\t\t\t.css(\"left\", x)\n\t\t\t\t.css(\"top\", y);\n\n\t\t\tif (i == 5){\n\t\t\t\tx = 370;\n\t\t\t\ty = 150;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tvar ele = $(this.ballistics[i].element);\n\t\t\tvar h = $(ele).height();\n\t\t\t/*\n\t\t\tvar w = $(ele).width();\n\t\t\tvar h = $(ele).height();\n\t\t\tvar x = this.ships[i].x + cam.o.x + w/2;\n\t\t\tvar y = this.ships[i].y + cam.o.y;\n\t\t\t*/\n\n\t\t\t$(ele)\n\t\t\t\t.css(\"left\",res.x - 400)\n\t\t\t\t.css(\"top\", res.y/2 - h/2 + 200);\n\t\t}\n\t}\n\nGame.prototype.getUnitType = function (val){\n\tswitch (val){\n\t\tcase 3: return \"Ultra Heavy\";\n\t\tcase 2: return \"Super Heavy\";\n\t\tcase 1: return \"Heavy\";\n\t\tcase 0: return \"Medium\";\n\t\tcase -1: return \"Light\";\n\t\tcase -2: return \"SuperLight\";\n\t\tcase -3: return \"Flight\";\n\t\tcase -4: return \"Salvo\";\n\t}\n}\n/*\t\tvar w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\t\tleft = res.x - w - 50;\n\t\t}\n\t\tvar x = this.x +cam.o.x - w/2;\n\t\tvar y = this.y +cam.o.y + 150;\n\n\t\t$(div).css(\"left\", x).css(\"top\", y);\n\t}*/\n\n\t\n\tthis.initPhase = function(n){\n\t\tthis.setShipDivs();\n\n\t\tif (n == -1){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.initDeployment();\n\t\t\t\t\t//$(\"#deployWrapper\").find(\"#reinforceTable\").show();\n\t\t\t\t\t$(this).hide();\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 0){\n\t\t\tthis.phase = n;\n\t\t\t\tctx.clearRect(0, 0, res.x, res.y);\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveDeployment();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t\t//$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 1){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveUnitMovement();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t//\t$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 2){\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveUnitMovement();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t//\t$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 3){\n\t\t\tthis.phase = n;\n\t\t\t\t//game.draw();\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.initDamageControl();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t\t//$(this).fadeOut(200);\n\t\t\t\t});\n\t\t\t\n\t\t}\n\t}\n\t\n\tthis.create = function(){\n\t\t$(\"#phaseSwitchDiv\").show();\n\n\t\t//this.ships.sort(function(a, b){\n\t\t\t//return a.ship-b.ship || a.flight - b.flight || a.salvo - b.salvo;\n\t\t//\treturn a.salvo - b.salvo || a.flight - b.flight || a.ship-b.ship ;\n\t\t//})\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar ship = window.initiateUnit(this.ships[i]);\n\t\t\tvar deployed = 0;\n\t\t\tvar friendly = 0;\n\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tfriendly = 1;\n\t\t\t}\n\n\t\t\tif (this.ships[i].available < this.turn){\n\t\t\t\tdeployed = 1;\n\t\t\t} else if (friendly && this.ships[i].actions.length){\n\t\t\t\tdeployed = 1;\n\t\t\t} else if (!friendly && this.ships[i].actions.length && this.ships[i].actions[0].resolved){\n\t\t\t\tdeployed = 1;\n\t\t\t}\n\n\t\t\tship.friendly = friendly;\n\t\t\tship.deployed = deployed;\n\t\t\tthis.ships[i] = ship;\n\t\t\tthis.ships[i].create();\n\t\t}\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tthis.ships[i].createBaseDiv();\n\t\t\tthis.ships[i].setTarget();\n\t\t\tthis.ships[i].setImage();\n\n\t\t\tif (this.ships[i].ship){this.ships[i].setEscortImage();}\n\t\t}\n\n\t\tfor (var i = 0; i < this.reinforcements.length; i++){\n\t\t\tthis.reinforcements[i] = window.initiateShip(this.reinforcements[i]);\n\t\t\tthis.reinforcements[i].create(); this.reinforcements[i].createBaseDiv();\n\t\t\tthis.reinforcements[i].friendly = 1;\n\t\t\tthis.reinforcements[i].deployed = 0;\n\t\t}\n\n\t\tvar canSubmit = false;\n\t\tvar isPlaying = false;\n\t\tfor (var i = 0; i < playerstatus.length; i++){\n\t\t\tif (playerstatus[i].userid == userid){\n\t\t\t\tisPlaying = true;\n\t\t\t\tthis.reinforcePoints = $(\"#reinforce\").html();\n\t\t\t\tif (playerstatus[i].status == \"waiting\"){\n\t\t\t\t\tcanSubmit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.initDeploymentWrapper();\n\t\tthis.initReinforcementWrapper();\n\t\tthis.initSelectionWrapper();\n\t\tthis.canSubmit = canSubmit;\n\t\tcam.setFocus(0, 0);\n\t\tthis.initPhase(this.phase);\n\t}\n\n\tthis.updateInterceptsa = function(){\n\t\tvar stack = [];\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].flight && this.ships[i].mission.type == 2 || this.mission.type == 3 && this.ships[i].mission.targetid == aUnit){\n\t\t\t\tthis.ships[i].setTarget();\n\t\t\t\tif (!this.ships[i].mission.arrived){this.ships[i].setImage();}\n\t\t\t\tstack.push(this.ships[i].id);\n\t\t\t}\n\t\t}\t\n\n\t\tfor (var i = 0; i < stack.length; i++){\n\n\t\t}\n\n\t}\n\n\tthis.updateIntercepts = function(){\n\t\tvar stack = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].flight && (this.ships[i].mission.type == 2 || this.ships[i].mission.type == 3)){\n\t\t\t\tif (this.ships[i].mission.targetid == aUnit){\n\t\t\t\t\tstack.push(this.ships[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tif (this.ballistics[i].mission.targetid = aUnit){\n\t\t\t\tstack.push(this.ballistics[i]);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < stack.length; i++){\n\t\t\tstack[i].setTarget();\n\t\t\tif (stack[i].mission.arrived){continue;}\n\t\t\tstack[i].setImage();\n\t\t}\n\n\t\tif (stack.length){\n\t\t\tgame.redraw();\n\t\t}\n\t}\n\n\tthis.doGenericHover = function(unit){\n\t\tif (unit.id == game.shortInfo){\n\t\t\treturn;\n\t\t}\n\n\t\tgame.shortInfo = unit.id;\n\n\t\tvar ele = $(\"#shortInfo\");\n\t\t$(ele).children().remove().end().append($(unit.getShortInfo()).css(\"width\", \"100%\"));\n\n\t\tvar oX = $(ele).width()/2;\n\t\tvar pos = unit.getBaseOffsetPos();\n\t\tvar top = (pos.y * cam.z) + cam.o.y + 60;\n\t\tvar left = (pos.x * cam.z) + cam.o.x - oX;\n\t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n\n\t\tunit.doSpecificHover();\n\t}\n\n\tthis.resetHover = function(){\n\t\tif (game.deploying){\n\t\t\tgame.drawDeploymentZone();\n\t\t}\n\t\t$(\"#shortInfo\").html(\"\").hide();\n\t\tif (aUnit != game.shortInfo){\n\t\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t\tif (!aUnit){\n\t\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t\t//this.undrawJumpMarker(game.shortInfo);\n\t\t\n\t\tgame.shortInfo = false;\n\t\tif (aUnit){\n\t\t\tvar u = game.getUnitById(aUnit);\n\t\t\tif (u.ship){\n\t\t\t\tu.getSystemByName(\"Sensor\").drawEW();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.posIsOccupied = function(ship, pos){\n\t\tvar dist = getDistance(ship, step) \n\t\tif (ship.getRemainingImpulse()){return false;}\n\t\tif (ship.ship){\n\t\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t\tif (this.ships[i].ship && this.ships[i].id != ship.id && this.ships[i].userid == ship.userid){ // different ship, different owners\n\t\t\t\t\tvar step = this.ships[i].getPlannedPosition();\n\n\t\t\t\t\tif (!this.ships[i].getRemainingImpulse() && getDistance(pos, step) <= 0.66*(this.ships[i].size/2 + ship.size/2)){\n\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+this.ships[i].id+\")\");\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t\tif (this.ships[i].id != ship.id && (this.ships[i].ship || this.ships[i].userid == ship.userid)){ // different ship, different owners\n\t\t\t\t\tvar step = this.ships[i].getPlannedPosition();\n\n\t\t\t\t\tif ((this.ships[i].ship || !step.resolved) && getDistance(pos, step) <= 0.66*(this.ships[i].size/2 + ship.size/2)){\n\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of a vessel (#\"+this.ships[i].id+\" - \" + this.ships[i].name +\")\");\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnitByClick = function(pos){\n\t\tvar pick = 0;\n\t\tvar max = 100;\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar r = this.ships[i].size/3;\n\t\t\tif (! this.ships[i].destroyed){\n\t\t\t\tif (this.ships[i].isReady()){\n\t\t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n\t\t\t\t\tif (pos.x < shipPos.x + r && pos.x > shipPos.x - r){\n\t\t\t\t\t\tif (pos.y > shipPos.y - r && pos.y < shipPos.y + r){\n\t\t\t\t\t\t\tvar dist = getDistance(shipPos, pos);\n\t\t\t\t\t\t\tif (dist < max){\n\t\t\t\t\t\t\t\tpick = this.ships[i].id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//return false;\n\n\t\tif (!pick){\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getUnitById(pick).getParent();\n\n\t\t//\t\t\t\t\treturn this.ships[i].getParent();\n\t}\n\n\tthis.redraw = function(){\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y)\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y)\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y)\n\n\t\t$(\"#shortInfo\").hide();\n\n\t\tif (aUnit){\n\t\t\tvar unit = game.getUnitById(aUnit);\n\t\t\tif (!unit.salvo){\n\t\t\t\tif (unit.hasWeaponsSelected()){\n\t\t\t\t\tunit.highlightAllSelectedWeapons();\n\t\t\t\t}\n\t\t\t\tunit.resetMoveMode();\n\n\t\t\t\tif (unit.ship){unit.getSystemByName(\"Sensor\").drawEW();}\n\t\t\t\tif (unit.flight){unit.drawMovePlan()}\n\t\t\t}\n\t\t}\n\t\tgame.draw();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.redrawEW = function(){\n\t\tvar unit = game.getUnitById(aUnit);\n\t\t\tunit.resetMoveMode();\n\t\tif (unit.ship){\n\t\t\tunit.getSystemByName(\"Sensor\").drawEW();\n\t\t}\n\t}\n\t\n\tthis.draw = function(){\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\n\t\tthis.drawShips();\n\n\t\tif (game.flightDeploy){\n\t\t\tgame.flightDeploy.drawArc();\n\t\t} else if (game.deploying){\n\t\t\tgame.drawDeploymentZone();\n\t\t}\n\t}\n\n\tthis.drawAllPlans = function(){\n\t\t//if (game.phase < 0 || game.phase > 2){return;}\n\t\tif (aUnit && !game.animating){\n\t\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t\tif (this.ships[i].flight && this.ships[i].mission.arrived){continue;}\n\t\t\t\tthis.ships[i].drawMovePlan();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setShipTransform = function(){\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t}\n\n\tthis.resetShipTransform = function(){\n\t\tctx.setTransform(1,0,0,1,0,0);\n\t}\n\t\n\tthis.undrawJumpMarker = function(id){\n\t\tthis.setShipTransform();\n\n\t\tvar s = game.getUnitById(id);\n\n\t\tctx.beginPath();\t\n\t\tctx.arc(s.actions[0].x, s.actions[0].y, s.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\t\t\n\t\tctx.globalCompositeOperation = \"destination-out\";\t\n\t\tctx.fill();\n\n\t\tctx.beginPath();\t\n\t\tctx.arc(s.actions[0].x, s.actions[0].y, s.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.lineWidth = 2;\n\t\tctx.globalAlpha = 1;\n\t\tctx.globalCompositeOperation = \"source-over\";\n\t\tctx.strokeStyle = \"green\";\n\t\tctx.stroke();\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = \"black\";\n\n\t\tctx.save();\n\t\tctx.translate(s.actions[0].x, s.actions[0].y);\n\t\tctx.rotate(s.actions[0].a * Math.PI/180);\n\t\tctx.drawImage(window.shipImages[s.name.toLowerCase()], -s.size/2, -s.size/2, s.size, s.size);\n\t\tctx.restore();\n\n\t\tthis.resetShipTransform();\n\t}\n\n\tthis.drawShips = function(){\n\t\tthis.setShipTransform();\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tthis.ships[i].draw();\n\t\t}\n\t\tthis.resetShipTransform();\n\t}\n\t\n\tthis.drawOtherShips = function(id){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id != id){\n\t\t\t\tthis.ships[i].draw();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getShipById = function(id){\t\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id == id){\n\t\t\t\treturn this.ships[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnitById = function(id){\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tif (this.ballistics[i].id == id){\n\t\t\t\treturn this.ballistics[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getDeployingUnit = function(){\n\t\treturn this.getUnitById(this.deploying);\n\t}\n\n\tthis.getUnitById = function(id){\n\t\treturn this.getReinforcementById(id) || this.getShipById(id) || this.getIncomingById(id) || false;\n\t}\n\n\tthis.getIncomingById = function(id){\n\t\tfor (var i = 0; i < this.incoming.length; i++){\n\t\t\tif (this.incoming[i].id == id){\n\t\t\t\treturn this.incoming[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getReinforcementById = function(id){\n\t\tfor (var i = 0; i < this.reinforcements.length; i++){\n\t\t\tif (this.reinforcements[i].id == id){\n\t\t\t\treturn this.reinforcements[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.getActiveShip = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].selected){\n\t\t\t\treturn this.ships[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getCurrentReinforceCost = function(){\n\t\tvar cost = 0;\n\n\t\t$(\".requestReinforcements\").each(function(i){\n\t\t\t$(this)\n\t\t\tif ($(this).hasClass(\"green\")){\n\t\t\t\tcost += $(this).data(\"cost\");\n\t\t\t}\n\t\t});\n\n\t\treturn cost;\n\t}\n\n\tthis.showReinforcementsPreview = function(id){\n\t\tfound = 0;\n\t\tfor (var i = 0; i < this.reinforcements.length; i++){\n\t\t\tif (this.reinforcements[i].id == id){\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//console.log(window.reinforcements[i]);\n\t}\n\n\tthis.resolveDeployment = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tthis.ships[i].deployed = true;\n\t\t\tif (this.ships[i].available == game.turn){\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tthis.ships[i].deployAnim = [0, 5];\n\t\t\t\t\tthis.ships[i].deployed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetFPS(30);\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\t\tcam.setZoom(0.7);\n\t\tthis.animating = 1;\n\t\tthis.animateDeployment();\n\t\t//this.logDeployment();\n\t}\n\n\tthis.logDeployment = function(){\n\t\t$(\"#combatlogWrapper\")\n\t\t.show()\n\t\t.find(\".combatLogHeader\").html(\"Deployment Log\").end()\n\t\t.find(\"#combatLog\").children().children().remove();\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].available == game.turn){\n\t\t\t\tif (this.ships[i].flight){\n\t\t\t\t\t$(\"#combatLog\").find(\"tbody\").append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Flight #\" + this.ships[i].id + \" is deployed\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.animateDeployment = function(){\n\t\tanim = window.requestAnimationFrame(game.animateDeployment.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tctx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tvar doing = 0;\n\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployed){\n\t\t\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\t\t\tctx.scale(cam.z, cam.z);\n\t\t\t\t\tgame.ships[i].draw();\n\t\t\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t\t}\n\t\t\t\telse if (doing){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\t\t\tctx.scale(cam.z, cam.z);\n\t\t\t\t\tdoing = 1;\n\t\t\t\t\tgame.ships[i].deployAnim[0] += 1;\n\t\t\t\t\tvar fraction = game.ships[i].deployAnim[0] / game.ships[i].deployAnim[1];\n\n\t\t\t\t\tif (fraction >= 1){\n\t\t\t\t\t\tgame.ships[i].deployed = true;\n\t\t\t\t\t\tgame.ships[i].drawSelf();\n\t\t\t\t\t\t//game.logDeployment(i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar sin = Math.sin(Math.PI*fraction);\n\t\t\t\t\t\tdrawCircle(game.ships[i].x, game.ships[i].y, game.ships[i].size*0.55*sin, \"source-over\", \"blue\");\n\t\t\t\t\t\tdrawCircle(game.ships[i].x, game.ships[i].y, game.ships[i].size*0.2*sin/2, \"lighter\", \"lightBlue\");\n\n\t\t\t\t\t\tif (fraction >= 0.3){\n\t\t\t\t\t\t\tctx.globalAlpha = fraction;\n\t\t\t\t\t\t\tgame.ships[i].drawSelf();\n\t\t\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//break;\n\t\t\t\t\t}\n\t\t\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar done = true;\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (!game.ships[i].deployed){\n\t\t\t\t\tdone = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (done){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tgame.deployDone()\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.deployDone = function(){\n\t\tgame.animating = 0;\n\t\tgame.draw();\n\t\tconsole.log(\"deployDone\");\n\t}\n\n\tthis.resolveUnitMovement = function(){\n\t\tif (aUnit){\n\t\t\tgame.getUnitById(aUnit).select();\n\t\t}\n\n\t//\tthis.ships.sort(function(a, b){\n\t\t//\treturn a.flight-b.flight || a.salvo - b.salvo;\n\t//\t});\n\n\n\t\tcam.setZoom(1);\n\t\t//cam.setFocus(this.ships[0].x, this.ships[0].y);\n\t\tsetFPS(60);\n\n\t\t//console.log(\"animShip: \"+animShip);\n\t\t//console.log(\"animFlight: \"+animFlight);\n\n\t\tvar toDo;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar frameMod;\n\t\t\tvar toDo = true;\n\t\t\tif (!this.ships[i].deployed){\n\t\t\t\ttoDo = false;\n\t\t\t}\n\t\t\telse if (this.ships[i].flight && this.ships[i].mission.arrived && this.ships[i].mission.arrived < game.turn){\n\t\t\t\tfor (var j = 0; j < this.ships[i].actions.length; j++){\n\t\t\t\t\tthis.ships[i].actions[j].animated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! toDo){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.ships[i].ship && this.ships[i].cc.length){\n\t\t\t\tfor (var j = 0; j < this.ships[i].cc.length; j++){\n\t\t\t\t\tvar attach = this.getUnitById(this.ships[i].cc[j]);\n\t\t\t\t\tif (attach.mission.arrived < game.turn){\n\t\t\t\t\t\tthis.ships[i].attachAnims.push(attach);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.ships[i].animationSetupMove();\n\n\t\t\tif (this.ships[i].ship){\n\t\t\t\tframeMod = window.fps / this.ships[i].getCurrentImpulse();\n\t\t\t} else frameMod = window.fps / this.ships[i].actions[this.ships[i].actions.length-1].dist;\n\n\t\t\tfor (var j = 0; j < this.ships[i].actions.length; j++){\n\t\t\t\tif (this.ships[i].actions[j].turn == game.turn){\n\t\t\t\t\tvar action = this.ships[i].actions[j];\n\n\t\t\t\t\tif (action.type == \"speedChange\" || action.type == \"deploy\" || action.type == \"jump\"){\n\t\t\t\t\t\tthis.ships[i].actions[j].animated = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.ships[i].actions[j].animated = 0;\n\t\t\t\t\t\tif (j == 0){\n\t\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\t\tvar v = new Vector({x: this.ships[i].x, y: this.ships[i].y}, {x: action.x, y: action.y});\n\t\t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n\t\t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\t\tvar v = new Vector({x: this.ships[i].actions[j-1].x, y: this.ships[i].actions[j-1].y}, {x: action.x, y: action.y});\n\t\t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n\t\t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n\t\t\t\t\t\t\t\t//console.log(v);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\n\t\tconsole.log(\"ship moves\");\n\t\tthis.animShip = 1;\n\t\tthis.animFlight = 0;\n\t\tthis.animSalvo = 0;\n\t\tgame.animateUnitMovement();\n\t}\n\n\n\tthis.animateUnitMovement = function(){\n\t\tanim = window.requestAnimationFrame(game.animateUnitMovement.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\t//console.log(\"DRAW\");\n\t\t\t//frameCounter++;\n\t\t\t//console.log(frameCounter);\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tctx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\tctx.scale(cam.z, cam.z);\n\t\t\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployed){\n\t\t\t\t\tif (this.ships[i].ship && !this.animShip || this.ships[i].flight && !this.animFlight || this.ships[i].salvo && !this.animSalvo){\n\t\t\t\t\t\tgame.ships[i].draw();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = 0; j < game.ships[i].actions.length; j++){\n\t\t\t\t\t\tif (game.ships[i].actions[j].turn == game.turn && !game.ships[i].actions[j].animated){\n\t\t\t\t\t\t\tvar action = game.ships[i].actions[j];\n\t\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\t\t//\tconsole.log(game.ships[i].actions[j].v);\n\t\t\t\t\t\t\t\tgame.ships[i].actions[j].v.t[0] += 1;\n\t\t\t\t\t\t\t\tgame.ships[i].drawX += action.v.x * 1 / action.v.t[1];\n\t\t\t\t\t\t\t\tgame.ships[i].drawY += action.v.y * 1 / action.v.t[1];\n\t\t\t\t\t\t\t\tif (game.ships[i].actions[j].v.t[0] >= action.v.t[1]){\n\t\t\t\t\t\t\t\t//\tconsole.log(\"anim true\");\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].animated = true;\n\t\t\t\t\t\t\t\t\tgame.ships[i].drawX = action.x;\n\t\t\t\t\t\t\t\t\tgame.ships[i].drawY = action.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\t\tvar step = 1;\n\t\t\t\t\t\t\t\tif (action.a > 0){\n\t\t\t\t\t\t\t\t\tgame.ships[i].drawFacing = addToDirection(game.ships[i].drawFacing, step);\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].angle -= step;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tgame.ships[i].drawFacing = addToDirection(game.ships[i].drawFacing, -step);\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].angle += step;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (game.ships[i].actions[j].angle == 0){\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].animated = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (var k = 0; k < game.ships[i].attachAnims.length; k++){\n\t\t\t\t\t\t\t\tgame.ships[i].attachAnims[k].drawX = game.ships[i].drawX;\n\t\t\t\t\t\t\t\tgame.ships[i].attachAnims[k].drawY = game.ships[i].drawY;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgame.ships[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t\n\t\t\tvar done = true;\n\t\t\t\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (!done){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (this.ships[i].ship && this.animShip || this.ships[i].flight && this.animFlight || this.ships[i].salvo && this.animSalvo){\n\t\t\t\t\tfor (var j = 0; j < game.ships[i].actions.length; j++){\n\t\t\t\t\t\tif (game.ships[i].actions[j].turn == game.turn){\n\t\t\t\t\t\t\tif (! game.ships[i].actions[j].animated){\n\t\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (done){\n\t\t\t\tif (game.animShip){\n\t\t\t\t\tconsole.log(\"flight moves\");\n\t\t\t\t\tgame.animShip = 0;\n\t\t\t\t\tgame.animFlight = 1;\n\t\t\t\t}\n\t\t\t\telse if (game.animFlight){\n\t\t\t\t\tconsole.log(\"salvo moves\");\n\t\t\t\t\tgame.animFlight = 0;\n\t\t\t\t\tgame.animSalvo = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\t\tgame.movementResolved();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tthis.resolveFire = function(){\n\t\tthis.resetImageData();\n\t\tthis.getResolvingFireOrders();\n\t\tthis.getShotDetails();\n\t\tthis.getFireAnimationDetails();\n\t\tthis.getBallDetails();\n\t\tthis.getShipExplosionDetails();\n\n\t\t$(\"#combatlogWrapper\").show();\n\t\tsetFPS(40);\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\t\t\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tctx.clearRect(0, 0, res.x, res.y);\n\n\t\tthis.animateFire = true;\n\t\tthis.drawShips();\n\t\t//this.animateBallistics()\n\t\tthis.animateFireOrders();\n\t\t//this.animateShipExplosions()\n\n\t\t//this.animateFire = true; this.fireResolved();\n\t}\n\n\tthis.resetImageData = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t if (this.ships[i].flight){this.ships[i].setPreFireImage();}\n\t\t}\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t if (this.ships[i].ship){this.ships[i].setEscortImage();}\n\t\t}\n\t}\n\n\tthis.getResolvingFireOrders= function(){\n\t\tthis.fireOrders = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n\t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n\t\t\t\t\tif (this.ships[i].structures[j].systems[k].weapon){\n\t\t\t\t\t\tif (!(this.ships[i].structures[j].systems[k] instanceof Launcher)){\n\t\t\t\t\t\t\tfor (var l = 0; l < this.ships[i].structures[j].systems[k].fireOrders.length; l++){\n\t\t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].fireOrders[l].turn == this.turn){\n\t\t\t\t\t\t\t\t\tthis.fireOrders.push(this.ships[i].structures[j].systems[k].fireOrders[l]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getShotDetails = function(){\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tthis.fireOrders[i].target = game.getUnitById(this.fireOrders[i].targetid);\n\t\t\tthis.fireOrders[i].shooter = game.getUnitById(this.fireOrders[i].shooterid);\n\t\t\tthis.fireOrders[i].weapon = this.fireOrders[i].shooter.getSystemById(this.fireOrders[i].weaponid).getActiveWeapon();\n\t\t\tthis.fireOrders[i].hits = [this.fireOrders[i].hits];\n\t\t\tthis.fireOrders[i].damages = this.fireOrders[i].target.getDamageEntriesByFireId(this.fireOrders[i]);\n\t\t}\n\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tif (this.fireOrders[i].guns){\n\t\t\t\tthis.fireOrders[i].min = this.fireOrders[i].req;\n\t\t\t\tthis.fireOrders[i].max = this.fireOrders[i].req;\n\t\t\t\tfor (var j = i+1; j < this.fireOrders.length; j++){\n\t\t\t\t\tif (this.fireOrders[j].guns){\n\t\t\t\t\t\tif (this.fireOrders[i].shooterid == this.fireOrders[j].shooterid){\n\t\t\t\t\t\t\tif (this.fireOrders[i].targetid == this.fireOrders[j].targetid){\n\t\t\t\t\t\t\t\tif (this.fireOrders[i].weapon.name == this.fireOrders[j].weapon.name){\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].guns += this.fireOrders[j].guns;\n\t\t\t\t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[j].damages.length; k++){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].damages.push(this.fireOrders[j].damages[k])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].hits.push(this.fireOrders[j].hits[0]);\n\t\t\t\t\t\t\t\t\tthis.fireOrders[j].guns = 0;\n\n\t\t\t\t\t\t\t\t\tif (this.fireOrders[j].req > this.fireOrders[i].max){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].max = this.fireOrders[j].req;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (this.fireOrders[j].req != -1 && this.fireOrders[j].req < this.fireOrders[i].min){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].min = this.fireOrders[j].req;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfor (var l = 0; l < this.fireOrders[j].rolls.length; l++){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].rolls.push(this.fireOrders[j].rolls[l]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//console.log(this.fireOrders[i].rolls);\n\t\t\t}\n\t\t}\n\n\t\t//console.log(this.fireOrders);\n\t\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n\t\t\t\tthis.fireOrders[i].type = \"Regular Fire\";\n\t\t\tif (! this.fireOrders[i].guns){\n\t\t\t\tthis.fireOrders.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar a = this.fireOrders[i].shooter.getBaseOffsetPos();\n\t\t\t\tvar b = this.fireOrders[i].target.getBaseOffsetPos();\n\t\t\t\tthis.fireOrders[i].dist = getDistance(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: a.x,\n\t\t\t\t\t\ty: a.y\n\t\t\t\t\t},\n\t\t\t\t\t{\tx: b.x,\n\t\t\t\t\t\ty: b.y\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.fireOrders[i].focus = {x: (a.x + b.x) / 2, y: (a.y + b.y) / 2}\n\t\t\t}\n\n\t\t\tif (this.fireOrders[i].target instanceof Salvo){\n\t\t\t\tthis.fireOrders[i].type = \"Intercept\";\n\t\t\t\twindow.animate.intercepts.push(this.fireOrders[i]);\n\t\t\t\tthis.fireOrders.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tif (this.fireOrders[i].shooter.flight){\n\t\t\t\tvar j = 1;\n\t\t\t\twhile (this.fireOrders[i].hits[0] > 1){\n\t\t\t\t\tthis.fireOrders[i].hits[0+j] = 1;\n\t\t\t\t\tthis.fireOrders[i].hits[0]--;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getFireAnimationDetails = function(){\n\t\t\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tthis.fireOrders[i].anim = this.fireOrders[i].weapon.getAnimation(this.fireOrders[i]);\n\t\t\t//console.log(this.fireOrders[i].weapon.priority);\n\t\t}\n\t\t/*\n\n\t\tusort($this->fires, function($a, $b){\n\t\t\tif ($a->targetid != $b->targetid){\n\t\t\t\treturn $a->targetid - $b->targetid;\n\t\t\t}\n\t\t\telse if ($a->weapon->priority != $b->weapon->priority){\n\t\t\t\treturn $a->weapon->priority - $b->weapon->priority;\n\t\t\t}\n\t\t\telse return $a->shooterid - $b->shooterid;\n\t\t});\n\t*/\n\n\t\tthis.fireOrders.sort(function(a, b){\n\t\t\treturn (\n\t\t\t\ta.shooter.flight - b.shooter.flight ||\n\t\t\t\ta.targetid - b.targetid ||\n\t\t\t\ta.weapon.priority - b.weapon.priority ||\n\t\t\t\ta.shooterid - b.shooterid\n\t\t\t)\n\t\t});\n\t\t//for (var i = 0; i < this.fireOrders.length; i++){\n\t\t//\tconsole.log(this.fireOrders[i].weapon.priority);\n\t\t//}\n\t\t//console.log(\"------------------\");\n\n    }\n\n\tthis.getShipExplosionDetails = function(){\n\t\twindow.animations = [];\n\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].deployed){\n\t\t\t\tvar anim = {\n\t\t\t\t\t\tanims: [],\n\t\t\t\t\t\tbase: game.ships[i].getPlannedPosition(),\n\t\t\t\t\t\tdone: false\n\t\t\t\t}\n\n\t\t\t\tif (game.ships[i].flight){\n\t\t\t\t\tfor (var j = 0; j < game.ships[i].structures.length; j++){\n\t\t\t\t\t\tif (game.ships[i].structures[j].isDestroyedThisTurn()){\n\t\t\t\t\t\t\tanim.anims.push({\n\t\t\t\t\t\t\t\ta: game.ships[i].facing+90,\n\t\t\t\t\t\t\t\tid: game.ships[i].id,\n\t\t\t\t\t\t\t\tt: [0-30*anim.anims.length, 70],\n\t\t\t\t\t\t\t\ts: game.ships[i].structures[j].mass / 3,\n\t\t\t\t\t\t\t\tx: game.ships[i].structures[j].layout.x,\n\t\t\t\t\t\t\t\ty: game.ships[i].structures[j].layout.y\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (game.ships[i].ship && game.ships[i].isDestroyedThisTurn()){\n\t\t\t\t\tanim.anims.push({\n\t\t\t\t\t\ta: game.ships[i].facing,\n\t\t\t\t\t\tid: game.ships[i].id,\n\t\t\t\t\t\tt: [0, 100],\n\t\t\t\t\t\ts: game.ships[i].size,\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif (anim.anims.length){\n\t\t\t\tanimations.push(anim);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.animateFireOrders = function(){\n\t\tanim = window.requestAnimationFrame(game.animateFireOrders.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tfor (var i = 0; i  < game.fireOrders.length; i++){ \n\t\t\t\tif (! game.fireOrders[i].animated){\n\t\t\t\t\t//cam.setFocus(game.fireOrders[i].focus.x, game.fireOrders[i].focus.y);\n\t\t\t\t\tfor (var j = 0; j < game.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\tfor (var k = 0; k < game.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].done){continue;}\n\t\t\t\t\t\t\tif (game.fireOrders[i].weapon.animation == \"projectile\"){\n\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n < game.fireOrders[i].anim[j][k].m){ // still to animate\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n > 0){ // valid, now animate\n\t\t\t\t\t\t\t\t\t\tdrawProjectile(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (game.fireOrders[i].anim[j][k].h){ // shot animated, does it explode ?\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\t//drawExplosion(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k].tx, game.fireOrders[i].anim[j][k].ty, game.fireOrders[i].anim[j][k].n, game.fireOrders[i].anim[j][k].m, 30); // EXPLO\n\t\t\t\t\t\t\t\t\tdrawExplosion(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k], 30); // EXPLO\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n >= game.fireOrders[i].anim[j][k].m+30){\n\t\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (game.fireOrders[i].weapon.animation == \"beam\"){\n\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n < game.fireOrders[i].anim[j][k].m){ // still to animate\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n > 0){ // t valid, now animate\n\t\t\t\t\t\t\t\t\t\tdrawBeam(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k]);\n\n\t\t\t\t\t\t\t\t \t\tif (game.fireOrders[i].anim[j][k].n >= game.fireOrders[i].anim[j][k].m){\n\t\t\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar allAnimated = true;\n\t\t\t\t\tfor (var j = 0; j < game.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\tfor (var k = 0; k < game.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (! game.fireOrders[i].anim[j][k].done){\n\t\t\t\t\t\t\t\tallAnimated = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!allAnimated){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (allAnimated){\n\t\t\t\t\t\tgame.fireOrders[i].animated = allAnimated;\n\t\t\t\t\t\tgame.createCombatLogEntry(game.fireOrders[i]);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar done = true\n\t\t\t\n\t\t\tfor (var i = 0; i  < game.fireOrders.length; i++){\n\t\t\t\tif (! game.fireOrders[i].animated){\n\t\t\t\t\tdone = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (done){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\tgame.animateBallistics();\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\t\tthis.fireOrders.push(\n\t\t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: targetid, weaponid: this.id, \n\t\t\tshots: this.getShots(), req: -1, notes: \"\", hits: -1, resolved: 0}\n\t\t);\n*/\n\n\tthis.getBallDetails = function(){\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].actions[game.ballistics[i].actions.length-1].type == \"impact\" && game.ballistics[i].status != \"intercepted\"){\n\t\t\t\tgame.ballistics[i].fireOrder.type = \"Ballistic\";\n\t\t\t\tgame.ballistics[i].fireOrder.weapon = game.ballistics[i].structures[0].systems[0];\n\t\t\t\tgame.ballistics[i].fireOrder.shooter = game.ballistics[i];\n\t\t\t\tgame.ballistics[i].fireOrder.target = game.getUnitById(game.ballistics[i].targetid);\n\t\t\t\tgame.ballistics[i].fireOrder.hits = [game.ballistics[i].fireOrder.hits];\n\t\t\t\tgame.ballistics[i].fireOrder.damages = game.getUnitById(game.ballistics[i].targetid).getDamageEntriesByFireId(game.ballistics[i].fireOrder);\n\n\t\t\t\tvar guns = 0;\n\t\t\t\tfor (var j = 0; j < game.ballistics[i].structures.length; j++){\n\t\t\t\t\tif (!game.ballistics[i].structures[j].destroyed){\n\t\t\t\t\t\tgame.ballistics[i].fireOrder.hits.push(0);\n\t\t\t\t\t\tguns++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgame.ballistics[i].fireOrder.guns = guns;\n\n\t\t\t}\n\n\t\t\tgame.ballistics[i].found = false;\n\t\t\tif (!game.getUnitById(game.ballistics[i].targetid).salvo){\n\t\t\t\tgame.ballistics[i].found = true;\n\t\t\t\tanimate.ballAnims.push({\"done\": false,\"anims\": [game.ballistics[i]]});\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tfor (var j = 0; j < animate.intercepts.length; j++){\n\t\t\t\tif (!animate.intercepts[j].found && animate.ballAnims[i].anims[0].id == animate.intercepts[j].targetid){\n\t\t\t\t\t//console.log(animate.intercepts[j]);\n\t\t\t\t\tanimate.intercepts[j].found = true;\n\t\t\t\t\tanimate.ballAnims[i].anims.push(animate.intercepts[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = 0; j < game.ballistics.length; j++){\n\t\t\t\tif (game.ballistics[j].found){continue;}\n\t\t\t\telse if (animate.ballAnims[i].anims[0].id == game.ballistics[j].targetid){\n\t\t\t\t\tgame.ballistics[j].found = true;\n\t\t\t\t\tanimate.ballAnims[i].anims.push(game.ballistics[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tfor (var j = 0; j < animate.ballAnims[i].anims.length; j++){\n\t\t\t\tif (animate.ballAnims[i].anims[j] instanceof Salvo){\n\t\t\t\t\tvar hit = false;\n\t\t\t\t\tif (animate.ballAnims[i].anims[j].fireOrder != undefined && animate.ballAnims[i].anims[j].fireOrder.damages.length){\n\t\t\t\t\t\thit = true;\n\t\t\t\t\t}\n\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(\n\t\t\t\t\t\tnew BallVector(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].getTrajectoryStart(),\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].getBaseOffsetPos(),\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].getCurrentImpulse() / animate.ballAnims[i].anims[0].getCurrentImpulse(),\n\t\t\t\t\t\t\thit\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tanimate.ballAnims[i].anims[j].anim[animate.ballAnims[i].anims[j].anim.length-1].hold = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (animate.ballAnims[i].anims[j] instanceof FireOrder){\n\t\t\t\t\tvar targetMove = new Vector(\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.getTrajectoryStart(),\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.getBaseOffsetPos()\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!(animate.ballAnims[i].anims[j].weapon instanceof Laser)){\n\t\t\t\t\t\tvar interceptPos = getProjIntercept(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.getTrajectoryStart(),\n\t\t\t\t\t\t\ttargetMove,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].weapon.projSpeed/2\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].guns; k++){\n\t\t\t\t\t\t\tfor (var l = 0; l < animate.ballAnims[i].anims[j].shots; l++){\n\t\t\t\t\t\t\t\tvar hit = false;\n\t\t\t\t\t\t\t\tif (l < animate.ballAnims[i].anims[j].hits[k]){\n\t\t\t\t\t\t\t\t\thit = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar interceptVector = new BallVector(\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter.getBaseOffsetPos(),\n\t\t\t\t\t\t\t\t\trandomize(interceptPos, 6, 6),\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].weapon.projSpeed/2,\n\t\t\t\t\t\t\t\t\thit\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tinterceptVector.n -= l*15;\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(interceptVector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar interceptPos = getBeamIntercept(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.getTrajectoryStart(),\n\t\t\t\t\t\t\ttargetMove\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].guns; k++){\n\t\t\t\t\t\t\tfor (var l = 0; l < animate.ballAnims[i].anims[j].shots; l++){\n\t\t\t\t\t\t\t\tvar hit = false;\n\t\t\t\t\t\t\t\tif (l < animate.ballAnims[i].anims[j].hits[k]){\n\t\t\t\t\t\t\t\t\thit = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar interceptVector = new BallVector(\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter.getBaseOffsetPos(),\n\t\t\t\t\t\t\t\t\trandomize(interceptPos, 8, 8),\n\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\thit\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tinterceptVector.ox = animate.ballAnims[i].anims[j].shooter.x + range(-15, 15);\n\t\t\t\t\t\t\t\tinterceptVector.oy = animate.ballAnims[i].anims[j].shooter.y + range(-15, 15);\n\t\t\t\t\t\t\t\tinterceptVector.n -= 5*k;\n\t\t\t\t\t\t\t\tinterceptVector.m *= 0.5;\n\t\t\t\t\t\t\t\tinterceptVector.nx = 0;\n\t\t\t\t\t\t\t\tinterceptVector.ny = 0;\n\t\t\t\t\t\t\t\tinterceptVector.tax = interceptPos.x\n\t\t\t\t\t\t\t\tinterceptVector.tay = interceptPos.y\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(interceptVector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.animateBallistics = function(){\n\t\tanim = window.requestAnimationFrame(game.animateBallistics.bind(this));\n\n\t\tctx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tgame.drawShips();\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\tanimate.ballAnims[i].done = true;\n\t\t\t\tfor (var j = 0; j < animate.ballAnims[i].anims.length; j++){\n\t\t\t\t\tif (animate.ballAnims[i].anims[j].animated){\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].draw();\n\t\t\t\t\t}\n\t\t\t\t\t//else if (!j && animate.ballAnims[i].anims[0].hold){\n\t\t\t\t\t//\tanimate.ballAnims[i].anims[0].drawMove();\n\t\t\t\t\t//\tanimate.ballAnims[i].done = false;\n\t\t\t\t\t//}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar done = true;\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].anim.length; k++){\n\t\t\t\t\t\t\tif (animate.ballAnims[i].anims[j].anim[k].done){continue;}\n\t\t\t\t\t\t\telse if (animate.isDone(i, j, k)){\n\t\t\t\t\t\t\t\t//if (j != 0){animate.ballAnims[i].anims[0].hold = 0;}\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim[k].done = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (animate.isReady(i, j, k)){\n\t\t\t\t\t\t\t\t//if (j != 0){animate.ballAnims[i].anims[0].hold = 1;}\n\t\t\t\t\t\t\t\tanimate.doAnimate(i, j, k);\n\t\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tanimate.doAdvance(i, j, k);\n\t\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (done){\n\t\t\t\t\t\t\tanimate.doLog(i, j);\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].animated = true;\n\t\t\t\t\t\t} else animate.ballAnims[i].done = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (var j = 0; j <= i; j++){\n\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[j].anims.length; k++){\n\t\t\t\t\t\tanimate.ballAnims[j].anims[k].draw();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.setTransform(1,0,0,1,0,0);\n\n\t\tallDone = true;\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\tallDone = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t//allDone = true;\n\t\tif (allDone){\n\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\tgame.draw();\n\t\t\tgame.animateFire = false;\n\t\t\tgame.animateShipExplosions();\n\t\t}\n\t}\n\n\tthis.animateShipExplosions = function(){\n\t\tanim = window.requestAnimationFrame(game.animateShipExplosions.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t\tvar allDone = true;\n\t\t\tfor (var i = 0; i < window.animations.length; i++){\n\t\t\t\tif (!window.animations[i].done){\n\n\t\t\t\t\tfxCtx.translate(window.animations[i].base.x, window.animations[i].base.y);\n\t\t\t\t\t//fxCtx.rotate(window.animations[i].anims[0].a * (Math.PI/180));\n\n\t\t\t\t\tvar done = true;\n\n\t\t\t\t\tfor (var j = 0; j < window.animations[i].anims.length; j++){\n\t\t\t\t\t\tif (window.animations[i].anims[j].t[0] < window.animations[i].anims[j].t[1]){\n\t\t\t\t\t\t\twindow.animations[i].anims[j].t[0]++;\n\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (window.animations[i].anims[j].t[0] > 0){\n\t\t\t\t\t\t\tdrawFighterExplosion(\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].x,\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].y, \n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].s,\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].t[0],\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].t[1]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\n\t\t\t\t\tif (!done){\n\t\t\t\t\t\tallDone = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse window.animations[i].done = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (allDone){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\tgame.fireResolved();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.createCombatLogEntry = function(fire){\n\t\tif (fire == undefined){return;}\n\t\tvar shots = 0;\n\t\tvar hits = 0;\n\t\tvar armour = 0;\n\t\tvar system = 0;\n\t\tvar struct = 0;\n\t\tvar rolls = [];\n\t\t\n\t\tfor (var i = 0; i < fire.guns; i++){\n\t\t\tshots += fire.weapon.getShots();\n\t\t\thits += fire.hits[i];\n\t\t}\n\t\tfor (var i = 0; i < fire.damages.length; i++){\n\t\t\tarmour += fire.damages[i].armourDmg;\n\t\t\tstruct += fire.damages[i].overkill;\n\n\t\t\tif (fire.damages[i].system == \"Main Structure\"){\n\t\t\t\tstruct += fire.damages[i].structDmg;\n\t\t\t} else system += fire.damages[i].structDmg;\n\n\t\t\trolls.push(fire.damages[i].roll);\n\t\t}\n\n\t\trolls.sort(function(a, b){return a-b});\n\n\t\tif (fire.weapon.linked > 1){\n\t\t\tshots *= fire.weapon.linked;\n\t\t\thits *= fire.weapon.linked;\n\t\t}\n\t\tif (fire.weapon.output){\n\t\t\thits /= fire.weapon.output;\n\t\t}\n\n\t\tvar chance = \"\"\n\t\tif (fire.min != fire.max){\n\t\t\tchance = fire.min + \" - \" + fire.max;\n\t\t} else chance = fire.req;\n\n\t\tvar tr = document.createElement(\"tr\");;\n\n\t\t$(tr)\n\t\t\t.data(\"shooterid\", fire.shooter.id)\n\t\t\t.data(\"targetid\", fire.target.id)\n\t\t\t.hover(function(){\n\t\t\t\tvar data = $(this).data();\n\t\t\t\tgame.getUnitById(data.shooterid).doHighlight();\n\t\t\t\tgame.getUnitById(data.targetid).doHighlight();\n\t\t\t})\n\n\t\tvar shooterClass = \"red\";\n\t\tvar targetClass = \"green\";\n\n\t\tif (fire.shooter.friendly){\n\t\t\tshooterClass = \"green\";\n\t\t\ttargetClass = \"red\";\n\t\t}\n\n\t\ttr.insertCell(-1).innerHTML = fire.type //+ \":\" + fire.id;\n\t\ttr.insertCell(-1).innerHTML = \"<span class='bold \" + shooterClass + \"'>\" + fire.shooter.name + \" #\" + fire.shooter.id + \"</span>\";\n\t\ttr.insertCell(-1).innerHTML = \"<span class='bold \" + targetClass + \"'>\" + fire.target.name + \" #\" + fire.target.id + \"</span>\";\n\t\ttr.insertCell(-1).innerHTML = fire.weapon.getDisplay();\n\t\ttr.insertCell(-1).innerHTML = chance + \"%\";\n\t\ttr.insertCell(-1).innerHTML = hits + \" / \" + shots;\n\n\t\tif (!hits){\n\t\t\ttr.insertCell(-1).innerHTML = \"\";\n\t\t\ttr.insertCell(-1).innerHTML = \"\";\n\t\t\ttr.insertCell(-1).innerHTML = \"\";\n\t\t}\n\t\telse {\n\t\t\ttr.insertCell(-1).innerHTML = armour;\n\t\t\ttr.insertCell(-1).innerHTML = system;\n\t\t\ttr.insertCell(-1).innerHTML = struct;\n\t\t}\n\n\t\t$(\"#combatLog\").find(\"tbody\").append(tr);\n\n\t\tif (hits){\n\t\t\tvar add = this.getDamageDetails(fire);\n\n\t\t\t$(\"#combatLog\").find(\"tbody\").append($(add).hide());\n\t\t\t$(tr).click(function(){\n\t\t\t\tif ($(this).hasClass(\"selected\")){\n\t\t\t\t\t$(this).removeClass(\"selected\").next().hide();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).addClass(\"selected\").next().show();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tthis.getDamageDetails = function(fire){\n\t\tvar details = document.createElement(\"tr\");\n\t\t\tdetails.className = \"selected\";\n\t\tvar td = details.insertCell(-1)\n\t\t\ttd.colSpan = 9;\n\n\t\tvar dmgs = {};\n\t\tvar kills = {};\n\n\t\tfor (var i = 0; i < fire.damages.length; i++){\n\t\t\tif (dmgs.hasOwnProperty(fire.damages[i].system)){\n\t\t\t\tdmgs[fire.damages[i].system][0]++\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdmgs[fire.damages[i].system] = [1, 0];\n\t\t\t}\n\t\t\tif (fire.damages[i].destroyed){\n\t\t\t\tdmgs[fire.damages[i].system][1]++;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i in dmgs){\n\t\t\ttd.innerHTML += dmgs[i][0] + \"x \" + i;\n\t\t\tif (dmgs[i][1]){\n\t\t\t\ttd.innerHTML += \" (\" + dmgs[i][1] + \")\"\n\t\t\t}\n\t\t\ttd.innerHTML += \"; \"\n\t\t}\n\n\t\treturn details;\n\n\t\tif (fire.target.flight || fire.target.salvo){\n\t\t\ttd.innerHTML += \" (Kills: \" + destroyed + \")\";\n\t\t} else {\n\t\t\ttd.innerHTML += \" (Kills: \" + destroyed + \")\";\n\t\t}\n\t}\n\n\tthis.initDeploymentWrapper = function(){\n\t\t$(\"#deployWrapper\")\t\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\t$(this).hide();\n\t\t\t\t$(\"#reinforce\").data(\"on\", 0);\n\t\t\t\tif (game.phase == -1){\n\t\t\t\t\t$(this).find(\"#reinforceTable\").find(\".selected\").each(function(){\n\t\t\t\t\t\t$(this).removeClass(\"selected\");\n\t\t\t\t\t\tgame.disableDeployment();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.find(\"#deployTable\")\n\t\t\t.find(\"tr\")\n\t\t\t.each(function(){\n\t\t\t\tvar name = $(this).attr(\"class\");\n\t\t\t\tif (name){\n\t\t\t\t\t$(this).data(\"shipid\", Math.floor(name.substring(name.search(\" \")+1, name.length)))\n\t\t\t\t\t//console.log($(this).data());\n\n\t\t\t\t\tif (game.turn == 1){\n\t\t\t\t\t\t$(this).click(function(e){\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tif (game.phase == -1){\n\t\t\t\t\t\t\t\tif (game.deploying && $(this).hasClass(\"selected\")){\n\t\t\t\t\t\t\t\t\t$(this).removeClass(\"selected\");\n\t\t\t\t\t\t\t\t\tgame.disableDeployment();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (!game.deploying && !game.aUnit && game.getUnitById($(this).data(\"shipid\")).canDeploy()){\n\t\t\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n\t\t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"shipid\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t\t$(this).hover(\n\t\t\t\t\t\tfunction(e){\n\t\t\t\t\t\t\tgame.drawJumpMarker($(this).data(\"shipid\"));\n\t\t\t\t\t\t\t//console.log(\"hoverIn\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction(e){\n\t\t\t\t\t\t\tgame.redraw();\n\t\t\t\t\t\t\t//console.log(\"hoverOut\");\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tthis.initReinforcementWrapper = function(){\n\t\t$(\"#reinforce\")\n\t\t\t.data(\"on\", 1)\n\t\t\t.click(function(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tif (!$(this).data(\"on\")){\n\t\t\t\t\t$(this).data(\"on\", 1);\n\t\t\t\t\t$(\"#deployWrapper\").show();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).data(\"on\", 0);\n\t\t\t\t\t$(\"#deployWrapper\").hide();\n\t\t\t\t\tif (game.phase == -1){\n\t\t\t\t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\".selected\").each(function(){\n\t\t\t\t\t\t\t$(this).removeClass(\"selected\");\n\t\t\t\t\t\t\tgame.disableDeployment();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t$(\"#deployWrapper\").find(\".requestReinforcements\").each(function(i){\n\t\t\t$(this)\n\t\t\t.data(\"id\", game.reinforcements[i][\"id\"])\n\t\t\t.data(\"cost\", game.reinforcements[i][\"cost\"])\n\t\t\t.click(function(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tif (game.phase == -1){\n\t\t\t\t\tif (game.deploying && $(this).hasClass(\"selected\")){\n\t\t\t\t\t\t$(this).removeClass(\"selected\");\n\t\t\t\t\t\tgame.disableDeployment();\n\t\t\t\t\t}\n\t\t\t\t\telse if (!aUnit){\n\t\t\t\t\t\tif ($(this).hasClass(\"green\")){\n\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"id\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (!game.deploying){\n\t\t\t\t\t\t\tif (!$(this).hasClass(\"green\") && Math.floor(game.reinforcePoints) >= $(this).data(\"cost\") + game.getCurrentReinforceCost()){\n\t\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n\t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"id\"));\n\t\t\t\t\t\t\t} else popup(\"You have insufficient Reinforce Points (\"+game.reinforcePoints+\") available.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else popup(\"Reinforces can only be requested in Deployment/Initial Phase.\");\n\t\t\t})\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\tif (game.phase == -1 && !aUnit && $(this).hasClass(\"green\")){\n\t\t\t\t\tgame.undoDeployment($(this).data(\"id\"));\n\t\t\t\t\t$(this).removeClass(\"green\");\n\t\t\t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\"#totalRequestCost\").html(game.getCurrentReinforceCost());\n\t\t\t\t\tgame.draw();\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t}\n\n\tthis.initSelectionWrapper = function(){\n\t\tvar ele = $(\"#unitGUI\");\n\t\tvar l = 0;\n\n\t\tthis.ships.sort(function(a, b){\n\t\t\treturn a.userid - b.userid || b.cost- a.cost\n\t\t});\n\t\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].isReady()){\n\t\t\t\tvar name = \"friendly\";\n\t\t\t\tif (this.ships[i].userid != game.userid){\n\t\t\t\t\tname = \"hostile\";\n\t\t\t\t}\n\t\t\t\tl++;\n\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tclassName = \"rotate270 size40\";\n\t\t\t\t} else className = \"size40\";\n\n\n\t\t\t\tele.append(\n\t\t\t\t($(this.ships[i].img.cloneNode(true))\n\t\t\t\t\t.data(\"id\", this.ships[i].id))\n\t\t\t\t\t.addClass(className)\n\t\t\t\t\t.addClass(name)\n\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\t\t\t\t\t\t\n\t\t\t\t\t\tif (!aUnit && !game.getUnitById($(this).data(\"id\")).selected){ // selecting\n\t\t\t\t\t\t\tgame.getUnitById($(this).data(\"id\")).doSelect();\n\t\t\t\t\t\t} else if (aUnit == $(this).data(\"id\")){ // unselecting\n\t\t\t\t\t\t\tgame.getUnitById($(this).data(\"id\")).doUnselect();\n\t\t\t\t\t\t} else if (aUnit != $(this).data(\"id\")){ // fireing\n\t\t\t\t\t\t\tvar ship = game.getUnitById(aUnit);\n\t\t\t\t\t\t\tvar vessel = game.getUnitById($(this).data(\"id\"));\n\t\t\t\t\t\t\tif (ship && vessel){\n\t\t\t\t\t\t\t\tif (vessel.id != ship.id && (vessel.userid != game.userid && vessel.userid != ship.userid)){\n\t\t\t\t\t\t\t\t\thandleFireClick(ship, vessel);\n\t\t\t\t\t\t\t\t} else vessel.switchDiv();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\tvar unit = game.getUnitById($(this).data(\"id\"));\n\t\t\t\t\t\tif (aUnit != unit.id){unit.switchDiv();}\n\t\t\t\t\t})\n\t\t\t\t\t.hover(function(e){\n\t\t\t\t\t\t\tvar vessel = game.getUnitById($(this).data(\"id\"));\n\t\t\t\t\t\t\t\tvessel.doHighlight();\n\t\t\t\t\t\t\t\tif (vessel.highlight){\n\t\t\t\t\t\t\t\t\tgame.doGenericHover(vessel);\n\t\t\t\t\t\t\t\t} else vessel.undoHover();\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (aUnit && aUnit != vessel.id){\n\t\t\t\t\t\t\t\tvar\tship = game.getUnitById(aUnit);\n\t\t\t\t\t\t\t\tif (ship.salvo){return;}\n\t\t\t\t\t\t\t\tvar shipLoc = ship.getPlannedPosition();\n\t\t\t\t\t\t\t\tvar facing = ship.getPlannedFacing();\n\t\t\t\t\t\t\t\tif (ship.hasWeaponsSelected()){\n\t\t\t\t\t\t\t\t\tif (ship.id != vessel.id){\n\t\t\t\t\t\t\t\t\t\thandleWeaponAimEvent(ship, vessel, e);\n\t\t\t\t\t\t\t\t\t}// else $(\"#weaponAimTableWrapper\").hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgame.target = 0;\n\t\t\t\t\t\t\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tif (l){\n\t\t\tele.width(Math.min(510, l*46)).css(\"top\", 0).css(\"left\", 400).drag();\n\t\t} else ele.hide();\n\t}\n}",
			"file": "game.js",
			"file_size": 72464,
			"file_write_time": 131480721501215381,
			"settings":
			{
				"buffer_size": 69941,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 13010,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 184,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 25272,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 3871,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 12957,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7221,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17156,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mixed.js",
			"settings":
			{
				"buffer_size": 6968,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2732,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1992,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 2939,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2303,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2682,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2311,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/wing.php",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"setPureImage",
			"",
			"flights.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.pphp",
			"",
			"*.js",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"style.css",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"this.turnAngles = {}",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"draw = f",
			"setStatus ",
			"doDraw = 0",
			"dodraw",
			"dodraw ",
			"doDraw = 0",
			"doDraw ",
			"drDraw",
			"drDraw ",
			"getDrawFacing",
			"getDrawFacing ",
			"drawfacing",
			"setPureImage",
			"setRawImage",
			"setra",
			"setrawimage",
			"salvo",
			"setRawImage ",
			"isReady",
			"setRawImage",
			"\t\tmouseCtx.rotate(this.getDrawFacing() * Math.PI/180);\n",
			"\t\tmouseCtx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tmouseCtx.rotate(this.getDrawFacing() * Math.PI/180);\ngetDrawFacing ",
			"getDrawFacing ",
			"getDrawFacing",
			"getPlannedFacing ",
			"getPlannedFacing",
			"getDrawFacing",
			"getDrawFacing ",
			"drawfacing ",
			"setPostMoveFacing",
			"movefacing",
			"setPreMoveImage",
			"getDrawFacing",
			"getBaseImpulse",
			"getDrawFacing",
			"getPlannedFacing",
			"setPreMoveFacing",
			"drawfacing ",
			"drawfacing",
			"drawFacing =",
			"drawFacing",
			"getDrawFacing ",
			"getDrawFacing",
			"setImage",
			"setRawImage",
			".create ",
			".create",
			".create ",
			".create = ",
			"this.create ",
			".create",
			"this.create",
			"setTarget",
			".red",
			"getTarget",
			"targetid",
			"Distance to",
			"Local Flights",
			"ballImages",
			"//console.log(this.drawImg.toDataURL());",
			"setpostmoveimage",
			"handleflightm",
			"warhead",
			".selection",
			"selection",
			".selection",
			"select = ",
			"select ",
			"select",
			"doSelect",
			"\"selection",
			"handleF",
			"flightPath = ",
			"undoHover",
			"SelectionWrap",
			"selectionwrap",
			"incoming[",
			"incoming",
			"doSpecificHover",
			"drawMovePlan",
			"drawMo",
			"resetHover",
			"incoming",
			"dohighlight",
			"drawPositionMarker",
			"positionmarket",
			"drawSelf",
			"animateunitm",
			"game.getShipByClick",
			"getShipByClick",
			"getUnitByClick",
			"getShipByClick",
			"getAmmoByClick",
			"getShipById",
			"weaponaimevent",
			"calculatetohit",
			"cc[",
			"setupships",
			"calculatetohit",
			"calcu",
			"subhitchance",
			"hitchance",
			"basehitchance",
			"basehitchance ",
			"WEAPONS",
			"expanddi",
			"expanddiv",
			"setlayout",
			"diseng",
			"intercept ",
			"\"intercept",
			"missionAdjustDiv",
			"intercept",
			"deployclick",
			"handleFlightDeployMove",
			"handleflight",
			"resolveFlightMovement",
			"resolveFighterMovement",
			"getMemory",
			"handlemovement",
			"getTarget",
			"createball",
			"unitmovement",
			"endDogfightsFiring",
			"\nendDogfightsFiring",
			"endDogfightsFiring",
			"resolveBallisticActions",
			"handlef"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"setRawImage",
			"setPureImage",
			"",
			"Local Units",
			"shipImages",
			"game.getUnitByClick",
			"getUnitById",
			"resolveFlightMovement",
			"isCloseCombat($id)",
			"getHitSection",
			"s",
			"pSize",
			"isCloseCombat",
			"setPostMoveFacing",
			"updateIntercepts",
			"[$j]",
			"$stack[$i][j]",
			"planCtx",
			"inRange",
			"updateTargets",
			"resolveUnitMovement",
			"animateUnitMovement",
			"getIncomingUnits",
			"drawMovePlan",
			"launchData",
			"$",
			"$unit",
			"\"<td>\"",
			"\"<tr>\"",
			", ",
			");",
			"draw",
			"isExposed",
			"MediumTwinIon",
			"#27e627",
			"#24de24",
			"lime",
			"lime;",
			"getCurrentImpulse();",
			"getCurrentImplse();",
			"x.drawX",
			"shooter.drawX",
			"setDrawData",
			"setDrawData()",
			"getPlannedPosition",
			"remainingDelay",
			"delay",
			"getPlannedFacing()",
			"salvo",
			".getCurrentImpulse()",
			"this.getCurrentImpulse",
			"this.getCurrentImPulse",
			"new Action(-1, ",
			"unitGUI",
			"getDmgRangeMod($fire)",
			"\"Thrust",
			"getDmgString",
			"Damage loss",
			".getRangeDmgMod",
			"getDmgRangeMod",
			"getDmgRangePenalty",
			"dmgLoss",
			"mouse",
			"salvo",
			"mouseCtx",
			"system",
			"this.turnAngles = {}",
			"IsOnMovementArc",
			"getTurnStep",
			"$this->updatePlayerStatus",
			"\"Disabled\"",
			"doOverkill",
			"applyOverkill",
			"new",
			"$this->boostEffect[] = new",
			"$manager->incoming[$i]",
			"$units",
			"insertServerActions",
			"$units[$i][\"actions\"][$j]",
			"insertClientActions",
			"drawMovePlan",
			"element",
			"",
			"getRemainingIntegrity",
			"getImpulseProfileMod",
			"getShots($this->turn)",
			"public function getShots($turn){",
			"getEWSettings",
			"ctx",
			"</span>",
			"<span class='red'",
			"<span",
			"ballistics",
			"if (this.destroyed || this.disabled || this.locked){",
			"$this",
			"doDamage($fire, $roll, $system)",
			"rollToHit",
			"getSection",
			"angle",
			"section",
			"$negation = $fire->target->getArmourValue($fire, $hitSystem);",
			"$negation = $fire->target->getArmourElement($fire) * $hitSystem->getArmourMod();",
			"salvo",
			"move",
			"moveAngles",
			"getPlannedFacing",
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data.",
			"getTraverseMod",
			"ding",
			"getCritMod",
			"= data.",
			", \"LightParticleBeam\"",
			"deployArea[i].",
			"deployArea[i]",
			"MediumPlasma",
			"Dual",
			"getActiveSystem",
			"setState = function($turn)",
			"setState($turn)"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 43,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2006.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5204,
						"regions":
						{
						},
						"selection":
						[
							[
								2144,
								2144
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2141.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13739,
						"regions":
						{
						},
						"selection":
						[
							[
								4301,
								4306
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3066.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20083,
						"regions":
						{
						},
						"selection":
						[
							[
								16646,
								16646
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21532.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83815,
						"regions":
						{
						},
						"selection":
						[
							[
								83395,
								83395
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5796.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6013,
						"regions":
						{
						},
						"selection":
						[
							[
								507,
								507
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3783,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3039,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2505,
						"regions":
						{
						},
						"selection":
						[
							[
								959,
								959
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19129,
						"regions":
						{
						},
						"selection":
						[
							[
								1813,
								1815
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 994.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1703,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								452,
								452
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3748,
						"regions":
						{
						},
						"selection":
						[
							[
								402,
								402
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2775,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2568,
						"regions":
						{
						},
						"selection":
						[
							[
								2366,
								2366
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 799.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								924,
								929
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 27.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1611,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4540,
						"regions":
						{
						},
						"selection":
						[
							[
								882,
								882
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5058,
						"regions":
						{
						},
						"selection":
						[
							[
								4648,
								4648
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3447.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1991,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4810,
						"regions":
						{
						},
						"selection":
						[
							[
								1231,
								1231
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 161.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4744,
						"regions":
						{
						},
						"selection":
						[
							[
								2489,
								2489
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1333.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5055,
						"regions":
						{
						},
						"selection":
						[
							[
								4557,
								4557
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 245.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								4013,
								4013
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1140
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 203.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6846,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4755,
						"regions":
						{
						},
						"selection":
						[
							[
								1210,
								1210
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 465.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10476,
						"regions":
						{
						},
						"selection":
						[
							[
								9009,
								9009
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30576,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 778.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								2090,
								2090
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84899,
						"regions":
						{
						},
						"selection":
						[
							[
								35598,
								35598
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23826.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								7375,
								7375
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4063.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3039,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1590,
						"regions":
						{
						},
						"selection":
						[
							[
								811,
								811
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16368,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5486.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6997,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								6997
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 290.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49343,
						"regions":
						{
						},
						"selection":
						[
							[
								24287,
								24292
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14268.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48851,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69941,
						"regions":
						{
						},
						"selection":
						[
							[
								25115,
								25115
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 17059.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4114.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								1092,
								1092
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25272,
						"regions":
						{
						},
						"selection":
						[
							[
								23005,
								23018
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14052.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3871,
						"regions":
						{
						},
						"selection":
						[
							[
								2528,
								2528
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 38.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				}
			]
		},
		{
			"selected": 23,
			"sheets":
			[
				{
					"buffer": 48,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6846,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 107.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3474,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 197.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30576,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13029.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12957,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4744,
						"regions":
						{
						},
						"selection":
						[
							[
								951,
								951
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 221.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7221,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 94.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								7861,
								7861
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4536.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2505,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4810,
						"regions":
						{
						},
						"selection":
						[
							[
								428,
								428
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83815,
						"regions":
						{
						},
						"selection":
						[
							[
								83745,
								83745
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 53599.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84899,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23836.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6013,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								248
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48851,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13739,
						"regions":
						{
						},
						"selection":
						[
							[
								5681,
								5681
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4585.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48851,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1991,
						"regions":
						{
						},
						"selection":
						[
							[
								1455,
								1455
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1134.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69941,
						"regions":
						{
						},
						"selection":
						[
							[
								20870,
								20870
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13711.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2178.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16368,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4842.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17156,
						"regions":
						{
						},
						"selection":
						[
							[
								3075,
								3075
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1462.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6968,
						"regions":
						{
						},
						"selection":
						[
							[
								2907,
								2907
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1970.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								1627,
								1627
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3651,
						"regions":
						{
						},
						"selection":
						[
							[
								421,
								421
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 160.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3783,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5204,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 556.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2732,
						"regions":
						{
						},
						"selection":
						[
							[
								2732,
								2732
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								813,
								813
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								409
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								446,
								446
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3139,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25272,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								326
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10476,
						"regions":
						{
						},
						"selection":
						[
							[
								71,
								75
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1703,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 430.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3871,
						"regions":
						{
						},
						"selection":
						[
							[
								1056,
								1056
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 294.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3187.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5058,
						"regions":
						{
						},
						"selection":
						[
							[
								4609,
								4609
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2369.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4755,
						"regions":
						{
						},
						"selection":
						[
							[
								1210,
								1210
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2939,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 655.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49343,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 154.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6815,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								1064,
								1064
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2682,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 230.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								1289,
								1289
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								2189,
								2189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 766.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								1221,
								1221
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2311,
						"regions":
						{
						},
						"selection":
						[
							[
								834,
								834
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.475047031121,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sj",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"gamejs",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"iam",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"m",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"l",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"p",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"stly",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"mag",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cr",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"os",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sa",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sjh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"lgo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"gamj",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"al",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"omg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"fgl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"salv",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"c",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"wi",
				"C:\\xampp\\htdocs\\fire\\server\\wing.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"lase",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"tina",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"dar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"dark",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"plasm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"stl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"mn",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sscr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"are",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\area.php"
			],
			[
				"area",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\area.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"du",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"hv",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"li",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"si",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"teth",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 159.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
