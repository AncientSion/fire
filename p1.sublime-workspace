{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getUnitBy",
				"getUnitByClick"
			],
			[
				"getUnitB",
				"getUnitByClick"
			],
			[
				"extra",
				"extraPulses"
			],
			[
				"proto",
				"prototype"
			],
			[
				"mission",
				"missionSwitch"
			],
			[
				"resetMov",
				"resetMoveTranslation"
			],
			[
				"setMove",
				"setMoveTranslation"
			],
			[
				"prj",
				"projSpeed"
			],
			[
				"getPlan",
				"getPlannedFacing"
			],
			[
				"getImp",
				"getImpulseChangeCost"
			],
			[
				"butt",
				"buttonTD"
			],
			[
				"el",
				"elapsed"
			],
			[
				"dr",
				"drawTrajectory"
			],
			[
				"assemble",
				"assembleBallistics"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getHit",
				"getHitSection"
			],
			[
				"getMis",
				"getMissionTypeString"
			],
			[
				"setPostMo",
				"setPostMoveImage"
			],
			[
				"geu",
				"getUnitById"
			],
			[
				"getUnt",
				"getUnitById"
			],
			[
				"order",
				"ordered"
			],
			[
				"target",
				"targetid"
			],
			[
				"dodepl",
				"doDeployFlight"
			],
			[
				"reset",
				"resetHover"
			],
			[
				"getU",
				"getUnitByClick"
			],
			[
				"hasInvali",
				"hasInvalidPower"
			],
			[
				"confirm",
				"confirmFiringOrders"
			],
			[
				"unit",
				"unitSize"
			],
			[
				"getPo",
				"getPowerReq"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"getRema",
				"getRemainingDelay"
			],
			[
				"getRem",
				"getCurrentImpulse"
			],
			[
				"getRemain",
				"getRemainingEP"
			],
			[
				"add",
				"addClass"
			],
			[
				"getRe",
				"getReinforcements"
			],
			[
				"getAmg",
				"getAngleFromTo"
			],
			[
				"getPositi",
				"getCurrentPosition"
			],
			[
				"col",
				"colspan"
			],
			[
				"gethit",
				"getHitSystem"
			],
			[
				"fire",
				"handleFireClick"
			],
			[
				"getpla",
				"getPlannedPosition"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"play",
				"playerName"
			],
			[
				"getbase",
				"getBaseOffsetPos"
			],
			[
				"setPre",
				"setPreMovePosition"
			],
			[
				"bac",
				"background-color"
			],
			[
				"ren",
				"reinforce"
			],
			[
				"setRemain",
				"setRemainingDelay"
			],
			[
				"remai",
				"remainingDelay"
			],
			[
				"rema",
				"remainingImpulse"
			],
			[
				"remaining",
				"remainingImpulse"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"getRei",
				"getReinforcementShips"
			],
			[
				"draw",
				"drawSystemAxis"
			],
			[
				"font-",
				"font-size"
			],
			[
				"se",
				"select"
			],
			[
				"roate",
				"rotate270size90"
			],
			[
				"getre",
				"getRemainingImpulse"
			],
			[
				"getImpu",
				"getImpulseChangeCost"
			],
			[
				"getTurn",
				"getMaxTurnAngle"
			],
			[
				"turn",
				"turnAngle"
			],
			[
				"baseI",
				"baseImpulseCost"
			],
			[
				"getPlann",
				"getPlannedPosition"
			],
			[
				"getPlanned",
				"getPlannedPosition"
			],
			[
				"switchM",
				"switchTurnMode"
			],
			[
				"getPla",
				"getPlannedPosition"
			],
			[
				"getD",
				"getDefensiveBonus"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 7182,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 5274,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 15680,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 21243,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mixed.js",
			"settings":
			{
				"buffer_size": 14147,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shipclasses.js",
			"settings":
			{
				"buffer_size": 84966,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6275,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 47304,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3193,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 2968,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2481,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 23028,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 1859,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3640,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3471,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2569,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2254,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1954,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1611,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 3929,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 5299,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 2681,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 5697,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 1982,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4497,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 6234,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6750,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 3022,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 1613,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/mixed.php",
			"settings":
			{
				"buffer_size": 6622,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4488,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"file": "salvo.js",
			"settings":
			{
				"buffer_size": 9516,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 31190,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4270,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 88787,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8626,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 14129,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 8127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 52901,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 68895,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 73 files for \"130px\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  515  Flight.prototype.disableMissionMode = function(){\n  516  \tgame.mission = 0;\n  517: \t$(this.element).find(\".header\").css(\"height\", \"130px\").find(\"tr\").slice(-3)\n  518  \t.each(function(i){\n  519  \t\tif (!i){\n\nC:\\xampp\\htdocs\\fire\\style.css:\n  943  \tdisplay: inline-block;\n  944  \twidth: 180px;\n  945: \theight: 130px;\n  946  \tmargin: auto;\n  947  \tpadding: 0 0 0 0;\n  ...\n  967  \tfloat: right;\n  968  \tdisplay: inline-block;\n  969: \theight: 130px;\n  970  \tborder: 1px solid white;\n  971  }\n\n3 matches across 2 files\n\n\nSearching 73 files for \"deployment l\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n 1405  \t\t.width(250)\n 1406  \t\t.show()\n 1407: \t\t.find(\".combatLogHeader\").html(\"Deployment Log\").end()\n 1408  \t\t.find(\"#combatLog\").children().children().remove();\n 1409  \n\n1 match in 1 file\n\n\nSearching 73 files for \"cc.p\"\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2892  Ship.prototype.attachFlight = function(id){\n 2893  \tvar attach = game.getUnit(id);\n 2894: \tthis.cc.push(attach.id);\n 2895  \t$(this.element).find(\".ccContainer\").remove();\n 2896  \tthis.getAttachDivs();\n 2897  \tthis.setEscortImage();\n 2898: \tattach.cc.push(this.id);\n 2899  \tgame.draw();\n 2900  }\n\n2 matches in 1 file\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  330  \n  331  \t\tvar img = new Image()\n  332: \t\t\timg.src = window.shipImages[this.structures[i].name.toLowerCase() + \"l\"].src;\n  333  \n  334  \t\t\t$(img)\n  ...\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n  ...\n  613  \n  614  Flight.prototype.setRawImage = function(){\n  615: \tthis.img = window.shipImages[this.structures[0].name.toLowerCase() + \"l\"];\n  616  \tthis.smallImg = window.shipImages[this.structures[0].name.toLowerCase()];\n  617  }\n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  399  \t\t\tctx.rotate((360/this.structures.length*i) * (Math.PI/180));\n  400  \t\t\tctx.drawImage(\n  401: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  402  \t\t\t\t0 -size/2,\n  403  \t\t\t\t0 -size/2,\n  ...\n  429  \t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n  430  \t\t\tctx.drawImage(\n  431: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  432  \t\t\t\t0 -size/2,\n  433  \t\t\t\t0 -size/2,\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2977  \t\t\t\tctx.rotate((a+90)*(Math.PI/180));\n 2978  \t\t\t\tctx.drawImage(\n 2979: \t\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase() +\"l\"],\n 2980  \t\t\t\t\t-fSize/2,\n 2981  \t\t\t\t\t-fSize/2,\n ....\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n7 matches across 3 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n  ...\n  613  \n  614  Flight.prototype.setRawImage = function(){\n  615: \tthis.img = window.shipImages[this.structures[0].name.toLowerCase() + \"l\"];\n  616  \tthis.smallImg = window.shipImages[this.structures[0].name.toLowerCase()];\n  617  }\n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  399  \t\t\tctx.rotate((360/this.structures.length*i) * (Math.PI/180));\n  400  \t\t\tctx.drawImage(\n  401: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  402  \t\t\t\t0 -size/2,\n  403  \t\t\t\t0 -size/2,\n  ...\n  429  \t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n  430  \t\t\tctx.drawImage(\n  431: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  432  \t\t\t\t0 -size/2,\n  433  \t\t\t\t0 -size/2,\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2977  \t\t\t\tctx.rotate((a+90)*(Math.PI/180));\n 2978  \t\t\t\tctx.drawImage(\n 2979: \t\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase() +\"l\"],\n 2980  \t\t\t\t\t-fSize/2,\n 2981  \t\t\t\t\t-fSize/2,\n ....\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n6 matches across 3 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  399  \t\t\tctx.rotate((360/this.structures.length*i) * (Math.PI/180));\n  400  \t\t\tctx.drawImage(\n  401: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  402  \t\t\t\t0 -size/2,\n  403  \t\t\t\t0 -size/2,\n  ...\n  429  \t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n  430  \t\t\tctx.drawImage(\n  431: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  432  \t\t\t\t0 -size/2,\n  433  \t\t\t\t0 -size/2,\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2977  \t\t\t\tctx.rotate((a+90)*(Math.PI/180));\n 2978  \t\t\t\tctx.drawImage(\n 2979: \t\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase() +\"l\"],\n 2980  \t\t\t\t\t-fSize/2,\n 2981  \t\t\t\t\t-fSize/2,\n ....\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n5 matches across 3 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  429  \t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n  430  \t\t\tctx.drawImage(\n  431: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  432  \t\t\t\t0 -size/2,\n  433  \t\t\t\t0 -size/2,\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2977  \t\t\t\tctx.rotate((a+90)*(Math.PI/180));\n 2978  \t\t\t\tctx.drawImage(\n 2979: \t\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase() +\"l\"],\n 2980  \t\t\t\t\t-fSize/2,\n 2981  \t\t\t\t\t-fSize/2,\n ....\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n4 matches across 3 files\n\n\nSearching 73 files for \"+ \"\n\nC:\\xampp\\htdocs\\fire\\cam.js:\n   43  \tadjustZoom: function(e, pos){\n   44  \t\tif (e.originalEvent.wheelDelta == 120) {\n   45: \t\t\tthis.z = Math.min(2, this.z + 0.2);\n   46  \t\t}\n   47  \t\telse {\n   ..\n  113  \n  114  \tthis.set = function(val, ele){\n  115: \t\t//console.log(this.old + \" -> \" + val);\n  116  \t\tif (this.new){\n  117  \t\t\tvar m = this.new;\n  ...\n  129  \n  130  \t\tif (this.new){\n  131: \t\t\t$(\"#game\").find(\"#deployOverlay\").find(\"#deployType\").html(\"Select target for </br>\" +  game.getMissionTypeString(val) + \"</br></span>\");\n  132  \t\t}\n  133  \t\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n   46  \t\tthis.f = getAngleFromTo(a, b);\n   47  \t\t\n   48: \t\tthis.m = Math.sqrt((Math.pow(this.x, 2) + Math.pow(this.y, 2)));\n   49  \t\tthis.nx = this.x/this.m*s;\n   50  \t\tthis.ny = this.y/this.m*s;\n   ..\n   76  \t\tvar x = Math.pow(this.x, 2);\n   77  \t\tvar y = Math.pow(this.y, 2);\n   78: \t\tvar m = (x + y);\n   79  \t\t\n   80  \t\tthis.nx = this.x/this.m;\n   ..\n  102  \t\tvar x = Math.pow(this.x, 2);\n  103  \t\tvar y = Math.pow(this.y, 2);\n  104: \t\tvar m = x + y;\n  105  \t\t\n  106  \t\tthis.m = Math.sqrt(m);\t\n  ...\n  113  \n  114  function Dot(a, b){\n  115: \tthis.dot = (a.nx * b.nx) + (a.ny * b.ny);\n  116  }\n  117  \n  ...\n  264  \t\t$(document.body).append(ele);\n  265  \t\tvar w = $(ele).width();\n  266: \t\t$(ele).css(\"left\", e.clientX - w/2).css(\"top\", e.clientY + 40)\n  267  \t}\n  268  \telse {\n  ...\n  275  \tvar div = document.createElement(\"div\");\n  276  \t\tdiv.id = \"systemDetailsDiv\";\n  277: \t\tdiv.className = this.id + \" flight\";\n  278  \n  279  \t\tvar table = $(\"<table>\")\n  ...\n  330  \tthis.value = data.value;\n  331  \n  332: \t//this.html = this.type + \": -\" + this.value * 100 + \"%\"; \n  333  \n  334  \tthis.create = function(){\n  ...\n  336  \t\tvar mod = 1;\n  337  \t\tif (this.duration > 0){\n  338: \t\t\thtml = \"Turn \" + (this.turn + this.duration) +\": \";\n  339  \t\t} else html = \"Permanent: \";\n  340  \n  ...\n  403  \t\tif (this.type == \"Disabled\"){\n  404  \t\t\tif (this.duration){\n  405: \t\t\t\treturn  (this.type + \" (Incl. Turn \" + (this.turn + this.duration + \")\"));\n  406  \t\t\t} else return (\"Disengaged\");\n  407  \t\t}\n  408  \t\telse if (!this.duration){\n  409: \t\t\treturn (this.type + \": -\" + (this.value*100) + \"%\" + \" (Permanent)\");\n  410: \t\t} else return (this.type + \": -\" + (this.value*100) + \"%\" + \" (Incl. Turn \" + (this.turn + this.duration + \")\"));\n  411  \t}\n  412  \n  ...\n  415  \t\t\treturn true;\n  416  \t\t}\n  417: \t\telse if (game.turn <= this.turn + this.duration){\n  418  \t\t\treturn true;\n  419  \t\t}\n  ...\n  455  \t\tvar span = document.createElement(\"div\");\n  456  \t\t\tspan.className = \"integrityAmount\";\n  457: \t\t\tspan.innerHTML = rem + \" / \" + this.negation;\n  458  \t\t\ttd.appendChild(span);\n  459  \n  460  \t\tvar lowerDiv = document.createElement(\"div\");\n  461  \t\t\tlowerDiv.className = \"integrityNow\";\n  462: \t\t\tlowerDiv.style.width =  rem/this.negation * 100 + \"%\";\n  463  \t\t\ttd.appendChild(lowerDiv);\n  464  \t\t\t\n  ...\n  499  \t\t}\n  500  \t\telse if (a > b){\n  501: \t\t   c = a + b;\n  502  \t\t}\n  503  \t\telse {\n  504: \t\t   c = (a + b) / 2;\n  505  \t\t}\n  506  \n  ...\n  535  \t\t\t$(this.getSystemDetailsDiv())\n  536  \t\t\t\t.css(\"left\", e.clientX - 90)\n  537: \t\t\t\t.css(\"top\", e.clientY + 40)\t\t\t)\n  538  \t}\n  539  \n  ...\n  545  \t\t\t\t.append($(\"<tr>\").attr(\"colSpan\", 2)\n  546  \t\t\t\t\t.append($(\"<td>\").html(\"Strength\"))\n  547: \t\t\t\t\t.append($(\"<td>\").html(this.getRemainingNegation() + \" / \" + this.negation))));\n  548  \t}\n  549  \n  ...\n  578  \t\tvar span = document.createElement(\"div\");\n  579  \t\t\tspan.className = \"integrityAmount\";\n  580: \t\t\tspan.innerHTML = this.remaining + \" / \" + this.integrity;\n  581  \t\t\ttd.appendChild(span);\n  582  \n  583  \t\tvar lowerDiv = document.createElement(\"div\");\n  584  \t\t\tlowerDiv.className = \"integrityNow\";\n  585: \t\t\tlowerDiv.style.width =  this.remaining/this.integrity * 100 + \"%\";\n  586  \t\t\ttd.appendChild(lowerDiv);\n  587  \t\t\t\n  ...\n  631  \t\t\t$(this.getSystemDetailsDiv())\n  632  \t\t\t\t.css(\"left\", e.clientX - 90)\n  633: \t\t\t\t.css(\"top\", e.clientY + 40)\n  634  \t\t\t)\n  635  \t}\n  ...\n  642  \t\t\t\t.append($(\"<tr>\").attr(\"colSpan\", 2)\n  643  \t\t\t\t\t.append($(\"<td>\").html(\"Strength\"))\n  644: \t\t\t\t\t.append($(\"<td>\").html(this.remaining + \" / \" + this.integrity))));\n  645  \t}\n  646  \n\nC:\\xampp\\htdocs\\fire\\combattest.php:\n   56  \t\t\t\t\tif ($details){\n   57  \t\t\t\t\t\techo \"<td>\";\n   58: \t\t\t\t\t\techo $armour + $struct;\n   59  \t\t\t\t\t\techo \"</td>\";\n   60  \n\nC:\\xampp\\htdocs\\fire\\flights.js:\n   55  \n   56  \t\tvar a = 360/Math.ceil(this.structures.length/3)*i;\n   57: \t\tvar o = getPointInDirection(0 + this.unitSize*14, a-90, 0, 0);\n   58  \n   59  \t\tfor (var j = 0; j < Math.min(this.structures.length-i*3, 3); j++){\n   ..\n   74  Flight.prototype.drawSelf = function(){\n   75  \tctx.translate(this.drawX, this.drawY);\n   76: \tctx.rotate((this.getDrawFacing() + (!this.ship*90)) * Math.PI/180);\n   77  \tvar s = this.size;\n   78  \tctx.drawImage(this.img, -s/2, -s/2, s, s)\n   ..\n  154  \tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n  155  \tvar div = document.createElement(\"div\");\n  156: \t\tdiv.className = \"shipDiv \" + owner;\n  157  \t\t$(div).data(\"shipId\", this.id);\n  158  \n  ...\n  170  \t$(table)\n  171  \t\t.append($(\"<tr>\")\n  172: \t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colspan\", 2).addClass(header)))\n  173  \t\t.append($(\"<tr>\")\n  174  \t\t\t.append($(\"<td>\").html(\"Classification\"))\n  ...\n  176  \t\t.append($(\"<tr>\")\n  177  \t\t\t.append($(\"<td>\").html(\"Current Thrust\"))\n  178: \t\t\t.append($(\"<td>\").html((this.getCurrentImpulse() + \" (max: \" + (this.baseImpulse*3) + \")\"))))\n  179  \t\t.append($(\"<tr>\")\n  180  \t\t\t.append($(\"<td>\").html(\"Current Mission\"))\n  ...\n  185  \t\t.append($(\"<tr>\")\n  186  \t\t\t.append($(\"<td>\").html(\"Mission Start\"))\n  187: \t\t\t.append($(\"<td>\").addClass(\"missionTurn\").html(\"Turn \" + this.mission.turn)))\n  188  \n  189  \n  ...\n  260  \t\t\tif (elapsed < need){\n  261  \t\t\t\tif (game.turn != -1){\n  262: \t\t\t\t\t//text = \"New orders possible in</br> \" + (need - elapsed) + \" Turn/s\";\n  263  \t\t\t\t\ttext = \"Orders in: \"+(need-elapsed)+\" turn/s\";\n  264  \t\t\t\t} else text = \"Orders in: \"+(need-elapsed)+\" turn/s\";\n  ...\n  367  \t\tstructContainer.appendChild(fighterDiv);\n  368  \n  369: \t\tif (x + 50 + 5 > maxWidth){\n  370  \t\t\tx = 15;\n  371  \t\t\ty += h*2;\n  ...\n  377  \t\t\t.css(\"top\", y)\n  378  \n  379: \t\tx += 50 + 5;\n  380  \t\tvar wrap = document.createElement(\"div\");\n  381  \t\t\twrap.className = \"iconIntegrity\"; wrap.style.height = 12;\n  ...\n  385  \t\tvar bgDiv = document.createElement(\"div\");\n  386  \t\t\tbgDiv.className = \"integrityAmount\"; bgDiv.style.textAlign = \"center\"; bgDiv.style.fontSize = 12; bgDiv.style.top = 0;\n  387: \t\t\tbgDiv.innerHTML = rem + \" / \" + this.structures[i].integrity;\n  388  \t\t\twrap.appendChild(bgDiv);\n  389  \n  390  \t\tvar lowerDiv = document.createElement(\"div\");\n  391  \t\t\tlowerDiv.className = \"integrityNow\"; lowerDiv.style.top = 0; lowerDiv.style.height = \"100%\";\n  392: \t\t\tlowerDiv.style.width = rem/this.structures[i].integrity * 100 + \"%\";\n  393  \t\t\twrap.appendChild(lowerDiv);\n  394  \t\t\t\n  ...\n  435  \tvar height = 0;\n  436  \t$(structContainer).find(\".fighterDiv\").each(function(){\n  437: \t\tvar y = $(this).position().top + $(this).height();\n  438  \t\tif (y > height){\n  439  \t\t\theight = y;\n  ...\n  441  \t})\n  442  \n  443: \t$(structContainer).css(\"height\", height + 20);\n  444  \n  445  \t/*var w = $(div).width();\n  ...\n  462  \tif (this.friendly){color = \"green\";}\n  463  \tvar attachDiv = $(\"<div>\").addClass(\"attachDiv\")\n  464: \t\t.append($(\"<div>\").css(\"display\", \"block\").addClass(\"center15 \" + color).html(\"Flight #\" + this.id + (\" (click to select)\")))\n  465  \t\t.data(\"id\", this.id)\n  466  \t\t.click(function(){\n  ...\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n  ...\n  566  \t\n  567  \tvar table = document.createElement(\"table\");\n  568: \t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Flight #\" + this.id;\n  569: \t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + this.getCurrentImpulse();\n  570  \t\ttable.insertRow(-1).insertCell(-1).innerHTML =this.getStringHitChance();\n  571  \t\n  ...\n  596  \n  597  Flight.prototype.setPreMoveSize = function(){\n  598: \tthis.size = this.baseSize + this.unitSize * this.getIntactFighters();\n  599  }\n  600  \n  ...\n  606  \t\t}\n  607  \t\telse if (this.mission.type == 1){\n  608: \t\t\tthis.size = 1.5*(this.baseSize + this.unitSize * this.getIntactFighters());\n  609  \t\t}\n  610  \t}\n  611: \telse this.size = this.baseSize + this.unitSize * this.getIntactFighters();\n  612  }\n  613  \n\nC:\\xampp\\htdocs\\fire\\game.js:\n   90  \t\tif (mission.targetid){\n   91  \t\t\tvar t = game.getUnit(mission.targetid);\n   92: \t\t\treturn t.name + \" #\" + t.id;\n   93  \t\t}\n   94  \t\telse return \"\";\n   ..\n  100  \n  101  \t\tinstruct(\"Please select the offensive or defensive target for the flight\");\n  102: \t\t$(\"#game\").find(\"#deployOverlay\").find(\"#deployType\").html(\"Select target for </br>\" + mission + \"</br></span>\");\n  103  \t}\n  104  \n  ...\n  111  \t\t\t\ts += this.flightDeploy.loads[i].launch;\n  112  \t\t\t}\n  113: \t\t\ts = 35 + s*8;\n  114  \t\t\ts = Math.floor(s/2);\n  115  \n  ...\n  137  \t\tvar ele = $(\"#deployOverlay\");\n  138  \t\tvar w = $(ele).width()/2;\n  139: \t\tvar top = (e.clientY) + 50;\n  140  \t\tvar left = (e.clientX) - w;\n  141  \t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n  142  \t\t/*if (valid){\n  143  \t\t\tif (game.flightDeploy.mission > 1){\n  144: \t\t\t\tele.find(\"#deployTarget\").html(unit.name + \" #\" + unit.id);\n  145: \t\t\t} else ele.find(\"#deployTarget\").html(unit.name + \" #\" + unit.id);\n  146  \t\t} else ele.find(\"#deployTarget\").html(\"\");\n  147  \t\t*/return;\n  ...\n  258  \t\t\t.find(\".missionType\").html(game.getMissionTypeString(mission.type)).end()\n  259  \t\t\t.find(\".missionTarget\").html(game.getMissionTargetString(mission)).end()\n  260: \t\t\t.find(\".missionTurn\").html(\"Turn \" + mission.turn).end();\n  261  \n  262  \t\tif (t && o.x == dest.x && o.y == dest.y){\n  ...\n  427  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Reactor\"){\n  428  \t\t\t\t\t\t\tif (this.ships[i].primary.systems[j].getOutput() < 0){\n  429: \t\t\t\t\t\t\t\tpopup(\"You have units with invalid Reactor settings (#\" + this.ships[i].id + \")\"); \n  430  \t\t\t\t\t\t\t\tthis.ships[i].select();\n  431  \t\t\t\t\t\t\t\treturn true;\n  ...\n  470  \t\t\t\t\t\t\tthis.getUnit(aUnit).doUnselect();\n  471  \t\t\t\t\t\t}\n  472: \t\t\t\t\t\tpopup(\"You have units with unused Impulse (#\" + this.ships[i].id + \")\");\n  473  \t\t\t\t\t\tthis.ships[i].doHover();\n  474  \t\t\t\t\t\tthis.ships[i].select();\n  ...\n  535  \tthis.clickablePop = function(data, msg){\n  536  \t\tfor (var i = 0; i < data.length; i++){\n  537: \t\t\tmsg += \"<div class='popupEntry buttonTD' onclick='game.selectFromPopup(\" + data[i].id + \")'>\" + data[i].name + \" #\" + data[i].id + \"</div>\"; \n  538  \t\t}\n  539  \t\tmsg += \"</p><div class='popupEntry buttonTD' style='font-size: 20px; width: 200px' onclick='game.doConfirmOrders()'>Confirm Orders</div>\";\n  ...\n  683  \t\t\t\tthis.deployArea.push({\n  684  \t\t\t\t\tid: id,\n  685: \t\t\t\t\tx: 0 + (x * step),\n  686  \t\t\t\t\ty: y/2*-1,\n  687  \t\t\t\t\tw: w * step,\n  ...\n  914  \t\t}\n  915  \t\tvar x = this.x +cam.o.x - w/2;\n  916: \t\tvar y = this.y +cam.o.y + 150;\n  917  \n  918  \t\t$(div).css(\"left\", x).css(\"top\", y);\n  ...\n 1069  \t\tvar oX = $(ele).width()/2;\n 1070  \t\tvar pos = unit.getBaseOffsetPos();\n 1071: \t\tvar top = (pos.y * cam.z) + cam.o.y + 60;\n 1072: \t\tvar left = (pos.x * cam.z) + cam.o.x - oX;\n 1073  \t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n 1074  \n ....\n 1225  \t\t\t}\n 1226  \t\t\telse {\n 1227: \t\t\t\tvar start = addAngle(0 + w-facing, a);\n 1228  \t\t\t\tvar end = addAngle(360 - w-facing, a);\n 1229  \t\t\t\tvar p1 = getPointInDirection(str, start, loc.x, loc.y);\n ....\n 1528  \t\t}\n 1529  \n 1530: \t\tendX = (minX + maxX) / 2;\n 1531: \t\tendY = (minY + maxY) / 2;\n 1532  \n 1533  \t\tcam.setFocusToPos({x: endX, y: endY});\n ....\n 1834  \t\t\t\t\t}\n 1835  \t\t\t\t);\n 1836: \t\t\t\t//this.fireOrders[i].focus = {x: (a.x + b.x) / 2, y: (a.y + b.y) / 2}\n 1837  \t\t\t\t//this.fireOrders[i].focus = {x: b.x, y: b.y}\n 1838  \t\t\t}\n ....\n 1920  \t\t\t\t\t\t\tt: [0-30*anim.anims.length, 70],\n 1921  \t\t\t\t\t\t\ts: game.ships[i].getExplosionSize(j),\n 1922: \t\t\t\t\t\t\tx: base.x + game.ships[i].structures[j].layout.x,\n 1923: \t\t\t\t\t\t\ty: base.y + game.ships[i].structures[j].layout.y\n 1924  \t\t\t\t\t\t})\n 1925  \t\t\t\t\t}\n 1926  \t\t\t\t}\n 1927: \t\t\t\tanim.html += \"A total of <font color='\" + color + \"'>\" + counter + \"</font> elements from <font color='\" + color + \"'>Unit #\" + anim.id + \"</font> were destroyed or disengaged\";\n 1928  \t\t\t}\n 1929  \t\t\telse if (game.ships[i].ship && game.ships[i].isDestroyedThisTurn()){\n 1930: \t\t\t\tanim.html += \"<font color='\" + type + \"'>Unit #\" + anim.id + \"</font> \";\n 1931  \t\t\t\tif (game.ships[i].getSystemByName(\"Reactor\").destroyed){\n 1932  \t\t\t\t\tanim.html +=  \" suffered critical reactor damage and was destroyed.\";\n ....\n 2133  \t\t\t\t\t}\n 2134  \t\t\t\t\tif (this.ships[i].flight){\n 2135: \t\t\t\t\t\thtml = \"<span><font color='\" + color + \"'>Flight #\" + this.ships[i].id + \"</font> was deployed (\" + this.ships[i].structures.length + \" units).</span>\";\n 2136  \t\t\t\t\t}\n 2137  \t\t\t\t\telse if (this.ships[i].salvo){\n 2138: \t\t\t\t\t\thtml = \"<span><font color='\" + color + \"'>Salvo #\" + this.ships[i].id + \"</font> was launched (\" + this.ships[i].structures.length +\" units).</span>\";\n 2139  \t\t\t\t\t}\n 2140  \n ....\n 2194  \t\tvar chance = req[0];\n 2195  \t\tif (req.length > 1 && req[0] != req[req.length-1]){\n 2196: \t\t\tchance = req[0] + \" - \" + req[req.length-1] + \" %\";\n 2197: \t\t} else chance + \" %\";\n 2198  \n 2199  \n ....\n 2217  \t\t}\n 2218  \n 2219: \t\ttr.insertCell(-1).innerHTML = fire.type //+ \":\" + fire.id;\n 2220: \t\ttr.insertCell(-1).innerHTML = \"<span class='bold \" + shooterClass + \"'>\" + fire.shooter.name + \" #\" + fire.shooter.id + \"</span>\";\n 2221: \t\ttr.insertCell(-1).innerHTML = \"<span class='bold \" + targetClass + \"'>\" + fire.target.name + \" #\" + fire.target.id + \"</span>\";\n 2222  \t\ttr.insertCell(-1).innerHTML = fire.weapon.getDisplay();\n 2223: \t\ttr.insertCell(-1).innerHTML = chance + \"%\";\n 2224: \t\ttr.insertCell(-1).innerHTML = hits + \" / \" + shots;\n 2225  \n 2226  \t\tif (!hits){\n ....\n 2274  \n 2275  \t\tfor (var i in dmgs){\n 2276: \t\t\ttd.innerHTML += dmgs[i][0] + \"x \" + i;\n 2277  \t\t\tif (dmgs[i][1]){\n 2278: \t\t\t\ttd.innerHTML += \" (\" + dmgs[i][1] + \")\"\n 2279  \t\t\t}\n 2280  \t\t\ttd.innerHTML += \"; \"\n ....\n 2284  \n 2285  \t\tif (fire.target.flight || fire.target.salvo){\n 2286: \t\t\ttd.innerHTML += \" (Kills: \" + destroyed + \")\";\n 2287  \t\t} else {\n 2288: \t\t\ttd.innerHTML += \" (Kills: \" + destroyed + \")\";\n 2289  \t\t}\n 2290  \t}\n ....\n 2383  \t\t\t\t\t\t}\n 2384  \t\t\t\t\t\telse if (!game.deploying){\n 2385: \t\t\t\t\t\t\tif (!$(this).hasClass(\"green\") && Math.floor(game.reinforcePoints) >= $(this).data(\"cost\") + game.getCurrentReinforceCost()){\n 2386  \t\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n 2387  \t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"id\"));\n ....\n 2421  \n 2422  \t\t\t\tif (this.ships[i].ship){\n 2423: \t\t\t\t\tclassName = \"rotate270 size\" + s;\n 2424: \t\t\t\t} else className = \"size\" + s;\n 2425  \n 2426  \t\t\t\tele.append(\n ....\n 2499  \t\t\t\tvar step = this.ships[i].getPlannedPos();\n 2500  \n 2501: \t\t\t\tif (!this.ships[i].getRemainingImpulse() && getDistance(pos, step) <= 0.66*(this.ships[i].size/2 + ship.size/2)){\n 2502  \t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+this.ships[i].id+\")\");\n 2503  \t\t\t\t\treturn true;\n ....\n 2511  \t\t\t\tvar step = this.ships[i].getPlannedPos();\n 2512  \n 2513: \t\t\t\tif ((this.ships[i].ship || !step.resolved) && getDistance(pos, step) <= 0.66*(this.ships[i].size/2 + ship.size/2)){\n 2514: \t\t\t\tpopup(\"The selected position is too close to the position or planned position of a vessel (#\"+this.ships[i].id+\" - \" + this.ships[i].name +\")\");\n 2515  \t\t\t\t\treturn true;\n 2516  \t\t\t\t}\n ....\n 2530  \t\t\tif (this.ships[i].isReady()){\n 2531  \t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n 2532: \t\t\t\tif (pos.x < shipPos.x + r && pos.x > shipPos.x - r){\n 2533: \t\t\t\t\tif (pos.y > shipPos.y - r && pos.y < shipPos.y + r){\n 2534  \t\t\t\t\t\tvar dist = getDistance(shipPos, pos);\n 2535  \t\t\t\t\t\tif (dist < max){\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  315  \t\t\tvar td = document.createElement(\"td\");\n  316  \t\t\t\ttd.style.textAlign = \"center\";\n  317: \t\t\t\ttd.innerHTML = '<img src=\"' + icons[i].src + '\"></img>' ; tr.appendChild(td);\n  318  \n  319  \t\t\t\ttable.appendChild(tr);\n  ...\n  455  \t\tvar max = window.maxPoints;\n  456  \n  457: \t\tif (cur + add <= max){\n  458  \n  459  \t\t\tvar ship = {\n\nC:\\xampp\\htdocs\\fire\\graphics.js:\n    2  \tmouseCtx.clearRect(0, 0, res.x, res.y);\n    3  \tmouseCtx.beginPath();\n    4: \tmouseCtx.moveTo(origin.x * cam.z + cam.o.x, origin.y * cam.z + cam.o.y);\n    5  \tmouseCtx.lineTo(target.x, target.y);\n    6  \tmouseCtx.closePath();\n    .\n   13  \t}\n   14  \n   15: \t$(\"#vectorDiv\").html(\"Distance: \" + dist + \" </br>Angle: \" + Math.round(angle))\n   16: \t.css(\"left\", target.x- 45 + \"px\")\n   17: \t.css(\"top\", target.y + 40 + \"px\")\n   18  \t.removeClass(\"disabled\");\n   19  }\n   ..\n   23  \t//getPointInDirection(dis, angle, oX, oY){\n   24  \n   25: \tvar x = fire.ox + fire.nx * fire.n;\n   26: \tvar y = fire.oy + fire.ny * fire.n;\n   27  \tvar trailEnd = getPointInDirection(weapon.projSize*2.5, fire.f, x, y);\n   28  \tvar w = 1;\n   ..\n   55  \t\t//var end = getPointInDirection(13, fire.f-180, trailEnd.x, trailEnd.y);\n   56  \t\tfor (i = 0; i < 3; i++){\n   57: \t\t\tx = x + range(-2, 2)\n   58: \t\t\ty = y + range(-2, 2)\n   59  \n   60  \t\t\tfxCtx.globalAlpha = 1-w\n   ..\n  114  \t/*if (weapon instanceof Plasma){\n  115  \t\tfor (i = 0; i < 6; i++){\n  116: \t\t\tvar d = getPointInDirection(2*sin, 360/6*i + range(-15, 15), x, y)\n  117  \n  118  \t\t\tfxCtx.beginPath();\n  ...\n  127  \tif (weapon instanceof Plasma){\n  128  \t\tfor (i = 0; i < 4; i++){\n  129: \t\t\tvar d = getPointInDirection((3 + range(-1, 1))*sin, (getAngle(anim.ox, anim.oy, anim.tx, anim.ty)+(180-(4/2*10) + i*10)), anim.tx, anim.ty)\n  130  \n  131  \t\t\tfxCtx.beginPath();\n  ...\n  183  \tfxCtx.fill();\t\n  184  \n  185: \tvar x = fire.tax + fire.nx * fire.n;\n  186: \tvar y = fire.tay + fire.ny * fire.n;\n  187  \n  188  \tif (fraction > 0.3){\n  189: \t\tvar beamW = 0.5 + 0.5 * Math.cos(2*Math.PI*fraction);\n  190  \t\tfxCtx.lineCap = \"round\";\t\n  191  \t\tfxCtx.beginPath();\n  ...\n  196  \t\tfxCtx.globalAlpha = 1 - beamW;\n  197  \t\tfxCtx.globalCompositeOperation = \"source-over\";\n  198: \t\tfxCtx.lineWidth = weapon.beamWidth * 0.5 + weapon.beamWidth * beamW;\n  199  \t\tfxCtx.strokeStyle = weapon.animColor;\n  200  \t\tfxCtx.stroke();\n  201  \n  202  \t\tfxCtx.globalCompositeOperation = \"lighter\";\n  203: \t\tfxCtx.lineWidth = 1 + 1* beamW;\n  204  \t\tfxCtx.strokeStyle = \"white\";\n  205  \t\tfxCtx.stroke();\n  ...\n  219  \n  220  \tfor (var i = 0; i < 1; i++){\n  221: \t\tvar subX = x + range(-2, 3);\n  222: \t\tvar subY = y + range(-2, 3);\n  223: \t\tvar subS = weapon.exploSize + (range(-weapon.exploSize*.15, weapon.exploSize*.15));\n  224  \n  225  \t\tfxCtx.beginPath(); fxCtx.arc(x, y, subS, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"rgb(255,255,155)\"; fxCtx.fill();\n  ...\n  281  \t}\n  282  \telse {\n  283: \t\tvar start = addAngle(0 + w-facing, a);\n  284  \t\tvar end = addAngle(360 - w-facing, a);\n  285  \t\tvar p1 = getPointInDirection(str, start, loc.x, loc.y);\n\nC:\\xampp\\htdocs\\fire\\mathLib.js:\n    1  \n    2  function getPointInDirection(dis, angle, oX, oY){\n    3: \tvar x = Math.round(oX + dis * Math.cos(angle* Math.PI / 180));\n    4: \tvar y = Math.round(oY + dis * Math.sin(angle* Math.PI / 180));\n    5  \treturn {x:Math.round(x), y:Math.round(y)}; \n    6  } \n    7   \n    8  function getDistance(start, end){\n    9: \treturn Math.sqrt((end.x-start.x)*(end.x-start.x) + (end.y-start.y)*(end.y-start.y)); \n   10  }\n   11  \n   ..\n   28  \n   29  function addAngle(f, a){\n   30: \tret = 360 - f + a;\n   31  \twhile (ret > 360){\n   32  \t\tret -= 360;\n   ..\n   43  \n   44  \tvar ret = 0;\n   45: \tif (current + add > 360){\n   46  \t\tret =  0+(add-(360-current));\n   47  \t\t\t\n   48: \t}else if (current + add < 0){\n   49: \t\tret = 360 + (current + add);\n   50  \t}else{\t\n   51: \t\tret = current + add;\n   52  \t}\n   53  \n   ..\n   59  \t\tcos = Math.cos(radians);\n   60  \t\tsin = Math.sin(radians);\n   61: \t\tnx = (cos * (v.x - cx)) - (sin * (v.y - cy)) + cx;\n   62: \t\tny = (cos * (v.y - cy)) + (sin * (v.x - cx)) + cy;\n   63  \treturn {x: nx, y: ny};\n   64  }\n   ..\n   73  \t\n   74  function isInArc(direction, start, end){\n   75: \t//console.log(\"direction: \"+direction + \" start: \" + start + \" end: \" + end);\t\n   76  \t//direction: 300 start: 360 end: 240\n   77  \t\n   78: \t//$(\"#curArc\").html(\"vector angle, start, end: \" + direction + \" - \" + start + \" - \" + end);\n   79  \t\n   80  \tif (start == end)\n   ..\n  117  \t\theading = radianToDegree(Math.atan(dX/Math.abs(dY)));\n  118  \t}else if (dX>0 && dY>0 ){\n  119: \t\theading = radianToDegree(Math.atan(dY/dX)) + 90;\n  120  \t}else if (dX<0 && dY>0){\n  121: \t\theading = radianToDegree(Math.atan(Math.abs(dX)/dY)) + 180;\n  122  \t}else if (dX<0 && dY<0){\n  123: \t\theading = radianToDegree(Math.atan(dY/dX)) + 270;\n  124  \t}\n  125  \theading = addToDirection(Math.round(heading), -90);\n  ...\n  136  \n  137  \t// Get quadratic equation components\n  138: \tvar a = tvx*tvx + tvy*tvy - mod*mod;\n  139: \tvar b = 2 * (tvx * tx + tvy * ty);\n  140: \tvar c = tx*tx + ty*ty;\n  141  \n  142  \t// Solve quadratic\n  ...\n  153  \t\tif (t > 0) {\n  154  \t\t\tsol = {\n  155: \t\t\t\tx: dst.x + vector.nx * t,\n  156: \t\t\t\ty: dst.y + vector.ny * t\n  157  \t\t\t};\n  158  \t\t}\n  ...\n  178  \n  179  \t// Get quadratic equation components\n  180: \tvar a = tvx*tvx + tvy*tvy - mod*mod;\n  181: \tvar b = 2 * (tvx * tx + tvy * ty);\n  182: \tvar c = tx*tx + ty*ty;\n  183  \n  184  \t// Solve quadratic\n  ...\n  198  \t\tif (t > 0) {\n  199  \t\t\tsol = {\n  200: \t\t\t\tx: dst.x + vector.nx * t,\n  201: \t\t\t\ty: dst.y + vector.ny * t\n  202  \t\t\t};\n  203  \t\t}\n  ...\n  215  \n  216  \t// Get quadratic equation components\n  217: \tvar a = tvx*tvx + tvy*tvy - 25;\n  218: \tvar b = 2 * (tvx * tx + tvy * ty);\n  219: \tvar c = tx*tx + ty*ty;\n  220  \n  221  \t// Solve quadratic\n  ...\n  234  \t\tif (t > 0) {\n  235  \t\t\tsol = {\n  236: \t\t\t\tx: dst.x + vector.nx * t,\n  237: \t\t\t\ty: dst.y + vector.ny * t\n  238  \t\t\t};\n  239  \t\t}\n  ...\n  272          var height = ih/2;\n  273  \t\t\n  274: \t\tangle = angle + Math.PI / 180; \n  275  \t\t\n  276  \t\tfxCtx.save();\n  ...\n  285  \n  286  function range(min, max){\n  287: \treturn Math.floor(Math.random() * (max - min + 1)) + min;\n  288  }\n  289  \n  290  function drawText(ctx, color, text, size, p){\n  291  \tctx.beginPath();\n  292: \tctx.font = \"bolder \" + size + \"pt Trebuchet MS,Tahoma,Verdana,Arial,sans-serif\";\n  293  \tctx.textAlign = \"center\";\n  294  \tctx.textBaseline = 'middle';\n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  185  \t}\n  186  \tif (min == max){\n  187: \t\treturn (\"Base Hit: \" + min + \"%\");\n  188: \t} else return (\"Base Hit: \" + min + \" - \" + max + \"%\");\n  189  }\n  190  \n\nC:\\xampp\\htdocs\\fire\\salvo.js:\n   15  \t\t}\n   16  \t\telse {\n   17: \t\t\treturn min + \" - \" + max;\n   18  \t\t}\n   19  \t}\n   ..\n   31  \t\tvar html = \"\";\n   32  \t\tvar d = Math.max(0, (this.structures[0].traverse - t));\n   33: \t\thtml += game.getUnitType(this.structures[0].traverse) + \"<span class=\";\n   34  \n   35  \t\tif (d > 0){\n   ..\n   37  \t\t} else html += \"'green'>\";\n   38  \t\t\n   39: \t\treturn html + \" (\" + Math.floor(100-d*20) + \"%)</span>\";\n   40  \t}\n   41  \t\n   ..\n   61  \t\t\t\t\t\t\t\t{\n   62  \t\t\t\t\t\t\t\t\tx: -size/3 - size*c/2,\n   63: \t\t\t\t \t\t\t\t\ty:  (d-1)*size/2 -r*size + range(-4, 4)\n   64  \t\t\t\t \t\t\t\t}\n   65  \t\t\t \t\t\t\t);\n   66  \t\t\tthis.layout.push(\n   67  \t\t\t\t\t\t\t\t{\n   68: \t\t\t\t\t\t\t\t\tx: size/3 + size*c/2,\n   69: \t\t\t\t \t\t\t\t\ty: (d-1)*size/2 -r*size + range(-4, 4)\n   70  \t\t\t\t \t\t\t\t}\n   71  \t\t\t \t\t\t\t);\n   ..\n   80  \tthis.getFiringPosition = function(){\n   81  \t\treturn new Point(\n   82: \t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n   83: \t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n   84  \t\t)\n   85  \t}\n   ..\n   92  \tif (this.userid != game.userid){owner = \"hostile\";}\n   93  \tvar div = document.createElement(\"div\");\n   94: \t\tdiv.className = \"ammoDiv \" + owner + \" disabled\";\n   95  \t\t$(div).data(\"ammoId\", this.id);\n   96  \t\n   ..\n  102  \tvar tr = table.insertRow(-1);\n  103  \tvar td = tr.insertCell(-1); td.className = \"header\";\t\n  104: \t\ttd.innerHTML = this.structures.length + \"x '\" + this.structures[0].name + \"' #\" + this.id; td.colSpan = 4;\n  105  \n  106  \tvar tr = table.insertRow(-1);\n  ...\n  113  \tvar td = tr.insertCell(-1);\n  114  \t\ttd.className = \"subHeader\"; td.colSpan = 4;\n  115: \t\ttd.innerHTML = \"Target: <span class='red font15'>\" + target.name + \" #\" + target.id + \"</span>,  distance: \" + dist + \"px\";\n  116  \tdiv.appendChild(table);\n  117  \n  ...\n  126  \t\t)\n  127  \t\t.append($(\"<tr>\")\n  128:     \t\t.append($(\"<td>\").html(this.getCurrentImpulse() + \" (+\" + Math.floor(this.getBaseImpulse()) + \" per Turn)\"))\n  129      \t\t.append($(\"<td>\").html(this.structures[0].negation))\n  130      \t\t.append($(\"<td>\").html(this.getDamage()))\n  ...\n  183  \t\t\tbgDiv.className = \"integrityAmount\"; bgDiv.style.top = 2;\n  184  \t\t\tbgDiv.style.fontSize = \"12px\";\n  185: \t\t\tbgDiv.innerHTML = rem + \" / \" + this.structures[i].integrity;\n  186  \t\t\ttd.appendChild(bgDiv);\n  187  \n  188  \t\tvar lowerDiv = document.createElement(\"div\");\n  189  \t\t\tlowerDiv.className = \"integrityNow\"; lowerDiv.style.top = 0; lowerDiv.style.height = \"100%\";\n  190: \t\t\tlowerDiv.style.width = rem/this.structures[i].integrity * 100 + \"%\";\n  191  \t\t\ttd.appendChild(lowerDiv);\n  192  \t\t\t\n  ...\n  213  \tif (this.friendly){color = \"green\";}\n  214  \tvar attachDiv = $(\"<div>\").addClass(\"attachDiv\")\n  215: \t\t.append($(\"<div>\").css(\"display\", \"block\").addClass(\"center15 \" + color)\n  216: \t\t\t.html(\"Salvo #\" + this.id + (\" (click to select)\"))\n  217: \t\t.append($(\"<div>\").css(\"display\", \"block\").addClass(\"center15 \" + color)\n  218: \t\t\t.html(\"Auto-Targetting: \" + this.getTarget().name + \" #\" + this.mission.targetid)))\n  219  \t\t.data(\"id\", this.id)\n  220  \t\t.click(function(){\n  ...\n  280  \n  281  \tvar table = document.createElement(\"table\");\n  282: \t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Salvo #\" + this.id + \" (\" + this.structures.length + \"x \" + this.structures[0].name + \")\";\n  283: \t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + this.getCurrentImpulse();\n  284  \t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.getStringHitChance();\n  285  \n  ...\n  327  \t//return this.currentImpulse;\n  328  \tif (game.phase >= 2){\n  329: \t\treturn this.currentImpulse + this.baseImpulse*(1-this.destroyed);\n  330  \t} else return this.currentImpulse;\n  331  }\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  182  \t\t\t//section = target.getAngledHitSection(angle);\n  183  \n  184: \t\t\t//console.log(\"armour: \"+section.remainingNegation + \" / \" + section.negation);\n  185  \n  186  \t\t\tif (lock){\n  187  \t\t\t\tmulti += lock;\n  188: \t\t\t\tlockString = \"<span class ='green'>+\" + lock + \"</span>\";\n  189  \t\t\t}\n  190  \t\t\tif (mask){\n  191  \t\t\t\tmulti -= mask;\n  192: \t\t\t\tmaskString = \"<span class ='red'>-\" + mask + \"</span>\";\n  193  \t\t\t}\n  194  \t\t\tif (impulse){\n  ...\n  201  \t\t\t\t\t\timpulseString = \"<span class ='red'>\";\n  202  \t\t\t\t\t} else impulseString = \"<span class ='green'>\";\n  203: \t\t\t\t\timpulseString += round(impulse/2) + \"</span>\";\n  204  \t\t\t\t}\n  205  \t\t\t}\n  ...\n  208  \t\t\ttargetData1\n  209  \t\t\t\t.empty()\n  210: \t\t\t\t.append($(\"<td>\").html(target.name + \" #\" + target.id))\n  211: \t\t\t\t.append($(\"<td>\").html(game.getUnitType(target.traverse) + \" (\" + target.traverse + \")\"))\n  212  \t\t\t\t.append($(\"<td>\").html(target.getArmourString(angle)))\n  213  \t\t\t\t.append($(\"<td>\").html(\"\"))\n  ...\n  216  \t\t\ttargetData2\n  217  \t\t\t\t.empty()\n  218: \t\t\t\t.append($(\"<td>\").html(baseHit + \"%\"))\n  219  \t\t\t\t.append($(\"<td>\").html(impulseString))\n  220  \t\t\t\t.append($(\"<td>\").html(lockString))\n  221  \t\t\t\t.append($(\"<td>\").html(maskString))\n  222: \t\t\t\t.append($(\"<td>\").addClass(\"final\").html(final + \"%\"));\n  223  \t\t}\n  224  \t}\n  ...\n  270  \n  271  \t\t\t\t\tvar row = $(\"<tr>\");\n  272: \t\t\t\t\t\trow.append($(\"<td>\").html(system.display + \" #\" + shooter.structures[i].systems[j].id))\n  273  \n  274  \t\t\t\t\tif (shooter.ship){\n  ...\n  310  \tvar ele = $(\"#weaponAimTableWrapper\");\n  311  \tvar w = $(ele).width()/2;\n  312: \tvar top = (e.clientY) + 100;\n  313  \tvar left = (e.clientX) - w;\n  314  \t$(ele).css(\"top\", top).css(\"left\", left).show();\n  ...\n  348  \n  349  \tvar pos = new Point(e.clientX - offset.x, e.clientY - offset.y).getOffset();\n  350: \t//$(\"#currentPos\").html(pos.x + \" / \" + pos.y + \"____\" + cam.o.x + \" / \" + cam.o.y+ \"___\" + (pos.x-cam.o.x) + \" / \" + (pos.y-cam.o.y));\n  351  \tvar unit = game.getUnitByClick(pos);\n  352  \tif (unit){\n  ...\n  397  \t\tvar ele = $(\"#deployOverlay\");\n  398  \t\tvar w = $(ele).width()/2;\n  399: \t\tvar top = (e.clientY)  + 40;\n  400  \t\tvar left = (e.clientX) - w;\n  401  \t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n\nC:\\xampp\\htdocs\\fire\\server\\classes.php:\n   28  \t\t$y = pow($this->y, 2);\n   29  \n   30: \t\t$this->m = sqrt($x + $y);\n   31  \t\t$this->vx = $this->x / $this->m;\n   32  \t\t$this->vy = $this->y / $this->m;\n   ..\n  245  \t\t\treturn true;\n  246  \t\t}\n  247: \t\telse if ($turn <= $this->turn + $this->duration){\n  248  \t\t\treturn true;\n  249  \t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\dbManager.php:\n  342  \t\t\t\t$stmt->bindParam(\":name\", $units[$i][\"name\"]);\n  343  \t\t\t\t$stmt->bindParam(\":status\", $status);\n  344: \t\t\t\t$stmt->bindValue(\":available\", (floor($units[$i][\"turn\"]) + floor($units[$i][\"eta\"])));\n  345  \t\t\t\t$stmt->bindParam(\":destroyed\", $destroyed);\n  346  \t\t\t\t$stmt->execute();\n  ...\n  569  \t\t\t\t\t\tfor ($k = 0; $k < sizeof($deploys); $k++){\n  570  \t\t\t\t\t\t\t$d = Math::getDist($deploys[$k][\"x\"], $deploys[$k][\"y\"], $x, $y);\n  571: \t\t\t\t\t\t\t$min = $deploys[$k][\"s\"] + $s;\n  572  \t\t\t\t\t\t\tDebug::log(\"d is\".$d.\" min is \".$min);\n  573  \t\t\t\t\t\t\tif ($d < $min){\n  ...\n 1556  \t\t\t$stmt = $this->connection->prepare(\"\n 1557  \t\t\t\tUPDATE playerstatus \n 1558: \t\t\t\tSET\tvalue = value + :add\n 1559  \t\t\t\tWHERE\n 1560  \t\t\t\t\tgameid = :gameid\n\nC:\\xampp\\htdocs\\fire\\server\\flight.php:\n   32  \t\t$elapsed = 0;\n   33  \t\tif ($this->mission->type > 1 || !$this->mission->arrived){\n   34: \t\t\t$elapsed = $turn - $this->mission->turn + ($phase > 1);\n   35  \t\t}\n   36  \n   ..\n   46  \t\t\t}\n   47  \t\t}\n   48: \t\t$this->size = $this->baseSize + $alive*$this->unitSize;\n   49  \t}\n   50  \n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  215  \n  216  \t\tfor ($i = 0; $i < sizeof($ships); $i++){\n  217: \t\t\t$used = $used + $ships[$i][\"value\"];\n  218  \t\t}\n  219  \n  ...\n  258  \n  259  \tpublic function getBaseFacing(){\n  260: \t\treturn 0 + (180 * ($this->userindex % 2));\n  261  \t}\n  262  \n  ...\n  323  \t\tfor ($i = 0; $i < sizeof($this->reinforcements); $i++){\n  324  \t\t\tif ($this->reinforcements[$i][\"userid\"] == $this->userid){\n  325: \t\t\t\t$s = new $this->reinforcements[$i][\"name\"](-$this->reinforcements[$i][\"id\"], $this->userid, $this->turn + $this->reinforcements[$i][\"eta\"], \"available\", 0);\n  326  \t\t\t\t$s->cost = $this->reinforcements[$i][\"cost\"];\n  327  \t\t\t\t$s->currentImpulse = $s->baseImpulse;\n  ...\n  427  \n  428  \tpublic function prepareAdvance($gameid){\n  429: \t\t//Debug::log(\"prepareAdvance + get data\");\n  430  \t\t$this->gameid = $gameid;\n  431  \t\t$this->getGeneralData();\n  ...\n  587  \t\t\t$a = Math::getAngle($sPos->x, $sPos->y, $tPos->x, $tPos->y);\n  588  \t\t\t//Debug::log(\"i = \".$i.\", shooterid: \".$shooter->id);\n  589: \t\t\t$devi = Math::getPointInDirection($shooter->size/3, $a, $sPos->x + mt_rand(-10, 10), $sPos->y + mt_rand(-10, 10));\n  590  \t\t\t$mission = array(\"type\" => 2, \"turn\" => $this->turn, \"targetid\" => $fires[$i]->targetid, \"x\" => $tPos->x, \"y\" => $tPos->y, \"arrived\" => 0, \"new\" => 1);\n  591  \t\t\t$move = array(\"turn\" => $this->turn, \"type\" => \"deploy\", \"dist\" => 0, \"x\" => $devi->x, \"y\" => $devi->y, \"a\" => $a, \"cost\" => 0, \"delay\" => 0, \"costmod\" => 0, \"resolved\" => 0);\n  ...\n  650  \t\t\t\t$xShift = mt_rand(-$pShift, $pShift);\n  651  \t\t\t\t$yShift = mt_rand(-$pShift, $pShift);\n  652: \t\t\t\t$dist = Math::getDist($order->x, $order->y, $order->x + $xShift, $order->y + $yShift);\n  653  \n  654  \t\t\t\tDebug::log(\"--> aShift: \".$aShift.\"°, psShift: \".$xShift.\"/\".$yShift.\" (\".$dist.\"px)\");\n  655  \n  656  \t\t\t\t$this->ships[$i]->actions[0]->resolved = 1;\n  657: \t\t\t\t$this->ships[$i]->actions[] = new Action(-1, $this->turn, \"jump\", $dist, $order->x + $xShift, $order->y + $yShift, $aShift, 0, 0, 0, 0);\n  658  \t\t\t\t$updated[] = $this->ships[$i];\n  659  \t\t\t}\n  ...\n 1070  \t\t\t\t\t$str = $sensor->getOutput($this->turn);\n 1071  \t\t\t\t\t$w = min(180, $this->const[\"ew\"][\"len\"] * pow($str/$ew->dist, $this->const[\"ew\"][\"p\"]));\n 1072: \t\t\t\t\t$start = Math::addAngle(0 + $w-$ship->getFacing(), $ew->angle);\n 1073  \t\t\t\t\t$end = Math::addAngle(360 - $w-$ship->getFacing(), $ew->angle);\n 1074  \t\t\t\t}\n ....\n 1347  \n 1348  \tpublic function getId(){\n 1349: \t\treturn 1 + sizeof($this->ships);\n 1350  \t}\n 1351  \n\nC:\\xampp\\htdocs\\fire\\server\\math.php:\n    7  \n    8  \tstatic function getPointInDirection($dist, $a, $oX, $oY){\n    9: \t\t$x = round($oX + $dist * cos($a * M_PI / 180));\n   10: \t\t$y = round($oY + $dist * sin($a * M_PI / 180));\n   11  \t\treturn new Point($x, $y);\n   12  \t} \n   13  \n   14  \tstatic function getDist($ax, $ay, $bx, $by){\n   15: \t\treturn ceil(sqrt ( pow($bx - $ax, 2) + pow($by - $ay, 2) ) );\n   16  \t}\n   17  \n   18  \tstatic function getDist2($a, $b){\n   19: \t\treturn ceil(sqrt ( pow($b->x - $a->x, 2) + pow($b->y - $a->y, 2) ) );\n   20  \t}\n   21  \n   ..\n   33  \n   34  \tstatic function addAngle($f, $a){\n   35: \t\t$ret = 360 - $f + $a;\n   36  \t\twhile ($ret > 360){$ret -= 360;}\n   37  \t\twhile ($ret < 0){$ret += 360;}\n   ..\n   63  \t\t$tvy = $targetVector->vy;\n   64  \n   65: \t\t$a = $tvx*$tvx + $tvy*$tvy - $v*$v;\n   66: \t\t$b = 2 * ($tvx * $tx + $tvy * $ty);\n   67: \t\t$c = $tx*$tx + $ty*$ty;\n   68  \n   69  \t\t$ts = Math::solve($a, $b, $c);\n   ..\n   77  \t\t\tif ($t0 > 0){\n   78  \t\t\t\t$sol = new Point(\n   79: \t\t\t\t\t$target->x + $tvx * $t,\n   80: \t\t\t\t\t$target->y + $tvy * $t\n   81  \t\t\t\t);\n   82  \t\t\t}\n   ..\n  115  \n  116  \t\t// Get quadratic equation components\n  117: \t\tvar a = tvx*tvx + tvy*tvy - v*v;\n  118: \t\tvar b = 2 * (tvx * tx + tvy * ty);\n  119: \t\tvar c = tx*tx + ty*ty;\n  120  \n  121  \t\t// Solve quadratic\n  ...\n  130  \t\t\tif (t > 0) {\n  131  \t\t\t\tsol = {\n  132: \t\t\t\t\tx: dst.x + dst.move.vx * t,\n  133: \t\t\t\t\ty: dst.y + dst.move.vy * t\n  134  \t\t\t\t};\n  135  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  698  \t\t$a = $base * $this->profile[0];\n  699  \t\t$b = $base * $this->profile[1];\n  700: \t\t$sub = ((90 - $angle) * $a) + (($angle - 0) * $b);\n  701  \t\t$sub /= (90 - 0);\n  702  \n\nC:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php:\n   50  \t\t$mod = $this->getCritModMax($dmg);\n   51  \t\tif ($mod < 0.05){return;}\n   52: \t\tif (mt_rand(0, 100) > ($new + $old/2)*3){return;}\n   53  \n   54  \t\t//$id, $shipid, $systemid, $turn, $type, $duration, $value, $new){\n   ..\n   87  \n   88      public function setOutput($add){\n   89:     \t$this->output = $this->output + $add;\n   90      }\n   91  \n\nC:\\xampp\\htdocs\\fire\\server\\systems\\structure.php:\n  217  \n  218  \tpublic function determineCrit($old, $new, $turn){\n  219: \t\t$dmg = ($old + $new) / $this->integrity * 100;\n  220  \t\t//Debug::log(\"checking crit for \".get_class($this));\n  221  \t\t$crits = $this->getValidEffects();\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  108  \t\t}\n  109  \t\telse if ($this->crits[sizeof($this->crits)-1]->type == \"disabled\"){\n  110: \t\t\tif ($turn <= $this->crits[sizeof($this->crits)-1]->turn + $this->crits[sizeof($this->crits)-1]->duration){\n  111  \t\t\t\t$this->disabled = true;\n  112  \t\t\t\treturn true;\n  ...\n  205  \n  206  \tpublic function determineCrit($old, $new, $turn){\n  207: \t\t$dmg = round(($new + ($old/2)) / $this->integrity * 100);\n  208  \t\t$possible = $this->getValidEffects();\n  209  \n  ...\n  216  \t\tfor ($i = 0; $i < sizeof($possible); $i++){\n  217  \t\t\tif (mt_rand(0, 1)){continue;}\n  218: \t\t\tif ($dmg + mt_rand(-10, 10) < $possible[$i][1]){continue;}\n  219  \t\t\t$duration = $possible[$i][2];\n  220  \t\t\tif ($duration && $dmg > 90 && mt_rand(0, 1)){$duration += 1;}\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php:\n  132  \t\t$boost = $this->getBoostEffect(\"Damage\") * $this->getBoostLevel($fire->turn);\n  133  \n  134: \t\t$mod = $mod + $crit + $boost;\n  135: \t\tif ($mod != 1){Debug::log(get_class($this).\", weapon id: \".$this->id.\", DAMAGE mod: \".($crit + $boost ).\" (crits: \".$crit.\", boost: \".$boost.\")\");\n  136  \t\t}\n  137  \t\treturn $mod;\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php:\n   23  \t\t$negation = $fire->target->getArmourValue($fire, $system);\n   24  \n   25: \t\t$hits = $this->basePulses + min($this->extraPulses, floor(($fire->req - $fire->rolls[sizeof($fire->rolls)-1]) / $this->grouping));\n   26  \n   27  \t\t$fire->hits++;\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  118  \t\t\tif (ele.fireOrder != undefined && ele.fireOrder.damages.length && ele.anim[k].n >= ele.anim[k].m){\n  119  \t\t\t\tfor (var i = 0; i < ele.fireOrder.hits[0]; i++){\n  120: \t\t\t\t\tdrawExplosion(ele.structures[i], {n: ele.anim[k].n, m: ele.anim[k].m, tx: ele.actions[0].x + ele.layout[i].x, ty: ele.actions[0].y + ele.layout[i].y}, 30);\n  121  \t\t\t\t}\n  122  \t\t\t}\n  ...\n  311  \telse if (echo == \"gameStart\"){\n  312  \t\tsetTimeout(function(){\n  313: \t\t\twindow.location = \"game.php?gameid=\" + gameid\n  314  \t\t}, 300);\n  315  \t}\n  ...\n  368      y_pos = document.all ? window.event.clientY : e.pageY;\n  369      if (selected !== null) {\n  370:         selected.style.left = (x_pos - x_elem) + 'px';\n  371:         selected.style.top = (y_pos - y_elem) + 'px';\n  372      }\n  373  }\n  ...\n  406                      .on('mousemove.drag', function(e) {\n  407                          $drag.offset({\n  408:                             left: x + e.pageX,\n  409:                             top: y + e.pageY\n  410                          });\n  411                      })\n  ...\n  448  \tvar rect = this.getBoundingClientRect();\n  449  \tvar pos = new Point(e.clientX - offset.x, e.clientY - offset.y).getOffset();\n  450: \tconsole.log(\"game pos \" + pos.x\t+ \" / \" + pos.y);\n  451  \n  452  \tif (aUnit){\n  ...\n  530  \t\td = str/Math.pow(w/game.const.ew.len, 1/game.const.ew.p);\n  531  \t}\n  532: \t//console.log(\"angle from facing: \" + a + \", dist: \" + dist + \", strength: \"+str + \", FINAL: \" + newidth);\n  533  \n  534  \tif (isClick && ship.canSetSensor(sensor)){\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n   89  \tthis.getFiringPosition = function(){\n   90  \t\treturn new Point(\n   91: \t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n   92: \t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n   93  \t\t)\n   94  \t}\n   ..\n   96  \tthis.getTargettingPos = function(){\n   97  \t\treturn new Point(\n   98: \t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n   99: \t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n  100  \t\t)\t\t\n  101  \t}\n  ...\n  118  \t\t\t\tif (game.deploys[i].userid != this.userid){continue;}\n  119  \n  120: \t\t\t\tif (getDistance(game.deploys[i], pos) + this.size/2 < game.deploys[i].s){\n  121  \t\t\t\t\tfor (var j = 0; j < game.ships.length; j++){\n  122  \t\t\t\t\t\tif (game.ships[j].deployed && game.ships[j].id != this.id && game.ships[j].userid == this.userid){ // different ship, different owners\n  123  \t\t\t\t\t\t\tvar step = game.ships[j].getBaseOffsetPos();\n  124: \t\t\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[j].size/2 + this.size/2)){\n  125  \t\t\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n  126  \t\t\t\t\t\t\t\treturn false;\n  ...\n  139  \t\t\tif (game.deployArea[i].id != game.userid){continue;}\n  140  \t\t\tif (game.deployArea[i].x > 0){\n  141: \t\t\t\tif (pos.x >= game.deployArea[i].x && pos.x <= game.deployArea[i].x + game.deployArea[i].w){\n  142: \t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n  143  \t\t\t\t\t\tvalid = true; break;\n  144  \t\t\t\t\t}\n  145  \t\t\t\t}\n  146  \t\t\t}\n  147: \t\t\telse if (pos.x <= game.deployArea[i].x && pos.x >= game.deployArea[i].x + game.deployArea[i].w){\n  148: \t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n  149  \t\t\t\t\tvalid = true; break;\n  150  \t\t\t\t}\n  151  \t\t\t}\n  152: \t\t\telse if (pos.x > game.deployArea[i].x && pos.x < game.deployArea[i].x + game.deployArea[i].w){\n  153: \t\t\t\tif (pos.y > game.deployArea[i].y && pos.y < game.deployArea[i].y + game.deployArea[i].h){\n  154  \t\t\t\t\tvalid = true; break;\n  155  \t\t\t\t}\n  ...\n  160  \t\t\t\tif (game.ships[i].deployed && game.ships[i].id != this.id && game.ships[i].userid == this.userid){ // different ship, different owners\n  161  \t\t\t\t\tvar step = game.ships[i].getBaseOffsetPos();\n  162: \t\t\t\t\tif (getDistance(pos, step) <= (game.ships[i].size/2 + size/2)){\n  163  \t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n  164  \t\t\t\t\t\treturn false;\n  ...\n  191  \t\t\t\t}\n  192  \t\t\t}\n  193: \t\t\tfacing = 0 + (180 * (index % 2));\n  194  \t\t\tthis.actions.push(new Move(-1, \"deploy\", 0, pos.x, pos.y, facing, 0, 0, 1, 1, 0));\n  195  \t\t\tthis.deployed = true;\n  ...\n  247  \n  248  \tthis.setHitTable = function(){\n  249: \t\t//console.log(\"id: \" + this.id);\n  250  \t\t//this.primary.setRemainingIntegrity();\n  251  \t\tvar fraction = this.primary.remaining / this.primary.integrity;\n  ...\n  461  \t\tvar angle = this.getPlannedFacing();\n  462  \t\tvar pos = this.getPlannedPos();\n  463: \t\tvar p1 = getPointInDirection(system.range || res.x, system.start + angle, pos.x, pos.y);\n  464: \t\tvar p2 = getPointInDirection(system.range || res.y, system.end + angle, pos.x, pos.y)\n  465  \t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n  466: \t\tvar rad1 = degreeToRadian(system.start + angle);\n  467: \t\tvar rad2 = degreeToRadian(system.end + angle);\n  468  \t\t\n  469  \t\tfxCtx.beginPath();\t\t\t\n  ...\n  485  \tthis.weaponHighlight = function(weapon){\n  486  \t\tif (weapon.highlight){\n  487: \t\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n  488  \t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n  489  \t\t\tweapon.highlight = false;\n  490  \t\t}\n  491  \t\telse {\n  492: \t\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n  493  \t\t\tvar angle = this.getPlannedFacing();\n  494  \t\t\tvar shipPos = this.getPlannedPos();\n  ...\n  577  \n  578  \t\t$(turnEle)\n  579: \t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n  580: \t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n  581  \t\t\t.removeClass(\"disabled\")\n  582: \t\t\t.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n  583: \t\t\t.find(\"#impulseCost\").html(this.getImpulseChangeCost() + \" EP\");\n  584  \t}\n  585  \n  ...\n  587  \tthis.canIncreaseImpulse = function(){\n  588  \t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n  589: \t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n  590  \t\t\t\treturn true;\n  591  \t\t\t}\n  ...\n  604  \t\tif (this.getCurrentImpulse() <= 0){return false;}\n  605  \t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n  606: \t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n  607  \t\t\t\treturn true;\n  608  \t\t\t}\n  ...\n  619  \n  620  \tthis.getShortenTurnCost = function(){\n  621: \t\treturn this.getTurnCost() / turn.mod * (turn.mod + 0.1) * turn.a;\n  622  \n  623  \t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n  ...\n  649  \t\tif (max){\n  650  \t\t\twhile (this.canShortenTurn()){\n  651: \t\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n  652  \t\t\t}\n  653  \t\t\tthis.setTurnData();\n  654  \t\t}\n  655  \t\telse if (this.canShortenTurn()){\n  656: \t\t\tturn.mod = round(turn.mod + turn.step, 1);\n  657  \t\t\tthis.setTurnData();\n  658  \t\t}\n  ...\n  677  \t\t\t\t.find(\"#turnMode\").html(\"ON\").addClass(\"on\").end()\n  678  \t\t\t\t//.find(\"#impulseMod\").html(turn.dif).end()\n  679: \t\t\t\t.find(\"#turnCost\").html(round(turn.cost * turn.mod * turn.dif, 2) + \" EP\").end()\n  680: \t\t\t\t.find(\"#turnDelay\").html(round(turn.delay * turn.mod * turn.dif, 2) + \" px\").end()\n  681  \t\t\t\t.find(\"#turnMod\").html(turn.mod).end()\n  682  \n  ...\n  690  \t\t\t\t.append($(\"<table>\")\n  691  \t\t\t\t\t.append($(\"<tr>\")\n  692: \t\t\t\t\t\t.append($(\"<td>\").html(\"Angle: \" + turn.a)))\n  693  \t\t\t\t\t.append($(\"<tr>\")\n  694: \t\t\t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.ceil(turn.cost * turn.a * turn.mod * turn.dif) + \" EP\")))\n  695  \t\t\t\t\t.append($(\"<tr>\")\n  696: \t\t\t\t\t\t.append($(\"<td>\").html(\"Delay: \" + Math.ceil(turn.delay * turn.a / turn.mod * turn.dif) + \" px\"))))\n  697  \t\t\t\t.removeClass(\"disabled\");*/\n  698  \t\t\tthis.drawDelay();\n  ...\n  728  \t\t\treturn false;\n  729  \t\t}\n  730: \t\telse if (this.turns[i].cost * (this.turns[i].costmod + 0.2) + this.getTurnCost() < this.getRemainingEP()){\n  731  \t\t\treturn true;\n  732  \t\t}\n  ...\n  778  \t\tif (rem > 0){\n  779  \t\t\tele = document.getElementById(\"maxVector\");\n  780: \t\t\tvar p = getPointInDirection(rem + 90, angle, center.x, center.y);\n  781: \t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n  782: \t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n  783  \n  784  \t\t\t$(ele)\n  ...\n  794  \t\tif (delay && rem >= delay){\n  795  \t\t\tele = document.getElementById(\"maxTurnVector\");\n  796: \t\t\tvar p = getPointInDirection(rem + 60, angle, center.x, center.y);\n  797: \t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n  798: \t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n  799  \n  800  \t\t\t$(ele)\n  ...\n  811  \n  812  \t\t\t\tele = document.getElementById(\"maxCutVector\");\n  813: \t\t\t\tvar p = getPointInDirection(rem + 30, angle, center.x, center.y);\n  814: \t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n  815: \t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n  816  \n  817  \t\t\t\t$(ele)\n  ...\n  881  \t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n  882  \t\t$(turnEle)\n  883: \t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n  884: \t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n  885  \t\t\t.removeClass(\"disabled\")\n  886  \t\t\t.find(\"#impulseMod\").html(\"x \" +turn.dif).end();\n  ...\n  893  \t\tvar w = this.getTurnStep();\n  894  \n  895: \t\tthis.turnAngles = {start: addAngle(0 + turnAngle, angle), end: addAngle(360 - turnAngle, angle)};\n  896  \t\t\n  897  \t\tfor (var j = 1; j >= -1; j = j-2){\n  ...\n  949  \tthis.drawImpulseUI = function(){\n  950  \t\tvar center = {x: this.x, y: this.y};\n  951: \t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.getDrawFacing() + 180, center.x, center.y);\n  952  \n  953  \t\tif (this.canUndoLastAction()){\n  954: \t\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n  955: \t\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n  956  \t\t\t$(\"#undoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n  957  \t\t} else $(\"#undoLastAction\").addClass(\"disabled\");\n  ...\n  963  \t\tvar w = gui.width();\n  964  \t\tvar h = gui.height();\n  965: \t\tvar p = getPointInDirection((size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n  966  \n  967: \t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n  968: \t\tgui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse());\n  969  \t\tgui.find(\"#remTurnDelay\").html(this.getRemainingDelay());\n  970  \t\tgui.find(\"#baseDelay\").html(round(this.getTurnDelay(), 1));\n  971: \t\tgui.find(\"#enginePower\").html(this.getRemainingEP() + \" / \" + this.getEP());\n  972: \t\tgui.find(\"#impulseChange\").html(this.getImpulseChangeCost() + \" EP\");\n  973: \t\tgui.find(\"#turnCost\").html(\"<span>\" + round(this.getTurnCost(), 1) + \" EP</span>\");\n  974  \n  975  \t*/\tif (this.canIncreaseImpulse()){\n  976  \t\t\tvar pPlus = getPointInDirection(50, this.getDrawFacing() +90, p1.x, p1.y);\n  977: \t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n  978: \t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n  979  \t\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n  980  \t\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n  ...\n  982  \t\tif (this.canDecreaseImpulse()){\n  983  \t\t\tvar mMinus = getPointInDirection(50, this.getDrawFacing() -90, p1.x, p1.y);\n  984: \t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n  985: \t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n  986  \t\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n  987  \t\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n  ...\n 1015  \t\tif (!impulse && delay){\n 1016  \t\t\twhile (this.canShortenOldTurn(move)){\n 1017: \t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n 1018: \t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n 1019: \t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n 1020  \t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n 1021  \t\t\t}\n ....\n 1024  \t\t\twhile (this.canShortenOldTurn(move)){\n 1025  \t\t\t\tdelay -= move.delay;\n 1026: \t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n 1027: \t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n 1028: \t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n 1029  \t\t\t\tdelay += move.delay;\n 1030  \t\t\t\tif (delay <= 0){\n ....\n 1050  \t\tif (!impulse && delay){\n 1051  \t\t\twhile (this.canShortenOldTurn(move)){\n 1052: \t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n 1053: \t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n 1054: \t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n 1055  \t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n 1056  \t\t\t}\n ....\n 1059  \t\t\twhile (this.canShortenOldTurn(move)){\n 1060  \t\t\t\tdelay -= move.delay;\n 1061: \t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n 1062: \t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n 1063: \t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n 1064  \t\t\t\tdelay += move.delay;\n 1065  \t\t\t\tif (delay <= 0){\n ....\n 1087  \t\tvar c = this.getTurnCost();\n 1088  \t\tvar a = Math.abs(move.a);\n 1089: \t\treturn Math.ceil((c * a * (move.costmod + 0.1)) - (c * a * move.costmod));\n 1090: \t\treturn Math.ceil(this.getTurnCost() * Math.abs(move.a) * (move.costmod + 0.1)) - move.cost;\n 1091: \t\treturn (this.getTurnCost() / move.costmod * (move.costmod + 0.1)) * Math.abs(move.a) - move.cost;\n 1092  \n 1093  \t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n ....\n 1208  \t\tvar c = this.getTurnCost() * a;\n 1209  \n 1210: \t\t$(\"#game\").find(\"#epButton\").find(\"#impulseCost\").html(Math.ceil(c, 2) + \" : \" + Math.floor(this.getRemainingEP() - c))\n 1211  \n 1212: \t\t//gui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse());\n 1213  \n 1214  \t/*\tvar c = this.getTurnCost() * a;\n 1215: \t\tvar remEP = \"Cost: \" + Math.round(c, 2) + \" (\" + Math.round(this.getRemainingEP() - c) + \") EP\";\n 1216: \t\tvar delay = \"Delay: \" + Math.round(this.getTurnDelay() * a, 2) + \" px\";\n 1217  \n 1218  \t$(\"#vectorDiv\")\n 1219: \t\t.css(\"left\", e.clientX - offset.x - 45 + \"px\")\n 1220: \t\t.css(\"top\", e.clientY - offset.y + 40 + \"px\")\n 1221  \t\t.find(\"tr\").each(function(i){\n 1222  \t\t\tswitch (i){\n 1223: \t\t\t\tcase 0: $(this).html(\"Angle: \" + a); break;\n 1224  \t\t\t\tcase 1: $(this).html(remEP); break;\n 1225  \t\t\t\tcase 2: $(this).html(delay); break;\n ....\n 1235  \tthis.drawMouseVector = function(o, t){\n 1236  \t\tmouseCtx.beginPath();\n 1237: \t\tmouseCtx.moveTo(o.x * cam.z + cam.o.x, o.y * cam.z + cam.o.y);\n 1238  \t\tmouseCtx.lineTo(t.x, t.y);\n 1239  \t\tmouseCtx.closePath();\n ....\n 1603  \t\tvar str = sensor.getOutput();\n 1604  \t\tvar\tw = Math.min(180, game.const.ew.len * Math.pow(str/ew.dist, game.const.ew.p));\n 1605: \t\tvar start = addAngle(0 + w, ew.angle);\n 1606  \t\tvar end = addAngle(360 - w, ew.angle);\n 1607  \t\treturn isInArc(getCompassHeadingOfPoint(origin,  target, this.getPlannedFacing()), start, end);\n ....\n 1759  \tfor (var i = 0; i < this.structures.length; i++){\n 1760  \t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n 1761: \t\t\treturn (this.structures[i].remainingNegation + \" / \" + this.structures[i].negation);\n 1762  \t\t}\n 1763  \t}\n ....\n 1765  \n 1766  Ship.prototype.drawMovePlan = function(){\n 1767: \t//console.log(\"draw moves for #\" + this.id);\n 1768  \tif (!this.actions.length || this.actions[this.actions.length-1].resolved){\n 1769  \t\treturn;\n ....\n 1822  \n 1823  \tvar table = document.createElement(\"table\");\n 1824: \t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.name + \" #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n 1825: \t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n 1826  \t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.getStringHitChance();\n 1827  \treturn table;\n ....\n 1830  Ship.prototype.getStringHitChance = function(){\n 1831  \tvar baseHit = this.getBaseHitChance();\n 1832: \treturn (\"Base Hit: \" + Math.floor(this.profile[0] * baseHit) + \"% - \" + Math.floor(this.profile[1] * baseHit) + \"%\");\n 1833  }\n 1834  \n ....\n 1969  Ship.prototype.drawSelf = function(){\n 1970  \tctx.translate(this.drawX, this.drawY);\n 1971: \tctx.rotate((this.getDrawFacing() + (!this.ship*90)) * Math.PI/180);\n 1972  \tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n 1973  }\n ....\n 1982  \t\tctx.drawImage(this.drawImg, -s/2, -s/2, s, s);\n 1983  \t}\n 1984: \tctx.rotate(-(this.getDrawFacing() + (!this.ship*90)) * Math.PI/180);\n 1985  \tctx.translate(-this.drawX, -this.drawY);\n 1986  }\n ....\n 2009  \tcontext.arc(x, y, (this.size-2)/2, 0, 2*Math.PI, false);\n 2010  \tcontext.closePath();\n 2011: \tcontext.lineWidth = 1 + Math.floor(this.selected*2);\n 2012  \tcontext.globalAlpha = 0.8;\n 2013  \tcontext.globalCompositeOperation = \"source-over\";\n ....\n 2027  \t\t}\n 2028  \t}\n 2029: \treturn this.facing + angle;\n 2030  }\n 2031  \n ....\n 2056  \ta = base * this.profile[0];\n 2057  \tb = base * this.profile[1];\n 2058: \tsub = ((90 - angle) * a) + ((angle - 0) * b);\n 2059  \tsub /= (90 - 0);\n 2060  \treturn Math.ceil(sub);\n ....\n 2126  \t\treturn getPointInDirection(100, this.getDrawFacing()+0, 0, 0);\n 2127  \t}\n 2128: \treturn getPointInDirection(this.size/4, this.structures[i].getDirection() + this.getDrawFacing(), 0, 0);\n 2129  }\n 2130  \n ....\n 2140  \t\tif (i == this.structures.length-1 || id > this.structures[i].id && id < this.structures[i+1].id){\n 2141  \t\t\tvar dev = this.size / 4;\n 2142: \t\t\treturn getPointInDirection(dev + range (-dev/1.5, dev/1.5), (this.structures[i].getDirection() + this.getDrawFacing()), 0, 0);\n 2143  \t\t}\n 2144  \t}\n ....\n 2170  \t\tamount += this.actions[i].dist;\n 2171  \t}\n 2172: \treturn this.currentImpulse + step*amount;\n 2173  }\n 2174  \n ....\n 2191  \tif (!isHit){\n 2192  \t\treturn {\n 2193: \t\t\tx: ((this.size/2 + (range (0, this.size/6))) * (1-(range(0, 1)*2))),\n 2194: \t\t\ty: ((this.size/2 + (range (0, this.size/6))) * (1-(range(0, 1)*2)))\n 2195  \t\t}\n 2196  \t}\n ....\n 2205  \tvar angle = this.getPlannedFacing();\n 2206  \tvar slipAngle = this.getSlipAngle();\t\n 2207: \tthis.moveAngles = {start: addAngle(0 + slipAngle, angle), end: addAngle(360 - slipAngle, angle)};\n 2208  }\n 2209  \n ....\n 2212  \tthis.setMoveAngles();\n 2213  \n 2214: \tif (this.moveAngles.start + this.moveAngles.end == 360){\n 2215  \t\t//return;\n 2216  \t}\n ....\n 2331  \t}\n 2332  \telse if (this.actions[this.actions.length-1].type == \"turn\"){\n 2333: \t\tthis.remainingDelay = Math.max(0, this.remainingDelay + this.actions[this.actions.length-1].delay);\n 2334  \t}\n 2335  }\n ....\n 2372  \tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n 2373  \tvar div = document.createElement(\"div\");\n 2374: \t\tdiv.className = \"shipDiv \" + owner;\n 2375  \t\t$(div).data(\"shipId\", this.id);\n 2376  \n ....\n 2388  \t\t$(table)\n 2389  \t\t\t.append($(\"<tr>\")\n 2390: \t\t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colspan\", 2).addClass(header)))\n 2391  \t\t\t.append($(\"<tr>\")\n 2392  \t\t\t\t.append($(\"<td>\").html(\"Classification\"))\n ....\n 2394  \t\t\t.append($(\"<tr>\")\n 2395  \t\t\t\t.append($(\"<td>\").html(\"Thrust\"))\n 2396: \t\t\t\t.append($(\"<td>\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).addClass(\"Thrust\")))\n 2397  \t\t\t.append($(\"<tr>\")\n 2398  \t\t\t\t.append($(\"<td>\").html(\"Engine Power:\"))\n 2399: \t\t\t\t.append($(\"<td>\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"ep\")))\n 2400  \t\t\t.append($(\"<tr>\")\n 2401  \t\t\t\t.append($(\"<td>\").html(\"Thrust Change:\"))\n 2402: \t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n 2403  \t\t\t.append($(\"<tr>\")\n 2404  \t\t\t\t.append($(\"<td>\").html(\"Turn Cost per 1\"))\n 2405: \t\t\t\t.append($(\"<td>\").html(round(this.getTurnCost(), 2) + \" EP\")))\n 2406  \t\t\t.append($(\"<tr>\")\n 2407  \t\t\t\t.append($(\"<td>\").html(\"Turn Delay per 1\"))\n 2408: \t\t\t\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n 2409  \t\t\t.append($(\"<tr>\")\n 2410  \t\t\t\t.append($(\"<td>\").html(\"Active Turn Delay\"))\n ....\n 2568  \tvar h = $(primaryDiv).height();\n 2569  \tvar primX = conWidth/2 - w/2;\n 2570: \tvar primY = conHeight/2 - h/2 + offsetY\n 2571  \t$(primaryDiv)\n 2572  \t\t.css(\"left\", primX)\n ....\n 2667  \t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n 2668  \t\t\t\tif (powerDiv){\n 2669: \t\t\t\t\tpowerDiv.style.left = colWidth * 24 + \"px\";\n 2670  \t\t\t\t\ttd.appendChild(powerDiv);\n 2671  \t\t\t\t}\n ....\n 2743  \t\t\t\toffsetY += 10;\n 2744  \t\t\t} else if (fill){\n 2745: \t\t\t\t$(primaryDiv).css(\"top\", (primY + 20));\n 2746  \t\t\t}\n 2747  \t\t}\n 2748  \t\telse if (noAft){\n 2749: \t\t\toffsetY -= 60 + this.structures.length*12;\n 2750  \t\t}\n 2751  \t\telse if (a == 180){\n ....\n 2762  \t\t$(structDiv)\n 2763  \t\t\t.data(\"id\", this.structures[i].id)\n 2764: \t\t\t.css(\"left\", pos.x + -w/2)\n 2765: \t\t\t.css(\"top\", pos.y + offsetY)\n 2766  \t}\n 2767  \n ....\n 2769  \tvar height = 0;\n 2770  \t$(div).find(\".structDiv\").each(function(){\n 2771: \t\tvar x = $(this).position().left + $(this).width();\n 2772  \t\tif (x > width){\n 2773  \t\t\twidth = x;\n 2774  \t\t}\n 2775: \t\tvar y = $(this).position().top + $(this).height();\n 2776  \t\tif (y > height){\n 2777  \t\t\theight = y;\n ....\n 2779  \t})\n 2780  \n 2781: \t$(structContainer).css(\"height\", Math.max($(primaryDiv).position().top + $(primaryDiv).height(), height) + 20);\n 2782  \n 2783  \t/*\n ....\n 2789  \t}\n 2790  \tvar x = this.x +cam.o.x - w/2;\n 2791: \tvar y = this.y +cam.o.y + 150;\n 2792  \n 2793  \t$(div).css(\"left\", x).css(\"top\", y);\n ....\n 2861  \t\n 2862  \t$(divs)\n 2863: \t\t.find(\".pos\").html(this.x + \" / \" + this.y).end()\n 2864: \t\t.find(\".thrust\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).end()\n 2865: \t\t.find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end()\n 2866  \t\t.find(\".delay\").html(this.getRemainingDelay())\t\t\n 2867: \t\t.find(\".change\").html(this.getImpulseChangeCost() + \" EP\").end()\t\t\t\n 2868: \t\t.find(\".turn\").html(this.getImpulseChangeCost() + \" EP\").end()\n 2869  }\n 2870  \n ....\n 2944  \t\tif (friendly.length){\n 2945  \t\t\tfor (var i = 0; i < friendlies.length; i++){\n 2946: \t\t\t\tfriendlies[i].size = size + tresh;\n 2947  \t\t\t}\n 2948  \t\t\t\n ....\n 2953  \t\t\tctx.globalAlpha = 0.8;\n 2954  \t\t\tctx.beginPath();\n 2955: \t\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n 2956  \t\t\tctx.closePath();\n 2957  \t\t\tctx.strokeStyle = color;\n ....\n 2967  \t\t\t//ctx.rotate(rota*(Math.PI/180));\n 2968  \t\t\tfor (var i = 0; i < friendly.length; i++){\n 2969: \t\t\t\tvar a = split*i + drawFacing;\n 2970  \t\t\t\tvar p = size+tresh - fSize/2;\n 2971  \t\t\t\tvar drawPos = getPointInDirection(p, a, 0, 0);\n 2972: \t\t\t\tvar aPos = getPointInDirection(p/2, a + drawFacing, 0, 0);\n 2973  \t\t\t\t//console.log(a); \n 2974: \t\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n 2975  \t\t\t\tfriendly[i].layout = aPos;\n 2976  \t\t\t\tctx.translate(drawPos.x, drawPos.y);\n ....\n 2994  \t\tif (hostile.length){\n 2995  \t\t\tfor (var i = 0; i < hostiles.length; i++){\n 2996: \t\t\t\thostiles[i].size = size + tresh;\n 2997  \t\t\t}\n 2998  \t\t\t\t\n ....\n 3003  \t\t\tctx.globalAlpha = 0.8;\n 3004  \t\t\tctx.beginPath();\n 3005: \t\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n 3006  \t\t\tctx.closePath();\n 3007  \t\t\tctx.strokeStyle = color;\n ....\n 3014  \n 3015  \t\t\tfor (var i = 0; i < hostile.length; i++){\n 3016: \t\t\t\tvar a = split*i + drawFacing;\n 3017  \t\t\t\tvar p = size+tresh - fSize/2;\n 3018  \t\t\t\tvar drawPos = getPointInDirection(p, a, 0, 0);\n 3019: \t\t\t\tvar aPos = getPointInDirection(p/2, a + drawFacing, 0, 0);\n 3020  \t\t\t\t//console.log(a); \n 3021: \t\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n 3022  \t\t\t\thostile[i].layout = aPos;\n 3023  \t\t\t\tctx.translate(drawPos.x, drawPos.y);\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n   60  \t\t\tfor (var i = 0; i < this.boostEffect.length; i++){\n   61  \t\t\t\tif (this.boostEffect[i].type == \"Reload\" || this.boostEffect[i].type == \"Shots\"){\n   62: \t\t\t\t\tvar html = this.boostEffect[i].type + \": \" + (this.boostEffect[i].value * boost);\n   63  \t\t\t\t}\t\t\n   64  \t\t\t\telse {\n   ..\n   67  \t\t\t\t\t\tmod = \"+\";\n   68  \t\t\t\t\t}\n   69: \t\t\t\t\tvar html = this.boostEffect[i].type + \": \" + mod + (this.boostEffect[i].value*100 * boost) + \"%\";\n   70  \t\t\t\t}\n   71  \t\t\t\t$(table[0]).append($(\"<tr>\").append($(\"<td>\").html(html).attr(\"colSpan\", 2).addClass(\"positive\")));\n   ..\n  153  \tsalvoCtx.beginPath();\n  154  \tsalvoCtx.moveTo(0, 0);\n  155: \tsalvoCtx.translate(-o.x + t.x, -o.y + t.y);\n  156  \tsalvoCtx.lineTo(0, 0);\n  157  \tsalvoCtx.closePath();\n  ...\n  244  \n  245  \tfor (var i = 1; i <= game.turn; i++){\n  246: \t\t//console.log(\"Turn \" + i);\n  247  \t\tif (turnsLoaded < max){\n  248  \t\t\t//console.log(\"++\")\n  ...\n  275  \t}\n  276  \tthis.loaded = turnsLoaded;\n  277: \t$(this.element).find(\".loadLevel\").css(\"width\", this.getLoadLevel() * 100 + \"%\");\n  278: \t$(\"#systemDetailsDiv\").find(\".loading\").html(this.getTimeLoaded() + \" / \" + this.reload);\n  279  }\n  280  System.prototype.getTimeLoaded = function(){\n  ...\n  297  \tfor (var i = 0; i < this.boostEffect.length; i++){\n  298  \t\tif (this.boostEffect[i].type == \"Reload\" || this.boostEffect[i].type == \"Shots\"){\n  299: \t\t\tvar html = this.boostEffect[i].type + \": \" + this.boostEffect[i].value;\n  300  \t\t}\t\t\n  301  \t\telse {\n  ...\n  304  \t\t\t\tmod = \"+\";\n  305  \t\t\t}\n  306: \t\t\tvar html = this.boostEffect[i].type + \": \" + mod + (this.boostEffect[i].value*100) + \"%\";\n  307  \t\t}\n  308  \t\t$(table).append($(\"<tr>\").append($(\"<td>\").attr(\"colSpan\", 2).html(html)));\n  ...\n  646  \t\t$(this.getSystemDetailsDiv())\n  647  \t\t\t.css(\"left\", e.clientX - 90)\n  648: \t\t\t.css(\"top\", e.clientY + 50)\n  649  \t\t)\n  650  \treturn;\n  ...\n  683  \n  684  \tvar img = new Image();\n  685: \tvar file = \"sysIcons/\" + this.getImageName();\n  686  \tif (forFighter){file += this.linked;}\n  687  \telse {img.className = \"sysIcon\";}\n  ...\n  694  \t\t\tdiv.className = \"loadLevel exposed\";\n  695  \t\t} else div.className = \"loadLevel\";\n  696: \t//\tif (this.weapon){div.style.width = this.getLoadLevel() * 100 + \"%\"}\n  697: \t//\telse {div.style.width = 100 + \"%\"};\n  698: \t//\tdiv.style.width = this.getLoadLevel() * 100 + \"%\";\n  699  \t\ttd.appendChild(div);\n  700  \n  ...\n  708  \t\tvar lowerDiv = document.createElement(\"div\");\n  709  \t\t\tlowerDiv.className = \"integrityNow\";\n  710: \t\t\tlowerDiv.style.width = this.getRemainingIntegrity() /  this.integrity * 100 + \"%\";\n  711  \t\t\ttd.appendChild(lowerDiv);\n  712  \n  ...\n  719  \t\t\t\tvar outputDiv = document.createElement(\"div\");\n  720  \t\t\t\t\toutputDiv.className = \"outputMask\";\n  721: \t\t\t\t\t//output.innerHTML = \"<span>\" + this.outputp + \"</span>\";\n  722  \t\t\t\t\tif (this.internal || this.getActiveSystem().canBeBoosted()){\n  723  \t\t\t\t\t\toutputDiv.innerHTML = this.getOutput();\n  ...\n  802  \t//if (game.getUnit(aUnit) instanceof Flight){return false;}\n  803  \tif (this.mount.length){\n  804: \t\treturn this.mount + \" / \" + this.armour;\n  805  \t} else return this.armour;\n  806  }\n  ...\n  924  \t}\n  925  \telse {\n  926: \t\toutput = this.output + this.getExtraOutput();\n  927  \t\tmod = this.getOutputCrits();\n  928  \t}\n  ...\n  949  PrimarySystem.prototype.getOutputString = function(){\n  950  \tvar effect = 1-this.getOutputCrits();\n  951: \treturn this.output + \" + \" + Math.floor(this.getExtraOutput()*effect) + \" - \" + Math.ceil(this.output*(1-effect));\n  952  }\n  953  \n  ...\n  963  \t\n  964  \t$(table).append($(\"<tr>\").append($(\"<th>\").html(this.display).attr(\"colSpan\", 2)));\n  965: \t$(table).append($(\"<tr>\").append($(\"<td>\").css(\"width\", \"60%\").html(\"Integrity\")).append($(\"<td>\").html(this.getRemainingIntegrity() + \" / \" + this.integrity)));\n  966  \n  967  \tif (this.output){\n  ...\n 1123  \tif (!this.ew.length){return;}\n 1124  \tswitch (this.ew[this.ew.length-1].type){\n 1125: \t\tcase 0: return (\"Increases chance to hit targets within red sensor arc by \" + (game.const.ew.effect[this.ew[this.ew.length-1].type]*100) + \"%\");\n 1126: \t\tcase 1: return (\"Decreases chance to be hit by starships within blue sensor arc by \" + (game.const.ew.effect[this.ew[this.ew.length-1].type]*100) + \"%\");\n 1127: \t\tcase 2: return (\"Decreases chance to be hit by all starships by \" + (game.const.ew.effect[this.ew[this.ew.length-1].type]*100) + \"%\");\n 1128  \t}\n 1129  }\n ....\n 1342  \n 1343  \tif (dmgLoss){\n 1344: \t\trow.append($(\"<td>\").addClass(\"red\").html(\" -\" + dmgLoss + \"%\"));\n 1345  \t} else {\n 1346  \t\trow.append($(\"<td>\").html(\"\"));\n ....\n 1360  \tif (!traverseMod){\n 1361  \t\trow.append($(\"<td>\").html(\"<span class='green'>Full Tracking</span>\"));\n 1362: \t} else row.append($(\"<td>\").html(\"<span class='red'>-\"+ Math.floor(final / 5 * traverseMod) + \"% </span> (-\" + traverseMod + \")\"));\n 1363  \n 1364  \tif (accLoss){\n 1365: \t\trow.append($(\"<td>\").addClass(\"red\").html(\" -\" + accLoss + \"%\"));\n 1366  \t} else row.append($(\"<td>\").html(\"\"));\n 1367  \n ....\n 1369  \tthis.odds = final;\n 1370  \n 1371: \trow.append($(\"<td>\").html(final + \"%\"));\n 1372  }\n 1373  \n ....\n 1375  \t\trow.append($(\"<td>\").html(\"\"));\n 1376  \tif (accLoss){\n 1377: \t\trow.append($(\"<td>\").addClass(\"red\").html(\" -\" + accLoss + \"%\"));\n 1378  \t} else {\t\t\t\n 1379  \t\trow.append($(\"<td>\").html(\"\"));\n ....\n 1458  \t}\n 1459  \telse if (this.arc[0][0] > this.arc[0][1]){\n 1460: \t\tw = 360 - this.arc[0][0] + this.arc[0][1];\n 1461  \t}\n 1462  \n ....\n 1498  \n 1499  \tif (!(game.getUnit(this.parentId).flight)){\n 1500: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Integrity\")).append($(\"<td>\").html(this.getRemainingIntegrity() + \" / \" + this.integrity)));\n 1501  \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Mount / Armour\")).append($(\"<td>\").html(this.getMount())));\n 1502  \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Base Power Req\")).append($(\"<td>\").html(this.getPowerReq())));\n 1503  \t\tif (this.boostEffect.length && !(this instanceof Launcher)){\n 1504: \t\t\t$(table).append($(\"<tr>\").css(\"border-top\", \"2px solid white\").append($(\"<td>\").html(\"Boost Power Cost\")).append($(\"<td>\").addClass(\"powerCost\").html(this.getEffiency() + \" (max: \" + this.maxBoost + \")\")));\n 1505  \t\t\tthis.getBoostEffectElements(table);\n 1506  \t\t}\n 1507  \t}\n 1508  \n 1509: \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Loading\")).append($(\"<td>\").addClass(\"loading\").html(this.getTimeLoaded() + \" / \" + this.reload)));\n 1510  \n 1511  \tif (this instanceof Launcher){\n ....\n 1513  \t\t\t$(table).append($(\"<tr>\").append($(\"<th>\").css(\"border-top\", \"1px solid white\").attr(\"colSpan\", 2).html(this.loads[this.ammo].name)));\n 1514  \t\t\t$(table).append($(\"<tr>\").append($(\"<th>\").attr(\"colSpan\", 2).html(this.loads[this.ammo].display)));\n 1515: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Ammo amount\")).append($(\"<td>\").html(\"<span class='red'>\" + this.getRemainingAmmo() + \"</span> / \" + this.getMaxAmmo()).attr(\"id\", \"ammo\")));\n 1516: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Tracking\")).append($(\"<td>\").html(this.getTraverseRating() + \" / \" + game.getUnitType(this.getTraverseRating()))));\n 1517  \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Thrust\")).append($(\"<td>\").html(this.getImpulseString())));\n 1518: \t\t\t//$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Launch Rate\")).append($(\"<td>\").html(\"<span class='red' id='detailShots'>\" + this.getOutput() + \"</span> / \" + this.launchRate[this.ammo])));\n 1519: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Launch Rate\")).append($(\"<td>\").html(\"Up to <span class='red'>\" + this.launchRate[this.ammo] + \"</span> per cycle\")));\n 1520  \t\t}\n 1521  \t}\n 1522  \telse if (this instanceof Laser){\n 1523: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Tracking\")).append($(\"<td>\").html(this.getTraverseRating() + \" / \" + game.getUnitType(this.getTraverseRating()))));\n 1524: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Focus point\")).append($(\"<td>\").html(this.optRange + \"px\")));\n 1525: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Damage loss\")).append($(\"<td>\").html(this.getDmgLoss(this.optRange+100) + \"% per 100px\")));\n 1526: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Accuracy loss\")).append($(\"<td>\").addClass(\"accuracy\").html(this.getAccuracy() + \"% per 100px\")));\n 1527  \t}\n 1528  \telse {\n 1529: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Tracking\")).append($(\"<td>\").html(this.getTraverseRating() + \" / \" + game.getUnitType(this.getTraverseRating()))));\n 1530  \t\tif (this instanceof Plasma){\n 1531: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Damage loss\")).append($(\"<td>\").html(this.getDmgLoss(100) + \"% per 100px\")));\n 1532  \t\t}\n 1533: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Accuracy loss\")).append($(\"<td>\").html(this.getAccuracy() + \"% per 100px\")));\n 1534  \t}\n 1535  \n 1536  \tif (this.linked > 1){\n 1537: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Linked Shots\")).append($(\"<td>\").html(this.linked + \" x \" + this.shots)));\n 1538  \t}\n 1539  \telse if (this instanceof Laser){\n 1540: \t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Shots & Rakes\")).append($(\"<td>\").html(this.shots + \" w/ \" + this.output + \" rakes\")));\n 1541  \t}\n 1542  \telse if (!(this instanceof Launcher)){\n 1543  \t\tif (this instanceof Pulse){\n 1544: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Volley\")).append($(\"<td>\").html(this.shots + \" w/ \" + this.basePulses + \" pulses\")));\n 1545: \t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Burst\")).append($(\"<td>\").html(\" +1 (max \" + this.extraPulses + \") per \" + this.grouping + \"%\")));\n 1546  \t\t} else $(table).append($(\"<tr>\").append($(\"<td>\").html(\"Shots\")).append($(\"<td>\").html(this.shots)));\n 1547  \t}\n ....\n 1573  \t\t\t}\n 1574  \t\t\tif (this.childNodes[1].className == \"accuracy\"){\n 1575: \t\t\t\tthis.childNodes[1].innerHTML = acc + \"% per 100px\";\n 1576  \t\t\t}\n 1577  \t\t}\n ....\n 1583  Weapon.prototype.drawArc = function(facing, pos){\n 1584  \tfor (var i = 0; i < this.arc.length; i++){\n 1585: \t\tvar p1 = getPointInDirection(1200, this.arc[i][0] + facing, pos.x, pos.y);\n 1586: \t\tvar p2 = getPointInDirection(1200, this.arc[i][1] + facing, pos.x, pos.y)\n 1587  \t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n 1588: \t\tvar rad1 = degreeToRadian(this.arc[i][0] + facing);\n 1589: \t\tvar rad2 = degreeToRadian(this.arc[i][1] + facing);\n 1590  \n 1591  \t\tfxCtx.globalAlpha = 0.7;\n ....\n 1634  \tif (this.minDmg == this.maxDmg){\n 1635  \t\treturn Math.floor(this.minDmg * mod);\n 1636: \t} else return (Math.floor(this.minDmg*mod) + \" - \" + Math.floor(this.maxDmg*mod));\n 1637  }\n 1638  \n ....\n 1662  \tthis.guns = 1;\n 1663  \tthis.animation = \"explo\";\n 1664: \tthis.exploSize = (this.minDmg + this.maxDmg)/15;\n 1665  \n 1666  \tfor (var i = 0; i < data.fireOrders.length; i++){\n ....\n 1682  \n 1683  Warhead.prototype.getAnimation = function(fire){\n 1684: \t//console.log(this.display + \" / \" + this.projSpeed + \" / \" + fire.dist);\n 1685  \t//console.log(fire);\n 1686  \t\n ....\n 1706  \n 1707  \t\t\tvar traj = getPointInDirection(t.size/4, a, p.x, p.y);\n 1708: \t\t\tvar tx = traj.x + range(-t.size/7, t.size/7);\n 1709: \t\t\tvar ty = traj.y + range(-t.size/7, t.size/7);\n 1710  \n 1711  \t\t\tif (fire.target.flight){\n 1712  \t\t\t\tvar t = fire.target.getFireDest(fire, fire.hits[j] >= k, hits-1);\n 1713: \t\t\t\t\ttx = p.x + t.x;\n 1714: \t\t\t\t\tty = p.y + t.y;\n 1715  \t\t\t}\n 1716: \t\t\tvar shotAnim = {tx: tx, ty: ty, m: 70, n: 0 - ((j / grouping) * delay + k*shotInterval)};\n 1717  \n 1718  \t\t\tgunAnims.push(shotAnim);\n ....\n 1778  \t\t//\tconsole.log(\"ding\");\n 1779  \t\t}\n 1780: \t\tvar ox = fire.shooter.drawX + o.x;\n 1781: \t\tvar oy = fire.shooter.drawY + o.y;\n 1782  \t\tvar t = fire.target.getPlannedPos();\n 1783  \n ....\n 1795  \t\t\tvar dest = fire.target.getFireDest(fire, hit, hits-1);\n 1796  \t\t\t\n 1797: \t\t\tvar tx = t.x + dest.x;\n 1798: \t\t\tvar ty = t.y + dest.y;\n 1799  \n 1800  \t\t\tvar shotAnim = new BallVector({x: ox, y: oy}, {x: tx, y: ty}, speed, hit);\n 1801: \t\t\t\tshotAnim.n = 0 - ((j / grouping) * delay + k*shotInterval);\n 1802  \n 1803  \t\t\tgunAnims.push(shotAnim);\n ....\n 1818  \tthis.dmgLoss = system.dmgLoss;\n 1819  \tthis.melt = system.melt;\n 1820: \tthis.notes = [\"<span class='bold green'>\" + this.melt + \"%</span> of total damage added to armour\"];\n 1821  }\n 1822  Plasma.prototype = Object.create(Particle.prototype);\n ....\n 1866  \t//grad.addColorStop(1, \"red\");\n 1867  \tgrad.addColorStop(Math.min(1, red), \"red\");\n 1868: \tgrad.addColorStop((Math.min(1, red) + Math.max(0, green))/2, \"yellow\");\n 1869  \tgrad.addColorStop(Math.max(0, green), \"green\");\n 1870  \tgrad.addColorStop(0, \"green\");\n ....\n 1891  Pulse.prototype.getShots = function(){\n 1892  \treturn this.shots;\n 1893: \treturn this.basePulses + this.extraPulses;\n 1894  }\n 1895  \t\n ....\n 1932  \t\tvar gunDelay = Math.floor(j / grouping) * delay;\n 1933  \t\tvar o = fire.shooter.getGunOrigin(fire.systems[j]);\n 1934: \t\tvar ox = fire.shooter.drawX + o.x;\n 1935: \t\tvar oy = fire.shooter.drawY + o.y;\n 1936  \t\tvar t = fire.target.getPlannedPos();\n 1937  \n ....\n 1939  \t\t\thasHit = 1;\n 1940  \t\t\thits++;\n 1941: \t\t\t//hits += this.basePulses + Math.floor((fire.req[j] - fire.rolls[j]) / this.grouping);\n 1942  \t\t}\n 1943  \n 1944  \t\tvar dest = fire.target.getFireDest(fire, hasHit, hits-1);\n 1945: \t\tvar tx = t.x + dest.x;\n 1946: \t\tvar ty = t.y + dest.y;\n 1947  \n 1948: \t\tvar subHits = hasHit * this.basePulses + Math.floor((fire.req[j] - fire.rolls[j]) / this.grouping);\n 1949  \n 1950: \t\tfor (var k = 0; k < (this.basePulses + this.extraPulses); k++){\n 1951  \t\t\tvar devi = {x: range(-2, 2), y: range(-2, 2)};\n 1952: \t\t\tvar shotAnim = new BallVector({x: ox, y: oy}, {x: tx + devi.x, y: ty + devi.y}, speed, (k <= subHits));\n 1953: \t\t\t\tshotAnim.n = 0 - ((j / grouping) * delay + k*shotInterval);\n 1954  \n 1955  \t\t\tgunAnims.push(shotAnim);\n ....\n 1969  \tthis.beamWidth = system.beamWidth || (this.minDmg+this.maxDmg)/system.rakes/35;\n 1970  \tthis.exploSize = (this.minDmg+this.maxDmg)/system.rakes/30;\n 1971: \tthis.notes = [\"Damage is evently split into <span class='green'>\" + this.output + \"</span> rake(s)\"];\n 1972  }\n 1973  Laser.prototype = Object.create(Weapon.prototype);\n ....\n 2001  \n 2002  \t\t\tif (hit){ // shot hit\n 2003: \t\t\t\ttx = fire.target.drawX + range(-fire.target.size * 0.45, fire.target.size * 0.45); // BEAM swipe begin on HIT\n 2004: \t\t\t\tty = fire.target.drawY + range(-fire.target.size * 0.45, fire.target.size * 0.45);\n 2005  \t\t\t\ta = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.drawX, y: fire.target.drawY} );\n 2006  \t\t\t\ta = addToDirection(a, range(-10, 10));\n ....\n 2008  \t\t\t}\n 2009  \t\t\telse { // shot miss\n 2010: \t\t\t\ttx = fire.target.drawX + range(-fire.target.size * 0.7, fire.target.size * 0.7); // BEAM swipe begin on MISS\n 2011: \t\t\t\tty = fire.target.drawY + range(-fire.target.size * 0.7, fire.target.size * 0.7);\n 2012  \t\t\t\ta = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.drawX, y: fire.target.drawY} );\n 2013  \t\t\t\ta = addToDirection(a, range(-40, 40));\n ....\n 2016  \n 2017  \t\t\tvar shotAnim = new BeamVector(\n 2018: \t\t\t\t{x: fire.shooter.drawX + o.x, y: fire.shooter.drawY + o.y},\n 2019: \t\t\t\t//{x: fire.shooter.drawX + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2), \n 2020: \t\t\t\t//y: fire.shooter.drawY + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2)},\n 2021  \t\t\t\t{x: tx, y: ty},\n 2022  \t\t\t\t{x: tb.x, y: tb.y}, \n ....\n 2107  \t\tthis.weapons[i].loaded = this.loaded;\n 2108  \n 2109: \t\t//this.weapons[i].display = \"HYBRID - \" + this.weapons[i].display;\n 2110  \t}\n 2111  }\n ....\n 2141  \n 2142  Dual.prototype.setSystemImage = function(){\n 2143: \tthis.element.childNodes[0].src = \"sysIcons/\" + this.getImageName() + \".png\";\n 2144  }\n 2145  \n ....\n 2375  \tif (!traverseMod){\n 2376  \t\trow.append($(\"<td>\").html(\"<span class='green'>Full Tracking</span>\"));\n 2377: \t} else row.append($(\"<td>\").html(\"<span class='red'>-\"+ Math.floor(final / 5 * traverseMod) + \"% </span> (-\" + traverseMod + \")\"))\n 2378  \n 2379  \tif (accLoss){\n 2380: \t\trow.append($(\"<td>\").html(\" -\" + accLoss + \"%\"));\n 2381  \t} else row.append($(\"<td>\").html(\"\"));\n 2382  \n ....\n 2385  \tthis.odds = final;\n 2386  \n 2387: \trow.append($(\"<td>\").html(final + \"%\"));\n 2388  }\n 2389  \n ....\n 2483  Launcher.prototype.getDmgString = function(){\n 2484  \tif (this.ammo != undefined){\n 2485: \t\treturn this.loads[this.ammo].systems[0].minDmg + \" - \" + this.loads[this.ammo].systems[0].maxDmg;\n 2486  \t} else return \"<span class='red'>NO LOADOUT</span>\";\n 2487  }\n 2488  \n 2489  Launcher.prototype.getOutput = function(){\n 2490: \treturn this.shots + this.getBoostLevel();\n 2491  }\n 2492  \n 2493  Launcher.prototype.updateSystemDetailsDiv = function(){\n 2494  \t$(\"#systemDetailsDiv\")\n 2495: \t\t.find(\"#detailsShots\").html(\"<font color='red'>\" + this.getOutput() + \"</font> - max \" + this.effiency)\n 2496  \t\t\t.end()\n 2497: \t\t.find(\"#ammo\").html(\"<font color='red'>\" + this.getRemainingAmmo() + \"</font> / \" + this.getMaxAmmo());\n 2498  }\n 2499  \n ....\n 2502  \tif ($(div).hasClass(\"disabled\")){\n 2503  \t\t$(div).find(\"#reload\").html(this.reload);\n 2504: \t\t//$(div).data(\"systemid\", this.id).css(\"top\", e.clientY + 30).css(\"left\", e.clientX - 150).removeClass(\"disabled\");\n 2505  \t\t$(div).data(\"systemid\", this.id).css(\"left\", 800).css(\"top\", 400).removeClass(\"disabled\");\n 2506  \t\tthis.updateTotals();\n ....\n 2618  \t\t\tamount += this.loads[i].amount\n 2619  \t\t\ttCost += this.loads[i].amount * this.loads[i].cost\n 2620: \t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount + \" / \"  + this.capacity[i];\n 2621  \t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount * this.loads[i].cost\n 2622  \t}\n ....\n 2649  \n 2650  Launcher.prototype.getImpulseString = function(){\n 2651: \treturn (\"+\" + this.loads[this.ammo].baseImpulse + \" per Turn\");\n 2652  }\n 2653  \n ....\n 2801  \tif ($(div).hasClass(\"disabled\")){\n 2802  \t\tvar h = ($(div).height());\n 2803: \t\tif (e.clientY + h > window.res.y){\n 2804  \t\t\t$(div).data(\"systemid\", this.id).css(\"left\", e.clientX +100).css(\"top\", window.res.y - h - 30).removeClass(\"disabled\");\n 2805: \t\t} else $(div).data(\"systemid\", this.id).css(\"left\", e.clientX +100).css(\"top\", e.clientY + 50).removeClass(\"disabled\");\n 2806  \t}\n 2807  \telse {\n ....\n 2851  \t\t\t\t});\n 2852  \t\t\tvar td = document.createElement(\"td\");\n 2853: \t\t\t\ttd.id = this.loads[i].name + \"Amount\";\n 2854  \t\t\t\ttd.innerHTML = this.loads[i].launch; tr.appendChild(td);\n 2855  \n ....\n 2955  \t\t\tif (add > 0){\n 2956  \t\t\t\tadd = Math.min(add, this.loads[i].amount - this.loads[i].launch);\n 2957: \t\t\t\tif (current + add <= launchRate && this.loads[i].launch + add <= this.loads[i].amount && this.loads[i].launch + add >= 0){\n 2958  \t\t\t\t\tthis.loads[i].launch += add;\n 2959  \t\t\t\t}\n ....\n 2962  \t\t\t\tthis.loads[i].launch += add;\n 2963  \t\t\t}\n 2964: \t\t\t$(\"#\" + this.loads[i].name + \"Amount\").html(this.loads[i].launch);\n 2965  \t\t\tbreak;\n 2966  \t\t}\n ....\n 3004  \tfor (var i = 0; i < this.loads.length; i++){\n 3005  \t\tif (this.loads[i].name == name){\n 3006: \t\t\tif (tMass + this.loads[i].mass <= this.output){\n 3007  \t\t\t\tthis.loads[i].amount += add;\n 3008  \t\t\t\tthis.updateTotals();\n ....\n 3109  \t\t$(div).find(\"#launchRate\").html(this.getOutput());\n 3110  \t\t$(div).find(\"#capacity\").html(this.output);\n 3111: \t\t//$(div).data(\"systemid\", this.id).css(\"top\", e.clientY + 30).css(\"left\", e.clientX - 150).removeClass(\"disabled\");\n 3112  \t\t$(div).data(\"systemid\", this.id).css(\"left\", 800).css(\"top\", 400).removeClass(\"disabled\");\n 3113  \t\tthis.updateTotals();\n ....\n 3128  \t\tth.colSpan = 2; th.innerHTML = this.display; th.style.width = \"40%\"; tr.appendChild(th); table.appendChild(tr);\n 3129  \n 3130: \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Mass Capacity\")).append($(\"<td>\").html(this.output + \" metric tons\")));\n 3131: \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Integrity\")).append($(\"<td>\").html(this.getRemainingIntegrity() + \" / \" + this.integrity)));\n 3132  \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Armour\")).append($(\"<td>\").html(this.getMount())));\n 3133: \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Launch Rate\")).append($(\"<td>\").html(this.effiency + \" per cycle\")));\n 3134  \t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Base Power Req\")).append($(\"<td>\").html(this.powerReq)));\n 3135  \n\nC:\\xampp\\htdocs\\fire\\systemtest.php:\n    9  \t\t}\n   10  \t\t$system = new $val(0, 0, 0, 0);\n   11: \t\t$avg = round(($system->minDmg + $system->maxDmg)/2, 2);\n   12  \t\techo \"<table class='unitTest'><tr><th colSpan=2 style='width: 210px'>\".$system->name.\"</th></tr>\";\n   13  \t\techo \"<tr><th colSpan=2 style='text-align: center'>\".($system->display).\"</th></tr>\";\n   ..\n   35  \n   36  \n   37: \t\t\t\t\t$avg = round(($systems[$i]->minDmg + $systems[$i]->maxDmg)/2, 2);\n   38  dem\n   39  \t\t\t\t\techo \"<tr><th colSpan=2 style='text-align: center'>\".($systems[$i]->display).\"</th></tr>\";\n\n729 matches across 26 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  429  \t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n  430  \t\t\tctx.drawImage(\n  431: \t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase() +\"l\"],\n  432  \t\t\t\t0 -size/2,\n  433  \t\t\t\t0 -size/2,\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n3 matches across 3 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 3024  \t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n 3025  \t\t\t\tctx.drawImage(\n 3026: \t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase() + \"l\"],\n 3027  \t\t\t\t\t-fSize/2,\n 3028  \t\t\t\t\t-fSize/2,\n\n2 matches across 2 files\n\n\nSearching 73 files for \"\"l\"\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  503  \tfor (var j = 0; j < this.structures.length; j++){\n  504  \t\tif (this.structures[j].destroyed || this.structures[j].disabled){continue;}\n  505: \t\tattachDiv.append($(\"<div>\").append($(\"<img>\").css(\"width\", 34).css(\"height\", 34).attr(\"src\", window.shipImages[this.structures[j].name.toLowerCase() + \"l\"].src)));\n  506  \t}\n  507  \n\n1 match in 1 file\n\n\nSearching 73 files for \"\"l\"\"\n\n0 matches\n\nSearching 73 files for \"doHover\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  471  \t\t\t\t\t\t}\n  472  \t\t\t\t\t\tpopup(\"You have units with unused Impulse (#\" + this.ships[i].id + \")\");\n  473: \t\t\t\t\t\tthis.ships[i].doHover();\n  474  \t\t\t\t\t\tthis.ships[i].select();\n  475  \t\t\t\t\t\treturn true;\n  ...\n  558  \t\t}\n  559  \t\tvar ship = game.getUnit(id);\n  560: \t\t\tship.doHover();\n  561  \t\t\tship.doSelect();\n  562  \t}\n  ...\n 1074  \n 1075  \t\tif (unit.id != aUnit){\n 1076: \t\t\tunit.doHover();\n 1077  \t\t}\n 1078  \t}\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  315  \t}\n  316  \n  317: \tthis.doHover = function(){\n  318  \t\tif (!game.sensorMode){\n  319  \t\t\tthis.drawEW();\n\n4 matches across 2 files\n\n\nSearching 73 files for \"Salvo.prototype.supplyAttachDiv = function(div){\"\n\nC:\\xampp\\htdocs\\fire\\salvo.js:\n  208  }\n  209  \n  210: Salvo.prototype.supplyAttachDiv = function(div){\n  211  \tvar color = \"red\";\n  212  \n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 90606,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 13259,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 188,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3719,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2261,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 17735,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 4030,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7294,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17236,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2650,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1615,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2266,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1896,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1752,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1680,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 761,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2382,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/ships/altarian.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/wing.php",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 116.0,
		"where_history":
		[
			"",
			"*.js",
			"*.php",
			"*.js",
			"",
			"*.js",
			".js",
			"*.php",
			"",
			"re",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"shooter.ship",
			"",
			"contact imminent",
			"",
			"*.js",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"setPureImage",
			"",
			"flights.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.pphp",
			"",
			"*.js",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"style.css",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"this.turnAngles = {}",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"setescort",
			"Salvo.prototype.supplyAttachDiv = function(div){",
			"doHover",
			"$units",
			"attach",
			"array_merge",
			"array_m",
			"array_splice",
			"\"l\"",
			"+ ",
			"\"l\"",
			"aurora",
			"drawpositionma",
			"escortim",
			"selectionwrapper",
			"element)",
			"$units",
			"$this->ships",
			"assembleUnits",
			"cc.p",
			"baseimpulsecost",
			"flightdeplo",
			"createFlightDeployEntries",
			"deployment l",
			"issuemission",
			"130px",
			"fightermovement",
			"setimage",
			"setPreMoveImage",
			"setpatrollayo",
			"setPatrolLayout",
			"setImag",
			"setPreMoveImage",
			"setPatrolLayout",
			"setImage",
			"setPreMoveImage",
			"issueMission",
			"issueMission,",
			"issuemissi",
			"gethits",
			"e.getShots",
			"combatlog",
			"getDamageEntriesByFireId",
			"drawships",
			"setescortimage",
			"initselec",
			"initselecit",
			"initseleciton",
			"setEscortI",
			"setescorti",
			"of dam",
			"var j = ",
			"this.img =",
			"this.img",
			"this.img =",
			"this.img = ",
			"var j = ",
			"setescortim",
			"drawimg",
			"drawescort",
			"escortimage ",
			"armourmod ",
			"assembleEndStates",
			"getendstate",
			"setcurrentimp",
			"setcurrentim",
			"setprops",
			"handledeployment",
			"setCurrentImpulse",
			"firephase",
			"\n\n\tpublic function getMoveState($turn){\n\t\treturn array(\"id\" => $this->id, \"x\" => $this->actions[sizeof($this->actions)-1]->x , \"y\" => $this->actions[sizeof($this->actions)-1]->y, \"delay\" => 0, \"angle\" => $this->actions[sizeof($this->actions)-1]->a, \"thrust\" => $this->currentImpulse);\n\t}",
			"assembleEndStates",
			"updateUnitEndState",
			"update units",
			"update units ",
			"insert into units",
			"firephase",
			"canvasMouseClick",
			"mouseup",
			"selectfrompopu",
			"boost power cost",
			"var p = getPointInDirection(Math.min(this.getBaseImpulse(), th",
			"basic s",
			"canfire ",
			"canmodechange",
			"canmodechangge",
			"applyPowerSpike",
			"lightplasma",
			"Ship.prototype.expandDiv = function(div){",
			"combatlogentry",
			"Main Structure",
			"regular fire",
			"Type",
			"type",
			"laser ",
			"output = ",
			"req = ",
			"vs darkner #6",
			"vs darkner",
			"vs f",
			"pulse",
			"lightpulse",
			"pulse.prototype.geta",
			"->shots = ",
			"shotdet",
			"details\ngetShotDetails",
			"details",
			"details#",
			"getShots",
			"combatlogen",
			"combatlogenty",
			"determined",
			"confirmfiring",
			"doDRaw = 0",
			"setDrawStatus",
			"setstatus",
			"doDraw ",
			"drawimg = ",
			"doDraw = ",
			"$data",
			"data\"",
			"data",
			"getclientdata",
			"\"max \"",
			"\"max",
			"drawMovePlan",
			"handleFlightDeployMouseMove",
			"handleFlightDeployMove"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$this->ships",
			"getDmgByFire",
			"Main Hull",
			"handleFlightDeployMouseMove",
			"salvoCtx",
			"testForCrits",
			"MediumIon",
			"getPlannedPos",
			"drawShipOverlays",
			"shooter.ship",
			"shooter",
			"target",
			"redraw",
			"doHover",
			"handleHoverEvent",
			"doHoverEvent",
			"getCritModMax",
			"contact imminent",
			"setFocusToPos",
			"getUnitExplosionDetails",
			"animateUnitExplosions",
			"</b> - ",
			"</br>",
			"</br></br>",
			"updateShipPower",
			"public static $size = ",
			"selectFromPopup",
			"speed",
			"font16",
			"font15",
			"DBManager::app()->updateFireOrders",
			"getFireAngle",
			"getImpactAngle",
			"insertClientFireOrder",
			"getAngledHitSection",
			"getAngledHitChance",
			"getAnglesHitChance",
			"target.",
			"setRawImage",
			"setPureImage",
			"",
			"Local Units",
			"shipImages",
			"game.getUnitByClick",
			"getUnitById",
			"resolveFlightMovement",
			"isCloseCombat($id)",
			"getHitSection",
			"s",
			"pSize",
			"isCloseCombat",
			"setPostMoveFacing",
			"updateIntercepts",
			"[$j]",
			"$stack[$i][j]",
			"planCtx",
			"inRange",
			"updateTargets",
			"resolveUnitMovement",
			"animateUnitMovement",
			"getIncomingUnits",
			"drawMovePlan",
			"launchData",
			"$",
			"$unit",
			"\"<td>\"",
			"\"<tr>\"",
			", ",
			");",
			"draw",
			"isExposed",
			"MediumTwinIon",
			"#27e627",
			"#24de24",
			"lime",
			"lime;",
			"getCurrentImpulse();",
			"getCurrentImplse();",
			"x.drawX",
			"shooter.drawX",
			"setDrawData",
			"setDrawData()",
			"getPlannedPosition",
			"remainingDelay",
			"delay",
			"getPlannedFacing()",
			"salvo",
			".getCurrentImpulse()",
			"this.getCurrentImpulse",
			"this.getCurrentImPulse",
			"new Action(-1, ",
			"unitGUI",
			"getDmgRangeMod($fire)",
			"\"Thrust",
			"getDmgString",
			"Damage loss",
			".getRangeDmgMod",
			"getDmgRangeMod",
			"getDmgRangePenalty",
			"dmgLoss",
			"mouse",
			"salvo",
			"mouseCtx",
			"system",
			"this.turnAngles = {}",
			"IsOnMovementArc",
			"getTurnStep",
			"$this->updatePlayerStatus",
			"\"Disabled\"",
			"doOverkill",
			"applyOverkill",
			"new",
			"$this->boostEffect[] = new",
			"$manager->incoming[$i]",
			"$units",
			"insertServerActions",
			"$units[$i][\"actions\"][$j]",
			"insertClientActions",
			"drawMovePlan",
			"element",
			"",
			"getRemainingIntegrity",
			"getImpulseProfileMod",
			"getShots($this->turn)",
			"public function getShots($turn){",
			"getEWSettings",
			"ctx",
			"</span>"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7182,
						"regions":
						{
						},
						"selection":
						[
							[
								5282,
								5282
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4045.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5274,
						"regions":
						{
						},
						"selection":
						[
							[
								2389,
								2391
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2222.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15680,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2629.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21243,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29079.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14147,
						"regions":
						{
						},
						"selection":
						[
							[
								9090,
								9090
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6354.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84966,
						"regions":
						{
						},
						"selection":
						[
							[
								81145,
								81145
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 55022.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6275,
						"regions":
						{
						},
						"selection":
						[
							[
								5537,
								5537
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4543.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								361,
								361
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47304,
						"regions":
						{
						},
						"selection":
						[
							[
								11447,
								11447
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7191.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								466,
								466
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 231.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2968,
						"regions":
						{
						},
						"selection":
						[
							[
								1887,
								1887
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 607.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								1894,
								1894
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23028,
						"regions":
						{
						},
						"selection":
						[
							[
								8256,
								8256
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3239.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1859,
						"regions":
						{
						},
						"selection":
						[
							[
								1260,
								1260
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 303.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3640,
						"regions":
						{
						},
						"selection":
						[
							[
								3231,
								3231
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 931.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2775,
						"regions":
						{
						},
						"selection":
						[
							[
								2370,
								2370
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 626.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3471,
						"regions":
						{
						},
						"selection":
						[
							[
								3060,
								3060
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 192.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2569,
						"regions":
						{
						},
						"selection":
						[
							[
								2168,
								2168
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 304.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2254,
						"regions":
						{
						},
						"selection":
						[
							[
								1854,
								1854
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 323.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1954,
						"regions":
						{
						},
						"selection":
						[
							[
								1365,
								1365
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1611,
						"regions":
						{
						},
						"selection":
						[
							[
								1366,
								1366
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3929,
						"regions":
						{
						},
						"selection":
						[
							[
								3137,
								3137
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1368.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 62.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5299,
						"regions":
						{
						},
						"selection":
						[
							[
								1154,
								1154
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 473.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2681,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1571.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5697,
						"regions":
						{
						},
						"selection":
						[
							[
								1287,
								1287
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 693.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1982,
						"regions":
						{
						},
						"selection":
						[
							[
								1477,
								1477
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 412.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4497,
						"regions":
						{
						},
						"selection":
						[
							[
								2017,
								2017
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1044.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6234,
						"regions":
						{
						},
						"selection":
						[
							[
								4463,
								4463
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2526.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6750,
						"regions":
						{
						},
						"selection":
						[
							[
								1304,
								1304
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3022,
						"regions":
						{
						},
						"selection":
						[
							[
								1560,
								1560
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 27.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								997,
								997
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 321.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6622,
						"regions":
						{
						},
						"selection":
						[
							[
								1340,
								1340
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 454.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4488,
						"regions":
						{
						},
						"selection":
						[
							[
								549,
								549
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 99.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9516,
						"regions":
						{
						},
						"selection":
						[
							[
								6823,
								6823
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4177.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31190,
						"regions":
						{
						},
						"selection":
						[
							[
								3975,
								3975
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2440.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4270,
						"regions":
						{
						},
						"selection":
						[
							[
								664,
								664
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 37.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								561,
								561
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88787,
						"regions":
						{
						},
						"selection":
						[
							[
								52492,
								52492
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36155.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8626,
						"regions":
						{
						},
						"selection":
						[
							[
								1911,
								1911
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 855.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2968,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14129,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7816.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8127,
						"regions":
						{
						},
						"selection":
						[
							[
								1387,
								1387
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 66.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52901,
						"regions":
						{
						},
						"selection":
						[
							[
								20672,
								20672
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13916.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68895,
						"regions":
						{
						},
						"selection":
						[
							[
								44480,
								44485
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31652.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 47,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 90606,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										203,
										208
									],
									[
										379,
										384
									],
									[
										509,
										514
									],
									[
										734,
										746
									],
									[
										1018,
										1022
									],
									[
										1169,
										1173
									],
									[
										1420,
										1423
									],
									[
										1764,
										1767
									],
									[
										1936,
										1939
									],
									[
										2228,
										2231
									],
									[
										2460,
										2463
									],
									[
										2681,
										2684
									],
									[
										2870,
										2873
									],
									[
										3314,
										3317
									],
									[
										3486,
										3489
									],
									[
										3778,
										3781
									],
									[
										4010,
										4013
									],
									[
										4231,
										4234
									],
									[
										4420,
										4423
									],
									[
										4864,
										4867
									],
									[
										5090,
										5093
									],
									[
										5322,
										5325
									],
									[
										5543,
										5546
									],
									[
										5732,
										5735
									],
									[
										6176,
										6179
									],
									[
										6415,
										6418
									],
									[
										6636,
										6639
									],
									[
										6825,
										6828
									],
									[
										7087,
										7089
									],
									[
										7207,
										7209
									],
									[
										7216,
										7218
									],
									[
										7409,
										7411
									],
									[
										7443,
										7445
									],
									[
										7615,
										7617
									],
									[
										7814,
										7816
									],
									[
										7965,
										7967
									],
									[
										8087,
										8089
									],
									[
										8265,
										8267
									],
									[
										8422,
										8424
									],
									[
										8556,
										8558
									],
									[
										8564,
										8566
									],
									[
										8583,
										8585
									],
									[
										8719,
										8721
									],
									[
										8732,
										8734
									],
									[
										8907,
										8909
									],
									[
										8925,
										8927
									],
									[
										8938,
										8940
									],
									[
										8954,
										8956
									],
									[
										9077,
										9079
									],
									[
										9085,
										9087
									],
									[
										9104,
										9106
									],
									[
										9110,
										9112
									],
									[
										9163,
										9165
									],
									[
										9171,
										9173
									],
									[
										9190,
										9192
									],
									[
										9196,
										9198
									],
									[
										9214,
										9216
									],
									[
										9227,
										9229
									],
									[
										9243,
										9245
									],
									[
										9351,
										9353
									],
									[
										9537,
										9539
									],
									[
										9545,
										9547
									],
									[
										9762,
										9764
									],
									[
										9877,
										9879
									],
									[
										9928,
										9930
									],
									[
										10076,
										10078
									],
									[
										10269,
										10271
									],
									[
										10277,
										10279
									],
									[
										10461,
										10463
									],
									[
										10469,
										10471
									],
									[
										10699,
										10701
									],
									[
										10872,
										10874
									],
									[
										11052,
										11054
									],
									[
										11060,
										11062
									],
									[
										11217,
										11219
									],
									[
										11404,
										11406
									],
									[
										11662,
										11664
									],
									[
										11944,
										11946
									],
									[
										12109,
										12111
									],
									[
										12116,
										12118
									],
									[
										12388,
										12390
									],
									[
										12400,
										12402
									],
									[
										12423,
										12425
									],
									[
										12662,
										12664
									],
									[
										12823,
										12825
									],
									[
										12842,
										12844
									],
									[
										13058,
										13060
									],
									[
										13063,
										13065
									],
									[
										13174,
										13176
									],
									[
										13517,
										13519
									],
									[
										13525,
										13527
									],
									[
										13830,
										13832
									],
									[
										14020,
										14022
									],
									[
										14161,
										14163
									],
									[
										14391,
										14393
									],
									[
										14416,
										14418
									],
									[
										14426,
										14428
									],
									[
										14818,
										14820
									],
									[
										14986,
										14988
									],
									[
										15065,
										15067
									],
									[
										15285,
										15287
									],
									[
										15447,
										15449
									],
									[
										15552,
										15554
									],
									[
										15750,
										15752
									],
									[
										15757,
										15759
									],
									[
										15994,
										15996
									],
									[
										16004,
										16006
									],
									[
										16127,
										16129
									],
									[
										16285,
										16287
									],
									[
										16507,
										16509
									],
									[
										16514,
										16516
									],
									[
										16584,
										16586
									],
									[
										16591,
										16593
									],
									[
										16892,
										16894
									],
									[
										17190,
										17192
									],
									[
										17209,
										17211
									],
									[
										17413,
										17415
									],
									[
										17432,
										17434
									],
									[
										17701,
										17703
									],
									[
										17714,
										17716
									],
									[
										17722,
										17724
									],
									[
										17737,
										17739
									],
									[
										17744,
										17746
									],
									[
										17757,
										17759
									],
									[
										18006,
										18008
									],
									[
										18158,
										18160
									],
									[
										18340,
										18342
									],
									[
										18350,
										18352
									],
									[
										18392,
										18394
									],
									[
										18543,
										18545
									],
									[
										18723,
										18725
									],
									[
										18758,
										18760
									],
									[
										18910,
										18912
									],
									[
										18930,
										18932
									],
									[
										19140,
										19142
									],
									[
										19204,
										19206
									],
									[
										19337,
										19339
									],
									[
										19345,
										19347
									],
									[
										19352,
										19354
									],
									[
										19362,
										19364
									],
									[
										19402,
										19404
									],
									[
										19410,
										19412
									],
									[
										19423,
										19425
									],
									[
										19433,
										19435
									],
									[
										19606,
										19608
									],
									[
										19613,
										19615
									],
									[
										19626,
										19628
									],
									[
										19636,
										19638
									],
									[
										19901,
										19903
									],
									[
										19909,
										19911
									],
									[
										19924,
										19926
									],
									[
										19943,
										19945
									],
									[
										19970,
										19972
									],
									[
										20004,
										20006
									],
									[
										20124,
										20126
									],
									[
										20132,
										20134
									],
									[
										20146,
										20148
									],
									[
										20165,
										20167
									],
									[
										20192,
										20194
									],
									[
										20391,
										20393
									],
									[
										20399,
										20401
									],
									[
										20419,
										20421
									],
									[
										20450,
										20452
									],
									[
										20550,
										20552
									],
									[
										20556,
										20558
									],
									[
										20627,
										20629
									],
									[
										20642,
										20644
									],
									[
										20649,
										20651
									],
									[
										20669,
										20671
									],
									[
										20676,
										20678
									],
									[
										20694,
										20696
									],
									[
										20767,
										20769
									],
									[
										20781,
										20783
									],
									[
										20788,
										20790
									],
									[
										20807,
										20809
									],
									[
										20814,
										20816
									],
									[
										20831,
										20833
									],
									[
										20955,
										20957
									],
									[
										21006,
										21008
									],
									[
										21014,
										21016
									],
									[
										21133,
										21135
									],
									[
										21140,
										21142
									],
									[
										21204,
										21206
									],
									[
										21217,
										21219
									],
									[
										21373,
										21375
									],
									[
										21385,
										21387
									],
									[
										21448,
										21450
									],
									[
										21460,
										21462
									],
									[
										21654,
										21656
									],
									[
										21883,
										21885
									],
									[
										21925,
										21927
									],
									[
										22136,
										22138
									],
									[
										22481,
										22483
									],
									[
										22626,
										22628
									],
									[
										22830,
										22832
									],
									[
										22920,
										22922
									],
									[
										23174,
										23176
									],
									[
										23189,
										23191
									],
									[
										23334,
										23336
									],
									[
										23534,
										23536
									],
									[
										23562,
										23564
									],
									[
										23715,
										23717
									],
									[
										23722,
										23724
									],
									[
										23740,
										23742
									],
									[
										23795,
										23797
									],
									[
										23832,
										23834
									],
									[
										23837,
										23839
									],
									[
										23977,
										23979
									],
									[
										24021,
										24023
									],
									[
										24277,
										24279
									],
									[
										24308,
										24310
									],
									[
										24499,
										24501
									],
									[
										24680,
										24682
									],
									[
										24761,
										24763
									],
									[
										24888,
										24890
									],
									[
										24933,
										24935
									],
									[
										25015,
										25017
									],
									[
										25269,
										25271
									],
									[
										25459,
										25461
									],
									[
										25607,
										25609
									],
									[
										25645,
										25647
									],
									[
										25698,
										25700
									],
									[
										25961,
										25963
									],
									[
										26219,
										26221
									],
									[
										26290,
										26292
									],
									[
										26500,
										26502
									],
									[
										26622,
										26624
									],
									[
										26730,
										26732
									],
									[
										26820,
										26822
									],
									[
										26851,
										26853
									],
									[
										26862,
										26864
									],
									[
										26909,
										26911
									],
									[
										27062,
										27064
									],
									[
										27101,
										27103
									],
									[
										27122,
										27124
									],
									[
										27277,
										27279
									],
									[
										27290,
										27292
									],
									[
										27298,
										27300
									],
									[
										27309,
										27311
									],
									[
										27429,
										27431
									],
									[
										27441,
										27443
									],
									[
										27449,
										27451
									],
									[
										27457,
										27459
									],
									[
										27465,
										27467
									],
									[
										27663,
										27665
									],
									[
										27764,
										27766
									],
									[
										27856,
										27858
									],
									[
										28016,
										28018
									],
									[
										28067,
										28069
									],
									[
										28102,
										28104
									],
									[
										28212,
										28214
									],
									[
										28249,
										28251
									],
									[
										28372,
										28374
									],
									[
										28423,
										28425
									],
									[
										28458,
										28460
									],
									[
										28568,
										28570
									],
									[
										28605,
										28607
									],
									[
										28728,
										28730
									],
									[
										28774,
										28776
									],
									[
										28809,
										28811
									],
									[
										28919,
										28921
									],
									[
										28956,
										28958
									],
									[
										29069,
										29071
									],
									[
										29220,
										29222
									],
									[
										29226,
										29228
									],
									[
										29357,
										29359
									],
									[
										29364,
										29366
									],
									[
										29585,
										29587
									],
									[
										29591,
										29593
									],
									[
										29635,
										29637
									],
									[
										29641,
										29643
									],
									[
										29649,
										29651
									],
									[
										29655,
										29657
									],
									[
										29760,
										29762
									],
									[
										29768,
										29770
									],
									[
										29954,
										29956
									],
									[
										30074,
										30076
									],
									[
										30081,
										30083
									],
									[
										30104,
										30106
									],
									[
										30242,
										30244
									],
									[
										30364,
										30366
									],
									[
										30417,
										30419
									],
									[
										30563,
										30565
									],
									[
										30628,
										30630
									],
									[
										30847,
										30849
									],
									[
										30855,
										30857
									],
									[
										31073,
										31075
									],
									[
										31081,
										31083
									],
									[
										31107,
										31109
									],
									[
										31115,
										31117
									],
									[
										31343,
										31345
									],
									[
										31357,
										31359
									],
									[
										31364,
										31366
									],
									[
										31376,
										31378
									],
									[
										31401,
										31403
									],
									[
										31408,
										31410
									],
									[
										31561,
										31563
									],
									[
										31569,
										31571
									],
									[
										31605,
										31607
									],
									[
										31890,
										31892
									],
									[
										31898,
										31900
									],
									[
										32201,
										32203
									],
									[
										32436,
										32438
									],
									[
										32471,
										32473
									],
									[
										32481,
										32483
									],
									[
										32580,
										32582
									],
									[
										32625,
										32627
									],
									[
										32649,
										32651
									],
									[
										32656,
										32658
									],
									[
										32874,
										32876
									],
									[
										32884,
										32886
									],
									[
										32891,
										32893
									],
									[
										32916,
										32918
									],
									[
										32923,
										32925
									],
									[
										32949,
										32951
									],
									[
										33024,
										33026
									],
									[
										33253,
										33255
									],
									[
										33503,
										33505
									],
									[
										33511,
										33513
									],
									[
										33636,
										33638
									],
									[
										33643,
										33645
									],
									[
										33762,
										33764
									],
									[
										33769,
										33771
									],
									[
										33982,
										33984
									],
									[
										34114,
										34116
									],
									[
										34121,
										34123
									],
									[
										34203,
										34205
									],
									[
										34210,
										34212
									],
									[
										34228,
										34230
									],
									[
										34431,
										34433
									],
									[
										34641,
										34643
									],
									[
										34772,
										34774
									],
									[
										34779,
										34781
									],
									[
										34975,
										34977
									],
									[
										35212,
										35214
									],
									[
										35220,
										35222
									],
									[
										35228,
										35230
									],
									[
										35237,
										35239
									],
									[
										35247,
										35249
									],
									[
										35255,
										35257
									],
									[
										35264,
										35266
									],
									[
										35272,
										35274
									],
									[
										35290,
										35292
									],
									[
										35298,
										35300
									],
									[
										35495,
										35497
									],
									[
										35706,
										35708
									],
									[
										35876,
										35878
									],
									[
										36150,
										36152
									],
									[
										36445,
										36447
									],
									[
										36648,
										36650
									],
									[
										36883,
										36885
									],
									[
										36986,
										36988
									],
									[
										37154,
										37156
									],
									[
										37269,
										37271
									],
									[
										37576,
										37578
									],
									[
										37836,
										37838
									],
									[
										38134,
										38136
									],
									[
										38163,
										38165
									],
									[
										38701,
										38703
									],
									[
										38722,
										38724
									],
									[
										38998,
										39000
									],
									[
										39019,
										39021
									],
									[
										39303,
										39305
									],
									[
										39495,
										39497
									],
									[
										39674,
										39676
									],
									[
										39731,
										39733
									],
									[
										39917,
										39919
									],
									[
										40052,
										40054
									],
									[
										40180,
										40182
									],
									[
										40341,
										40343
									],
									[
										40392,
										40394
									],
									[
										40429,
										40431
									],
									[
										40570,
										40572
									],
									[
										40606,
										40608
									],
									[
										40729,
										40731
									],
									[
										40777,
										40779
									],
									[
										40813,
										40815
									],
									[
										40927,
										40929
									],
									[
										40967,
										40969
									],
									[
										41169,
										41171
									],
									[
										41395,
										41397
									],
									[
										41601,
										41603
									],
									[
										41770,
										41772
									],
									[
										42113,
										42115
									],
									[
										42323,
										42325
									],
									[
										42535,
										42537
									],
									[
										42862,
										42864
									],
									[
										42870,
										42872
									],
									[
										42982,
										42984
									],
									[
										43236,
										43238
									],
									[
										43678,
										43680
									],
									[
										43718,
										43720
									],
									[
										43892,
										43894
									],
									[
										44091,
										44093
									],
									[
										44152,
										44154
									],
									[
										44340,
										44342
									],
									[
										44393,
										44395
									],
									[
										44640,
										44642
									],
									[
										44648,
										44650
									],
									[
										44656,
										44658
									],
									[
										44821,
										44823
									],
									[
										44825,
										44827
									],
									[
										44838,
										44840
									],
									[
										44845,
										44847
									],
									[
										44866,
										44868
									],
									[
										44880,
										44882
									],
									[
										45078,
										45080
									],
									[
										45133,
										45135
									],
									[
										45285,
										45287
									],
									[
										45340,
										45342
									],
									[
										45528,
										45530
									],
									[
										45894,
										45896
									],
									[
										46257,
										46259
									],
									[
										46361,
										46363
									],
									[
										46541,
										46543
									],
									[
										46644,
										46646
									],
									[
										46807,
										46809
									],
									[
										46908,
										46910
									],
									[
										47252,
										47254
									],
									[
										47470,
										47472
									],
									[
										47701,
										47703
									],
									[
										48002,
										48004
									],
									[
										48098,
										48100
									],
									[
										48229,
										48231
									],
									[
										48285,
										48287
									],
									[
										48450,
										48452
									],
									[
										48623,
										48625
									],
									[
										48825,
										48827
									],
									[
										48894,
										48896
									],
									[
										49017,
										49019
									],
									[
										49025,
										49027
									],
									[
										49130,
										49132
									],
									[
										49373,
										49375
									],
									[
										49652,
										49654
									],
									[
										49821,
										49823
									],
									[
										50008,
										50010
									],
									[
										50156,
										50158
									],
									[
										50414,
										50416
									],
									[
										50508,
										50510
									],
									[
										50695,
										50697
									],
									[
										50782,
										50784
									],
									[
										50836,
										50838
									],
									[
										50923,
										50925
									],
									[
										50978,
										50980
									],
									[
										51160,
										51162
									],
									[
										51167,
										51169
									],
									[
										51373,
										51375
									],
									[
										51441,
										51443
									],
									[
										51504,
										51506
									],
									[
										51703,
										51705
									],
									[
										51772,
										51774
									],
									[
										51835,
										51837
									],
									[
										52006,
										52008
									],
									[
										52076,
										52078
									],
									[
										52140,
										52142
									],
									[
										52357,
										52359
									],
									[
										52426,
										52428
									],
									[
										52652,
										52654
									],
									[
										52910,
										52912
									],
									[
										52915,
										52917
									],
									[
										52942,
										52944
									],
									[
										53050,
										53052
									],
									[
										53098,
										53100
									],
									[
										53372,
										53374
									],
									[
										53396,
										53398
									],
									[
										53469,
										53471
									],
									[
										53509,
										53511
									],
									[
										53613,
										53615
									],
									[
										53621,
										53623
									],
									[
										53847,
										53849
									],
									[
										53855,
										53857
									],
									[
										53941,
										53943
									],
									[
										53996,
										53998
									],
									[
										54027,
										54029
									],
									[
										54215,
										54217
									],
									[
										54266,
										54268
									],
									[
										54591,
										54593
									],
									[
										54643,
										54645
									],
									[
										54952,
										54954
									],
									[
										55032,
										55034
									],
									[
										55091,
										55093
									],
									[
										55333,
										55335
									],
									[
										55413,
										55415
									],
									[
										55472,
										55474
									],
									[
										55710,
										55712
									],
									[
										55801,
										55803
									],
									[
										55861,
										55863
									],
									[
										56113,
										56115
									],
									[
										56204,
										56206
									],
									[
										56264,
										56266
									],
									[
										56468,
										56470
									],
									[
										56583,
										56585
									],
									[
										56671,
										56673
									],
									[
										56913,
										56915
									],
									[
										56921,
										56923
									],
									[
										57034,
										57036
									],
									[
										57042,
										57044
									],
									[
										57152,
										57154
									],
									[
										57171,
										57173
									],
									[
										57178,
										57180
									],
									[
										57218,
										57220
									],
									[
										57259,
										57261
									],
									[
										57300,
										57302
									],
									[
										57389,
										57391
									],
									[
										57439,
										57441
									],
									[
										57444,
										57446
									],
									[
										57555,
										57557
									],
									[
										57783,
										57785
									],
									[
										57806,
										57808
									],
									[
										58054,
										58056
									],
									[
										58418,
										58420
									],
									[
										58426,
										58428
									],
									[
										58583,
										58585
									],
									[
										58828,
										58830
									],
									[
										58835,
										58837
									],
									[
										58845,
										58847
									],
									[
										58885,
										58887
									],
									[
										58960,
										58962
									],
									[
										58970,
										58972
									],
									[
										58977,
										58979
									],
									[
										59021,
										59023
									],
									[
										59270,
										59272
									],
									[
										59310,
										59312
									],
									[
										59319,
										59321
									],
									[
										59359,
										59361
									],
									[
										59523,
										59525
									],
									[
										59764,
										59766
									],
									[
										59987,
										59989
									],
									[
										60165,
										60167
									],
									[
										60302,
										60304
									],
									[
										60549,
										60551
									],
									[
										60786,
										60788
									],
									[
										60850,
										60852
									],
									[
										60995,
										60997
									],
									[
										61099,
										61101
									],
									[
										61178,
										61180
									],
									[
										61392,
										61394
									],
									[
										61548,
										61550
									],
									[
										61757,
										61759
									],
									[
										61992,
										61994
									],
									[
										62160,
										62162
									],
									[
										62167,
										62169
									],
									[
										62437,
										62439
									],
									[
										62445,
										62447
									],
									[
										62630,
										62632
									],
									[
										62638,
										62640
									],
									[
										62814,
										62816
									],
									[
										62989,
										62991
									],
									[
										63147,
										63149
									],
									[
										63364,
										63366
									],
									[
										63576,
										63578
									],
									[
										63738,
										63740
									],
									[
										63819,
										63821
									],
									[
										63990,
										63992
									],
									[
										64026,
										64028
									],
									[
										64177,
										64179
									],
									[
										64293,
										64295
									],
									[
										64465,
										64467
									],
									[
										64499,
										64501
									],
									[
										64612,
										64614
									],
									[
										64738,
										64740
									],
									[
										64746,
										64748
									],
									[
										64820,
										64822
									],
									[
										64828,
										64830
									],
									[
										64911,
										64913
									],
									[
										64919,
										64921
									],
									[
										65058,
										65060
									],
									[
										65133,
										65135
									],
									[
										65294,
										65296
									],
									[
										65421,
										65423
									],
									[
										65637,
										65639
									],
									[
										65799,
										65801
									],
									[
										65924,
										65926
									],
									[
										66145,
										66147
									],
									[
										66273,
										66275
									],
									[
										66452,
										66454
									],
									[
										66614,
										66616
									],
									[
										66739,
										66741
									],
									[
										66966,
										66968
									],
									[
										67254,
										67256
									],
									[
										67261,
										67263
									],
									[
										67425,
										67427
									],
									[
										67432,
										67434
									],
									[
										67438,
										67440
									],
									[
										67480,
										67482
									],
									[
										67710,
										67712
									],
									[
										67722,
										67724
									],
									[
										67882,
										67884
									],
									[
										68084,
										68086
									],
									[
										68166,
										68168
									],
									[
										68174,
										68176
									],
									[
										68453,
										68455
									],
									[
										68460,
										68462
									],
									[
										68604,
										68606
									],
									[
										68611,
										68613
									],
									[
										68617,
										68619
									],
									[
										68651,
										68653
									],
									[
										68870,
										68872
									],
									[
										68979,
										68981
									],
									[
										69260,
										69262
									],
									[
										69306,
										69308
									],
									[
										69369,
										69371
									],
									[
										69608,
										69610
									],
									[
										69813,
										69815
									],
									[
										69828,
										69830
									],
									[
										70100,
										70102
									],
									[
										70108,
										70110
									],
									[
										70228,
										70230
									],
									[
										70441,
										70443
									],
									[
										70445,
										70447
									],
									[
										70449,
										70451
									],
									[
										70492,
										70494
									],
									[
										70500,
										70502
									],
									[
										70802,
										70804
									],
									[
										70810,
										70812
									],
									[
										71043,
										71045
									],
									[
										71104,
										71106
									],
									[
										71206,
										71208
									],
									[
										71267,
										71269
									],
									[
										71350,
										71352
									],
									[
										71411,
										71413
									],
									[
										71530,
										71532
									],
									[
										71540,
										71542
									],
									[
										71783,
										71785
									],
									[
										71821,
										71823
									],
									[
										71838,
										71840
									],
									[
										71852,
										71854
									],
									[
										71947,
										71949
									],
									[
										71957,
										71959
									],
									[
										72102,
										72104
									],
									[
										72253,
										72255
									],
									[
										72263,
										72265
									],
									[
										72434,
										72436
									],
									[
										72658,
										72660
									],
									[
										72666,
										72668
									],
									[
										73175,
										73177
									],
									[
										73187,
										73189
									],
									[
										73203,
										73205
									],
									[
										73419,
										73421
									],
									[
										73427,
										73429
									],
									[
										73871,
										73873
									],
									[
										73897,
										73899
									],
									[
										73912,
										73914
									],
									[
										74073,
										74075
									],
									[
										74081,
										74083
									],
									[
										74385,
										74387
									],
									[
										74404,
										74406
									],
									[
										74419,
										74421
									],
									[
										74575,
										74577
									],
									[
										74604,
										74606
									],
									[
										74809,
										74811
									],
									[
										74817,
										74819
									],
									[
										74975,
										74977
									],
									[
										75116,
										75118
									],
									[
										75273,
										75275
									],
									[
										75435,
										75437
									],
									[
										75443,
										75445
									],
									[
										75647,
										75649
									],
									[
										75794,
										75796
									],
									[
										75970,
										75972
									],
									[
										75978,
										75980
									],
									[
										76154,
										76156
									],
									[
										76163,
										76165
									],
									[
										76177,
										76179
									],
									[
										76388,
										76390
									],
									[
										76397,
										76399
									],
									[
										76415,
										76417
									],
									[
										76533,
										76535
									],
									[
										76552,
										76554
									],
									[
										76563,
										76565
									],
									[
										76579,
										76581
									],
									[
										76833,
										76835
									],
									[
										77046,
										77048
									],
									[
										77130,
										77132
									],
									[
										77264,
										77266
									],
									[
										77325,
										77327
									],
									[
										77523,
										77525
									],
									[
										77531,
										77533
									],
									[
										77681,
										77683
									],
									[
										77871,
										77873
									],
									[
										77879,
										77881
									],
									[
										77896,
										77898
									],
									[
										77904,
										77906
									],
									[
										78061,
										78063
									],
									[
										78117,
										78119
									],
									[
										78288,
										78290
									],
									[
										78316,
										78318
									],
									[
										78415,
										78417
									],
									[
										78565,
										78567
									],
									[
										78609,
										78611
									],
									[
										78775,
										78777
									],
									[
										78808,
										78810
									],
									[
										78963,
										78965
									],
									[
										79153,
										79155
									],
									[
										79165,
										79167
									],
									[
										79423,
										79425
									],
									[
										79664,
										79666
									],
									[
										79864,
										79866
									],
									[
										79908,
										79910
									],
									[
										80051,
										80053
									],
									[
										80220,
										80222
									],
									[
										80252,
										80254
									],
									[
										80318,
										80320
									],
									[
										80433,
										80435
									],
									[
										80580,
										80582
									],
									[
										80596,
										80598
									],
									[
										80683,
										80685
									],
									[
										80981,
										80983
									],
									[
										80995,
										80997
									],
									[
										81164,
										81166
									],
									[
										81285,
										81287
									],
									[
										81572,
										81574
									],
									[
										81692,
										81694
									],
									[
										81984,
										81986
									],
									[
										82013,
										82015
									],
									[
										82057,
										82059
									],
									[
										82157,
										82159
									],
									[
										82391,
										82393
									],
									[
										82555,
										82557
									],
									[
										82577,
										82579
									],
									[
										82780,
										82782
									],
									[
										82818,
										82820
									],
									[
										82835,
										82837
									],
									[
										82849,
										82851
									],
									[
										82927,
										82929
									],
									[
										82937,
										82939
									],
									[
										83082,
										83084
									],
									[
										83260,
										83262
									],
									[
										83268,
										83270
									],
									[
										83465,
										83467
									],
									[
										83658,
										83660
									],
									[
										83677,
										83679
									],
									[
										83696,
										83698
									],
									[
										83780,
										83782
									],
									[
										83806,
										83808
									],
									[
										83821,
										83823
									],
									[
										84024,
										84026
									],
									[
										84383,
										84385
									],
									[
										84392,
										84394
									],
									[
										84595,
										84597
									],
									[
										84631,
										84633
									],
									[
										84771,
										84773
									],
									[
										85020,
										85022
									],
									[
										85184,
										85186
									],
									[
										85402,
										85404
									],
									[
										85446,
										85448
									],
									[
										85500,
										85502
									],
									[
										85641,
										85643
									],
									[
										85662,
										85664
									],
									[
										85851,
										85853
									],
									[
										86145,
										86147
									],
									[
										86578,
										86580
									],
									[
										86720,
										86722
									],
									[
										86728,
										86730
									],
									[
										86966,
										86968
									],
									[
										87237,
										87239
									],
									[
										87535,
										87537
									],
									[
										88077,
										88080
									],
									[
										88316,
										88319
									],
									[
										88537,
										88540
									],
									[
										88981,
										88984
									],
									[
										89183,
										89186
									],
									[
										89627,
										89630
									],
									[
										89912,
										89919
									],
									[
										90056,
										90063
									],
									[
										90165,
										90172
									],
									[
										90266,
										90273
									],
									[
										90503,
										90551
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								90542,
								90542
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 14,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 46075.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13259,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2453.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3719,
						"regions":
						{
						},
						"selection":
						[
							[
								2742,
								2742
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1215.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								737,
								737
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17735,
						"regions":
						{
						},
						"selection":
						[
							[
								14089,
								14089
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 561.0,
						"translation.y": 9593.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4030,
						"regions":
						{
						},
						"selection":
						[
							[
								733,
								733
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 46.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				}
			]
		},
		{
			"selected": 25,
			"sheets":
			[
				{
					"buffer": 39,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								691,
								691
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								756,
								756
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47304,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 131.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31190,
						"regions":
						{
						},
						"selection":
						[
							[
								19677,
								19679
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13784.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6234,
						"regions":
						{
						},
						"selection":
						[
							[
								2627,
								2627
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1014.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8127,
						"regions":
						{
						},
						"selection":
						[
							[
								5245,
								5245
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 97.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4497,
						"regions":
						{
						},
						"selection":
						[
							[
								1313,
								1313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 626.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13259,
						"regions":
						{
						},
						"selection":
						[
							[
								1274,
								1274
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 890.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7294,
						"regions":
						{
						},
						"selection":
						[
							[
								4616,
								4616
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1145.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8626,
						"regions":
						{
						},
						"selection":
						[
							[
								7011,
								7011
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4347.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5697,
						"regions":
						{
						},
						"selection":
						[
							[
								5110,
								5110
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3450.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84966,
						"regions":
						{
						},
						"selection":
						[
							[
								53474,
								53474
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 34520.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88787,
						"regions":
						{
						},
						"selection":
						[
							[
								53636,
								53636
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36819.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6275,
						"regions":
						{
						},
						"selection":
						[
							[
								841,
								842
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52901,
						"regions":
						{
						},
						"selection":
						[
							[
								22801,
								22801
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15655.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8626,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15680,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5760.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52901,
						"regions":
						{
						},
						"selection":
						[
							[
								1320,
								1320
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 630.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2681,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68895,
						"regions":
						{
						},
						"selection":
						[
							[
								68522,
								68522
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 47745.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14129,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8670.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17236,
						"regions":
						{
						},
						"selection":
						[
							[
								11481,
								11481
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 487.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14147,
						"regions":
						{
						},
						"selection":
						[
							[
								6706,
								6706
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4710.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3651,
						"regions":
						{
						},
						"selection":
						[
							[
								1802,
								1802
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 95.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								480,
								480
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								1220,
								1220
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								390,
								390
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 99.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5274,
						"regions":
						{
						},
						"selection":
						[
							[
								1057,
								1057
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 771.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								1620,
								1620
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 253.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2650,
						"regions":
						{
						},
						"selection":
						[
							[
								2245,
								2245
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 152.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1615,
						"regions":
						{
						},
						"selection":
						[
							[
								1217,
								1217
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2266,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1896,
						"regions":
						{
						},
						"selection":
						[
							[
								1500,
								1500
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1752,
						"regions":
						{
						},
						"selection":
						[
							[
								1507,
								1507
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1680,
						"regions":
						{
						},
						"selection":
						[
							[
								238,
								238
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3139,
						"regions":
						{
						},
						"selection":
						[
							[
								954,
								954
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 407.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17735,
						"regions":
						{
						},
						"selection":
						[
							[
								13415,
								13415
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8871.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9516,
						"regions":
						{
						},
						"selection":
						[
							[
								8316,
								8316
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5127.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1859,
						"regions":
						{
						},
						"selection":
						[
							[
								806,
								806
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 304.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4030,
						"regions":
						{
						},
						"selection":
						[
							[
								2861,
								2861
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 208.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7182,
						"regions":
						{
						},
						"selection":
						[
							[
								1820,
								1832
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1072.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5299,
						"regions":
						{
						},
						"selection":
						[
							[
								2354,
								2354
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1422.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4488,
						"regions":
						{
						},
						"selection":
						[
							[
								966,
								966
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 465.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3022,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 26.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 761,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6815,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								636,
								636
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2382,
						"regions":
						{
						},
						"selection":
						[
							[
								555,
								555
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1982,
						"regions":
						{
						},
						"selection":
						[
							[
								333,
								333
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6750,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 254.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6622,
						"regions":
						{
						},
						"selection":
						[
							[
								696,
								698
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4270,
						"regions":
						{
						},
						"selection":
						[
							[
								1158,
								1158
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3719,
						"regions":
						{
						},
						"selection":
						[
							[
								1949,
								1951
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								859,
								859
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 259.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.605446623094,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shipclas",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"plasm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"fli",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"imag",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"mxi",
				"C:\\xampp\\htdocs\\fire\\server\\mixed.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"n",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"wp",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"game.j",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"dark",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"gma",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"ssh",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"lgo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"np",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"gam.j",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"fligh",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"shipc",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"vorc",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"ix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"script",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"postg",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"ja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"ind",
				"C:\\xampp\\htdocs\\fire\\index.php"
			],
			[
				"glob",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"parti",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"oly",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"mixed",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"da",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"ol",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"snonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"game.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"hy",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"dar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"olm",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"olmy",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"demo",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"teth",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"ave",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"comb",
				"C:\\xampp\\htdocs\\fire\\combattest.php"
			],
			[
				"nono",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"comba",
				"C:\\xampp\\htdocs\\fire\\combattest.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 128.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
