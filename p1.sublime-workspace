{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"getImp",
				"getTotalImpulse"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"getRem",
				"getRemainingAmmo"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"back",
				"background-color"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"getU",
				"getUnitById"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"getRe",
				"getRelevantBallistics"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"getHit",
				"getHitChance"
			],
			[
				"fire",
				"fireOrders"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"draw",
				"drawExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"rema",
				"getRemainingDelay"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"getBas",
				"getBaseHitChance"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"getRema",
				"getRemainingIntegrity"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			],
			[
				"target",
				"targetInfo"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"stru",
				"structures"
			],
			[
				"getRemaining",
				"getRemainingIntegrity"
			],
			[
				"prima",
				"primaryContainer"
			],
			[
				"is",
				"isInArc"
			],
			[
				"db",
				"dbManager"
			],
			[
				"hangar",
				"hangarLoadoutDiv"
			],
			[
				"getE",
				"getElementById"
			],
			[
				"flight",
				"flightSelection"
			],
			[
				"create",
				"createLogEntry"
			],
			[
				"explo",
				"exploAnimated"
			],
			[
				"pro",
				"projSpeed"
			],
			[
				"struc",
				"structureid"
			],
			[
				"addDama",
				"addDamagesToShip"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"resolve",
				"resolveBallisticMovement"
			],
			[
				"getR",
				"getRemainingIntegrity"
			],
			[
				"reSolve",
				"resolveFireOrder"
			],
			[
				"animateShV",
				"animateShipVsBallisticsFire"
			],
			[
				"getShipV",
				"getShipVsBallisticsAnimationDetails"
			],
			[
				"arm",
				"armourDmg"
			],
			[
				"insertBs",
				"insertBallisticActions"
			],
			[
				"Struct",
				"structDiv"
			],
			[
				"vecto",
				"vectorDiv"
			],
			[
				"int",
				"integrity"
			],
			[
				"getRemain",
				"getRemainingImpulse"
			],
			[
				"getF",
				"getPlannedFacingToMove"
			],
			[
				"getRemai",
				"getRemainingDelay"
			],
			[
				"vector",
				"drawVectorIndicator"
			],
			[
				"getIm",
				"getImpulseChangeCost"
			],
			[
				"undo",
				"undoLastAction"
			],
			[
				"drawmov",
				"drawMovementUI"
			],
			[
				"impu",
				"impulseGUI"
			],
			[
				"disable",
				"disableDeployment"
			],
			[
				"beam",
				"beamWidth"
			],
			[
				"disa",
				"disableDeployment"
			],
			[
				"deploy",
				"deployWrapper"
			],
			[
				"selee",
				"canSelectReinforcement"
			],
			[
				"text-",
				"text-align"
			],
			[
				"shipc",
				"shipClass"
			],
			[
				"getFact",
				"getShipsForFaction"
			],
			[
				"proto",
				"prototype"
			],
			[
				"re",
				"reinforcementsTD"
			],
			[
				"mem",
				"memory_get_usage"
			],
			[
				"json_",
				"json_encode"
			],
			[
				"calcu",
				"calculateHitChance"
			],
			[
				"getD",
				"getDmgLoss"
			],
			[
				"rollf",
				"rollForDamage"
			],
			[
				"jsco",
				"json_encode"
			],
			[
				"jso",
				"JSON"
			],
			[
				"gets",
				"getShipsForFaction"
			],
			[
				"showSHi",
				"showShipList"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"spee",
				"speedChange"
			],
			[
				"background",
				"background-color"
			],
			[
				"JS",
				"json_decode"
			],
			[
				"drawSh",
				"drawShipForPreview"
			],
			[
				"elint",
				"elintResult"
			],
			[
				"json",
				"json_encode"
			],
			[
				"addTa",
				"addTableRedBackground"
			],
			[
				"currentS",
				"currentSubTick"
			],
			[
				"current",
				"currentSubStick"
			],
			[
				"Fetch",
				"FETCH_ASSOC"
			],
			[
				"exe",
				"execute"
			],
			[
				"Fet",
				"FETCH_ASSOC"
			],
			[
				"erro",
				"errorCode"
			],
			[
				"fetch",
				"FETCH_ASSOC"
			],
			[
				"isE",
				"isEqual"
			],
			[
				"getL",
				"getLastInsertId"
			],
			[
				"p",
				"possibleLanes"
			],
			[
				"gate",
				"gateSelected"
			],
			[
				"off",
				"offSetX"
			],
			[
				"getH",
				"getHexById"
			],
			[
				"act",
				"activeHover"
			],
			[
				"ships",
				"shipActions"
			],
			[
				"getElement",
				"getElementsByTagName"
			],
			[
				"cont",
				"contextmenu"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"update",
				"updatePlayerStatus"
			],
			[
				"createF",
				"createFleetAndTransfer"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5590,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 4246,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 28988,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 16518,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2954,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shipclasses.js",
			"settings":
			{
				"buffer_size": 55606,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 5899,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 455,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3579,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 14798,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 34666,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 39559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 187,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3637,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2684,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2478,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2244,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1710,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 3697,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 2837,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 15923,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 3046,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3573,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\nclass Ship {\n\tpublic $id;\n\tpublic $facing = 0;\n\tpublic $shipType = \"Ship\";\n\tpublic $userid;\n\tpublic $available;\n\tpublic $status;\n\tpublic $destroyed;\n\n\tpublic $baseHitChance;\n\tpublic $currentImpulse;\n\tpublic $baseImpulse;\n\n\tpublic $name;\n\tpublic $faction;\n\tpublic $size;\n\tpublic static $value;\n\tpublic $cost;\n\n\tpublic $ship = true;\n\tpublic $flight = false;\n\tpublic $salvo = false;\n\n\tpublic $mass = 0;\n\tpublic $profile = array();\n\tpublic $index = 0;\n\tpublic $actions = array();\n\tpublic $structures = array();\n\n\tpublic $hitTable;\n\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n\t\t$this->id = $id;\n\t\t$this->userid = $userid;\n\t\t$this->available = $available;\n\t\t$this->status = $status;\n\t\t$this->destroyed = $destroyed;\n\t\t\n\t\t$this->addStructures();\n\t\t$this->addPrimary();\n\t\t\n\t\t$this->baseHitChance = ceil(pow($this->mass, 1/3)*5);\n\t\t$this->cost = static::$value;\n\t}\n\n\tpublic function getId(){\n\t\t$this->index++;\n\t\treturn $this->index;\n\t}\n\n\tpublic function setProps(){\n\t\t$this->setCurrentImpulse();\n\t}\n\n\tpublic function getBaseImpulse(){\n\t\treturn $this->baseImpulse;\n\t}\n\n\tpublic function setCurrentImpulse(){\n\t\t$base = $this->getBaseImpulse();\n\t\t$step = $this->getImpulseStep();\n\n\t\tfor ($i = 0; $i < sizeof($this->actions); $i++){\n\t\t\tif ($this->actions[$i]->type == \"speedChange\"){\n\t\t\t\t$base += $step*$this->actions[$i]->dist;\n\t\t\t}\n\t\t}\n\n\t\t$this->currentImpulse = $base;\n\t}\n\n\tpublic function getCurrentImpulse(){\n\t\treturn $this->currentImpulse;\n\t}\n\n\tpublic function addFighterout($dbLoad){ // [4, 17, 17]\n\t\t$chunk = array();\n\t\t$chunk[] = $dbLoad[0];\n\n\t\tfor ($i = 1; $i < sizeof($dbLoad); $i++){\n\t\t\tif ($dbLoad[$i][\"systemid\"] != $chunk[sizeof($chunk)-1][\"systemid\"]){\n\t\t\t\t$this->getSystemById($chunk[sizeof($chunk)-1][\"systemid\"])->adjustLoad($chunk);\n\t\t\t\t$chunk = array();\n\t\t\t\t$chunk[] = $dbLoad[$i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$chunk[] = $dbLoad[$i];\n\t\t\t}\n\t\t}\n\n\t\t$this->getSystemById($chunk[sizeof($chunk)-1][\"systemid\"])->adjustLoad($chunk);\n\n\t\treturn true;\n\t}\n\n\tpublic function addFireDB($fires){\n\t\tfor ($i = 0; $i < sizeof($fires); $i++){\n\t\t\tif ($fires[$i]->shooterid == $this->id){\n\t\t\t\t$this->getBaseSystemById($fires[$i]->weaponid)->fireOrders[] = $fires[$i];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function addDamageDB($damages){\n\t\tfor ($i = 0; $i < sizeof($damages); $i++){\n\t\t\t$this->getStructureById($damages[$i]->structureid)->damages[] = $damages[$i];\n\n\t\t\tif ($damages[$i]->systemid == -1){\n\t\t\t\t$this->primary->damages[] = $damages[$i];\n\t\t\t}\n\t\t\telse $this->getBaseSystemById($damages[$i]->systemid)->damages[] = $damages[$i];\n\t\t}\n\t}\n\n\tpublic function addPowerDB($powers){\n\t\tfor ($i = 0; $i < sizeof($powers); $i++){\n\t\t\t$this->getBaseSystemById($powers[$i]->systemid)->addPowerEntry($powers[$i]);\n\t\t}\n\t}\n\n\tpublic function addCritDB($crits){\n\t\tfor ($j = 0; $j < sizeof($crits); $j++){\n\t\t\tfor ($k = 0; $k < sizeof($this->structures); $k++){\n\t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$k]->systems); $l++){\n\t\t\t\t\tif ($this->structures[$k]->systems[$l]->id == $crits[$j]->systemid){\n\t\t\t\t\t\t$this->structures[$k]->systems[$l]->crits[] = $crits[$j];\n\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor ($k = 0; $k < sizeof($this->primary->systems); $k++){\n\t\t\t\tif ($this->primary->systems[$k]->id == $crits[$j]->systemid){\n\t\t\t\t\t$this->primary->systems[$k]->crits[] = $crits[$j];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic function setupForDamage(){\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\t$this->structures[$i]->setRemainingIntegrity();\n\t\t}\n\t\t$this->primary->setRemainingIntegrity();\n\t\t//Debug::log(\"ship #\".$this->id.\" setup for Damage, remaining: \".$this->primary->remaining);\n\t}\n\n\tpublic function applyDamage($dmg){\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tif ($this->structures[$i]->id == $dmg->structureid){\n\t\t\t\t$this->structures[$i]->applyDamage($dmg);\n\t\t\t\tif ($dmg->systemid == -1){\n\t\t\t\t\t$this->primary->applyDamage($dmg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\t\t\tif ($this->structures[$i]->systems[$j]->id == $dmg->systemid){\n\t\t\t\t\t\t\t$this->structures[$i]->systems[$j]->applyDamage($dmg);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor ($j = 0; $j < sizeof($this->primary->systems); $j++){\n\t\t\t\t\t\tif ($this->primary->systems[$j]->id == $dmg->systemid){\n\t\t\t\t\t\t\t$this->primary->systems[$j]->applyDamage($dmg);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tDebug::log(\"couldnt apply dmg\");\n\t\treturn;\n\t}\n\n\n\tpublic function setState($turn){\n\t\tfor ($i = sizeof($this->primary->damages)-1; $i >= 0; $i--){\n\t\t\tif ($this->primary->damages[$i]->destroyed){\n\t\t\t\t$this->destroyed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\t$this->primary->systems[$i]->setState($turn);\n\t\t\tif ($this->primary->systems[$i]->name == \"Reactor\"){\n\t\t\t\tif ($this->primary->systems[$i]->destroyed){\n\t\t\t\t\t$this->destroyed = true;\n\t\t\t\telse if ($this->primary->systems[$i]->disabled){\n\t\t\t\t\t$this->doUnpowerAllSystems($turn);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\t$this->structures[$i]->systems[$j]->setState($turn);\n\t\t\t}\n\t\t}\n\n\t\t$this->setProps();\n\n\t\treturn true;\n\t}\n\n\tpublic function doUnpowerAllSystems($turn){\n\t\treturn;\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\t$this->structures[$i]->systems[$j]->doUnpower($turn);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getPowerReq(){\n\t\t$need = 0;\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\t$need += $this->structures[$i]->systems[$j]->powerReq;\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\t$need += $this->primary->systems[$i]->powerReq;\n\t\t}\n\t\treturn $need;\n\t}\n\n\tpublic function getRemainingIntegrity($fire){\n\t\t$total = $this->primary->integrity;\n\t\tfor ($i = 0; $i < sizeof($this->primary->damages); $i++){\n\t\t\t$total = $total - $this->primary->damages[$i]->structDmg;\n\t\t}\n\t\treturn $total;\n\t}\n\n\tpublic function isDestroyed(){\n\t\tif ($this->destroyed){\n\t\t\treturn true;\n\t\t}\n\t\telse if ($this->getSystemByName(\"Reactor\")->destroyed){\n\t\t\t$this->destroyed = true;\n\t\t\treturn true;\n\t\t}\n\n\t\tfor ($i = 0; $i < sizeof($this->primary->damages); $i++){\n\t\t\tif ($this->primary->damages[$i]->destroyed){\n\t\t\t\t$this->destroyed = true;\n\t\t\t\t$this->status = \"destroyed\";\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function resolveFireOrder($fire){\n\t\tDebug::log(\"resolveFireOrder ID \".$fire->id.\", shooter: \".get_class($fire->shooter).\" #\".$fire->shooterid.\" vs \".get_class($fire->target).\" #\".$fire->targetid.\", w: \".get_class($fire->weapon).\" #\".$fire->weaponid);\n\n\t\tif ($this->isDestroyed()){\n\t\t\t$fire->resolved = -1;\n\t\t}\n\t\telse {\n\t\t\t$fire->dist = $this->getHitDist($fire);\n\t\t\t$fire->angleIn = $this->getHitAngle($fire);\n\t\t\t$fire->hitSection = $this->getHitSection($fire);\n\t\t\t$fire->req = ceil(($this->getHitChance($fire) / 100 * $fire->weapon->getFireControlMod($fire)) - $fire->weapon->getAccLoss($fire->dist));\n\t\t\t//Debug::log(\"normal hitangle from ship #\".$fire->shooter->id.\" to target #\".$this->id.\" : \".$fire->angleIn.\", picking section: \".$fire->hitSection);\n\t\t\t$fire->weapon->rollForHit($fire);\n\n\t\t\tif ($fire->hits){\n\t\t\t\t$fire->weapon->doDamage($fire);\n\t\t\t}\n\t\t\t$fire->resolved = 1;\n\t\t}\n\t}\n\n\tpublic function resolveBallisticFireOrder($fire){\n\t\tDebug::log(\"resolveBallisticFireOrder ID \".$fire->id.\", shooter: \".get_class($fire->shooter).\" #\".$fire->shooterid.\" vs \".get_class($fire->target).\" #\".$fire->targetid.\", w: \".$fire->weaponid);\n\n\t\tif ($this->isDestroyed()){\n\t\t\t$fire->resolved = -1;\n\t\t}\n\t\telse {\n\t\t\t$fire->dist = 0;\n\t\t\t$fire->angleIn = $this->getBallisticHitAngle($fire);\n\t\t\t$fire->hitSection = $this->getHitSection($fire);\n\t\t\t$fire->req = ceil($fire->weapon->getFireControlMod($fire));\n\t\t\t$fire->weapon->rollForHit($fire);\n\n\t\t\tif ($fire->hits){\n\t\t\t\t$fire->weapon->doDamage($fire);\n\t\t\t}\n\t\t\t$fire->resolved = 1;\n\t\t}\n\t}\n\n\tpublic function getHitSection($fire){\n\t\t$locs = array();\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tif (Math::isInArc($fire->angleIn, $this->structures[$i]->start, $this->structures[$i]->end)){\n\t\t\t\t$locs[] = $this->structures[$i]->id;\n\t\t\t}\n\t\t}\n\t\treturn $locs[mt_rand(0, sizeof($locs)-1)];\n\t}\n\n\tpublic function getHitSystem($fire){\n\t\t$roll;\n\t\t$current = 0;\n\t\t$total = $this->primary->getHitChance();\n\n\t\t$struct = $fire->target->getStructureById($fire->hitSection);\n\n\t\tfor ($i = 0; $i < sizeof($struct->systems); $i++){\n\t\t\tif (!$struct->systems[$i]->destroyed){\n\t\t\t\t$total += $struct->systems[$i]->getHitChance();\n\t\t\t}\n\t\t}\n\n\t\t$roll = mt_rand(0, $total);\n\t\t$current += $this->primary->getHitChance();\n\t\tif ($roll <= $current){\n\t\t\treturn $this->getPrimaryHitSystem();\n\t\t}\n\t\telse {\n\t\t\tfor ($i = 0; $i < sizeof($struct->systems); $i++){\n\t\t\t\tif (!$struct->systems[$i]->destroyed){\n\t\t\t\t\t$current += $struct->systems[$i]->getHitChance();\n\t\t\t\t\tif ($roll <= $current){\n\t\t\t\t\t\t//Debug::log(\"EXTERNAL HIT: \".$struct->systems[$i]->name.\" #\".$struct->systems[$i]->id);\n\t\t\t\t\t\treturn $struct->systems[$i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getPrimaryHitSystem(){\n\t\t$roll;\n\t\t$current = 0;\n\t\t$total = $this->primary->getHitChance();\n\t\t$fraction = round($this->primary->remaining / $this->primary->integrity, 3);\n\t\t//Debug::log(\"fraction:\".$fraction);\n\t\t$valid = array();\n\n\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\tif (! $this->primary->systems[$i]->destroyed){\n\t\t\t\tif ($this->isHitable($fraction, $this->primary->systems[$i])){\n\t\t\t\t\t$valid[] = $this->primary->systems[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!sizeof($valid)){\n\t\t\treturn $this->primary;\n\t\t}\n\n\t\t//Debug::log(\"valid:\".sizeof($valid));\n\n\t\tfor ($i = 0; $i < sizeof($valid); $i++){\n\t\t\t$total += $valid[$i]->getHitChance();\n\t\t}\n\t\t$roll = mt_rand(0, $total);\n\t\t$current += $this->primary->getHitChance();\n\n\t\tif ($roll <= $current){\n\t\t\t//Debug::log(\"hitting main structure\");\n\t\t\treturn $this->primary;\n\t\t}\n\t\telse {\n\t\t\t//Debug::log(\"hitting internal\");\n\t\t\tfor ($i = 0; $i < sizeof($valid); $i++){\n\t\t\t\t$current += $valid[$i]->getHitChance();\n\t\t\t\tif ($roll <= $current){\n\t\t\t\t\t//Debug::log(\"non primary HIT --- \".$valid[$i]->name.\" #\".$valid[$i]->id);\n\t\t\t\t\treturn $valid[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function isHitable($fraction, $system){\n\t\tif ($fraction <= $this->getHitTreshold($system)){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function getHitChance($fire){\n\t\t$angle = $fire->angleIn;\n\n\t\twhile ($angle > 90){\n\t\t\t$angle -= 180;\n\t\t}\n\t\tif ($angle < 0){\n\t\t\t$angle *= -1;\n\t\t}\n\t\t\n\t\t$base = $this->getBaseHitChance() * $this->getProfileMod();\n\t\t$a = $base * $this->profile[0];\n\t\t$b = $base * $this->profile[1];\n\t\t$sub = ((90 - $angle) * $a) + (($angle - 0) * $b);\n\t\t$sub /= (90 - 0);\n\n\t\treturn ceil($sub);\n\t}\n\n\tpublic function getBaseHitChance(){\n\t\treturn $this->baseHitChance;\n\t}\n\n\tpublic function getProfileMod(){\n\t\treturn 1+($this->getBaseImpulse() / $this->getCurrentImpulse()-1)/2;\n\t}\n\n\tpublic function getImpulseStep(){\n\t\treturn floor($this->getBaseImpulse() / 10);\n\t}\n\n\tpublic function getCurrentPosition(){\n\t\tfor ($i = sizeof($this->actions)-1; $i >= 0; $i--){\n\t\t\tif ($this->actions[$i]->resolved == 1){\n\t\t\t\treturn new Point($this->actions[$i]->x, $this->actions[$i]->y);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic function getHitDist($fire){\n\t\t$tPos = $this->getCurrentPosition();\n\t\t$sPos = $fire->shooter->getCurrentPosition();\n\t\treturn Math::getDist($tPos->x, $tPos->y, $sPos->x, $sPos->y);\n\t}\n\n\tpublic function getHitAngle($fire){\n\t\t$tPos = $this->getCurrentPosition();\n\t\t$sPos = $fire->shooter->getCurrentPosition();\n\t\t$angle = Math::getAngle($tPos->x, $tPos->y, $sPos->x, $sPos->y);\n\t\treturn round(Math::addAngle($this->facing, $angle));\n\t}\n\n\tpublic function getBallisticHitAngle($fire){\n\t\t$tPos = $this->getCurrentPosition();\n\t\t$sPos = $fire->shooter->getImpactTrajectory();\n\n\t\t$angle = Math::getAngle($tPos->x, $tPos->y, $sPos->x, $sPos->y);\n\t\treturn round(Math::addAngle($this->facing, $angle));\n\t}\n\n\tpublic function testCriticalsShipLevel($turn, $phase){\n\t\t//Debug::log(\"= testCriticalsShipLevel for \".$this->classname.\", \".$this->id.\", turn: \".$turn);\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\t$this->structures[$i]->testCriticalsStructureLevel($turn);\n\t\t}\n\t\tif($this->ship){\n\t\t\t$this->primary->testCriticalsStructureLevel($turn);\n\t\t}\n\t}\n\n\tpublic function addSystem($obj){\n\t\t$obj->id = sizeof($this->systems)+1;\n\t\t$obj->parentid = $this->id;\n\n\t\t$this->systems[] = $obj;\n\t}\n\n\tpublic function getStructureById($id){\n\t\t//Debug::log(\"looking for: \".$id);\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\t//Debug::log(\"now: \".$this->structures[$i]->id);\n\t\t\tif ($this->structures[$i]->id == $id){\n\t\t\t\treturn $this->structures[$i];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getBaseSystemById($id){\n\t\t//echo $id.\"</br>\";\n\t\tif ($this->ship){\n\t\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\t\tif ($this->primary->systems[$i]->id == $id){\n\t\t\t\t\treturn $this->primary->systems[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\tif ($this->structures[$i]->systems[$j]->id == $id){\n\t\t\t\t\treturn $this->structures[$i]->systems[$j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getSystemById($id){\n\t\tif ($id == -1){\n\t\t\treturn $this->primary;\n\t\t}\n\t\telse {\n\t\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\t\tif ($this->primary->systems[$i]->id == $id){\n\t\t\t\t\treturn $this->primary->systems[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\t\tif ($this->structures[$i]->systems[$j]->id == $id){\n\t\t\t\t\t\treturn $this->structures[$i]->systems[$j]->getActiveSystem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getSystemByName($name){\n\t\tfor ($i = 0; $i < sizeof($this->primary->systems); $i++){\n\t\t\tif ($this->primary->systems[$i]->name == $name){\n\t\t\t\treturn $this->primary->systems[$i];\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\t\t\t\tif ($this->structures[$i]->systems[$j]->name == $name){\n\t\t\t\t\treturn $this->structures[$i]->systems[$j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getInternals(){\n\t\treturn $this->primary->systems[0]->integrity / $this->primary->integrity;\n\t}\n\n\tpublic function getWeapons(){\n\t\t$mass = 0;\n\n\t\tfor ($j = 0; $j < sizeof($this->structures); $j++){\n\t\t\tfor ($k = 0; $k < sizeof($this->structures[$j]->systems); $k++){\n\t\t\t\tif (is_a($this->structures[$j]->systems[$k], \"Hangar\")){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$mass += $this->structures[$j]->systems[$k]->mass;\n\t\t\t}\n\t\t}\n\t\treturn $mass;\n\t}\n\n\tpublic function getArmour(){\n\t\t$data = array(\n\t\t\t\"integrity\" => 0,\n\t\t\t\"negation\" => array()\n\t\t);\n\n\t\t$total = 0;\n\n\t\tforeach ($this->structures as $struct){\n\t\t\t$data[\"integrity\"] += $struct->integrity;\n\t\t\t$data[\"negation\"][] = $struct->negation;\n\t\t}\n\t\treturn $data;\n\t}\n\n\tpublic function getStructure(){\n\t\treturn $this->primary->integrity;\n\t}\n\n\tpublic function getEP(){\n\t\tfor ($j = 0; $j < sizeof($this->primary->systems); $j++){\n\t\t\tif ($this->primary->systems[$j]->name == \"Engine\"){\n\t\t\t\treturn $this->primary->systems[$j]->output;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getTurnCost(){\n\t\treturn ceil(pow($this->mass, 1.56) / 10000);\n\t}\n\n\tpublic function getNewCrits($turn){\n\t\t$crits = array();\n\t\tfor ($j = 0; $j < sizeof($this->structures); $j++){\n\t\t\tfor ($k = 0; $k < sizeof($this->structures[$j]->systems); $k++){\n\t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$j]->systems[$k]->crits); $l++){\n\t\t\t\t\tif ($this->structures[$j]->systems[$k]->crits[$l]->turn == $turn){\n\t\t\t\t\t\t$crits[] = $this->structures[$j]->systems[$k]->crits[$l];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor ($k = 0; $k < sizeof($this->primary->systems); $k++){\n\t\t\tfor ($l = 0; $l < sizeof($this->primary->systems[$k]->crits); $l++){\n\t\t\t\tif ($this->primary->systems[$k]->crits[$l]->turn == $turn){\n\t\t\t\t\t$crits[] = $this->primary->systems[$k]->crits[$l];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $crits;\n\t}\n\n\tpublic function getHitTreshold($system){\n\t\treturn $this->hitTable[$system->name];\n\t}\n}\n\n\nclass UltraHeavy extends Ship {\n\tpublic $baseImpulse = 115;\n\t\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 0.25,\n\t\t\t\"Engine\" => 0.4,\n\t\t\t\"LifeSupport\" => 0.6,\n\t\t\t\"Sensor\" => 0.7,\n\t\t\t\"Reactor\" => 0.6\n\t\t);\n\t}\n}\n\nclass SuperHeavy extends Ship {\n\tpublic $baseImpulse = 125;\n\t\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 0.35,\n\t\t\t\"Engine\" => 0.5,\n\t\t\t\"LifeSupport\" => 0.6,\n\t\t\t\"Sensor\" => 0.75,\n\t\t\t\"Reactor\" => 0.7\n\t\t);\n\t}\n}\n\nclass Heavy extends Ship {\n\tpublic $baseImpulse = 135;\n\t\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 0.45,\n\t\t\t\"Engine\" => 0.6,\n\t\t\t\"LifeSupport\" => 0.7,\n\t\t\t\"Sensor\" => 0.85,\n\t\t\t\"Reactor\" => 0.7\n\t\t);\n\t}\n}\n\nclass Medium extends Ship {\n\tpublic $baseImpulse = 150;\n\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 0.55,\n\t\t\t\"Engine\" => 0.6,\n\t\t\t\"LifeSupport\" => 0.8,\n\t\t\t\"Sensor\" => 0.9,\n\t\t\t\"Reactor\" => 0.7\n\t\t);\n\t}\n}\n\nclass Light extends Ship {\n\tpublic $baseImpulse = 165;\n\t\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 0.7,\n\t\t\t\"Engine\" => 0.7,\n\t\t\t\"LifeSupport\" => 1,\n\t\t\t\"Sensor\" => 1,\n\t\t\t\"Reactor\" => 0.8\n\t\t);\n\t}\n}\n\nclass SuperLight extends Ship {\n\tpublic $baseImpulse = 180;\n\t\n\tfunction __construct($id, $userid, $available, $status, $destroyed){\n        parent::__construct($id, $userid, $available, $status, $destroyed);\n\t\t$this->hitTable = array(\n\t\t\t\"Bridge\" => 1,\n\t\t\t\"Engine\" => 1,\n\t\t\t\"LifeSupport\" => 1,\n\t\t\t\"Sensor\" => 1,\n\t\t\t\"Reactor\" => 0.9\n\t\t);\n\t}\n}\n\n?>\n",
			"file": "server/ship.php",
			"file_size": 18789,
			"file_write_time": 131375322610102029,
			"settings":
			{
				"buffer_size": 18136,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 8588,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 579,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 13823,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function System(system){\n\tthis.id = system.id;\n\tthis.parentId = system.parentId;\n\tthis.name = system.name;\n\tthis.display = system.display;\n\tthis.integrity = system.integrity;\n\tthis.powerReq = system.powerReq;\n\tthis.output = system.output;\n\tthis.effiency = system.effiency;\n\tthis.maxBoost = system.maxBoost;\n\tthis.boostEffect = system.boostEffect;\n\tthis.armourMod = system.armourMod;\n\tthis.disabled = system.disabled;\n\tthis.crits = [];\n\tthis.damages = [];\n\tthis.detailsTable = false;\n\tthis.highlight = false;\n\tthis.selected = false;\n\tthis.destroyed = false;\n\tthis.disabled = false;\n\tthis.weapon = false;\n\tthis.totalCost = 0;\n\tthis.powers = [];\n\tthis.fireOrders = [];\n\tthis.type = \"\";\n\tthis.modes = {};\n\tthis.element;\n\tthis.armour;\n\tthis.type = system.type || \"Internal\";\n\tthis.dual = 0;\n\tthis.locked = 0;\n\tthis.loadout = 0;\n\tthis.loaded = 0;\n}\nSystem.prototype.setState = function(){\n\tif (this.isDestroyed()){\n\t\tthis.destroyed = true;\n\t}\n\telse {\n\t\tthis.setTimeLoaded();\n\t\tif (game.phase == -1 && game.turn > 1){\n\t\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\t\tif (this.powers[i].turn == game.turn-1){\n\t\t\t\t\t//if (this.getLoadLevel() >= 1){\n\t\t\t\t\t\tthis.copyPowers();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//}\n\t\t\t\t}\n\t\t\t\telse if (this.powers[i].turn < game.turn -1){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.isUnpowered()){\n\t\t\tthis.disabled = true;\n\t\t}\n\t}\n\tthis.adjustStateByCritical();\n}\nSystem.prototype.getSystem = function(){\n\treturn this;\n}\nSystem.prototype.getActiveWeapon = function(){\n\treturn this;\n}\nSystem.prototype.hover = function(e){\n\tif (game.flightDeploy){return false;}\n\tif (this.highlight){\n\t\tthis.highlight = false;\n\t\tthis.hideInfoDiv(e);\n\t\tthis.hideOptions();\n\t}\n\telse {\n\t\tthis.highlight = true;\n\t\tthis.showInfoDiv(e);\n\t\tthis.showOptions();\n\t}\n\tif (this instanceof Hangar){\n\t\tif (game.getUnitById(this.parentId).hasWeaponsSelected()){\n\t\t\treturn;\n\t\t}\n\t\telse if (this.highlight){\n\t\t\tthis.drawArc();\n\t\t}\n\t\telse fxCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\telse if (!game.getUnitById(this.parentId).hasHangarSelected()){\n\t\tgame.getUnitById(this.parentId).highlightAllSelectedWeapons();\n\t}\n}\nSystem.prototype.setTableRow = function(){\n\tvar ele = $(this.element);\n\tif (this.destroyed){\n\t\tele.addClass(\"destroyed\");\n\t} else ele.removeClass(\"destroyed\");\n\n\tif (this.disabled){\n\t\tele.addClass(\"unpowered\").find(\".boostDiv\").hide().end().find(\".outputMask\").hide();\n\t} else if (this.effiency){\n\t\tele.removeClass(\"unpowered\").find(\".boostDiv\").show().end().find(\".outputMask\").show();\n\t} else {\t\t\t\n\t\tele.removeClass(\"unpowered\");\n\t}\n}\nSystem.prototype.setSystemBorder = function(){\n\tvar ele = $(this.element);\n\tif (this.hasUnresolvedFireOrder()){\n\t\tele.addClass(\"fireOrder\");\n\t} else ele.removeClass(\"fireOrder\");\n\tif (this.selected){\n\t\tele.addClass(\"selected\");\n\t} else ele.removeClass(\"selected\");\n}\nSystem.prototype.canFire = function(){\n\tif (this.destroyed || this.disabled){\n\t\treturn false;\n\t}\n\telse if (game.phase == -2){\n\t\treturn false;\n\t}\n\tif (this instanceof Launcher && game.phase == -1 || this instanceof Hangar && game.phase == -1 || this instanceof Weapon && game.phase == 2){\n\t\tif (this.getLoadLevel() >= 1){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nSystem.prototype.getLoadLevel = function(){\n\tvar need = this.reload;\n\tvar has = this.getTimeLoaded();\n\tif (has / need > 1){\n\t\treturn 1;\n\t}\n\telse return has/need;\n}\nSystem.prototype.setTimeLoaded = function(){\n\tvar turnsLoaded = this.reload\n\tvar max = this.reload;\n\t//var start = game.getUnitById(this.parentId).available;\n\n\tfor (var i = 1; i <= game.turn; i++){\n\t\tif (turnsLoaded < max){\n\t\t\tturnsLoaded++;\n\t\t}\n\t\tfor (var j = 0; j < this.fireOrders.length; j++){\n\t\t\tif (this.fireOrders[j].turn == i && this.fireOrders[j].resolved == 1){\n\t\t\t\tturnsLoaded = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (turnsLoaded){\n\t\t\tfor (var j = 0; j < this.powers.length; j++){\n\t\t\t\tif (this.powers[j].turn == i && this.powers[j].type == 0){\n\t\t\t\t\tturnsLoaded = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.loaded = turnsLoaded;\n}\nSystem.prototype.getTimeLoaded = function(){\n\treturn this.loaded;\n}\nSystem.prototype.getBoostLevel = function(){\n\tvar level = 0;\n\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\tif (this.powers[i].turn == game.turn && this.powers[i].type == 1){\n\t\t\tlevel++;\n\t\t}\n\t\telse if (this.powers[i].turn != game.turn){\n\t\t\treturn level;\n\t\t}\n\t}\n\treturn level;\n}\nSystem.prototype.getTimeLoaded = function(){\n\treturn this.loaded;\n}\nSystem.prototype.getBoostEffect = function(){\n\tif (this.boostEffect){\n\t\treturn \"+\" + this.boostEffect.value + \"% \" + this.boostEffect.type;\n\t}\n\telse return \"MISSING\";\n}\nSystem.prototype.getBoostDiv = function(){\n\tif (!this.destroyed){\n\t\tif (this.effiency){\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\t\tdiv.className = \"boostDiv disabled\";\n\t\t\t\t$(div).data(\"shipId\", this.parentId);\n\t\t\t\t$(div).data(\"systemId\", this.id);\n\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\tsubDiv.className = \"plus\";\n\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/plus.png'</img>\";\n\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).plus();\n\t\t\t\t});\n\t\t\t\tdiv.appendChild(subDiv);\n\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\tsubDiv.className = \"minus\";\n\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/minus.png'</img>\";\n\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).minus();\n\t\t\t\t});\n\t\t\t\tdiv.appendChild(subDiv);\n\t\t\treturn div;\n\t\t}\n\t\telse return false;\n\t}\n}\nSystem.prototype.getPowerDiv = function(){\n\tif (!this.destroyed){\n\t\tif (this.powerReq){\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\t\tdiv.className = \"powerDiv disabled\";\n\t\t\t\t$(div).data(\"shipId\", this.parentId);\n\t\t\t\t$(div).data(\"systemId\", this.id);\n\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\tsubDiv.className = \"plus\";\n\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/power.png'</img>\";\n\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).doPower();\n\t\t\t\t});\n\t\t\t\tdiv.appendChild(subDiv);\n\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\tsubDiv.className = \"minus\";\n\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/unpower.png'</img>\";\n\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).doUnpower();\n\t\t\t\t});\n\t\t\t\tdiv.appendChild(subDiv);\n\t\t\treturn div;\n\t\t}\n\t\telse return false;\n\t}\n}\nSystem.prototype.getModeDiv = function(){\n\tif (!Object.keys(this.modes).length){return;}\n\tvar div = document.createElement(\"div\");\n\t\tdiv.className = \"modeDiv disabled\";\n\t\t$(div).data(\"shipId\", this.parentId);\n\t\t$(div).data(\"systemId\", this.id);\n\tvar subDiv = document.createElement(\"div\");\n\t\tsubDiv.className = \"mode\";\n\t\tsubDiv.innerHTML = \"<img src='varIcons/mode.png'</img>\";\n\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t$(subDiv)\n\t\t\t.click(function(e){\n\t\t\t\te.stopPropagation(); e.preventDefault();\n\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).switchMode();\n\t\t\t})\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopPropagation(); e.preventDefault();\n\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\tgame.getUnitById(data.shipId).switchModeAll(data.systemId);\n\t\t\t});\n\t\tdiv.appendChild(subDiv);\n\treturn div;\n}\nSystem.prototype.canUnboost = function(){\n\tif (this.powers.length){\n\t\tif (this.powers[this.powers.length-1].turn == game.turn){\n\t\t\tif (this.powers[this.powers.length-1].type > 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nSystem.prototype.doUnboost = function(){\n\tthis.powers.splice(this.powers.length-1, 1);\n\treturn true;\n}\nSystem.prototype.doBoost = function(){\n\tthis.powers.push({\n\t\tid: this.powers.length+1, unitid: this.parentId, systemid: this.id,\n\t\tturn: game.turn,type: 1, cost: this.getEffiency(), new: 1\n\t})\n}\nSystem.prototype.isPowered = function(){\n\tif (this.destroyed || this.disabled){\n\t\treturn false;\n\t}\n\telse if (this.powers.length){\n\t\tif (this.powers[this.powers.length-1].turn == game.turn){\n\t\t\tif (this.powers[this.powers.length-1].type == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nSystem.prototype.isUnpowered = function(){\n\tif (!this.isPowered()){\n\t\treturn true;\n\t}\n\telse return false;\n}\nSystem.prototype.canUnpower = function(){\n\tif (this.powerReq && this.isPowered()){\n\t\treturn true;\n\t} else return false;\n}\nSystem.prototype.canPower = function(){\n\tif (this.powerReq && !this.isPowered()){\n\t\treturn true;\n\t} else return false;\n}\nSystem.prototype.doUnpower = function(){\n\tif (this.selected){\n\t\tthis.select();\n\t}\n\tif (!this.disabled){\n\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\tif (this.powers[i].turn == game.turn && this.powers[i].type > 0){\n\t\t\t\tthis.powers.splice(i, 1);\n\t\t\t} else if (this.powers[i].turn < game.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.powers.push({\n\t\t\tid: this.powers.length+1, unitid: this.parentId, systemid: this.id,\n\t\t\tturn: game.turn, type: 0, cost: 0, new: 1\n\t\t})\n\t\tthis.disabled = 1;\n\t\tthis.doUndoActions();\n\t\tthis.setTableRow();\n\t\tthis.setSystemBorder();\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t}\n}\nSystem.prototype.forceUnpower = function(){\n\tif (this.powers.length && this.powers[this.powers.length-1].type == 0){\n\t\tthis.powers.splice(this.powers.length-1, 1);\n\t\tthis.disabled = 0;\n\t\tthis.setTableRow();\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t}\n}\nSystem.prototype.doPower = function(){\n\tif (this.powers.length && this.powers[this.powers.length-1].type == 0){\n\t\tthis.powers.splice(this.powers.length-1, 1);\n\t\tthis.disabled = 0;\n\t\tthis.setTableRow();\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t}\n}\nSystem.prototype.plus = function(){\n\tvar ship = game.getUnitById(this.parentId);\n\tif (ship.canBoost(this)){\n\t\tthis.doBoost();\n\t\tship.updateDivPower(this);\n\t\treturn true;\n\t}\n\treturn false;\n}\nSystem.prototype.minus = function(){\n\tif (this.canUnboost()){\n\t\tthis.doUnboost()\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t\treturn true;\n\t}\n\treturn false;\n}\nSystem.prototype.showOptions = function(){\n\tif (this.destroyed || this.locked){return;}\n\tvar ele = $(this.element);\n\t\n\t/*if (game.phase == -2 &&\n\t\tif (Object.keys(this.modes).length){\n\t\t\tele.find(\".modeDiv\").show();\n\t\t}\n\t}*/\n\tif (game.phase == -1){\n\t\tif (game.getUnitById(this.parentId).userid == game.userid){\n\t\t\tvar boost = this.effiency;\n\t\t\tvar canModeChange = Object.keys(this.modes).length;\n\t\t\tvar canPower = this.canPower();\n\t\t\tvar canUnpower = this.canUnpower();\n\t\t\tif (canPower){\n\t\t\t\tboost = false;\n\t\t\t}\n\t\t\telse if (boost){\n\t\t\t\tif (this.getLoadLevel() != 1){\n\t\t\t\t\tboost = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (boost || canModeChange || canPower || canUnpower){\n\t\t\t\tif (boost){\n\t\t\t\t\tele.find(\".boostDiv\").show();\n\t\t\t\t}\n\t\t\t\tif (canModeChange){\n\t\t\t\t\tele.find(\".modeDiv\").show();\n\t\t\t\t}\n\t\t\t\tif (canPower || canUnpower){\n\t\t\t\t\tele.find(\".powerDiv\").show();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/*else if (game.phase == 2){\n\t\tif (Object.keys(this.modes).length){\n\t\t\t$(ele).find(\".boostDiv\").show().end().find(\".modeDiv\").show().end().find(\".powerDiv\").show();\n\t\t}\n\t}*/\n}\nSystem.prototype.hideOptions = function(){\n\tif (this.destroyed){return;}\n\tvar ele = $(this.element);\n\n\tif (game.phase == -2){\n\t\tif (Object.keys(this.modes).length){\n\t\t\tele.find(\".modeDiv\").hide();\n\t\t}\n\t}\n\tif (game.phase == -1){\n\t\tif (game.getUnitById(this.parentId).userid == game.userid){\n\t\t\tvar boost = this.effiency;\n\t\t\tvar canPower = this.canPower();\n\t\t\tvar canUnpower = this.canUnpower();\n\n\t\t\tif (boost || canPower || canUnpower){\n\t\t\t\t$(ele).find(\".boostDiv\").hide().end().find(\".modeDiv\").hide().end().find(\".powerDiv\").hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t/*else if (game.phase == 2){\n\t\tif (Object.keys(this.modes).length){\n\t\t\t$(ele).find(\".boostDiv\").hide().end().find(\".modeDiv\").hide().end().find(\".powerDiv\").hide();\n\t\t}\n\t}*/\n}\nSystem.prototype.showInfoDiv = function(e){\n\t$(document.body).append(\n\t\t$(this.getSystemDetailsDiv())\n\t\t\t.css(\"left\", e.clientX - 90)\n\t\t\t.css(\"top\", e.clientY + 50)\n\t\t)\n\treturn;\n}\nSystem.prototype.setFireOrder = function(targetid){\n\tthis.fireOrders.push(\n\t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: targetid, weaponid: this.id, \n\t\tshots: this.getShots(), req: -1, notes: \"\", hits: -1, resolved: 0}\n\t);\n\tthis.selected = false;\n\tthis.highlight = false;\n\tthis.setSystemBorder();\n}\nSystem.prototype.unsetFireOrder = function(){\n\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n\t\tif (this.fireOrders[i].turn == game.turn){\n\t\t\tthis.fireOrders.splice(i, 1);\n\t\t}\n\t}\n\tthis.setSystemBorder();\n}\nSystem.prototype.hideInfoDiv = function(){\n\t$(\"#systemDetailsDiv\").remove();\n}\nSystem.prototype.getImageName = function(){\n\treturn this.name;\n}\nSystem.prototype.canBeBoosted = function(){\n\treturn this.effiency;\n}\nSystem.prototype.getTableData = function(forFighter){\n\tvar td = document.createElement(\"td\");\n\t\ttd.className = \"system\";\n\n\tvar img = new Image();\n\tvar file = \"sysIcons/\" + this.getImageName();\n\tif (forFighter){file += this.linked;}\n\telse {img.className = \"sysIcon\";}\n\t\tfile += \".png\";\n\t\timg.src = file;\n\ttd.appendChild(img);\n\n\tvar div = document.createElement(\"div\");\n\t\tif (this instanceof PrimarySystem && this.exposed){\n\t\t\tdiv.className = \"loadLevel exposed\";\n\t\t} else div.className = \"loadLevel\";\n\t//\tif (this.weapon){div.style.width = this.getLoadLevel() * 100 + \"%\"}\n\t//\telse {div.style.width = 100 + \"%\"};\n\t\tdiv.style.width = this.getLoadLevel() * 100 + \"%\";\n\t\ttd.appendChild(div);\n\n\tvar div = document.createElement(\"div\");\n\t\tdiv.className = \"bgloadlevel\";\n\t\ttd.appendChild(div);\n\n\t\t$(td).data(\"systemId\", this.id);\n\n\tif (!forFighter){\n\t\tvar lowerDiv = document.createElement(\"div\");\n\t\t\tlowerDiv.className = \"integrityNow\";\n\t\t\tlowerDiv.style.width = this.getRemainingIntegrity() /  this.integrity * 100 + \"%\";\n\t\t\ttd.appendChild(lowerDiv);\n\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.className = \"integrityFull\";\n\t\t\ttd.appendChild(div);\n\n\t\tif (!this.destroyed){\n\t\t\tif (this instanceof PrimarySystem || this.canBeBoosted()){\n\t\t\t\tvar outputDiv = document.createElement(\"div\");\n\t\t\t\t\toutputDiv.className = \"outputMask\";\n\t\t\t\t\t//output.innerHTML = \"<span>\" + this.outputp + \"</span>\";\n\t\t\t\t\toutputDiv.innerHTML = this.getOutput();\n\t\t\t\t\ttd.appendChild(outputDiv);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(td).data(\"systemId\", this.id);\n\tthis.element = td;\n\n\tthis.setTableRow();\n\tthis.setSystemBorder();\n\treturn this.element;\n}\nSystem.prototype.hasUnresolvedFireOrder = function(){\n\treturn false;\n}\nSystem.prototype.update = function(){\n\tthis.updateSystemDetailsDiv();\n\tgame.getUnitById(this.parentId).updateDiv();\n}\n\nSystem.prototype.getRemainingIntegrity = function(){\n\tvar dmg = 0;\n\tfor (var i = 0; i < this.damages.length; i++){\n\t\tdmg += this.damages[i].structDmg;\n\t}\n\treturn this.integrity - dmg;\n}\nSystem.prototype.isDestroyed = function(){\n\tif (this.destroyed){\n\t\treturn true;\n\t}\n\tfor (var i = this.damages.length-1; i >= 0; i--){\n\t\tif (this.damages[i].destroyed){\n\t\t\treturn true;\n\t\t}\n\t}\n}\nSystem.prototype.copyPowers = function(){\n\tvar copy = [];\n\n\tif (this instanceof PrimarySystem){return;}\n\t//if (this instanceof EM){console.log(\"ding\");}\n\n\tfor (var i = 0; i < this.powers.length; i++){\n\t\tif (this.powers[i].turn == game.turn-1 && this.powers[i].type <= 0){\n\t\t\tcopy.push($.extend(true, {}, this.powers[i]));\n\t\t}\n\t}\n\n\tfor (var i = 0; i < copy.length; i++){\n\t\t//if (this.parentId == 4 && this.id == 16){console.log(\"ding\");}\n\t\tcopy[i].new = 1;\n\t\tcopy[i].turn = game.turn;\n\t\tthis.powers.push(copy[i]);\n\t}\n}\n\nSystem.prototype.adjustStateByCritical = function(){\n\tfor (var i = 0; i < this.crits.length; i++){\n\t\tif (this.crits[i].inEffect()){\n\t\t\tswitch (this.crits[i].type){\n\t\t\t\tcase \"disabled\":\n\t\t\t\t\tthis.disabled = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n}\nSystem.prototype.getMount = function(){\n\tif (game.getUnitById(aUnit) instanceof Flight){\n\t\treturn false;\n\t}\n\tif (this.mount.length){\n\t\treturn this.mount + \" / \" + this.armour;\n\t} else return this.armour;\n}\nSystem.prototype.getOutput = function(){\n\tvar output = 0;\n\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\tif (this.powers[i].turn == game.turn && this.powers[i].type > 0){\n\t\t\toutput += this.powers[i].type;\n\t\t}\n\t\telse break;\n\t}\n\treturn output;\n}\nSystem.prototype.getExtraOutput = function(){\n\tvar extra = 0;\n\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\tif (this.powers[i].turn == game.turn){\n\t\t\textra += this.output * this.boostEffect.value / 100 * this.powers[i].type;\n\t\t} else break;\n\t}\n\treturn Math.floor(extra);\n}\n\nSystem.prototype.getEffiency = function(){\n\treturn Math.ceil(this.effiency * (1+(this.getBoostLevel() * this.getBoostCostIncrease())));\n}\n\nSystem.prototype.getBoostCostIncrease = function(){\n\treturn 0;\n}\n\nSystem.prototype.getPowerReq = function(){\n\treturn this.powerReq;\n}\n\nSystem.prototype.getCurrentPowerUsage = function(){\n\tvar usage = this.powerReq;\n\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\tif (this.powers[i].turn == game.turn && this.powers[i].type > 0){\n\t\t\tusage += this.powers[i].cost;\n\t\t} else break;\n\t}\n\treturn usage;\n}\n\n\n\nfunction PrimarySystem(system){\n\tSystem.call(this, system);\n\tthis.exposed = 0;\n\n\tthis.select = function(e){\n\t\tconsole.log(this);\n\t\treturn;\n\t}\n\n\tthis.doUndoActions = function(){\n\t\treturn;\n\t}\n\n\tthis.getLoadLevel = function(){\n\t\treturn 1;\n\t}\n\n\tthis.getOutput = function(){\n\t\tif (this.disabled || this.destroyed){\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.floor(this.output * this.getOutputMods() - this.getOutputUsage());\n\t}\n\n\tthis.getOutputUsage = function(){\n\t\treturn 0;\n\t}\n\n\tthis.getOutputMods = function(){\n\t\tvar mod = 1;\n\n\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\tif (this.powers[i].turn == game.turn){\n\t\t\t\tmod += this.boostEffect.value/100 * this.powers[i].type;\n\t\t\t} else break;\n\t\t}\n\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\tif (this.crits[i].outputMod != 1){\n\t\t\t\tif (this.crits[i].inEffect()){\n\t\t\t\t\tmod *= this.crits[i].outputMod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn mod;\n\t}\n\n\tthis.getOutputString = function(){\n\t\treturn this.output + \" + \" + this.getExtraOutput();\n\t}\n\n\tthis.getBoostCostIncrease = function(){\n\t\treturn 0.2;\n\t}\n\n\tthis.getSystemDetailsDiv = function(){\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.id = \"systemDetailsDiv\";\n\t\t\tdiv.className = this.id;\n\t\tvar table = document.createElement(\"table\");\n\t\t\t\n\t\tvar tr = table.insertRow(-1);\t\t\t\t\n\t\tvar th = document.createElement(\"th\"); th.colSpan = 2;\n\t\t\tth.innerHTML = this.display; tr.appendChild(th); table.appendChild(tr)\n\n\t\tvar tr = table.insertRow(-1);\n\t\tvar td = document.createElement(\"td\"); td.style.width = \"60%\";\n\t\t\ttd.innerHTML = \"Integrity\"; tr.appendChild(td);\n\t\tvar td = document.createElement(\"td\");\n\t\t\ttd.innerHTML = this.getRemainingIntegrity() + \" / \" + this.integrity; tr.appendChild(td); table.appendChild(tr);\n\n\t\tif (this.output){\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = \"Current Output\";\n\t\t\t\ttr.insertCell(-1).innerHTML = this.getOutputString();\n\t\t\t\ttr.childNodes[1].className = \"output\";\n\t\t}\n\t\tif (this.powerReq){\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = \"Base Power Req\";\n\t\t\t\ttr.insertCell(-1).innerHTML = this.getPowerReq();\n\t\t\t\ttr.childNodes[1].className = \"powerReq\";\n\t\t}\n\t\tif (this.effiency){\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = \"Boost Power Cost\";\n\t\t\t\ttr.insertCell(-1).innerHTML = this.getEffiency();\n\t\t\t\ttr.childNodes[1].className = \"boostReq\";\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = \"Boost Effect\";\n\t\t\t\ttr.insertCell(-1).innerHTML = this.getBoostEffect();\n\t\t}\n\t\t\n\t\tif (this.crits.length){\n\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.colSpan = 2; td.style.fontSize = \"16px\"; td.style.borderBottom = \"1px solid white\"; td.style.borderTop = \"1px solid white\"; \n\t\t\t\ttd.innerHTML = \"Modifiers\"; tr.appendChild(td); table.appendChild(tr);\n\n\t\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\t\tvar tr = table.insertRow(-1);\t\t\t\t\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.colSpan = 2;\n\t\t\t\t\ttd.className = \"negative\";\n\t\t\t\t\ttd.innerHTML = this.crits[i].html; tr.appendChild(td); table.appendChild(tr);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tdiv.appendChild(table);\n\t\treturn div;\n\t}\n\n\tthis.updateSystemDetailsDiv = function(){\n\t\tvar output = this.getOutputString();\n\t\tvar powerReq = this.getPowerReq();\n\t\tvar boostReq = this.getEffiency();\n\t\t$(\"#systemDetailsDiv\").find(\"tr\").each(function(i){\n\t\t\tif (this.childNodes.length == 2){\n\t\t\t\tif (this.childNodes[1].className == \"output\"){\n\t\t\t\t\tthis.childNodes[1].innerHTML = output;\n\t\t\t\t}\n\t\t\t\telse if (this.childNodes[1].className == \"powerReq\"){\n\t\t\t\t\tthis.childNodes[1].innerHTML = powerReq;\n\t\t\t\t}\n\t\t\t\telse if (this.childNodes[1].className == \"boostReq\"){\n\t\t\t\t\tthis.childNodes[1].innerHTML = boostReq;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n}\nPrimarySystem.prototype = Object.create(System.prototype);\n\nfunction Bridge(system){\n\tPrimarySystem.call(this, system);\n\n\tthis.getBoostDiv = function(){\n\t\treturn false;\n\t}\n}\n\nBridge.prototype = Object.create(PrimarySystem.prototype);\n\t\t\t\t\nfunction Reactor(system){\n\tPrimarySystem.call(this, system);\n\n\tthis.getUnusedPower = function(){\n\t\treturn this.getOutput();\n\t}\n\n\tthis.getOutputUsage = function(){\n\t\tvar use = 0;\n\t\tvar ship = game.getUnitById(this.parentId);\n\t\tfor (var i = 0; i < ship.structures.length; i++){\n\t\t\tfor (var j = 0; j < ship.structures[i].systems.length; j++){\n\t\t\t\tif (ship.structures[i].systems[j].isPowered()){\n\t\t\t\t\tuse += ship.structures[i].systems[j].getCurrentPowerUsage();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < ship.primary.systems.length; i++){\n\t\t\tif (ship.primary.systems[i].isPowered()){\n\t\t\t\tuse += ship.primary.systems[i].getCurrentPowerUsage();\n\t\t\t}\n\t\t}\n\t\treturn use;\n\t}\n}\nReactor.prototype = Object.create(PrimarySystem.prototype);\n\nfunction Engine(system){\n\tPrimarySystem.call(this, system);\n}\nEngine.prototype = Object.create(PrimarySystem.prototype);\n\t\t\t\t\nfunction LifeSupport(system){\n\tPrimarySystem.call(this, system);\n\tthis.display = \"Life Support\";\n\t\n\tthis.getBoostDiv = function(){\n\t\treturn false;\n\t}\n}\nLifeSupport.prototype = Object.create(PrimarySystem.prototype);\n\t\t\t\t\nfunction Sensor(id, parentId, name, display, integrity, powerReq, output, effiency, maxBoost, boostEffect){\n\tPrimarySystem.call(this, id, parentId, name, display, integrity, powerReq, output, effiency, maxBoost, boostEffect);\n}\nSensor.prototype = Object.create(PrimarySystem.prototype);\n\nfunction Weapon(system){\n\tSystem.call(this, system);\n\tthis.exploSize = system.exploSize;\n\tthis.animColor = system.animColor;\n\tthis.weapon = true;\n\tthis.fc = system.fc;\n\tthis.minDmg = system.minDmg;\n\tthis.maxDmg = system.maxDmg;\n\tthis.accDecay = system.accDecay;\n\tthis.linked = system.linked;\n\tthis.shots = system.shots;\n\tthis.reload = system.reload;\n\tthis.arc = [\n\t\t\t\t\t[system.start, system.end]\n\t\t\t\t];\n\tthis.priority = system.priority;\n\tthis.loaded;\n\tthis.fireOrders = [];\n\tthis.mount;\n\n\tthis.doUndoActions = function(){\n\t\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n\t\t\tif (this.fireOrders[i].turn == game.turn){\n\t\t\t\tthis.fireOrders.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getFireControl = function(target){\n\t\tif (target instanceof Flight || target instanceof Salvo){\n\t\t\treturn this.fc[1];\n\t\t} else return this.fc[0];\n\t}\n\n\tthis.getShots = function(){\n\t\treturn this.shots;\n\t}\n\n\tthis.posIsOnArc = function(loc, pos, facing){\n\t\tfor (var i = 0; i < this.arc.length; i++){\n\t\t\tvar start = this.arc[i][0];\n\t\t\tvar end = this.arc[i][1];\n\t\t\treturn isInArc(getCompassHeadingOfPoint(loc, pos, facing), start, end);\n\t\t}\n\t}\n\n\tthis.hasUnresolvedFireOrder = function(){\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tif (this.fireOrders[i].turn == game.turn && this.fireOrders[i].resolved == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.select = function(e){\n\t\tconsole.log(this);\n\t\tvar id = this.id;\n\t\tvar parentId = this.parentId;\n\t\tvar selected = false;\n\t\tvar unit;\n\n\t\tif (this.destroyed || this.disabled){\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tunit = game.getUnitById(parentId);\n\t\t\tif (unit instanceof Flight && (unit.dogfights.length)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (this.getLoadLevel() >= 1){\n\t\t\t\tif (this.hasUnresolvedFireOrder()){\n\t\t\t\t\tthis.unsetFireOrder();\n\t\t\t\t}\n\t\t\t\tif (this.selected){\n\t\t\t\t\tthis.selected = false;\n\t\t\t\t}\n\t\t\t\telse if(! unit.hasHangarSelected()){\n\t\t\t\t\tthis.selected = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setSystemBorder();\n\t\t}\n\t\n\t\tif (unit.hasWeaponsSelected()){\n\t\t\tgame.mode = 2;\n\t\t\tunit.highlightAllSelectedWeapons();\n\t\t}\n\t\telse {\n\t\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\t\tgame.mode = 1;\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t}\n\n\tthis.getArcWidth = function(){\n\t\tvar w = 0;\n\n\t\tif (this.arc[0][0] < this.arc[0][1]){\n\t\t\tw = this.arc[0][1] - this.arc[0][0];\n\t\t}\n\t\telse if (this.arc[0][0] > this.arc[0][1]){\n\t\t\tw = 360 - this.arc[0][0] + this.arc[0][1];\n\t\t}\n\n\t\treturn w;\n\t}\n\n\tthis.setMount = function(amount){\n\t\tif (game.getUnitById(aUnit) instanceof Flight){\n\t\t\tthis.negation = 0;\n\t\t}\n\n\t\tvar w = this.getArcWidth();\n\n\t\tif (w <= 60){\n\t\t\tthis.mount = \"Fixed\";\n\t\t} else if (w <= 120){\n\t\t\tthis.mount = \"Embedded\";\n\t\t} else {\n\t\t\tthis.mount = \"Turret\";\n\t\t}\n\t\tthis.armour =  Math.floor(amount * this.armourMod);\n\t}\n\n\tthis.getFireControlString = function(){\n\t\treturn this.fc[0] + \"% / \" + this.fc[1] + \"%\";\n\t}\n\n\tthis.getSystemDetailsDiv = function(){\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.id = \"systemDetailsDiv\";\n\t\tvar table = document.createElement(\"table\");\n\t\t\t\n\t\tvar tr = document.createElement(\"tr\");\t\t\n\t\tvar th = document.createElement(\"th\");\n\t\t\tth.colSpan = 2; th.innerHTML = this.display; th.style.width = \"40%\"; tr.appendChild(th); table.appendChild(tr);\n\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Weapon Type\")).append($(\"<td>\").html(this.type)));\n\n\t\tif (!(game.getUnitById(aUnit) instanceof Flight)){\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Integrity\")).append($(\"<td>\").html(this.getRemainingIntegrity() + \" / \" + this.integrity)));\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Mount / Armour\")).append($(\"<td>\").html(this.getMount())));\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Base Power Req\")).append($(\"<td>\").html(this.getPowerReq())));\n\t\t\tif (this.effiency && !(this instanceof Launcher)){\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Boost Power Cost\")).append($(\"<td>\").html(this.getEffiency())));\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Boost Effect\")).append($(\"<td>\").html(this.getBoostEffect())));\n\t\t\t}\n\t\t}\n\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Loading\")).append($(\"<td>\").html(this.getTimeLoaded() + \" / \" + this.reload)));\n\n\t\tif (this instanceof Launcher){\n\t\t\tif (this.ammo){\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<th>\").css(\"border-top\", \"1px solid white\").attr(\"colSpan\", 2).html(this.ammo.name)));\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").attr(\"colSpan\", 2).html(this.ammo.display)));\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Ammo amount\")).append($(\"<td>\").html(\"<font color='red'>\" + this.getRemainingAmmo() + \"</font> / \" + this.getMaxAmmo()).attr(\"id\", \"ammo\")));\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Fire Control\")).append($(\"<td>\").html(this.getFireControlString())));\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Impulse\")).append($(\"<td>\").html(this.getBallImpulse())));\n\t\t\t}\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Launch Rate\")).append($(\"<td>\").html(\"<font color='red'>\" + this.getOutput() + \"</font> - max \" + this.effiency)\n\t\t\t\t\t.attr(\"id\", \"detailsShots\")\n\t\t\t\t));\n\t\t}\n\t\telse if (this instanceof Laser){\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Fire Control\")).append($(\"<td>\").html(this.getFireControlString())));\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Focus point\")).append($(\"<td>\").html(this.optRange + \"px\")));\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Damage loss\")).append($(\"<td>\").html(this.dmgDecay + \"% per 100px\")));\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Accuracy loss\")).append($(\"<td>\").html(this.getAccDecay()/10 + \"% per 100px\")));\n\t\t}\n\t\telse {\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Fire Control\")).append($(\"<td>\").html(this.getFireControlString())));\n\t\t\tif (this instanceof Plasma){\n\t\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Damage loss\")).append($(\"<td>\").html(this.dmgDecay + \"% per 100px\")));\n\t\t\t}\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Accuracy loss\")).append($(\"<td>\").html(this.getAccDecay()/10 + \"% per 100px\")));\n\t\t}\n\n\t\tif (this.linked > 1){\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Linked Shots\")).append($(\"<td>\").html(this.linked + \" x \" + this.shots)));\n\t\t}\n\t\telse if (this instanceof Laser){\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Shots & Rakes\")).append($(\"<td>\").html(this.shots + \" w/ \" + this.output + \" rakes\")));\n\t\t}\n\t\telse if (!(this instanceof Launcher)){\n\t\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Shots\")).append($(\"<td>\").html(this.shots)));\n\t\t}\n\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Damage\")).append($(\"<td>\").addClass(\"damage\").html(this.getDamage())));\n\n\t\tif (this.crits.length){\n\t\t\tvar tr = table.insertRow(-1); tr.insertCell(-1).innerHTML = \"Modifiers\"; tr.childNodes[0].colSpan = 2; tr.childNodes[0].border = \"1px solid white\";\n\t\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.colSpan = 2;\n\t\t\t\t\ttd.className = \"negative\"\n\t\t\t\t\ttd.innerHTML = this.crits[i].html; tr.appendChild(td); table.appendChild(tr);\n\t\t\t}\n\t\t}\n\t\tdiv.appendChild(table);\n\t\t\t\n\t\treturn div;\n\t}\n\n\tthis.updateSystemDetailsDiv = function(){\n\t\tvar dmg = this.getDamage();\n\t\t$(\"#systemDetailsDiv\").find(\"tr\").each(function(i){\n\t\t\tif (this.childNodes.length == 2){\n\t\t\t\tif (this.childNodes[1].className == \"damage\"){\n\t\t\t\t\tthis.childNodes[1].innerHTML = dmg;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tthis.drawArc = function(facing, pos){\n\t\tfor (var i = 0; i < this.arc.length; i++){\n\t\t\tvar p1 = getPointInDirection(res.x, this.arc[i][0] + facing, pos.x, pos.y);\n\t\t\tvar p2 = getPointInDirection(res.y, this.arc[i][1] + facing, pos.x, pos.y)\n\t\t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n\t\t\tvar rad1 = degreeToRadian(this.arc[i][0] + facing);\n\t\t\tvar rad2 = degreeToRadian(this.arc[i][1] + facing);\n\n\t\t\tfxCtx.beginPath();\t\t\t\n\t\t\tfxCtx.moveTo(pos.x, pos.y);\n\t\t\tfxCtx.arc(pos.x, pos.y, dist, rad1, rad2, false);\n\t\t\tfxCtx.closePath();\t\t\n\t\t\tfxCtx.fillStyle = this.getFillStyle(pos.x, pos.y, dist);\n\t\t\tfxCtx.fill();\n\t\t}\n\t}\n\t\n\tthis.getAccurayDecay = function(dist){\t\t\n\t\treturn Math.ceil(this.getAccDecay() * dist/decayVar);\n\t}\n\t\n\tthis.getDamageDecay = function(dist){\n\t\treturn 0;\n\t}\n\t\n\tthis.getExpectedDamage = function(dist){\n\t\tvar loss = this.getDamageDecay(dist);\n\t\t\n\t\treturn Math.floor(this.damage - (this.damage / 100 * loss));\n\t}\n\t\n\tthis.getFillStyle = function(x, y, dist){\n\t\treturn \"green\";\n\t}\n\n\tthis.getAccDecay = function(){\n\t\tvar mod = 1;\n\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\tswitch (this.crits[i].type){\n\t\t\t\tcase \"range1\":\n\t\t\t\t\tmod = mod + 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"range2\":\n\t\t\t\t\tmod = mod + 0.2;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Math.floor(this.accDecay * mod);\n\t}\n\n\tthis.getDamage = function(){\n\t\tvar min = this.getMinDmg();\n\t\tvar max = this.getMaxDmg();\n\n\t\tif (min == max){\n\t\t\treturn min;\n\t\t}\n\t\telse {\n\t\t\treturn min + \" - \" + max;\n\t\t}\n\t}\n\n\tthis.getMinDmg = function(){\n\t\tvar mod = 1;\n\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\tswitch (this.crits[i].type){\n\t\t\t\tcase \"damage1\":\n\t\t\t\t\tmod = mod - 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"damage2\":\n\t\t\t\t\tmod = mod - 0.2;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.boostEffect){\n\t\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\t\tif (this.powers[i].turn == game.turn){\n\t\t\t\t\tswitch (this.powers[i].type){\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tmod = mod + this.boostEffect.value / 100;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.floor(this.minDmg * mod);\n\t}\n\n\tthis.getMaxDmg = function(){\n\t\tvar mod = 1;\n\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\tswitch (this.crits[i].type){\n\t\t\t\tcase \"damage1\":\n\t\t\t\t\tmod = mod - 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"damage2\":\n\t\t\t\t\tmod = mod - 0.2;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.boostEffect){\n\t\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\t\tif (this.powers[i].turn == game.turn){\n\t\t\t\t\tswitch (this.powers[i].type){\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tmod = mod + this.boostEffect.value / 100;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.floor(this.maxDmg * mod);\n\t}\n}\nWeapon.prototype = Object.create(System.prototype);\n\nfunction Particle(system){\n\tWeapon.call(this, system);\t\n\tthis.animation = \"projectile\";\n\tthis.projSize = system.projSize;\n\tthis.projSpeed = system.projSpeed;\n\n\tthis.getAnimation = function(fire){\n\t\tallAnims = [];\n\t\tvar gunInterval = this.shots * 13;\n\t\tvar shotInterval = 10;\n\n\t\tif (fire.shooter.flight){\n\t\t\tgunInterval = 10;\n\t\t}\n\t\t\n\t\tfor (var j = 0; j < fire.guns; j++){\n\t\t\tvar gunAnims = [];\n\t\t\tvar ox = fire.shooter.x + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2); // WEAPON origin\n\t\t\tvar oy = fire.shooter.y + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2);\n\t\t\t\n\t\t\tfor (var k = 0; k < this.shots; k++){\n\t\t\t\tvar hit = false;\n\t\t\t\tvar explo = false;\n\t\t\t\tvar dist;\n\n\t\t\t\tif (fire.hits[j] > k){\n\t\t\t\t\thit = true;\n\t\t\t\t}\t\n\n\t\t\t\tif (hit){ // shot hit\n\t\t\t\t\ttx = fire.target.x + range(fire.target.size * 0.2 * -1, fire.target.size * 0.2);\n\t\t\t\t\tty = fire.target.y + range(fire.target.size * 0.2 * -1, fire.target.size * 0.2);\n\t\t\t\t\tdist = getDistance( {x: ox, y: oy}, {x: tx, y: ty} );\n\t\t\t\t\texplo = {t: [0, 80], s: this.exploSize};\n\t\t\t\t}\n\t\t\t\telse { // shot miss\n\t\t\t\t\ttx = fire.target.x + range(fire.target.size * 0.5 * -1, fire.target.size * 0.5);\n\t\t\t\t\tty = fire.target.y + range(fire.target.size * 0.5 * -1, fire.target.size * 0.5);\n\t\t\t\t}\n\t\t\t\tvar shotAnim = new BallVector({x: ox, y: oy}, {x: tx, y: ty}, this.projSpeed, hit);\n\t\t\t\t\tshotAnim.n = 0 - (j*gunInterval + k*shotInterval);\n\n\t\t\t\t/*shotAnim = {\n\t\t\t\t\tox: ox,\n\t\t\t\t\toy: oy,\n\t\t\t\t\ttx: tx,\n\t\t\t\t\tty: ty,\n\t\t\t\t\tt: [0 - (j*gunInterval + k*shotInterval), getDistance({x: ox, y: oy}, {x: tx, y: ty}) / this.projSpeed / speedMod],\n\t\t\t\t\thit: hit,\n\t\t\t\t\tv: new Vector({x: ox, y: oy}, {x: tx, y: ty}),\n\t\t\t\t\texplo: explo,\n\t\t\t\t\tanimated: false\n\t\t\t\t}*/\n\t\t\t\tgunAnims.push(shotAnim);\n\t\t\t}\n\t\t\tallAnims.push(gunAnims)\n\t\t}\n\t\treturn allAnims;\n\t}\n}\nParticle.prototype = Object.create(Weapon.prototype);\n\nfunction Matter(system){\n\tParticle.call(this, system);\n}\nMatter.prototype = Object.create(Particle.prototype);\n\nfunction Plasma(system){\n\tParticle.call(this, system);\n\tthis.dmgDecay = system.dmgDecay;\n\n\tthis.getDamageDecay = function(dist){\t\t\n\t\treturn Math.ceil(this.dmgDecay * dist/100);\n\t}\n\n\tthis.getFillStyle = function(x, y, dist){\n\t\tvar grad = fxCtx.createRadialGradient(x, y, 0, x, y, dist);\n\n\t\tgrad.addColorStop(5000 / this.dmgDecay / decayVar, \"red\");\n\t\tgrad.addColorStop(3000 / this.dmgDecay / decayVar, \"yellow\");\n\t\tgrad.addColorStop(0, \"green\");\n\t\t\t\t\n\t\treturn grad;\n\t}\n}\nPlasma.prototype = Object.create(Particle.prototype);\n\nfunction EM(system){\n\tParticle.call(this, system);\t\n}\nEM.prototype = Object.create(Particle.prototype);\n\nfunction Pulse(system){\n\tParticle.call(this, system);\t\n\t\n\tthis.getAnimation = function(fire){\n\t\tallAnims = [];\n\t\tvar grouping = 2;\n\t\tvar delay = 40;\n\t\tvar shotInterval = 6;\n\n\t\tfor (var j = 0; j < fire.guns; j++){\n\t\t\tvar gunAnims = [];\n\t\t\tvar ox = fire.shooter.x + range(fire.shooter.size * -0.2, fire.shooter.size * 0.2); // WEAPON origin\n\t\t\tvar oy = fire.shooter.y + range(fire.shooter.size * -0.2, fire.shooter.size * 0.2);\n\t\t\tvar tx;\n\t\t\tvar ty;\n\t\t\tvar dist;\n\t\t\tvar explo = false;\n\t\t\tvar hit = false;\n\t\t\tif (fire.hits[j] >= 1){\n\t\t\t\thit = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttx = fire.target.x + range(fire.target.size * -0.7, fire.target.size * 0.7); // salvo missed7\n\t\t\t\tty = fire.target.y + range(fire.target.size * -0.7, fire.target.size * 0.7);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var k = 0; k < this.shots; k++){\n\t\t\t\tif (hit){\n\t\t\t\t\ttx = fire.target.x + range(fire.target.size * -0.07, fire.target.size * 0.07); // salvo hit\n\t\t\t\t\tty = fire.target.y + range(fire.target.size * -0.07, fire.target.size * 0.07);\n\t\t\t\t}\n\n\n\t\t\t\tvar shotAnim = new BallVector({x: ox, y: oy}, {x: tx, y: ty}, this.projSpeed/2, hit);\n\t\t\t\t//console.log(fire.guns);\n\t\t\t\tif (fire.guns > grouping){\n\t\t\t\t\tshotAnim.n = 0 - (Math.floor(j / grouping) * delay) + k*shotInterval;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tshotAnim.n = 0 - (j*delay + k*shotInterval);\n\t\t\t\t}\n\n\t\t\t\t\t//shotAnim.n = 0 - (j*gunInterval + k*shotInterval);\n\t\t\t\t\t\t\t  // 0 - (range(-5, 5)) - (Math.floor(j / grouping) * delay) - k*15,\n\n\n\t\t\t\tgunAnims.push(shotAnim);\n\t\t\t}\n\t\t\tallAnims.push(gunAnims)\n\t\t}\n\t\treturn allAnims;\n\t}\n}\nPulse.prototype = Object.create(Particle.prototype);\n\nfunction Laser(system){\n\tWeapon.call(this, system);\t\n\tthis.animation = \"beam\";\n\tthis.optRange = system.optRange;\n\tthis.dmgDecay = system.dmgDecay;\n\tthis.rakeTime = system.rakeTime;\n\tthis.output = system.rakes;\n\tthis.beamWidth = system.beamWidth;\n\n\tthis.getAnimation = function(fire){\n\t\tallAnims = [];\n\t\tvar grouping = 1;\n\t\tvar delay = 30;\n\t\tvar shotInterval = 15;\n\t\t\n\t\tfor (var j = 0; j < fire.guns; j++){\n\t\t\tvar gunAnims = [];\n\t\t\t\n\t\t\tfor (var k = 0; k < this.shots; k++){\n\t\t\t\tvar tx; var ty; var tb;\n\t\t\t\tvar hit = false;\n\n\t\t\t\tif (fire.hits[j] > k){\n\t\t\t\t\thit = true;\n\t\t\t\t}\t\n\n\t\t\t\tif (hit){ // shot hit\n\t\t\t\t\ttx = fire.target.x + range(-fire.target.size * 0.45, fire.target.size * 0.45); // BEAM swipe begin on HIT\n\t\t\t\t\tty = fire.target.y + range(-fire.target.size * 0.45, fire.target.size * 0.45);\n\t\t\t\t\tvar a = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.x, y: fire.target.y} );\n\t\t\t\t\ta = addToDirection(a, range(-10, 10));\n\t\t\t\t\ttb = getPointInDirection(fire.weapon.rakeTime/4, a, tx, ty); // BEAM swipe END on HIT\t\n\t\t\t\t}\n\t\t\t\telse { // shot miss\n\t\t\t\t\ttx = fire.target.x + range(-fire.target.size * 0.7, fire.target.size * 0.7); // BEAM swipe begin on MISS\n\t\t\t\t\tty = fire.target.y + range(-fire.target.size * 0.7, fire.target.size * 0.7);\n\t\t\t\t\tvar a = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.x, y: fire.target.y} );\n\t\t\t\t\ta = addToDirection(a, range(-40, 40));\n\t\t\t\t\ttb = getPointInDirection(fire.weapon.rakeTime/3, a, tx, ty); // BEAM swipe END on MISS\t\n\t\t\t\t}\n\n\t\t\t\tvar shotAnim = new BeamVector(\n\t\t\t\t\t{x: fire.shooter.x + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2), \n\t\t\t\t\ty: fire.shooter.y + range(fire.shooter.size * 0.2 * -1, fire.shooter.size * 0.2)},\n\t\t\t\t\t{x: tx, y: ty},\n\t\t\t\t\t{x: tb.x, y: tb.y}, \n\t\t\t\t\t0 - (range(-5, 5)) - (Math.floor(j / grouping) * delay) - k*shotInterval,\n\t\t\t\t\tfire.weapon.rakeTime,\n\t\t\t\t\thit\n\t\t\t\t);\n\n\t\t\t\tgunAnims.push(shotAnim);\n\t\t\t}\n\t\t\tallAnims.push(gunAnims)\n\t\t}\n\t\treturn allAnims;\n\t}\n\t\n\tthis.getFillStyle = function(x, y, dist){\n\t\tvar grad = fxCtx.createRadialGradient(x, y, 0, x, y, dist);\n\t\tvar opt = this.optRange / res.x;\n\n\t\tif (opt > 1){opt = 1;}\n\t\n\t\t\tgrad.addColorStop(0, \"red\");\n\t\t\tgrad.addColorStop(opt/2, \"yellow\");\n\t\t\tgrad.addColorStop(opt, \"green\");\n\t\t//\tgrad.addColorStop(this.optRange/res.x*1.5, \"yellow\");\n\t\t\n\t\t\tif (opt*1.5 > 1){\n\t\t\t\tgrad.addColorStop(1, \"yellow\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgrad.addColorStop(opt*1.5, \"yellow\");\n\t\t\t\tif (opt*2 < 1){\t\n\t\t\t\t\tgrad.addColorStop(opt*2, \"red\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\treturn grad;\n\t}\n\t\n\tthis.getDamageDecay = function(dist){\n\t\tvar decay = this.dmgDecay;\n\t\t\n\t\tif (dist < this.optRange){\n\t\t\tdist = this.optRange - dist;\n\t\t} else dist = dist - this.optRange;\n\t\t\n\t\treturn Math.ceil(decay * dist/100);\n\t}\n}\nLaser.prototype = Object.create(Weapon.prototype);\n\nfunction Dual(system){\n\tWeapon.call(this, system);\n\tthis.weapons = system.weapons;\n\tthis.modes = system.modes;\n\tthis.states = system.states;\n\tthis.dual = 1;\n\tthis.locked = 0;\n\tthis.weapons;\n\n\tthis.canBeBoosted = function(){\n\t\tfor (var i = 0; i < this.weapons.length; i++){\n\t\t\tif (this.weapons[i].effiency){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.setFireOrder = function(targetid){\n\t\tvar w = this.getActiveWeapon();\n\n\t\tthis.fireOrders.push(\n\t\t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: targetid, weaponid: this.id, \n\t\t\tshots: w.getShots(), req: -1, notes: \"\", hits: -1, resolved: 0}\n\t\t);\n\t\tthis.selected = false;\n\t\tthis.highlight = false;\n\t\tthis.setSystemBorder();\n\t}\n\n\tthis.setState = function(){\n\t\tSystem.prototype.setState.call(this);\n\t\tthis.initSubWeapons();\n\t\tthis.initMain();\n\t}\n\n\tthis.getImageName = function(){\n\t\treturn this.getActiveWeapon().name;\n\t}\n\n\tthis.initSubWeapons = function(){\n\t\tfor (var i = 0; i < this.weapons.length; i++){\n\t\t\tthis.weapons[i] = new window[this.weapons[i].type](this.weapons[i]);\n\t\t\tthis.weapons[i].mount = this.mount;\n\t\t\tthis.weapons[i].armour = this.armour;\n\t\t\tthis.weapons[i].mass = this.mass;\n\t\t\tthis.weapons[i].integrity = this.integrity;\n\t\t\tthis.weapons[i].damages = this.damages;\n\t\t\tthis.weapons[i].crits = this.crits;\n\t\t\t//this.weapons[i].display = \"HYBRID - \" + this.weapons[i].display;\n\t\t}\n\t}\n\n\tthis.initMain = function(){\n\t\tfor (var i = 0; i < this.states.length; i++){\n\t\t\tif (this.states[i]){\n\t\t\t\tfor (var j = 0; j < this.powers.length; j++){\n\t\t\t\t\tif (this.powers[this.powers.length-1] == game.turn && this.powers[this.powers.length-1].type > 0){\n\t\t\t\t\t\tthis.getActiveWeapon().powers.push(this.powers[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.powers[j].turn > game.turn){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.copyProps();\n\t}\n\n\tthis.switchMode = function(){\n\t\tthis.resetPowers();\n\t\tthis.cycleActiveWeapon();\n\t\tthis.copyProps();\n\t\tthis.setSystemImage()\n\t\tthis.setSystemWindow();\n\t\tthis.resetDetailsDiv();\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t}\n\n\tthis.setSystemImage = function(){\n\t\tthis.element.childNodes[0].src = \"sysIcons/\" + this.getImageName() + \".png\";\n\t}\n\n\tthis.resetPowers = function(){\n\t\tfor (var i = this.powers.length-1; i >= 0; i--){\n\t\t\tif (this.powers[i].turn == game.turn && this.powers[i].type == 1){\n\t\t\t\tthis.powers.splice(i, 1);\n\t\t\t} else break;\n\t\t}\n\t\tfor (var j = 0; j < this.weapons.length; j++){\n\t\t\tfor (var i = this.weapons[j].powers.length-1; i >= 0; i--){\n\t\t\t\tif (this.weapons[j].powers[i].turn == game.turn && this.weapons[j].powers[i].type == 1){\n\t\t\t\t\tthis.weapons[j].powers.splice(i, 1);\n\t\t\t\t} else break;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.cycleActiveWeapon = function(){\n\t\tvar index = 0;\n\t\tfor (var i = 0; i < this.states.length; i++){\n\t\t\tif (this.states[i]){\n\t\t\t\tthis.states[i] = 0;\n\t\t\t\tindex = i\n\t\t\t\tif (index+1 >= this.states.length){\n\t\t\t\t\tindex = 0;\n\t\t\t\t} else index++;\n\n\t\t\t\tthis.states[index] = 1;\n\t\t\t\tthis.powers[this.powers.length-1].type = -(index+1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.copyProps = function(){\n\t\tfor (var i = 0; i < this.states.length; i++){\n\t\t\tif (this.states[i]){\n\t\t\t\tthis.effiency = this.weapons[i].effiency;\n\t\t\t\tthis.maxBoost = this.weapons[i].maxBoost;\n\t\t\t\tthis.boostEffect = this.weapons[i].boostEffect;\n\t\t\t\tthis.powerReq = this.weapons[i].powerReq;\n\t\t\t\tthis.weapons[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setSystemWindow = function(){\n\t\t//if (game.phase == -2){return;}\n\t\tif (this.canPower() || !this.effiency){\n\t\t\t$(this.element).find(\".boostDiv\").hide().end().find(\".outputMask\").hide();\n\t\t}\n\t\telse if (this.effiency){\n\t\t\t$(this.element).find(\".boostDiv\").show().end().find(\".outputMask\").show();\n\t\t}\n\t}\n\n\tthis.resetDetailsDiv = function(){\n\t\tvar old = $(\"#systemDetailsDiv\");\n\t\tvar y = $(old).css(\"top\")\n\t\tvar x = $(old).css(\"left\")\n\t\t\told.remove();\n\n\t\t$(document.body).append(\n\t\t\t$(this.getSystemDetailsDiv())\n\t\t\t.css(\"left\", x)\n\t\t\t.css(\"top\", y)\n\t\t)\n\t}\n\n\tthis.update = function(){\n\t\tthis.getActiveWeapon().updateSystemDetailsDiv();\n\t\tgame.getUnitById(this.parentId).updateDiv();\n\t}\n\n\tthis.getSystemDetailsDiv = function(){\n\t\treturn this.getActiveWeapon().getSystemDetailsDiv();\n\t}\n\n\tthis.drawArc = function(facing, pos){\n\t\tthis.getActiveWeapon().drawArc(facing, pos);\n\t}\n\n\tthis.getSystem = function(){\n\t\treturn this.getActiveWeapon();\n\t}\n\n\tthis.getBoostDiv = function(){\n\t\tif (!this.destroyed){\n\t\t\tfor (var i = 0; i < this.weapons.length; i++){\n\t\t\t\tif (this.weapons[i].effiency){\n\t\t\t\t\tvar div = document.createElement(\"div\");\n\t\t\t\t\t\tdiv.className = \"boostDiv disabled\";\n\t\t\t\t\t\t$(div).data(\"shipId\", this.parentId);\n\t\t\t\t\t\t$(div).data(\"systemId\", this.id);\n\t\t\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\t\t\tsubDiv.className = \"plus\";\n\t\t\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/plus.png'</img>\";\n\t\t\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).plus();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdiv.appendChild(subDiv);\n\t\t\t\t\tvar subDiv = document.createElement(\"div\");\n\t\t\t\t\t\tsubDiv.className = \"minus\";\n\t\t\t\t\t\tsubDiv.innerHTML = \"<img src='varIcons/minus.png'</img>\";\n\t\t\t\t\t\tsubDiv.childNodes[0].className = \"img100pct\";\n\t\t\t\t\t\t$(subDiv).bind(\"click\", function(e){\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tif (game.phase != -1){return;}\n\t\t\t\t\t\t\tvar data = $(this.parentNode).data();\n\t\t\t\t\t\t\tgame.getUnitById(data.shipId).getSystemById(data.systemId).minus();\n\t\t\t\t\t\t});\n\t\t\t\t\tdiv.appendChild(subDiv);\t\n\t\t\t\t\treturn div;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.doUnboost = function(){\n\t\tthis.powers.splice(this.powers.length-1, 1);\n\t\tvar w = this.getActiveWeapon();\n\t\t\tw.powers.splice(w.powers.length-1, 1);\n\t}\n\n\n\tthis.doBoost = function(){\n\t\tvar p = {id: this.powers.length+1,unitid: this.parentId,systemid: this.id,\n\t\t\t\t\tturn: game.turn,type: 1, cost: this.getEffiency(), new: 1};\n\t\tthis.powers.push(p);\n\t\tthis.getActiveWeapon().powers.push(p);\n\t}\n\n\tthis.getActiveWeapon = function(){\n\t\tfor (var i = 0; i < this.states.length; i++){\n\t\t\tif (this.states[i]){\n\t\t\t\treturn this.weapons[i];\n\t\t\t}\n\t\t}\n\t}\n}\nDual.prototype = Object.create(Weapon.prototype);\n\n\nfunction Launcher(system){\n\tWeapon.call(this, system);\t\n\t//Weapon.call(this, id, parentId, name, display, 0, 0, integrity, powerReq, output, effiency, maxBoost, 0, 0, 0, 0, 0, 0, 1, reload, arc1, arc2, arc3, arc4);\t\n\t         // Weapon(id, parentId, name, display, exploSize, animColor, integrity, powerReq, output, effiency, maxBoost, boostEffect, fc, minDmg, maxDmg, accDecay, linked, shots, reload, arc1, arc2, arc3, arc4){\n\n\tthis.effiency = system.launchRate;\n\tthis.type = \"Ballistic\";\n\tthis.animation = \"ballistic\";\n\tthis.loads = [];\n\tthis.ammo = system.ammo || false;\n\tthis.loadout = 1;\n\n\tthis.getUpgradeData = function(){\n\t\tvar loads = [];\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].amount > 0){\n\t\t\t\tloads.push({\"amount\": this.loads[i].amount, \"cost\": this.loads[i].cost, name: this.loads[i].name});\n\t\t\t}\n\t\t}\n\n\t\treturn {name: this.display, systemid: this.id, cost: this.totalCost, loads: loads};\n\t}\n\n\tthis.getAccurayDecay = function(dist){\t\t\n\t\treturn 0;\n\t}\n\n\tthis.create = function(){\n\t\tfor (var i = 0; i < system.loads.length; i++){\n\t\t\tthis.loads.push(new Ammo(system.loads[i]));\n\t\t}\n\t\tif (game.phase == -2){\n\t\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\t\tthis.loads[i].amount = 0;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this.ammo  == false || this.getRemainingAmmo() == 0){\n\t\t\t\tthis.shots = 0;\n\t\t\t\tthis.forceUnpower();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getEffiency = function(){\n\t\treturn this.effiency;\n\t}\n\n\tthis.select = function(e){\n\t\tconsole.log(this);\n\n\t\tif (game.phase == -2){\n\t\t\tif (this.selected){\n\t\t\t\tthis.selected = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.selected = true;\n\t\t\t}\n\t\t\tthis.setSystemBorder();\n\t\t\tthis.setupAmmoLoadout(e);\n\t\t}\n\t\telse if (game.phase != -1 || this.shots == 0){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar id = this.id;\n\t\tvar parentId = this.parentId;\n\t\tvar selected = false;\n\n\t\tif (this.destroyed || this.disabled){\n\t\t\treturn false;\n\t\t}\n\t\telse if (this.canFire()){\n\t\t\tif (this.hasUnresolvedFireOrder()){\n\t\t\t\tthis.unsetFireOrder();\n\t\t\t}\n\n\t\t\tif (this.selected){\n\t\t\t\tthis.selected = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.selected = true;\n\t\t\t}\n\t\t\tthis.setSystemBorder();\n\t\t}\n\t\telse return false;\n\n\t\tvar ship = game.getUnitById(parentId);\n\t\n\t\tif (ship.hasWeaponsSelected()){\n\t\t\tgame.mode = 2;\n\t\t\tship.highlightAllSelectedWeapons();\n\t\t}\n\t\telse {\n\t\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\t\tgame.mode = 1;\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t}\n\n\tthis.setMount = function(amount){\n\t\tif (game.getUnitById(aUnit) instanceof Flight){\n\t\t\tthis.negation = 0;\n\t\t}\n\t\tvar w = this.getArcWidth();\n\n\t\tif (w <= 60){\n\t\t\tthis.mount = \"Tube\";\n\t\t} else if (w <= 120){\n\t\t\tthis.mount = \"Canister\";\n\t\t} else {\n\t\t\tthis.mount = \"Arm Rail\";\n\t\t}\n\t\tthis.armour =  Math.floor(amount * this.armourMod);\n\t}\n\n\tthis.getFireControlString = function(){\n\t\tif (this.ammo){\n\t\t\treturn this.ammo.fc[0] + \"% / \" + this.ammo.fc[1] + \"%\";\n\t\t}\n\t}\n\n\tthis.getFireControl = function(target){\n\t\tif (target instanceof Flight || target instanceof Salvo){\n\t\t\treturn this.ammo.fc[1];\n\t\t} else return this.ammo.fc[0];\n\t}\n\n\tthis.getDamage = function(){\n\t\tif (this.ammo){\n\t\t\treturn this.ammo.minDmg + \" - \" + this.ammo.maxDmg;\n\t\t}\n\t}\n\n\tthis.getOutput = function(){\n\t\treturn this.shots;\n\t}\n\n\tthis.plus = function(){\n\t\tif (this.shots < this.effiency){\n\t\t\tthis.shots++;\n\t\t\tthis.adjustFireOrder();\n\t\t\tthis.updateGUI();\n\t\t}\n\t}\n\n\tthis.minus = function(){\n\t\tif (this.shots > 1){\n\t\t\tthis.shots--;\n\t\t\tthis.adjustFireOrder();\n\t\t\tthis.updateGUI();\n\t\t}\n\t}\n\n\tthis.adjustFireOrder = function(){\n\t\tif (!this.fireOrders.length){return;}\n\t\tif (this.fireOrders[this.fireOrders.length-1].turn == game.turn && !this.fireOrders[this.fireOrders.length-1].resolved){\n\t\t\tthis.fireOrders[this.fireOrders.length-1].shots = this.getOutput();\n\t\t}\n\t}\n\n\tthis.updateGUI = function(){\n\t\t$(\"#systemDetailsDiv\")\n\t\t\t.find(\"#detailsShots\").html(\"<font color='red'>\" + this.getOutput() + \"</font> - max \" + this.effiency)\n\t\t\t\t.end()\n\t\t\t.find(\"#ammo\").html(\"<font color='red'>\" + this.getRemainingAmmo() + \"</font> / \" + this.getMaxAmmo());\n\n\n\t\t$(this.element).find(\".outputMask\").html(this.getOutput());\n\t}\n\n\tthis.setupAmmoLoadout = function(e){\n\t\tvar div = document.getElementById(\"weaponLoadoutDiv\");\n\n\t\tif ($(div).hasClass(\"disabled\")){\n\t\t\t$(div).find(\"#launchRate\").html(this.effiency);\n\t\t\t$(div).find(\"#reload\").html(this.reload);\n\t\t\t$(div).find(\"#capacity\").html(this.output);\n\t\t\t$(div).data(\"systemid\", this.id).css(\"top\", e.clientY + 30).css(\"left\", e.clientX - 150).removeClass(\"disabled\");\n\t\t\tthis.updateTotals();\n\t\t}\n\t\telse {\n\t\t\twindow.game.setShipTotal();\n\t\t\t$(div).addClass(\"disabled\");\n\t\t}\n\t}\n\n\tthis.addAmmo = function(ele, all){\n\t\tvar tMass = 0;\n\t\tvar tCost = 0;\n\t\tvar add = 1;\n\t\tvar name = ele.childNodes[0].innerHTML;\n\t\tvar sMass = 0;\n\n\t\tvar canAdd = true;\n\t\tvar index = 0;\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].name == name){\n\t\t\t\tindex = i;\n\t\t\t}\n\n\t\t\tif (this.loads[i].amount > 0 && this.loads[i].name != name){\n\t\t\t\tcanAdd = false\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (this.loads[i].amount == this.loads[i].name){\n\t\t\t\tcanAdd = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (canAdd){\n\t\t\tif (all){\n\t\t\t\tthis.loads[index].amount = this.output;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.loads[index].amount++;\n\t\t\t}\n\t\t\tthis.updateTotals();\n\t\t}\n\t}\n\n\tthis.removeAmmo = function(ele, all){\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].name == ele.childNodes[0].innerHTML){\n\t\t\t\tif (this.loads[i].amount >= 1){\n\t\t\t\t\tif (all){\n\t\t\t\t\t\tthis.loads[i].amount = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.loads[i].amount -= 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateTotals();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.updateTotals = function(){\n\t\tvar amount = 0;\n\t\tvar tCost = 0;\n\t\tvar table = document.getElementById(\"weaponTable\");\n\t\t\ttable.innerHTML = \"\";\n\n\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Class\"; th.width = \"80px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Type\"; th.width = \"200px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Cost\"; th.width = \"40px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Amount\"; th.width = \"70px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Total Cost\"; th.width = \"70px\"; tr.appendChild(th)\n\t\t\ttable.appendChild(tr);\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].name;\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].display;\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].cost;\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.innerHTML = \"<img src='varIcons/plus.png'>\"; tr.appendChild(td);\n\t\t\t\ttd.addEventListener(\"click\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#weaponLoadoutDiv\").data(\"systemid\")).addAmmo(this.parentNode, false);\n\t\t\t\t})\n\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#weaponLoadoutDiv\").data(\"systemid\")).addAmmo(this.parentNode, true);\n\t\t\t\t})\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.innerHTML = \"<img src='varIcons/minus.png'>\"; tr.appendChild(td);\n\t\t\t\ttd.addEventListener(\"click\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#weaponLoadoutDiv\").data(\"systemid\")).removeAmmo(this.parentNode, false);\n\t\t\t\t})\n\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#weaponLoadoutDiv\").data(\"systemid\")).removeAmmo(this.parentNode, true);\n\t\t\t\t})\n\n\t\t\t\tamount += this.loads[i].amount\n\t\t\t\ttCost += this.loads[i].amount * this.loads[i].cost\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount * this.loads[i].cost\n\t\t}\n\n\t\tvar tr = document.createElement(\"tr\");\n\t\tvar th = document.createElement(\"th\"); tr.appendChild(th);\n\t\t\tth.innerHTML = \"Grand Total\";\n\t\t\tth.colSpan = 5;\n\t\tvar th = document.createElement(\"th\"); th.innerHTML = amount; tr.appendChild(th);\n\t\tvar th = document.createElement(\"th\"); th.innerHTML = tCost; tr.appendChild(th);\n\t\ttable.appendChild(tr);\n\t\tthis.totalCost = tCost;\n\t}\n\n\tthis.getRemainingAmmo = function(){\n\t\tvar ammo = this.getMaxAmmo();\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tammo -= this.fireOrders[i].shots;\n\t\t}\n\t\treturn ammo;\n\t}\n\n\tthis.getMaxAmmo = function(){\n\t\treturn this.ammo.output;\n\t}\n\n\tthis.getBallImpulse = function(){\n\t\treturn this.ammo.impulse;\n\t}\n\n\tthis.create();\n}\nLauncher.prototype = Object.create(Weapon.prototype);\n\nfunction Hangar(system){\n\tSystem.call(this, system);\n\tthis.start = system.start;\n\tthis.end = system.end;\n\tthis.reload = system.reload;\n\tthis.effiency = system.effiency;\n\tthis.loads = system.loads;\n\t//this.weapon = false;\n\tthis.range = 75;\n\tthis.loadout = 1;\n\n\tthis.getUpgradeData = function(){\n\t\treturn {\n\t\t\tname: this.display,\n\t\t\tsystemid: this.id,\n\t\t\tcost: this.totalCost,\n\t\t\tloads: this.loads\n\t\t}\n\t}\n\n\tthis.setFireOrder = function(targetid){\n\t\tthis.fireOrders.push(\n\t\t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: 0, weaponid: this.id, \n\t\t\tshots: 0, req: -1, notes: \"fighterLaunch\", hits: -1, resolved: 1}\n\t\t);\n\t\treturn this;\n\t}\n\n\tthis.select = function(e){\n\t\tconsole.log(this);\n\t\tvar id = this.id;\n\t\tvar parentId = this.parentId;\n\t\tvar selected = false;\n\t\tvar ship = game.getUnitById(parentId);\n\n\t\tif (game.phase == -2){\n\t\t\tif (!this.selected && ship.hasHangarSelected()){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setupHangarLoadout(e);\n\t\t\t\tif (this.selected){this.selected = false;}else{this.selected = true;}\n\t\t\t}\n\t\t}\n\t\telse if (this.destroyed || this.disabled){\n\t\t\treturn false;\n\t\t}\n\t\telse if (! this.selected){\n\t\t\tif (game.getUnitById(aUnit).actions[0].resolved){\n\t\t\t\tif (! ship.hasSystemsSelected()){\n\t\t\t\t\tthis.selected = true;\n\t\t\t\t\tthis.enableHangarDeployment(e);\n\t\t\t\t\tthis.drawArc();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.selected = false;\n\t\t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n\t\t\tif (game.flightDeploy){\n\t\t\t\tgame.flightDeploy = false;\n\t\t\t\t$(\"#deployOverlay\").hide();\n\t\t\t}\n\t\t}\n\n\t\tthis.setSystemBorder();\n\t}\n\n\tthis.update = function(){\n\t\tgame.getUnitById(this.parentId).updateDiv();\n\t}\n\n\tthis.doUndoActions = function(){\n\t\tfor (var i = game.ships.length-1; i >= 0; i--){\n\t\t\tif (game.ships[i] instanceof Flight){\n\t\t\t\tif (game.ships[i].id < 0){\n\t\t\t\t\tif (game.ships[i].launchdata.shipid == this.parentId && game.ships[i].launchdata.systemid == this.id){\n\t\t\t\t\t\tvar ele = $(\".shipDiv\").each(function(){\n\t\t\t\t\t\t\tif ($(this).data(\"shipId\") == game.ships[i].id){\n\t\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\tgame.ships.splice(i, 1);\n\t\t\t\t\t\tthis.fireOrders.splice(this.fireOrders.length-1, 1);\n\t\t\t\t\t\tfor (var j = 0; j < this.loads.length; j++){\n\t\t\t\t\t\t\tthis.loads[j].launch = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgame.draw();\n\t}\n\n\tthis.getBoostDiv = function(){\n\t\treturn false;\n\t}\n\n\tthis.setMount = function(amount){\n\t\tif (game.getUnitById(aUnit) instanceof Flight){\n\t\t\treturn false;\n\t\t}\n\t\tthis.mount = \"\"\n\t\tthis.armour =  Math.floor(amount * this.armourMod);\n\t}\n\n\tthis.getOutput = function(){\n\t\treturn this.getLaunchRate();\n\t}\n\n\tthis.getLaunchRate = function(){\n\t\tvar rate = this.effiency;\n\n\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\trate *= this.crits[i].outputMod;\n\t\t}\n\t\treturn Math.ceil(rate);\n\t}\n\n\tthis.drawArc = function(){\n\t\tgame.getUnitById(this.parentId).drawSystemAxis(this);\n\t}\n\n\tthis.enableHangarDeployment = function(e){\n\t\tif (game.getUnitById(aUnit).userid != game.userid){\n\t\t\treturn false;\n\t\t}\n\t\tvar div = document.getElementById(\"hangarLoadoutDiv\");\n\t\t\t$(\"#launchRate\").html(this.getLaunchRate());\n\t\t\t$(\"#capacity\").html(this.output);\n\t\tthis.unsetFireOrder();\n\t\tthis.doUndoActions();\n\t\tthis.showHangarControl();\n\n\t\tif ($(div).hasClass(\"disabled\")){\n\t\t\t$(div).data(\"systemid\", this.id).css(\"top\", e.clientY + 150).css(\"left\", e.clientX - 150).removeClass(\"disabled\");\n\t\t}\n\t\telse {\n\t\t\t$(div).addClass(\"disabled\");\n\t\t}\n\t}\n\n\tthis.showHangarControl = function(){\n\t\tif (game.getUnitById(aUnit).userid != game.userid){\n\t\t\treturn false;\n\t\t}\n\t\tvar table = document.getElementById(\"hangarTable\");\n\t\t\ttable.innerHTML = \"\";\n\n\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Class\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Available\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"To launch\"; tr.appendChild(th)\n\t\t\ttable.appendChild(tr);\n\n\t\tvar id = this.id;\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tvar tr = table.insertRow(-1)\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].name;\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount;\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.innerHTML = \"<img src='varIcons/plus.png'>\"; $(td).data(\"name\", this.loads[i].name).data(\"val\", 1); tr.appendChild(td);\n\t\t\t\t\ttd.addEventListener(\"click\", function(){\n\t\t\t\t\t\tgame.getUnitById(aUnit).getSystemById(id).alterFlight(this, false);\n\t\t\t\t\t});\n\t\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tgame.getUnitById(aUnit).getSystemById(id).alterFlight(this, true);\n\t\t\t\t\t});\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.innerHTML = \"<img src='varIcons/minus.png'>\"; $(td).data(\"name\", this.loads[i].name).data(\"val\", -1); tr.appendChild(td);\n\t\t\t\t\ttd.addEventListener(\"click\", function(){\n\t\t\t\t\t\tgame.getUnitById(aUnit).getSystemById(id).alterFlight(this, false);\n\t\t\t\t\t});\n\t\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tgame.getUnitById(aUnit).getSystemById(id).alterFlight(this, true);\n\t\t\t\t\t});\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.id = this.loads[i].name + \"Amount\";\n\t\t\t\t\ttd.innerHTML = this.loads[i].launch; tr.appendChild(td);\n\n\t\t\ttable.appendChild(tr);\n\t\t}\n\n\t\t$(\"#hangarLoadoutDiv\").find(\"input\").unbind().click({systemid: id}, window.sharedLaunchFlight);\n\n\t\tif (this.canLaunchFlight()){\n\t\t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n\t\t} else $(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n\t}\n\n\tthis.launchFlight = function(){\n\t\tfor (var i = game.ships.length-1; i >= 0; i--){\n\t\t\tif (game.ships[i].userid == game.userid){\n\t\t\t\tif (game.ships[i].flight){\n\t\t\t\t\tif (game.ships[i].actions[0].resolved == 0){\n\t\t\t\t\t\tif (game.ships[i].launchdata.shipid == window.aUnit && game.ships[i].launchdata.systemid == this.id){\n\t\t\t\t\t\t\t//console.log(\"splice\");\n\t\t\t\t\t\t\t//this.unsetFireOrder();\n\t\t\t\t\t\t\tgame.ships.splice(i, 1);\n\t\t\t\t\t\t\tgame.draw();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tinstruct(\"Select a deployment point. The flight's facing will be projected onwards the launching vessel.\");\n\t\tthis.drawArc();\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tgame.setupDeploymentDiv();\n\t\tgame.flightDeploy = this;\n\t}\n\n\tthis.alterFlight = function(ele, max){\n\t\tif (game.phase != -1 || !this.canFire()){return false}\n\t\tvar name = $(ele).data(\"name\");\n\t\tvar add = $(ele).data(\"val\");\n\t\tvar launchRate = this.getLaunchRate();\n\t\tvar current = 0;\n\n\t\tif (add > 0){\n\t\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\t\tcurrent += this.loads[i].launch;\n\t\t\t}\n\t\t\tif (max){\n\t\t\t\tadd = launchRate - current;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (max){\n\t\t\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\t\t\tif (this.loads[i].name == name){\n\t\t\t\t\t\tadd = -this.loads[i].launch;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].name == name){\n\t\t\t\tif (add > 0){\n\t\t\t\t\tadd = Math.min(add, this.loads[i].amount - this.loads[i].launch);\n\t\t\t\t\tif (current + add <= launchRate && this.loads[i].launch + add <= this.loads[i].amount && this.loads[i].launch + add >= 0){\n\t\t\t\t\t\tthis.loads[i].launch += add;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.loads[i].launch += add;\n\t\t\t\t}\n\t\t\t\t$(\"#\" + this.loads[i].name + \"Amount\").html(this.loads[i].launch);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.canLaunchFlight()){\n\t\t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n\t\t}\n\t\telse {\n\t\t\t$(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n\t\t}\n\t}\n\n\tthis.canLaunchFlight = function(){\n\t\tif (this.canFire()){\n\t\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\t\tif (this.loads[i].launch >= 1){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.addFighter = function(ele, all){\n\t\tvar tMass = 0;\n\t\tvar tCost = 0;\n\t\tvar add = 1;\n\t\tvar name = ele.childNodes[0].innerHTML;\n\t\tvar sMass = 0;\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\ttMass += this.loads[i].amount * this.loads[i].mass;\n\t\t\ttCost += this.loads[i].amount * this.loads[i].cost;\n\t\t\tif (this.loads[i].name == name){\n\t\t\t\tsMass = this.loads[i].mass;\n\t\t\t}\n\t\t}\n\n\t\tif (all){\n\t\t\tadd = Math.floor((this.output - tMass) / sMass);\n\t\t}\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].name == name){\n\t\t\t\tif (tMass + this.loads[i].mass <= this.output){\n\t\t\t\t\tthis.loads[i].amount += add;\n\t\t\t\t\tthis.updateTotals();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpopup(\"Insufficient Hangar Space available\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.removeFighter = function(ele, all){\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tif (this.loads[i].name == ele.childNodes[0].innerHTML){\n\t\t\t\tif (this.loads[i].amount >= 1){\n\t\t\t\t\tif (all){\n\t\t\t\t\t\tthis.loads[i].amount = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.loads[i].amount -= 1;\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateTotals();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.updateTotals = function(){\n\t\tvar amount = 0;\n\t\tvar tMass = 0;\n\t\tvar tCost = 0;\n\t\tvar table = document.getElementById(\"hangarTable\");\n\t\t\ttable.innerHTML = \"\";\n\n\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Class\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Mass\"; th.width = \"40px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Cost\"; th.width = \"40px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Amount\"; th.width = \"70px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Total Mass\"; th.width = \"70px\"; tr.appendChild(th)\n\t\t\tvar th = document.createElement(\"th\"); th.innerHTML = \"Total Cost\"; th.width = \"70px\"; tr.appendChild(th)\n\t\t\ttable.appendChild(tr);\n\n\n\t\tfor (var i = 0; i < this.loads.length; i++){\n\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].name;\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].mass;\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].cost;\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.innerHTML = \"<img src='varIcons/plus.png'>\"; tr.appendChild(td);\n\t\t\t\ttd.addEventListener(\"click\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).addFighter(this.parentNode, false);\n\t\t\t\t})\n\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).addFighter(this.parentNode, true);\n\t\t\t\t})\n\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\ttd.innerHTML = \"<img src='varIcons/minus.png'>\"; tr.appendChild(td);\n\t\t\t\ttd.addEventListener(\"click\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).removeFighter(this.parentNode, false);\n\t\t\t\t})\n\t\t\t\ttd.addEventListener(\"contextmenu\", function(e){\n\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).removeFighter(this.parentNode, true);\n\t\t\t\t})\n\n\t\t\t\tamount += this.loads[i].amount\n\t\t\t\ttMass += this.loads[i].amount * this.loads[i].mass\n\t\t\t\ttCost += this.loads[i].amount * this.loads[i].cost\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount * this.loads[i].mass\n\t\t\t\ttr.insertCell(-1).innerHTML = this.loads[i].amount * this.loads[i].cost\n\t\t}\n\n\t\tvar tr = document.createElement(\"tr\");\n\t\tvar th = document.createElement(\"th\"); tr.appendChild(th);\n\t\t\tth.innerHTML = \"Grand Total\";\n\t\t\tth.colSpan = 5;\n\t\tvar th = document.createElement(\"th\"); th.innerHTML = amount; tr.appendChild(th);\n\t\tvar th = document.createElement(\"th\"); th.innerHTML = tMass; tr.appendChild(th);\n\t\tvar th = document.createElement(\"th\"); th.innerHTML = tCost; tr.appendChild(th);\n\t\ttable.appendChild(tr);\n\t\tthis.totalCost = tCost;\n\t}\n\n\tthis.setupHangarLoadout = function(e){\n\t\tvar div = document.getElementById(\"hangarLoadoutDiv\");\n\t\tif ($(div).hasClass(\"disabled\")){\n\t\t\t$(div).find(\"#launchRate\").html(this.getOutput());\n\t\t\t$(div).find(\"#capacity\").html(this.output);\n\t\t\t$(div).data(\"systemid\", this.id).css(\"top\", e.clientY + 30).css(\"left\", e.clientX - 150).removeClass(\"disabled\");\n\t\t\tthis.updateTotals();\n\t\t}\n\t\telse {\n\t\t\twindow.game.setShipTotal();\n\t\t\t$(div).addClass(\"disabled\");\n\t\t}\n\t}\n\t\n\tthis.getSystemDetailsDiv = function(){\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.id = \"systemDetailsDiv\";\n\t\tvar table = document.createElement(\"table\");\n\t\t\t\n\t\tvar tr = document.createElement(\"tr\");\t\t\n\t\tvar th = document.createElement(\"th\");\n\t\t\tth.colSpan = 2; th.innerHTML = this.display; th.style.width = \"40%\"; tr.appendChild(th); table.appendChild(tr);\n\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Mass Capacity\")).append($(\"<td>\").html(this.output + \" metric tons\")));\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Integrity\")).append($(\"<td>\").html(this.getRemainingIntegrity() + \" / \" + this.integrity)));\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Armour\")).append($(\"<td>\").html(this.getMount())));\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Launch Rate\")).append($(\"<td>\").html(this.effiency + \" per cycle\")));\n\t\t$(table).append($(\"<tr>\").append($(\"<td>\").html(\"Base Power Req\")).append($(\"<td>\").html(this.effiency)));\n\n\t\tif (this.crits.length){\n\t\t\tvar tr = table.insertRow(-1); tr.insertCell(-1).innerHTML = \"Modifiers\"; tr.childNodes[0].colSpan = 2; tr.childNodes[0].border = \"1px solid white\";\n\n\t\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.colSpan = 2;\n\t\t\t\t\ttd.className = \"negative\"\n\t\t\t\t\ttd.innerHTML = this.crits[i].html; tr.appendChild(td); table.appendChild(tr);\n\t\t\t}\n\t\t}\n\t\tdiv.appendChild(table);\n\t\t\t\n\t\treturn div;\n\t}\n}\nHangar.prototype = Object.create(Weapon.prototype);",
			"file": "systems.js",
			"file_size": 71105,
			"file_write_time": 131375331821498364,
			"settings":
			{
				"buffer_size": 68644,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1839,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 5596,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 47602,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 14454,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3806,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 6157,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 5573,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2919,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 12711,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17023,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2260,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3667,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2713,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1880,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1737,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1618,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 1640,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 8503,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 4239,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 4231,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3552,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3393,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6963,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 3497,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 1740,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/test.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/04_StaticScene.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/30_LightAnimation.as"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"*p.hp",
			"*php",
			"",
			"salvo.php",
			"*.php",
			"salvo.php",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"getActiveUnits",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"*",
			"",
			"*.js",
			".js",
			"",
			"*.js",
			"",
			"*.php",
			"*.*",
			"",
			"manager.php",
			"*.php",
			"*.js",
			"*.php",
			"php",
			"",
			"*.php",
			"",
			"classname",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"this.getEP()",
			"",
			"*.php",
			"",
			"*.php",
			".php",
			"php"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"reactor\"",
			"getCritEffects",
			"disabled",
			"explosize",
			"explosize ",
			"setState",
			"new Power",
			"unpowerall",
			"all",
			"forceUnpower",
			"unpowerAllSystems",
			"unpowerAll",
			"Waiting for",
			"rakes",
			"$this->rakes = ",
			"$this->rakes",
			"public $wea",
			"$fire->req = ",
			"fire->req =",
			"heavyla",
			"dounpower ",
			"351",
			"\"loadlevel",
			"exposed",
			"fraction",
			"expanddiv",
			"getHitChance",
			"isHitable",
			"getHitTreshold",
			"SuperHeavy",
			"this->integrity = ",
			"dounpower",
			"getbasehitchance",
			"this. * = function(){",
			"this.powers.push(",
			"copyPowers",
			"setState",
			"setstate",
			"setState",
			" new Game",
			"game",
			"new game",
			"console.time",
			"setState",
			"setstate ",
			"copyPowers",
			"copypowers",
			"gettimeloaded",
			"settimeloaded",
			"getLoadLevel ",
			"getLoadLevel",
			"getloadlevel ",
			"getloadlevel",
			"copyPowers",
			"copypowers",
			"copyPowers",
			"setState",
			"copypow",
			"assembleun",
			"determineDamage",
			"switchModeAll",
			"modeDiv",
			"modechange",
			"attachEvent",
			"attach",
			"context",
			"deployare",
			"previewSetup",
			"createbasediv",
			"forceUnpower",
			"assemble",
			"impulse",
			"setProps",
			"effiency",
			"FusionPulsar",
			"this.loadout",
			"loadout",
			"createBaseDiv",
			"boost ",
			"setstate",
			"getCritPenalty",
			"power",
			"boostlevel",
			"Ship #",
			"function dual",
			"forceUnpower",
			"showOptions ",
			"showOptions",
			"this.hover ",
			"this.locked ",
			"this.locked",
			"showoptions",
			"doUnpower",
			"profilemod",
			"setProps",
			"assembleu",
			"setCurrentImpulse",
			"profilemod",
			"basehitchance",
			"hitChance",
			"create()",
			"this.create ",
			"= ",
			"baseHitChance ",
			"baseHitChance",
			"new Sh",
			"getCurrentImpulse",
			"basehitchance",
			"getBaseHitChance",
			"getBaseHitChance ",
			"getBaseHitChance",
			"getTotalImpulse",
			"getprofilemod",
			"getImpulseMod",
			"getTotalImpulse",
			"getbasehitchance()",
			"getbasehitchance ",
			"getBaseHitChance \ngetBaseHitChance ",
			"getBaseHitChance",
			"basehit",
			"getTurnCost",
			"getturnangle",
			"getbasehit",
			"getbasehit ",
			"getbasehit",
			"getBaseSystemById",
			"adddama",
			"prio"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ding",
			"getCritMod",
			"= data.",
			", \"LightParticleBeam\"",
			"deployArea[i].",
			"deployArea[i]",
			"MediumPlasma",
			"Dual",
			"getActiveSystem",
			"setState = function($turn)",
			"setState($turn)",
			"setSystemBorder",
			"gui",
			"ele",
			"boostable",
			"MediumPulse",
			"LightPulse",
			"getImpulse",
			"system",
			"= data.",
			"",
			"getTotalImpulse",
			"getRemainingImpulse()",
			"structContainer",
			"ele",
			" = data.",
			"hit",
			"system",
			"fire.explo.t",
			"end",
			"fire.",
			", maxBoost, boostEffect);",
			", maxBoost, boostEffect){",
			"maxBoost, boostEffect, ",
			"__construct($id, $userid, $available, $status, $destroyed){",
			"construct($id, $userid, $available, $status, $destroyed);",
			"[k]",
			"ele.anim[0].",
			"ele.anim[k].",
			"animate",
			"window.animation.ballAnims[i]",
			"game.ballistics",
			"ballAnims",
			"window.animate.ballAnims",
			"",
			"getPosition",
			"",
			"finalStep",
			"finalPos",
			"setFinalStep",
			"setFinalDestination",
			"setFinalPosition",
			"",
			"hasUnresolvedFireOrder",
			"data",
			"$ballistic",
			"FusionCannon",
			"HeavyIon",
			"MediumIon",
			"LightIon",
			"expandDiv",
			"fire",
			"this",
			"fire",
			"ongoing",
			"canAdvance",
			"canAdvanceGamestate(",
			"public $name",
			"removeFighter",
			"addFighter",
			"loads[l]",
			"isDestroyedThisTurn",
			"Armor",
			"MissileLauncher",
			"select()",
			"getUnitById",
			"aUnit",
			"",
			"aShip",
			"sizeof($this->fires)",
			"$this->fires[$i]",
			"IonCannon",
			"IonProjector",
			"IonBolter",
			"game.ships",
			"drawMovementPlan",
			"div",
			"didiv",
			"div",
			"getOutputMods()",
			"$i",
			"$this->",
			"$this->primary->systems[] = ",
			"$this->primary = new P",
			"    }",
			"",
			"$this->primary->systems[] = new",
			"return (",
			"$structs = array()",
			"powerReq",
			"mouseCtx",
			"moveCtx.",
			"attachEvent",
			"getRemainingNegation($fire)",
			"targetid",
			"weaponid",
			"shooterid",
			"->dogfights",
			"this->ships",
			"insertFireOrders",
			"fxCtx.",
			"moveCtx.",
			"shipHover",
			"window.ballImages.",
			"->hitSystem",
			"->hitSection",
			"damages[l]",
			"[k]",
			"$this->primary->systems",
			".select(e)",
			"[i].fires[m].anim[j]",
			"getUnitById",
			"getBallById",
			"$j",
			"getNewCrits",
			"getActiveUnits",
			"$damages",
			"$crits"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 12,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5590,
						"regions":
						{
						},
						"selection":
						[
							[
								2421,
								2421
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1799.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4246,
						"regions":
						{
						},
						"selection":
						[
							[
								1123,
								1123
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 915.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28988,
						"regions":
						{
						},
						"selection":
						[
							[
								3180,
								3180
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2823.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16518,
						"regions":
						{
						},
						"selection":
						[
							[
								8612,
								8594
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 11432.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2954,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55606,
						"regions":
						{
						},
						"selection":
						[
							[
								7870,
								7870
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5692.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5899,
						"regions":
						{
						},
						"selection":
						[
							[
								3255,
								3255
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2531.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 455,
						"regions":
						{
						},
						"selection":
						[
							[
								455,
								455
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3579,
						"regions":
						{
						},
						"selection":
						[
							[
								1292,
								1292
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 33.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14798,
						"regions":
						{
						},
						"selection":
						[
							[
								5474,
								5474
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4582.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34666,
						"regions":
						{
						},
						"selection":
						[
							[
								7068,
								7068
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4886.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39559,
						"regions":
						{
						},
						"selection":
						[
							[
								31852,
								31852
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1584.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187,
						"regions":
						{
						},
						"selection":
						[
							[
								58,
								58
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3637,
						"regions":
						{
						},
						"selection":
						[
							[
								3157,
								3157
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 760.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2684,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2478,
						"regions":
						{
						},
						"selection":
						[
							[
								1194,
								1194
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2244,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1710,
						"regions":
						{
						},
						"selection":
						[
							[
								974,
								974
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3697,
						"regions":
						{
						},
						"selection":
						[
							[
								559,
								559
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1706,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								1625,
								1625
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1259.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15923,
						"regions":
						{
						},
						"selection":
						[
							[
								1375,
								1375
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 669.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								1096,
								1096
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								611,
								611
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3573,
						"regions":
						{
						},
						"selection":
						[
							[
								471,
								471
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18136,
						"regions":
						{
						},
						"selection":
						[
							[
								5454,
								5454
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3596.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8588,
						"regions":
						{
						},
						"selection":
						[
							[
								6561,
								6561
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4632.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13823,
						"regions":
						{
						},
						"selection":
						[
							[
								5526,
								5534
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4164.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68644,
						"regions":
						{
						},
						"selection":
						[
							[
								15313,
								15313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10328.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1839,
						"regions":
						{
						},
						"selection":
						[
							[
								426,
								426
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								395,
								395
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5596,
						"regions":
						{
						},
						"selection":
						[
							[
								2898,
								2898
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 290.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47602,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14454,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				}
			]
		},
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 35,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3806,
						"regions":
						{
						},
						"selection":
						[
							[
								29,
								34
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								2089,
								2089
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8588,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 294.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6157,
						"regions":
						{
						},
						"selection":
						[
							[
								1353,
								1353
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5573,
						"regions":
						{
						},
						"selection":
						[
							[
								4004,
								4004
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2348.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2919,
						"regions":
						{
						},
						"selection":
						[
							[
								815,
								815
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 119.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13823,
						"regions":
						{
						},
						"selection":
						[
							[
								8660,
								8673
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6019.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55606,
						"regions":
						{
						},
						"selection":
						[
							[
								34289,
								34289
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23299.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5899,
						"regions":
						{
						},
						"selection":
						[
							[
								4504,
								4504
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3379.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39559,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5573,
						"regions":
						{
						},
						"selection":
						[
							[
								677,
								677
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 116.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28988,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6463.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12711,
						"regions":
						{
						},
						"selection":
						[
							[
								2558,
								2558
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1968.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15923,
						"regions":
						{
						},
						"selection":
						[
							[
								9325,
								9325
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5630.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17023,
						"regions":
						{
						},
						"selection":
						[
							[
								2466,
								2466
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1231.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2260,
						"regions":
						{
						},
						"selection":
						[
							[
								453,
								453
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								2299,
								2299
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 912.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1775,
						"regions":
						{
						},
						"selection":
						[
							[
								716,
								728
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3579,
						"regions":
						{
						},
						"selection":
						[
							[
								953,
								953
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 94.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4246,
						"regions":
						{
						},
						"selection":
						[
							[
								3548,
								3548
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2695.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2713,
						"regions":
						{
						},
						"selection":
						[
							[
								2189,
								2189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1880,
						"regions":
						{
						},
						"selection":
						[
							[
								1368,
								1368
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1737,
						"regions":
						{
						},
						"selection":
						[
							[
								335,
								335
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1618,
						"regions":
						{
						},
						"selection":
						[
							[
								948,
								948
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1640,
						"regions":
						{
						},
						"selection":
						[
							[
								129,
								129
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14454,
						"regions":
						{
						},
						"selection":
						[
							[
								10632,
								10632
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7529.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8503,
						"regions":
						{
						},
						"selection":
						[
							[
								4874,
								4874
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3349.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5590,
						"regions":
						{
						},
						"selection":
						[
							[
								4919,
								4919
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4085.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8588,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3652.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								170,
								170
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								65
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4239,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18136,
						"regions":
						{
						},
						"selection":
						[
							[
								12786,
								12786
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 523.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4231,
						"regions":
						{
						},
						"selection":
						[
							[
								2999,
								2999
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2038.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								282,
								282
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3552,
						"regions":
						{
						},
						"selection":
						[
							[
								220,
								220
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3393,
						"regions":
						{
						},
						"selection":
						[
							[
								2009,
								2009
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1105.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6963,
						"regions":
						{
						},
						"selection":
						[
							[
								5692,
								5692
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3461.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3497,
						"regions":
						{
						},
						"selection":
						[
							[
								3160,
								3160
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3573,
						"regions":
						{
						},
						"selection":
						[
							[
								453,
								453
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1740,
						"regions":
						{
						},
						"selection":
						[
							[
								310,
								310
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.558255756853,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"tin",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"ssh",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game.p",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"sagg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"du",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"pa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"ion",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"wh",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"la",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"ha",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"ave",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"whi",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"fb",
				"C:\\xampp\\htdocs\\fire\\balltest.php"
			],
			[
				"plasa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"aven",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sasl",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"auo",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"lasr",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"mna",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"xlas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"find",
				"Find Results"
			],
			[
				"shr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"shipc",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"a",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"scri",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"share",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"ckass",
				"Package Control Messages"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"uls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"gm.",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"hy",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"spart",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"index",
				"C:\\xampp\\htdocs\\fire\\index.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"creat",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"gamese",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"crea",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"pdb",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"lobby",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"ti",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"games.",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"cre",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"battl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\battlecrab.php"
			],
			[
				"imag",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"cr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"grp",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"whit",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 446.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
