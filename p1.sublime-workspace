{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"create",
				"createElement"
			],
			[
				"rien",
				"reinforce"
			],
			[
				"ammo",
				"ammoId"
			],
			[
				"getLock",
				"getLockEffect"
			],
			[
				"heavy",
				"UltraHeavy"
			],
			[
				"offs",
				"offsetX"
			],
			[
				"getMiss",
				"getMissionTypeString"
			],
			[
				"setPreM",
				"setPreMoveImage"
			],
			[
				"getPowe",
				"getPowerReqString"
			],
			[
				"getPowerR",
				"getPowerReqString"
			],
			[
				"getPower",
				"getPowerReq"
			],
			[
				"update",
				"updateIntercepts"
			],
			[
				"hand",
				"handleMouseDown"
			],
			[
				"asse",
				"assemblDeployStates"
			],
			[
				"func_",
				"func_get_args"
			],
			[
				"fun",
				"func_get_args"
			],
			[
				"rein",
				"reinforcements"
			],
			[
				"isnert",
				"insertReinforcements"
			],
			[
				"players",
				"playerstatus"
			],
			[
				"tot",
				"totalOdds"
			],
			[
				"getPlann",
				"getPlannedFacing"
			],
			[
				"setPatrol",
				"setPatrolLayout"
			],
			[
				"setPat",
				"setPatrolImage"
			],
			[
				"bon",
				"bonusNegation"
			],
			[
				"getStructure",
				"getStructureById"
			],
			[
				"doF",
				"doOffset"
			],
			[
				"setPre",
				"setPreMoveCC"
			],
			[
				"getPla",
				"getPlannedPos"
			],
			[
				"setPr",
				"setPreMoveCC"
			],
			[
				"set",
				"setPostFireImage"
			],
			[
				"integr",
				"integrityAmount"
			],
			[
				"getBoo",
				"getBoostLevel"
			],
			[
				"remoe",
				"removeClass"
			],
			[
				"z",
				"z-index"
			],
			[
				"getUnit",
				"getUnitPosition"
			],
			[
				"highl",
				"highlightFireOrder"
			],
			[
				"getUnitBy",
				"getUnitByClick"
			],
			[
				"getUnitB",
				"getUnitByClick"
			],
			[
				"extra",
				"extraPulses"
			],
			[
				"proto",
				"prototype"
			],
			[
				"mission",
				"missionSwitch"
			],
			[
				"resetMov",
				"resetMoveTranslation"
			],
			[
				"setMove",
				"setMoveTranslation"
			],
			[
				"prj",
				"projSpeed"
			],
			[
				"getPlan",
				"getPlannedFacing"
			],
			[
				"getImp",
				"getImpulseChangeCost"
			],
			[
				"butt",
				"buttonTD"
			],
			[
				"el",
				"elapsed"
			],
			[
				"dr",
				"drawTrajectory"
			],
			[
				"assemble",
				"assembleBallistics"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getHit",
				"getHitSection"
			],
			[
				"getMis",
				"getMissionTypeString"
			],
			[
				"setPostMo",
				"setPostMoveImage"
			],
			[
				"geu",
				"getUnitById"
			],
			[
				"getUnt",
				"getUnitById"
			],
			[
				"order",
				"ordered"
			],
			[
				"target",
				"targetid"
			],
			[
				"dodepl",
				"doDeployFlight"
			],
			[
				"reset",
				"resetHover"
			],
			[
				"getU",
				"getUnitByClick"
			],
			[
				"hasInvali",
				"hasInvalidPower"
			],
			[
				"confirm",
				"confirmFiringOrders"
			],
			[
				"unit",
				"unitSize"
			],
			[
				"getPo",
				"getPowerReq"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"getRema",
				"getRemainingDelay"
			],
			[
				"getRem",
				"getCurrentImpulse"
			],
			[
				"getRemain",
				"getRemainingEP"
			],
			[
				"add",
				"addClass"
			],
			[
				"getRe",
				"getReinforcements"
			],
			[
				"getAmg",
				"getAngleFromTo"
			],
			[
				"getPositi",
				"getCurrentPosition"
			],
			[
				"col",
				"colspan"
			],
			[
				"gethit",
				"getHitSystem"
			],
			[
				"fire",
				"handleFireClick"
			],
			[
				"getpla",
				"getPlannedPosition"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"play",
				"playerName"
			],
			[
				"getbase",
				"getBaseOffsetPos"
			],
			[
				"bac",
				"background-color"
			],
			[
				"ren",
				"reinforce"
			],
			[
				"setRemain",
				"setRemainingDelay"
			],
			[
				"remai",
				"remainingDelay"
			],
			[
				"rema",
				"remainingImpulse"
			],
			[
				"remaining",
				"remainingImpulse"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"getRei",
				"getReinforcementShips"
			],
			[
				"draw",
				"drawSystemAxis"
			],
			[
				"font-",
				"font-size"
			],
			[
				"se",
				"select"
			],
			[
				"roate",
				"rotate270size90"
			],
			[
				"getre",
				"getRemainingImpulse"
			],
			[
				"getImpu",
				"getImpulseChangeCost"
			],
			[
				"getTurn",
				"getMaxTurnAngle"
			],
			[
				"turn",
				"turnAngle"
			],
			[
				"baseI",
				"baseImpulseCost"
			],
			[
				"getPlanned",
				"getPlannedPosition"
			],
			[
				"switchM",
				"switchTurnMode"
			],
			[
				"getD",
				"getDefensiveBonus"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 9323,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 5293,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 22652,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 22277,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Squadron(data){\n\tMixed.call(this, data);\n\tthis.squad = 1;\n}\nSquadron.prototype = Object.create(Mixed.prototype);\n\n\n\nSquadron.prototype.create = function(){\n\tif (game.turn > 1 && game.phase == -1 &&this.available == game.turn){\n\t\tthis.x = this.actions[0].x;\n\t\tthis.y = this.actions[0].y;\n\t\tthis.drawX = this.actions[0].x;\n\t\tthis.drawY = this.actions[0].y;\n\t}\n}\n\nSquadron.prototype.previewSetup = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n\t\t\t}\n\t\t}\n\t}\n}\n\nSquadron.prototype.addSubElement = function(){\n}\n\n\nSquadron.prototype.createBaseDiv = function(){\n\tvar owner = \"friendly\";\n\tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n\tvar div = document.createElement(\"div\");\n\t\tdiv.className = \"shipDiv \" + owner;\n\t\t$(div).data(\"shipId\", this.id);\n\n\tthis.element = div;\n\n\tvar subDiv = document.createElement(\"div\");\n\t\tsubDiv.className = \"header\";\n\t\n\tvar table = document.createElement(\"table\");\n\t\ttable.className = \"general\";\n\n\tvar header = \"red\";\n\tif (this.friendly){header = \"green\";}\n\n\t\t$(table)\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<th>\").html(\"BNAME\").attr(\"colSpan\", 2).addClass(header)))\n\t\t\t\n\tsubDiv.appendChild(table);\n\tdiv.appendChild(subDiv);\n\n\t$(this.expandDiv(div))\n\t\t//.addClass(\"disabled\")\n\t\t.drag()\n\t\t.find(\".structContainer\")\n\t\t\t.contextmenu(function(e){e.stopPropagation(); e.preventDefault()})\n\t\t\t.end()\n\t\t.find(\".header\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t})\n\t\t\t.end()\n\t\t.find(\".iconContainer\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\tif ($(this).parent().data(\"shipId\") != aUnit){\n\t\t\t\t\tgame.zIndex--;\n\t\t\t\t\t$(this).parent().addClass(\"disabled\");\n\t\t\t\t}\n\t\t\t})\n\n\n\tif (game.phase == 2){\n\t\t$(div).find(\".structContainer\").show();\n\t}\n}\n\nSquadron.prototype.expandDiv = function(div){\n\t$(div)\n\t.append($(\"<div>\")\n\t\t.addClass(\"iconContainer\")\n\t\t\t//.append($(window.shipImages[this.name.toLowerCase()].cloneNode(true)).addClass(\"rotate270\").addClass(\"size90\"))\n\t\t\t.hover(function(e){\n\t\t\t\tif (aUnit){\n\t\t\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\t\t\tvar target = game.getUnit($(this).parent().data(\"shipId\"));\n\t\t\t\t\tif (shooter.id != target.id && shooter.hasWeaponsSelected()){\n\t\t\t\t\t\thandleWeaponAimEvent(shooter, target, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).\n\t\t\tclick(function(e){\n\t\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\t\tvar target = game.getUnit($(this).parent().data(\"shipId\"));\n\t\t\t\tif (shooter && target){\n\t\t\t\t\tif (target.id != shooter.id && (target.userid != game.userid && target.userid != shooter.userid)){\n\t\t\t\t\t\thandleFireClick(shooter, target);\n\t\t\t\t\t} else target.switchDiv();\n\t\t\t\t}\n\t\t\t}));\n\t\t\t\n\t\t\n\t//document.getElementById(\"game\").appendChild(div);\n\tdocument.body.appendChild(div);\n\t$(div).css(\"position\", \"absolute\").css(\"top\", 300);\n\n\tstructContainer = document.createElement(\"div\");\n\tstructContainer.className = \"structContainer squad\";\n\tdiv.appendChild(structContainer);\n}\n\nfunction Mixed(data){\n\tShip.call(this, data);\n\tthis.ship = 0;\n\tthis.primary = false;\n\tthis.mission = data.mission || {};\n\tthis.nextStep = {};\n\tthis.finalStep = {};\n\tthis.layout = [];\n}\n\nMixed.prototype = Object.create(Ship.prototype);\n\nMixed.prototype.isReady = function(){\n\tif (this.available < game.turn){\n\t\treturn true;\n\t}\n\telse if (this.available == game.turn && !(game.phase == 0 && game.animating && !this.deployed)){\n\t\tif (this.userid == game.userid && this.actions.length || game.phase >= 0){\n\t\t\treturn true;\n\t\t}\n\t} else if (this.available > game.turn && this.actions.length == 1 && !this.actions[0].resolved){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nMixed.prototype.getNextPosition = function(){\n\treturn this.nextStep;\n}\n\nMixed.prototype.getPlannedFacing = function(){\n\treturn this.facing;\n\tif (game.phase < 2){\n\t\treturn this.facing;\n\t\t//return getAngleFromTo(this, this.nextStep);\n\t}\n\treturn this.actions[this.actions.length-1].a;\n}\n\nMixed.prototype.getDrawFacing = function(){\n\treturn this.facing+90;\n}\n\nMixed.prototype.canDeploy = function(){\n\treturn false;\n}\n\nMixed.prototype.getPowerOrders = function(){\n\treturn [];\n}\n\nMixed.prototype.hasHangarSelected = function(){\n\treturn false;\n}\n\nMixed.prototype.launchedThisTurn = function(){\n\tif (this.available == game.turn){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nMixed.prototype.resetMoveMode = function(){\n\treturn;\n}\n\nMixed.prototype.getCurrentImpulse = function(){\n\treturn this.currentImpulse;\n}\n\nMixed.prototype.getPostMovePos = function(){\n\treturn this.nextStep;\n}\n\nMixed.prototype.drawMovePlan = function(){\n\tif (this.mission.arrived){return;}\n\tvar target = this.getTarget();\n\tvar tPos;\n\tvar origin = this.getPlannedPos();\n\tif (this.mission.type > 1){\n\t\ttPos = target.getNextPosition();\n\t\tif (tPos.x == origin.x && tPos.y == origin.y){\n\t\t\ttPos = target.getPlannedPos();\n\t\t}\n\t} else tPos = {x: this.mission.x, y: this.mission.y};\n\n\tvar dist = getDistance(origin, tPos);\n\tvar impulse = this.getCurrentImpulse();\n\tvar color = \"red\";\n\n\tplanCtx.globalAlpha = 0.5;\n\tplanCtx.translate(cam.o.x, cam.o.y);\n\tplanCtx.scale(cam.z, cam.z);\n\tplanCtx.beginPath();\n\tplanCtx.moveTo(origin.x, origin.y);\n\n\tif (impulse < dist){ // does not reach\n\t\tvar a = getAngleFromTo(origin, tPos);\n\t\tvar step = getPointInDirection(impulse, a, origin.x, origin.y);\n\t\t\tcolor = \"white\";\n\n\t\tplanCtx.lineTo(step.x, step.y);\n\t\tplanCtx.closePath();\n\t\tif (!this.friendly){\n\t\tplanCtx.strokeStyle = \"red\";\n\t\t} else planCtx.strokeStyle = \"#00ea00\";\n\t\tplanCtx.stroke();\n\t\tplanCtx.beginPath();\n\t\tplanCtx.moveTo(step.x, step.y);\n\t}\n\n\tplanCtx.lineTo(tPos.x, tPos.y);\n\tplanCtx.closePath();\n\tplanCtx.strokeStyle = color;\n\tplanCtx.stroke();\n\tplanCtx.setTransform(1,0,0,1,0,0);}\n\n\tif (this.flight){this.drawMissionArea();\n}\n\nMixed.prototype.drawTargetMovePlan = function(){\n\tvar t = this.getTarget();\n\tif (!t || t.ship){return;}\n\tt.drawMovePlan();\n}\n\nMixed.prototype.drawTrajectory = function(){\n\tif (!this.salvo || !this.mission.arrived){return;}\n\tplanCtx.globalAlpha = 1;\n\tplanCtx.translate(cam.o.x, cam.o.y);\n\tplanCtx.scale(cam.z, cam.z);\n\tplanCtx.beginPath();\n\tplanCtx.moveTo(this.x, this.y);\n\tplanCtx.lineTo(this.mission.x, this.mission.y);\n\tplanCtx.closePath();\n\tplanCtx.strokeStyle = \"red\";\n\tplanCtx.stroke();\n\tplanCtx.setTransform(1,0,0,1,0,0);\n}\n\nMixed.prototype.isDestroyed = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].destroyed && !this.structures[i].disabled){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nMixed.prototype.setStatus = function(){\n\t//\tconsole.log(\"setStatus\")\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].crits.length; j++){\n\t\t\tif (this.structures[i].crits[j].type == \"Disabled\"){\n\t\t\t\tthis.structures[i].disabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.structures[i].destroyed){\n\t\t\tthis.structures[i].draw = 0;\n\t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n\t\t\t\tthis.structures[i].systems[k].destroyed = true;\n\t\t\t}\n\t\t}\n\t\telse if (this.structures[i].disabled){\n\t\t\tthis.structures[i].draw = 0;\n\t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n\t\t\t\tthis.structures[i].systems[k].disabled = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nMixed.prototype.hasLockOnUnit = function(){\n\treturn false;\n}\n\nMixed.prototype.isMaskedFromUnit = function(){\n\treturn false;\n}\n\nMixed.prototype.getImpulseMod = function(){\n\treturn 1;\n}\n\nMixed.prototype.getArmourString = function(a){\n\treturn this.structures[0].negation;\n}\n\nMixed.prototype.getStringHitChance = function(){\n\tvar min = 0; var max = 0;\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].destroyed){\n\t\t\tmin = Math.max(min, this.structures[i].baseHitChance);\n\t\t\tmax = Math.max(max, this.structures[i].baseHitChance);\n\t\t}\n\t}\n\tif (min == max){\n\t\treturn (\"Base Hit: \" + min + \"%\");\n\t} else return (\"Base Hit: \" + min + \" - \" + max + \"%\");\n}\n\nMixed.prototype.getAngledHitSection = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\treturn this.structures[i];\n\t\t}\n\t}\n}\n\nMixed.prototype.getAngledHitChance = function(angle){\n\treturn Math.ceil(this.getBaseHitChance());\n}\n\nMixed.prototype.getBaseHitChance = function(){\n\tvar chance = 0;\n\tvar amount = 0;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].destroyed){\n\t\t\tamount++;\n\t\t\tchance += this.structures[i].baseHitChance;\n\t\t}\n\t}\n\n\treturn Math.ceil(chance/amount);\n}\n\nMixed.prototype.getWeaponPosition = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\treturn {x: this.layout[i].x, y: this.layout[i].y};\n\t\t\t}\n\t\t}\n\t}\n}\n\nMixed.prototype.getTargetPosition = function(){\n\tif (this.mission.targetid){\n\t\treturn this.getTarget().getPlannedPos();\n\t} else return this.mission;\n}\n\nMixed.prototype.inRange = function(){\n\tif (getDistance(this.getTargetPosition(), this.getPlannedPos()) <= this.getCurrentImpulse()){\n\t\treturn true;\n\t} else return false;\n}\n\nMixed.prototype.getTarget = function(){\n\treturn game.getUnit(this.mission.targetid);\t\n}\n\nMixed.prototype.setTarget = function(){\n\tvar i = this.getCurrentImpulse();\n\tvar d = 0;\n\tvar p = this.getPlannedPos();\n\tif (this.mission.type == 1){  // patrol goal\n\t\tthis.finalStep = {x: this.mission.x, y: this.mission.y};\n\t\tthis.facing = getAngleFromTo(this, this.finalStep);\n\t\td = getDistance(p, this.finalStep);\n\t\tif (d < i){\n\t\t\tthis.nextStep = this.finalStep;\n\t\t} else this.nextStep = getPointInDirection(i, this.facing, p.x, p.y);\n\t}\n\telse {\n\t\tif (this.mission.type == 2){\n\t\t\tvar target = this.getTarget();\n\t\t\tif (target.ship){\n\t\t\t\tthis.finalStep = target.getPlannedPos();\n\t\t\t\tthis.facing = getAngleFromTo(this, this.finalStep);\n\t\t\t\td = getDistance(p, this.finalStep);\n\t\t\t\tif (d < i){\n\t\t\t\t\tthis.nextStep = this.finalStep;\n\t\t\t\t} else this.nextStep = getPointInDirection(i, getAngleFromTo(p, this.finalStep), p.x, p.y);\n\t\t\t}\n\t\t\telse if (target.flight){\n\t\t\t\tif (target.mission.targetid == this.id){\n\t\t\t\t/*\ttarget.finalStep = this.getPlannedPos();\n\t\t\t\t\ttarget.facing = getAngleFromTo(target.getPlannedPos(), target.finalStep);\n\t\t\t\t\tthis.finalStep = target.getPlannedPos();\n\t\t\t\t\tthis.facing = getAngleFromTo(p, target.finalStep);\n\n\t\t\t\t\td = getDistance(target.finalStep, this.finalStep);\n\n\t\t\t\t\tthis.nextStep = getPointInDirection(Math.min(d, i), this.facing, p.x, p.y);\n\t\t\t\t\tvar tPos = target.getPlannedPos();\n\t\t\t\t\ttarget.nextStep = getPointInDirection(Math.min(d, target.getCurrentImpulse()), target.facing, tPos.x, tPos.y);\n\t\t\t\t\treturn;\n\t\t\t\t*/\n\t\t\t\t\tthis.finalStep = target.getPlannedPos();\n\t\t\t\t\tthis.facing = getAngleFromTo(p, this.finalStep);\n\n\t\t\t\t\td = getDistance(p, this.finalStep);\n\n\t\t\t\t\tthis.nextStep = getPointInDirection(Math.min(d, i), this.facing, p.x, p.y);\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (target.finalStep == undefined){\n\t\t\t\t\ttarget.setTarget();\n\t\t\t\t}\n\t\t\t\tthis.finalStep = target.nextStep;\n\t\t\t\t//this.facing = getAngleFromTo(p, target.getPlannedPos());\n\t\t\t\tthis.facing = getAngleFromTo(p, this.finalStep);\n\t\t\t\td = getDistance(p, this.finalStep);\n\t\t\t\tif (d < i){\n\t\t\t\t\tthis.nextStep = target.nextStep;\n\t\t\t\t} else this.nextStep = getPointInDirection(i, getAngleFromTo(p, this.finalStep), p.x, p.y);\n\t\t\t}\n\t\t\telse if (target.salvo){\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.getBaseImage = function(){\n\tif (this.ship){\n\t\treturn window.shipImages[this.name.toLowerCase()];\n\t}\n\telse return window.shipImages[this.structures[0].name.toLowerCase()];\n}\n\nMixed.prototype.setPreMoveFacing = function(){\n\t///console.log(\"setPreMoveFacing\");\n\t//if (this.salvo){console.log(\"setPreMoveFacing\");}\n\t//if (this.mission.turn == game.turn){\n\t//\tthis.facing = getAngleFromTo(this.getPlannedPos(), this.getTargetPosition());\n\t//}\n\n\tif (this.actions.length){\n\t\tthis.facing = getAngleFromTo(this, this.actions[this.actions.length-1]);\n\t}\n\telse this.facing = getAngleFromTo(this.getPlannedPos(), this.nextStep);\n}\n\nMixed.prototype.setPostMoveFacing = function(){\n\t//console.log(\"setPostMoveFacing\");\n\t//if (this.salvo){console.log(\"setPostMoveFacing\");}\n\t//if (this.mission.turn == game.turn){\n\t\tthis.facing = getAngleFromTo(this.getPlannedPos(), this.finalStep);\n\t//}\n}\n\nMixed.prototype.canShortenTurn = function(){\n\treturn false;\n}\t\n\nMixed.prototype.getLockEffect = function(target){\n\tif (!this.mission.arrived){return 0;}\n\n\tvar multi = 0;\n\tif (target.ship){\n\t\treturn multi;\n\t}\n\telse if (target.flight){\n\t\tmulti = 1;\n\t}\n\telse if (target.salvo){\n\t\tmulti = 1;\n\t}\t\n\n\tif (target.flight){\n\t\tif (this.mission.targetid == target.id){ // intercept\n\t\t\treturn multi;\n\t\t} else if (target.mission.targetid == this.mission.targetid && this.userid == this.getTarget().userid){ // flight escorting flight vs enemy flight\n\t\t\treturn multi;\n\t\t}\n\t}\n\telse if (target.salvo){\n\t\tif (this.mission.type == 1){return multi;} // patrol flight vs salvo\n\t\telse if (target.mission.targetid != this.id){return multi;} // escorting\" flight vs salvo\n\t}\n\telse return 0;\n}\n\nMixed.prototype.getMaskEffect = function(shooter){\n\tif (this.flight && this.mission.targetid == shooter.id){\n\t\treturn 0.5;\n\t}\n\treturn 0;\n}\n\nMixed.prototype.canUndoShortenTurn = function(){\n\treturn false;\n}\n\nMixed.prototype.create = function(){\n\tthis.setRawImage();\n\tthis.setStatus();\n\tif (this.id < 0){\n\t\tthis.setMaxMass();\n\t\tthis.setImpulse();\n\t}\n}\n\nMixed.prototype.hasSystemSelected = function(){\n\treturn false;\n}\n\nMixed.prototype.getSystemById = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].id == id){\n\t\t\treturn this.structures[i];\n\t\t}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t}\n\t\t}\n\t}\n}\n\nMixed.prototype.getParent = function(){\n\tif (!this.cc.length){return this;}\n\n\tvar valid = [];\n\n\t// look for SHIP parent\n\tfor (var j = 0; j < this.cc.length; j++){\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].ship && game.ships[i].id == this.cc[j]){\n\t\t\t\treturn game.ships[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t// maybe im a salvo hitting a flight ?\n\tif (this.salvo){\n\t\tfor (var j = 0; j < this.cc.length; j++){\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].id == this.cc[j]){\n\t\t\t\t\treturn game.ships[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// so its flight on flight\n\tfor (var j = 0; j < this.cc.length; j++){\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].friendly && game.ships[i].id == this.cc[j]){\n\t\t\t\treturn game.ships[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this;\n}\n\nMixed.prototype.setPreFireImage = function(){\n\t//\tconsole.log(\"setPreFireImage\");\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].draw){\n\t\t\tif (this.structures[i].isDestroyedThisTurn()){\n\t\t\t\tthis.structures[i].draw = true;\n\t\t\t}\n\t\t}\n\t}\n\tthis.resetImage();\n}\n\nMixed.prototype.setLayout = function(){\n\tif (!this.mission.arrived){\n\t\tthis.setBaseLayout();\n\t}\n\telse if (this.mission.type == 1){ // patrol arrived\n\t\tif (this.mission.arrived < game.turn || this.mission.arrived == game.turn && game.phase > 2){\n\t\t\tthis.setPatrolLayout();\n\t\t}\n\t}\n\telse if (this.mission.type == 2){ // strike arrived\n\t\tif (this.mission.arrived == game.turn){\n\t\t\tthis.setBaseLayout();\n\t\t}\n\t\telse {\n\t\t\tvar roam = 1;\n\t\t\tfor (var i = 0; i < this.cc.length; i++){\n\t\t\t\tvar u = game.getUnit(this.cc[i]);\n\t\t\t\tif (u.ship){roam = 0; break;}\n\t\t\t}\n\t\t\tif (roam){this.setPatrolLayout();}\n\t\t}\n\t}\n\telse this.setBaseLayout();\n}\n\nMixed.prototype.setBaseLayout = function(){\n\tvar osx = 16;\n\tvar osy = 12;\n\n\t//var num = Math.ceil(this.structures.length/3);\n\t//this.size = num*10;\n\n\tvar reach = 15 + Math.max(0, (Math.floor(this.structures.length-3)/3)*12);\n\n\tfor (var i = 0; i < this.structures.length/3; i++){\n\n\t\tvar a = 360/Math.ceil(this.structures.length/3)*i;\n\t\t//var o = getPointInDirection(0 + this.unitSize*15, a-90, 0, 0);\n\t\tvar o = getPointInDirection(reach, a-90, 0, 0);\n\n\t\tfor (var j = 0; j < Math.min(this.structures.length-i*3, 3); j++){\n\t\t\tvar ox = o.x;\n\t\t\tvar oy = o.y;\n\n\t\t\tswitch (j){\n\t\t\t\tcase 0: oy -= osy; break;\n\t\t\t\tcase 1: ox -= osx; oy += osy; break;\n\t\t\t\tcase 2: ox += osx; oy += osy; break;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t\tthis.structures[(i*3)+j].layout = {x: ox, y: oy};\n\t\t}\n\t}\n}\n\nMixed.prototype.setPatrolLayout = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tvar p = getPointInDirection(range(0, this.size*1), range(0, 360), 0, 0);\n\t\tthis.structures[i].layout.x = p.x;\n\t\tthis.structures[i].layout.y = p.y;\n\t\t//this.structures[i].layout.x = Math.round(range(-this.size/3, this.size/3));\n\t\t//this.structures[i].layout.y = Math.round(range(-this.size/3, this.size/3));\n\t}\n}\n\nMixed.prototype.setPatrolImage = function(){\n\tconsole.log(\"setPatrolImage \" + this.id);\n\tvar size = 26;\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = this.size*2;\n\t\tt.height = this.size*2;\n\tvar ctx = t.getContext(\"2d\");\n\t\tctx.translate(t.width/2, t.height/2);\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].draw){\n\t\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n\t\t\tctx.rotate((360/this.structures.length*i) * (Math.PI/180));\n\t\t\tctx.drawImage(\n\t\t\t\twindow.shipImages[this.structures[i].name.toLowerCase()],\n\t\t\t\t0 -size/2,\n\t\t\t\t0 -size/2,\n\t\t\t\tsize, \n\t\t\t\tsize\n\t\t\t);\n\t\t\tctx.rotate(-(360/this.structures.length*i) * (Math.PI/180));\n\t\t\tctx.translate(-this.structures[i].layout.x, -this.structures[i].layout.y);\n\t\t}\n\t}\n\n\tctx.translate(-t.width/2, -t.height/2);\n\tthis.img = t;\n\t//console.log(this.img.toDataURL());\n}\n\nMixed.prototype.setPreMoveImage = function(){\n\tconsole.log(\"setPreMoveImage \" + this.id);\n\tvar size = 26;\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = this.size*2;\n\t\tt.height = this.size*2;\n\tvar ctx = t.getContext(\"2d\");\n\t\tctx.translate(t.width/2, t.height/2);\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].draw){continue;}\n\n\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n\t\tctx.drawImage(\n\t\t\twindow.shipImages[this.structures[i].name.toLowerCase()],\n\t\t\t0 -size/2,\n\t\t\t0 -size/2,\n\t\t\tsize, \n\t\t\tsize\n\t\t)\n\t\tctx.translate(-this.structures[i].layout.x, -this.structures[i].layout.y);\n\t}\t\t\n\tctx.setTransform(1,0,0,1,0,0);\n\tthis.img = t;\n\t//console.log(this.img.toDataURL());\n}\n\nMixed.prototype.setPostMoveImage = function(){\n\tconsole.log(\"setPostMoveImage \" + this.id);\n\tvar size = 26;\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = this.size*2;\n\t\tt.height = this.size*2;\n\tvar ctx = t.getContext(\"2d\");\n\t\tctx.translate(t.width/2, t.height/2);\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].draw){continue;}\n\n\t\tctx.save();\n\t\tctx.translate(this.structures[i].layout.x, this.structures[i].layout.y);\n\t\tctx.rotate((360/this.structures.length*i) * (Math.PI/180));\n\t\tctx.drawImage(\n\t\twindow.shipImages[this.structures[i].name.toLowerCase()],\n\t\t\t0 -size/2,\n\t\t\t0 -size/2,\n\t\t\tsize, \n\t\t\tsize\n\t\t);\n\t\tctx.restore();\n\t}\n\tctx.setTransform(1,0,0,1,0,0);\n\tthis.img = t;\n\t//console.log(this.drawImg.toDataURL());\n}\n\nMixed.prototype.getWeaponOrigin = function(id){\n\tfor (i = this.structures.length-1; i >= 0; i--){\n\t\tif (id > this.structures[i].id){\n\t\t\treturn this.getUnitPosition(i);\n\t\t}\n\t}\n}\n\nMixed.prototype.getUnitPosition = function(j){\n\tif (this.mission.arrived && this.mission.type != 1){\n\t\tvar x = this.structures[j].layout.x * 0.5;\n\t\tvar y = this.structures[j].layout.y * 0.5;\n\t\t//console.log(\"#\" + this.id);\n\t\t//console.log(this.structures[j].layout);\n\t\treturn rotate(0, 0, {x: x, y: y}, this.getParent().getDrawFacing());\n\t}\n\telse {\n\t\tvar x = this.structures[j].layout.x * (this.size / 100);\n\t\tvar y = this.structures[j].layout.y * (this.size / 100);\n\t\tvar x = this.structures[j].layout.x * 0.5;\n\t\tvar y = this.structures[j].layout.y * 0.5;\n\t\t//console.log(\"#\" + this.id);\n\t\t//console.log(this.structures[j].layout);\n\t\treturn rotate(0, 0, {x: x, y: y}, this.getParent().getDrawFacing());\n\t}\n}\n\nMixed.prototype.getFireDest = function(fire, isHit, nbrHit){\n\tif (!isHit){\n\t\treturn {\n\t\t\tx: range(10, 25) * (1-range(0, 1)*2),\n\t\t\ty: range(10, 25) * (1-range(0, 1)*2)\n\t\t}\n\t}\n\t//return this.getSystemById(fire.damages[nbrHit].systemid).layout\n\n\tvar t = this.getSystemById(fire.damages[nbrHit].systemid).layout;\n\n\tif (this.mission.arrived){\n\t\tvar x = t.x * 0.5;\n\t\tvar y = t.y * 0.5;\n\t\t//var x = t.x;\n\t\t//var y = t.y;\n\t\treturn rotate(0, 0, {x: x, y: y}, this.getParent().getDrawFacing());\n\t}\n\telse {\n\t\t//var x = t.x * (this.size / 200);\n\t\t//var y = t.y * (this.size / 200);\n\t\tvar x = t.x * (this.size / 100);\n\t\tvar y = t.y * (this.size / 100);\n\t\tvar x = t.x * 0.5;\n\t\tvar y = t.y * 0.5;\n\t\treturn rotate(0, 0, {x: x, y: y}, this.getDrawFacing());\n\t}\n}\n\nMixed.prototype.getTrajectory = function(gun){\n\treturn {x: this.x, y: this.y};\n}\n\nMixed.prototype.getDmgByFire = function(fire){\n\tif (fire.shooter.salvo && this.id == 25){\n\t\treturn this.getNew(fire);\n\t}\n\tvar dmgs = [];\n\tvar lookup = 0;\n\n\tfor (var i = 0; i < fire.hits.length; i++){\n\t\tlookup += fire.hits[i]\n\t}\n\n\tif (!lookup){\n\t\treturn dmgs;\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = this.structures[i].damages.length-1; j >= 0; j--){\n\t\t\tif (this.structures[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.structures[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].display;\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.structures[i].damages[j].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn dmgs;\n}\n\nMixed.prototype.getNew = function(fire){\n\tvar dmgs = [];\n\tvar lookup = 0;\n\n\tfor (var i = 0; i < fire.hits.length; i++){\n\t\tlookup += fire.hits[i]\n\t}\n\n\tif (!lookup){\n\t\treturn dmgs;\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = this.structures[i].damages.length-1; j >= 0; j--){\n\t\t\tif (this.structures[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.structures[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].display;\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.structures[i].damages[j].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn dmgs;\n}\n\nMixed.prototype.getExplosionSize = function(j){\n\tif (this.flight){\n\t\treturn this.structures[j].mass / 3;\n\t}\n\telse if (this.salvo){\n\t\treturn this.structures[j].mass * 2;\n\t}\n}\n\nMixed.prototype.drawMoveArea = function(){\n\treturn;\n}\n\n\n",
			"file": "mixed.js",
			"file_size": 23176,
			"file_write_time": 131581765192917841,
			"settings":
			{
				"buffer_size": 22365,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 16157,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Ship(data){\n\t//id, name, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.display = data.display;\n\tthis.notes = data.notes;\n\tthis.x = data.x || 0;\n\tthis.y = data.y || 0;\n\tthis.facing = data.facing || 0;\n\tthis.faction = data.faction;\n\tthis.mass = data.mass;\n\tthis.cost = data.cost;\n\tthis.profile = data.profile;\n\tthis.size = Math.floor(data.size/2);\n\tthis.size = data.size;\n\tthis.userid = data.userid;\n\tthis.available = data.available;\n\tthis.baseHitChance = data.baseHitChance || 0;\n\tthis.baseImpulse = data.baseImpulse || 0;\n\tthis.traverse = data.traverse;\n\tthis.status = data.status;\n\tthis.actions = data.actions || [];\n\tthis.cc = [];\n\tthis.mapSelect = 1;\n\n\tthis.slipAngle = data.slipAngle || 0;\n\tthis.turnAngle = data.turnAngle || 0;\n\tthis.turnStep = data.turnStep || 0;\n\tthis.turnMod = 1;\n\tthis.baseTurnDelay = data.baseTurnDelay || 0;\n\tthis.baseTurnCost = data.baseTurnCost || 0;\n\tthis.baseImpulseCost = data.baseImpulseCost || 0;\n\tthis.currentImpulse = data.currentImpulse || 0;\n\tthis.remainingImpulse = data.remainingImpulse || 0;\n\tthis.remainingDelay = data.remainingDelay || 0;\n\n\tthis.turnAngles = {};\n\tthis.moveAngles = {};\n\tthis.attachAnims = [];\n\n\tthis.ship = data.ship;\n\tthis.flight = data.flight;\n\tthis.salvo = data.salvo;\n\tthis.squad = data.squad;\n\n\tthis.friendly;\n\tthis.deployed;\n\tthis.drawFacing = 0;\n\tthis.drawX = 0;\n\tthis.drawY = 0;\n\n\tthis.highlight = false;\n\tthis.destroyed = false;\n\tthis.disabled = data.disabled;\n\tthis.selected = false;\n\tthis.element;\n\n\tthis.hitTable;\n\tthis.img;\n\tthis.structures = [];\n\tthis.primary = {};\n\tthis.drawImg;\n\tthis.doDraw = 1;\n\n\tthis.drawDeploymentPreview = function(pos){\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.translate(cam.o.x, cam.o.y)\n\t\tmouseCtx.scale(cam.z, cam.z)\n\t\tmouseCtx.translate(pos.x, pos.y);\n\t\t/*mouseCtx.globalAlpha = 0.3;\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.arc(0, 0, size*1, 0, 2*Math.PI, false);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.fillStyle = \"red\";\n\t\tmouseCtx.fill();\n\t*/\n\t\tthis.drawMarker(0, 0, \"yellow\", mouseCtx);\n\t\t//mouseCtx.globalAlpha = 1;\n\t\tmouseCtx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tmouseCtx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t//mouseCtx.globalAlpha = 1;\n\n\t}\n\n\tthis.getFiringPosition = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t\t)\n\t}\n\n\tthis.getTargettingPos = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t\t)\t\t\n\t}\n\n\tthis.getTurnEndPosition = function(){\n\t\treturn this.actions[this.actions.length-1];\n\t}\n\n\tthis.canDeployHere = function(pos){\n\t\t\n\t\t//console.log(pos);\n\t\tvar valid = false;\t\t\n\t\t\n\t\t/*\n\t\tif (game.turn >= 2){\n\t\t\tif (getDistance({x: 0, y: 0}, pos) >= 750){\n\t\t\t\treturn false;\n\t\t\t} return true;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < game.deploys.length; i++){\n\t\t\t\tif (game.deploys[i].userid != this.userid){continue;}\n\n\t\t\t\tif (getDistance(game.deploys[i], pos) + this.size/2 < game.deploys[i].s){\n\t\t\t\t\tfor (var j = 0; j < game.ships.length; j++){\n\t\t\t\t\t\tif (game.ships[j].deployed && game.ships[j].id != this.id && game.ships[j].userid == this.userid){ // different ship, different owners\n\t\t\t\t\t\t\tvar step = game.ships[j].getGamePos();\n\t\t\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[j].size/2 + this.size/2)){\n\t\t\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t\t*/\n\n\n\t\tif (game.turn == 1){\n\n\t\t\tfor (var i = 0; i < game.deployArea.length; i++){\n\t\t\t\tif (game.deployArea[i].id != game.userid){continue;}\n\t\t\t\tif (game.deployArea[i].x > 0){\n\t\t\t\t\tif (pos.x >= game.deployArea[i].x && pos.x <= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pos.x <= game.deployArea[i].x && pos.x >= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pos.x > game.deployArea[i].x && pos.x < game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\tif (pos.y > game.deployArea[i].y && pos.y < game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valid){\n\t\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\t\tif (game.ships[i].deployed && game.ships[i].id != this.id && game.ships[i].userid == this.userid){ // different ship, different owners\n\t\t\t\t\t\tvar step = game.ships[i].getGamePos();\n\t\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[i].size/2 + this.size/2)){\n\t\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < game.deployArea.length; i++){\n\t\t\t\tif (game.deployArea[i].id != this.userid){continue;}\n\n\t\t\t\tif (getDistance(game.deployArea[i], pos) < game.deployArea[i].s){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tthis.doDeploy = function(pos){\n\t\tconsole.log(this);\n\t\tif (this.actions.length){\n\t\t\tthis.actions[0].x = pos.x;\n\t\t\tthis.actions[0].y = pos.y;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\t\t}\n\t\telse {\n\t\t\tvar facing = 0;\n\t\t\tvar index;\n\t\t\tfor (var i = 0; i < playerstatus.length; i++){\n\t\t\t\tif (playerstatus[i].userid == this.userid){\n\t\t\t\t\tindex = i % 2; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfacing = 0 + (180 * (index % 2));\n\t\t\tthis.actions.push(new Move(-1, \"deploy\", 0, pos.x, pos.y, facing, 0, 0, 1, 1, 0));\n\t\t\tthis.deployed = true;\n\t\t\t//this.facing = facing;\n\t\t\tthis.drawFacing = facing;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\n\t\t\tvar shipId = this.id;\n\t\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n\t\t\t\tif ($(this).data(\"shipid\") == shipId){\n\t\t\t\t\t$(this).remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tthis.select();\n\n\t\t$(\"#deployOverlay\").hide();\n\t\t$(\"#deployWrapper\")\n\t\t\t\t.find(\"#reinforceTable\").find(\".requestReinforcements\").each(function(){\n\t\t\t\tif ($(this).hasClass(\"selected\")){\n\t\t\t\t\t//$(this).find(\".cost\").addClass(\"green\");\n\t\t\t\t\t$(this).addClass(\"green\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}).end()\n\t\t\t.find(\"#totalRequestCost\").html(game.getCurrentReinforceCost());\n\n\t\tgame.redraw();\n\t}\n\n\tthis.canDeployFlightHere = function(pos){\n\t\tvar dist = getDistance({x: this.x, y: this.y}, {x: pos.x, y: pos.y})\n\t\tif (dist <= game.flightDeploy.range){\n\t\t\tvar a = getAngleFromTo( {x: this.x, y: this.y}, {x: pos.x, y: pos.y} );\n\t\t\t\ta = addAngle(this.getDrawFacing(), a);\n\t\t\tif (isInArc(a, game.flightDeploy.start, game.flightDeploy.end)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.setHitTable = function(){\n\t\t//console.log(\"id: \" + this.id);\n\t\t//this.primary.setRemainingIntegrity();\n\t\tvar fraction = this.primary.remaining / this.primary.integrity;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n\t\t\t\tthis.primary.systems[i].exposed = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.isDestroyed = function(){\n\t\tif (this.primary.destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isDestroyedThisTurn = function(){\n\t\tif (this.destroyed || this.primary.destroyed || this.getSystemByName(\"Reactor\").destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasHangarSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tthis.hasSystemsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.hasWeaponsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.doHover = function(){\n\t\tif (!game.sensorMode){\n\t\t\tthis.drawEW();\n\t\t}\n\t\tif (this.ship){\n\t\t\tthis.setMoveTranslation();\n\t\t\tthis.drawVectorIndicator();\n\t\t\tthis.drawMoveArea();\n\t\t\tthis.drawTurnArcs();\n\t\t\t//if (game.phase < 2){\n\t\t\t//}\n\t\t\tthis.resetMoveTranslation();\n\t\t}\n\t\tthis.drawMovePlan();\n\t\tthis.drawIncomingMovePlan();\n\t\tthis.drawTargetMovePlan();\n\t}\n\n\t\n\tthis.getImpulseChangeCost = function(){\n\t\treturn Math.round(this.baseImpulseCost*(1-(1-this.getImpulseMod())/2));\n\t}\n\n\tthis.getBaseImpulse = function(){\n\t\treturn this.baseImpulse;\n\t}\n\n\tthis.getRemainingImpulses = function(){\n\t\treturn this.remainingImpulse;\n\t}\n\n\tthis.setRemainingImpulse = function(){\n\t\treturn;\n\t\tthis.remainingImpulse -= this.actions[this.actions.length-1].dist;\n\t}\n\n\tthis.getImpulseStep = function(){\n\t\t//return 15;\n\t\treturn Math.floor(this.getBaseImpulse() / 8);\n\t}\n\t\n\tthis.getTurnCost = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn round(this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod(), 2);\n\t\t}\n\t\tif (this.actions.length && (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0)){\n\t\t\treturn 0;\n\t\t}\n\t\telse return round(this.baseTurnCost*this.getImpulseMod() * this.getTurnMod(), 2);\n\t\t//else return this.baseTurnCost; //Math.pow(this.mass, 1.25)/10000;\n\t\t//else return Math.found((Math.pow(this.mass, 1.56) / 10000) *  this.getImpulseMod());\n\t}\n\n\tthis.getTurnMod = function(){\n\t\treturn turn.mod || 1;\n\t}\n\t\n\tthis.getTurnDelay = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn round(this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod());\n\t\t}\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\treturn 0;\n\t\t}\n\t\telse return round(this.baseTurnDelay*this.getImpulseMod() / (1+((this.getTurnMod()-1)*3)), 2);\n\t\t//else return round(this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod());\n\t}\n\n\tthis.drawArcIndicator = function(){\n\t\treturn;\n\t\tvar shipPos = this.getGamePos();\n\t\tvar angle = this.getPlannedFacing();\n\n\t\tvar p1 = getPointInDirection(80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p2 = getPointInDirection(-80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p3 = getPointInDirection(80, 180+angle, shipPos.x, shipPos.y);\n\t\tvar p4 = getPointInDirection(-80, 180+angle, shipPos.x, shipPos.y);\n\n\t\tmoveCtx.beginPath();\n\t\tmoveCtx.moveTo(p1.x, p1.y);\n\t\tmoveCtx.lineTo(p2.x, p2.y);\n\t\tmoveCtx.moveTo(p3.x, p3.y);\n\t\tmoveCtx.lineTo(p4.x, p4.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.stroke();\n\n\t}\n\n\tthis.getSlipAngle = function(){\n\t\treturn this.slipAngle;\n\t}\n\n\tthis.drawTurnUI = function(){\n\t\t//var center = this.getPlannedPos();\n\t\t//var angle = this.getPlannedFacing();\n\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar angle = this.getDrawFacing();\n\t\tvar turnEle = $(\"#turnButton\")[0];\n\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n\t\t$(turnEle)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n\t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n\t\t\t.find(\"#impulseMod\").html(\"x \" +turn.dif).end()\n\t\t\t//.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n\t}\n\t\t\n\tthis.canIncreaseImpulse = function(){\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tthis.canDecreaseImpulse = function(){\n\t\tif (this.getCurrentImpulse() <= 0){return false;}\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\tthis.getShortenTurnCost = function(){\n\t\treturn this.getTurnCost() / turn.mod * (turn.mod + turn.step) * turn.a;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\tthis.canShortenTurn = function(){\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod < 2 && this.getRemainingEP() >= this.getShortenTurnCost()){\n\t\t\t\t//console.log(\"can shorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant shorten\")\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoShortenTurn = function(){\n\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod > 1){\n\t\t\t\t//console.log(\"can unshorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant unshorten\")\n\t\treturn false;\n\t}\n\n\tthis.doShortenTurn = function(max){\n\t\tif (max){\n\t\t\twhile (this.canShortenTurn()){\n\t\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\t}\n\t\t\tthis.setTurnData();\n\t\t}\n\t\telse if (this.canShortenTurn()){\n\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\t\n\tthis.doUndoShortenTurn = function(max){\n\t\tif (turn.mod > 1){\n\t\t\tif (max){\n\t\t\t\tturn.mod = 1;\n\t\t\t} else turn.mod = Math.floor((turn.mod * 10) - turn.step*10) / 10;\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\n\tthis.setTurnData = function(){\n\t\t//console.log(turn);\n\n\t\tvar button = $(\"#turnButton\");\n\t\tvar vector = $(\"#vectorDiv\")\n\n\t\t$(button)\n\t\t\t.find(\"#turnMode\").html(\"ON\").addClass(\"on\").end()\n\t\t\t//.find(\"#turnCost\").html(round(turn.cost * turn.mod * turn.dif, 2) + \" EP\").end()\n\t\t\t//.find(\"#turnDelay\").html(round(turn.delay * turn.mod * turn.dif, 2) + \" px\").end()\n\t\t\t.find(\"#turnCost\").html(this.getTurnCost() + \" EP\").end()\n\t\t\t.find(\"#turnDelay\").html(this.getTurnDelay() + \" px\").end()\n\t\t\t.find(\"#turnMod\").html(turn.mod).end()\n\n\t\tif (game.turnMode){\n\t\t\t$(button)\n\t\t\t\t.find(\"#shortenTurn\").removeClass(\"disabled\");\n\t\t\t\t$(\"#epButton\")\n\t\t\t\t.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n\t\t\t\t.find(\"#impulseText\").html(\"Cost : Rem\").end().find(\"#impulseCost\").html(\"\");\n\n\t\t\tthis.drawDelay();\n\t\t\tthis.adjustMaxTurn()\n\t\t}\n\t\telse {\n\t\t\t$(button)\n\t\t\t\t.find(\"#turnMode\").html(\"OFF\").removeClass(\"on\").end()\n\t\t\t\t.find(\"#shortenTurn\").addClass(\"disabled\");\n\t\t\t$(\"#epButton\")\n\t\t\t\t.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n\t\t\t\t.find(\"#impulseText\").html(\"Cost : Rem\").end().find(\"#impulseCost\").html(\"\");\n\t\t\t$(vector).addClass(\"disabled\")\n\t\t}\n\n\t\t//this.drawEW();\n\t}\n\n\tthis.adjustMaxTurn = function(){\n\t\tif (this.getMaxTurnAngle() < turn.max){\n\t\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tthis.setMoveTranslation();\n\t\t\tthis.drawTurnArcs();\n\t\t\tthis.drawVectorIndicator();\n\t\t\tthis.resetMoveTranslation();\n\t\t}\n\t}\n\n\tthis.canDoAnotherTurn = function(){\n\t\tvar i = 0;\n\t\tif (!this.getRemainingImpulse()){\n\t\t\treturn false;\n\t\t}\n\t\telse if (this.turns[i].cost * (this.turns[i].costmod + 0.2) + this.getTurnCost() < this.getRemainingEP()){\n\t\t\treturn true;\n\t\t}\n\t\telse return false;\n\t}\n\n\tthis.doIncreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPos();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speed\", 1, shipPos.x, shipPos.y, 0, 0, this.getImpulseChangeCost(), 1, 1, 0);\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.resetMoveMode();\n\t\tgame.redraw();\n\t}\n\n\tthis.doDecreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPos();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speed\", -1, shipPos.x, shipPos.y, 0, 0, this.getImpulseChangeCost(), 1, 1, 0);\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.resetMoveMode();\n\t\tgame.redraw();\n\t}\n\n\tthis.drawMoveUI = function(){\n\t\tthis.drawImpulseUI();\n\t\tthis.drawVectorMovementUI();\n\t\tif (this.canTurn()){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.updateDiv();\n\t\t}\n\t}\n\n\tthis.drawVectorMovementUI = function(){\n\t\tvar center = this.getPlannedPos();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar ele;\n\n\t\tif (rem > 0){\n\t\t\tele = document.getElementById(\"maxVector\");\n\t\t\tvar p = getPointInDirection(rem + 90, angle, center.x, center.y);\n\t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t$(ele)\n\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t.data(\"dist\", rem)\n\t\t\t\t//.html(\"<div style='margin-left: 4px; margin-top: 7px'>\"+rem+\"<div>\")\n\t\t\t\t.html(\"<div>\"+rem+\"</div>\")\n\t\t\t\t.css(\"left\", left)\n\t\t\t\t.css(\"top\", top)\n\t\t\t\t.removeClass(\"disabled\");\n\t\t}\n\n\t\tif (delay && rem >= delay){\n\t\t\tele = document.getElementById(\"maxTurnVector\");\n\t\t\tvar p = getPointInDirection(rem + 60, angle, center.x, center.y);\n\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t$(ele)\n\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t.css(\"left\", left)\n\t\t\t\t.css(\"top\", top)\n\t\t\t\t.removeClass(\"disabled\");\n\n\t\t\tif (this.canMaxCut()){\n\n\t\t\t\tdelay = Math.ceil(delay/2);\n\n\t\t\t\tele = document.getElementById(\"maxCutVector\");\n\t\t\t\tvar p = getPointInDirection(rem + 30, angle, center.x, center.y);\n\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t$(ele)\n\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t.removeClass(\"disabled\");\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.canMaxCut = function(){\n\t\tvar last = this.getLastTurn();\n\t\tvar ep = this.getRemainingEP();\n\n\t\tif (last.costmod == 1 && ep && ep >= last.cost / 10){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.drawVectorIndicator = function(){\n\t\tvar center = this.getPlannedPos();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDirection(200, angle, center.x, center.y);\n\t\t\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.lineWidth = 1;\n\t\tmoveCtx.strokeStyle = \"white\";\n\t\tmoveCtx.globalAlpha = 0.5;\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.globalAlpha = 1;\n\t\tmoveCtx.strokeStyle = \"black\";\n\t}\n\n\tthis.getTurnAngle = function(){\n\t\tif (game.phase == -1 && (game.turn == 1 || this.id < 0)){\n\t\t\treturn 180;\n\t\t}\n\t\treturn this.turnAngle;\n\t}\n\n\tthis.getTurnStep = function(){\n\t\treturn this.turnStep;\n\t}\n\n\tthis.getMaxTurnAngle = function(){\n\t\tvar ep = this.getRemainingEP();\n\t\tvar limit = this.getTurnAngle();\n\t\tvar c = this.getTurnCost();\n\n\t\treturn Math.min(limit, Math.floor(ep/c));\n\t}\n\n\tthis.drawTurnArcs = function(){\n\t\tvar center = this.getPlannedPos();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar turnAngle = this.getMaxTurnAngle();\n\t\tvar w = this.getTurnStep();\n\n\t\tthis.turnAngles = {start: addAngle(0 + turnAngle, angle), end: addAngle(360 - turnAngle, angle)};\n\t\t\n\t\tfor (var j = 1; j >= -1; j = j-2){\n\t\t\tfor (var i = 1; i <= w; i++){\t\t\t\n\t\t\t\tvar modAngle = turnAngle * i * j;\n\t\t\t\tvar newAngle = addToDirection(angle, modAngle);\n\t\t\t\tvar p = getPointInDirection(Math.max(this.getBaseImpulse(), this.getRemainingImpulse()*2), newAngle, center.x, center.y);\n\t\t\t\tif (turnAngle != 180){\n\t\t\t\t\tmoveCtx.beginPath();\n\t\t\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\t\t\tmoveCtx.closePath();\n\t\t\t\t\tmoveCtx.globalAlpha = 0.5;\n\t\t\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\t\t\tmoveCtx.stroke();\n\t\t\t\t\tmoveCtx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawDelay = function(){\n\t\tif (game.phase == -1 && game.turn == 1){\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\treturn;\n\t\t}\n\t\telse if (this.actions.length == 1){\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t\tvar delay = turn.a * this.getTurnDelay();\n\t\tif (delay){\n\t\t\tvar angle = this.getPlannedFacing();\n\t\t\tvar center = this.getPlannedPos();\n\t\t\tvar delayRad1 = degreeToRadian(angle-45);\n\t\t\tvar delayRad2 = degreeToRadian(angle+45);\n\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\t\tmouseCtx.scale(cam.z, cam.z);\n\t\t\tmouseCtx.beginPath();\t\t\t\n\t\t\tmouseCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmouseCtx.closePath();\n\t\t\tmouseCtx.strokeStyle = \"red\";\n\t\t\tmouseCtx.lineWidth = 3\n\t\t\tmouseCtx.stroke();\n\t\t\tmouseCtx.arc(center.x, center.y, delay, 0, 2*Math.PI, false);\n\t\t\tmouseCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmouseCtx.fill();\n\t\t\tmouseCtx.globalCompositeOperation = \"source-over\";\n\t\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t} else \n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.drawImpulseUI = function(){\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.getDrawFacing() + 180, center.x, center.y);\n\n\t\tif (this.canUndoLastAction()){\n\t\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#undoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#undoLastAction\").addClass(\"disabled\");\n\n\n\t\tif (this.disabled){return;}\n\n\t/*\tvar gui = $(\"#impulseGUI\");\n\t\tvar w = gui.width();\n\t\tvar h = gui.height();\n\t\tvar p = getPointInDirection((size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n\n\t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n\t\tgui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse());\n\t\tgui.find(\"#remTurnDelay\").html(this.getRemainingDelay());\n\t\tgui.find(\"#baseDelay\").html(round(this.getTurnDelay(), 1));\n\t\tgui.find(\"#enginePower\").html(this.getRemainingEP() + \" / \" + this.getEP());\n\t\tgui.find(\"#impulseChange\").html(this.getImpulseChangeCost() + \" EP\");\n\t\tgui.find(\"#turnCost\").html(\"<span>\" + round(this.getTurnCost(), 1) + \" EP</span>\");\n\n\t*/\tif (this.canIncreaseImpulse()){\n\t\t\tvar pPlus = getPointInDirection(50, this.getDrawFacing() +90, p1.x, p1.y);\n\t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n\n\t\tif (this.canDecreaseImpulse()){\n\t\t\tvar mMinus = getPointInDirection(50, this.getDrawFacing() -90, p1.x, p1.y);\n\t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n\t}\t\n\n\tthis.issueMove = function(pos, dist){\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"move\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\tthis.actions[this.actions.length-1].dist+= dist;\t\n\t\t\tthis.actions[this.actions.length-1].x = pos.x;\n\t\t\tthis.actions[this.actions.length-1].y = pos.y;\n\t\t} else this.actions.push(new Move(-1, \"move\", dist, pos.x, pos.y, 0, 0, 0, 1, 1, 0));\t\n\t\t\n\t\tthis.turnAngles = {}\n\t\t$(\"#popupWrapper\").hide();\n\t\tthis.unsetMoveMode();\n\t\tthis.setRemainingImpulse();\n\t\tthis.setRemainingDelay();\n\t\tthis.autoShortenTurn();\n\t\tthis.setMoveMode();\n\t\tgame.updateIntercepts(this.id);\n\t\tgame.redraw();\n\t\t//game.drawShipOverlays();\n\t}\n\n\tthis.autoShortenTurn = function(){\n\t\tif (!this.ship){return;}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar move = this.getLastTurn();\n\n\t\tif (!impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n\t\t\t}\n\t\t}\n\t\telse if (impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tdelay -= move.delay;\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\tdelay += move.delay;\n\t\t\t\tif (delay <= 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmove.cost = Math.round(move.cost);\n\t\tmove.delay = Math.round(move.delay);\n\t\tthis.setTurnData();\n\n\t}\n\t\n\tthis.canShortenOldTurn = function(move){\n\t\tif (!this.getRemainingDelay()){return;}\n\t\tif (move.costmod < 2 && this.getRemainingEP() >= this.getShortenOldTurnCost(move)){\n\t\t\t//console.log(\"can shorten\")\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.getShortenOldTurnCost = function(move){\n\t\tvar c = this.getTurnCost();\n\t\tvar a = Math.abs(move.a);\n\t\treturn Math.ceil((c * a * (move.costmod + turn.step)) - (c * a * move.costmod));\n\t\treturn Math.ceil(this.getTurnCost() * Math.abs(move.a) * (move.costmod + turn.step)) - move.cost;\n\t\treturn (this.getTurnCost() / move.costmod * (move.costmod + turn.step)) * Math.abs(move.a) - move.cost;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\n\tthis.getLastTurn = function(){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\treturn this.actions[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoLastAction = function(){\n\t\tif (this.actions.length){\n\t\t\tif (this.actions[this.actions.length-1].resolved == 0){\n\t\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.undoOrderButton = false;\n\t\treturn false;\n\t}\n\t\n\tthis.undoLastAction = function(pos){\n\t\tvar update = false;\n\t\tif (this.actions[this.actions.length-1].type == \"speed\"){\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\tthis.setRemainingDelay();\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t\tthis.setRemainingImpulse();\n\t\t\tupdate = true;\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\t\tthis.actions[this.actions.length-1].delay *= -1;\n\t\t\tthis.setRemainingDelay();\n\t\t}\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\tif (update){game.updateIntercepts(this.id);}\n\t\tif (game.turnMode){\n\t\t\tthis.switchTurnMode();\n\t\t}\n\t\tthis.turnAngles = {}\n\t\tgame.redraw();\n\t\t//game.drawShipOverlays();\n\t}\n\n\tthis.moveInVector = function(dist){\n\t\tvar pos = this.getPlannedPos();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\n\tthis.moveToMaxVector = function(){\n\t\tvar pos = this.getPlannedPos();\n\t\tvar dist = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.moveToMaxTurnVector = function(){\n\t\tvar pos = this.getPlannedPos();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\t\n\n\tthis.moveToMaCutVector = function(){\n\t\tvar pos = this.getPlannedPos();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.canTurn = function(){\n\t\tif (this.disabled){return false;}\n\t\tif (this.getRemainingDelay() == 0){\n\t\t\tvar min = 5;\n\t\t\tvar have = this.getRemainingEP();\n\t\t\tvar need = this.getTurnCost() * min;\n\t\t\tif (have >= need){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tthis.switchTurnMode = function(){\n\t\tthis.turnMod = 1;\n\t\tif (game.turnMode){\n\t\t\tturn.reset();\n\t\t\tgame.turnMode = 0;\n\t\t\tthis.setTempEW();\n\t\t\tthis.drawEW();\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t$(\"#epButton\").addClass(\"disabled\");\n\t\t}\t\n\t\telse {\n\t\t\tgame.turnMode = 1;\n\t\t\tthis.setTempEW();\n\t\t\tturn.set(this);\n\t\t\t$(\"#epButton\").removeClass(\"disabled\");\n\t\t}\n\t\tthis.setTurnData();\n\t}\n\n\tthis.setTempEW = function(){;\n\t\tif (game.turnMode){\n\t\t\tthis.getSystemByName(\"Sensor\").drawTempEW(drawCtx);\n\t\t}\n\t\telse {\n\t\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tthis.getSystemByName(\"Sensor\").img = undefined;\n\t\t}\n\t}\n\n\tthis.handleTurning = function(e, o, f, pos){\n\n\t\tvar t = {x: e.clientX - offset.x, y: e.clientY - offset.y};\n\t\tvar max = this.getMaxTurnAngle();\n\t\tvar a =  getAngleFromTo(o, pos);\n\t\t\ta = (addAngle(f, a));\n\n\t\tif (a > 180){a = (360-a) *-1;}\n\n\t\t//console.log(a)\n\t\tif (a < -max){a = -max;}\n\t\telse if (a > max){a = max;}\n\n\t\tvar img = this.getSystemByName(\"Sensor\").img;\n\t\tif (img != undefined){\n\t\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tsalvoCtx.translate(cam.o.x, cam.o.y);\n\t\t\tsalvoCtx.scale(cam.z, cam.z);\n\t\t\tsalvoCtx.translate(o.x, o.y);\n\t\t\tsalvoCtx.rotate(a * Math.PI/180);\n\t\t\tsalvoCtx.drawImage(img, -img.width/2 , -img.height/2, img.width, img.height);\n\t\t\tsalvoCtx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t}\n\n\t\ta = Math.min(Math.abs(a), max);\n\t\tturn.a = a;\n\t\tvar c = this.getTurnCost() * a;\n\t\t$(\"#epButton\").css(\"top\", t.y + 75).css(\"left\", t.x - 70).find(\"#impulseCost\").html(Math.ceil(c, 2) + \" : \" + Math.floor(this.getRemainingEP() - c));\n\n\t\tthis.drawDelay();\n\t\tthis.drawMouseVector(o, t);\n\t}\n\n\tthis.drawMouseVector = function(o, t){\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.moveTo(o.x * cam.z + cam.o.x, o.y * cam.z + cam.o.y);\n\t\tmouseCtx.lineTo(t.x, t.y);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.strokeStyle = \"white\";\n\t\tmouseCtx.lineWidth = 1;\n\t\tmouseCtx.stroke();\n\t}\n\n\tthis.handleTurnAttempt = function(dest){\n\t\tvar origin = this.getPlannedPos();\n\t\tvar a = getAngleFromTo(origin, dest);\n\t\t\ta = addAngle(this.getPlannedFacing(), a);\n\t\tif (a > 180){a -= 360;}\n\t\tvar max = this.getMaxTurnAngle();\n\n\t\tif (isInArc(getCompassHeadingOfPoint(origin, dest, 0), this.turnAngles.start, this.turnAngles.end)){\n\t\t\tif (Math.abs(a) >= 2){\n\t\t\t\tthis.issueTurn(a);\n\t\t\t}\n\t\t} else if (a < 0){\n\t\t\tthis.issueTurn(-max);\n\t\t} else this.issueTurn(max);\n\t}\n\n\tthis.issueTurn = function(a){\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += Math.round(a);\n\t\t\tif (this.actions[0].a > 360){\n\t\t\t\tthis.actions[0].a -= 360;\n\t\t\t} else if (this.actions[0].a < 0){this.actions[0].a += 360;}\n\t\t\tconsole.log(this.actions[0].a);\n\t\t\tthis.drawFacing = this.actions[0].a;\n\t\t\t//this.facing = this.actions[0].a;\n\t\t\tgame.redraw()\n\t\t}\n\t\telse {\n\t\t\tvar o = this.getPlannedPos();\n\t\t\tif (this.getRemainingImpulse() == 0){\n\t\t\t\twhile (this.canShortenTurn()){\n\t\t\t\t\tthis.doShortenTurn();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.actions.push(\n\t\t\t\tnew Move(-1, \"turn\", 0, o.x, o.y, \n\t\t\t\t\tMath.round(a),\n\t\t\t\t\tMath.ceil(this.getTurnDelay()*Math.abs(a)),\n\t\t\t\t\tMath.ceil(this.getTurnCost()*Math.abs(a)),\n\t\t\t\t\tround(turn.mod, 1), 1, 0\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.setRemainingDelay();\n\t\t\t//console.log(this.actions[this.actions.length-1]);\n\t\t\t$(\"#turnButton\")\n\t\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t\t.find(\"#turnDelay\").html(\"\");\n\t\t\t//this.setMoveMode();\n\t\t\tgame.redraw();\n\t\t\t//game.drawShipOverlays();\n\t\t}\n\t}\n\n\tthis.updateShipPower = function(system){\n\t\tvar reactor = this.getSystemByName(\"Reactor\");\n\t\tvar s = reactor.getOutput();\n\t\t$(reactor.element).find(\".outputMask\").html(s);\n\t\t$(this.element).find(\".mainPower\").html(s).end();\n\t\tsystem.update();\n\n\t\tif (system instanceof Engine){\n\t\t\t$(this.element).find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end();\n\t\t}\n\t}\n\n\tthis.updateNonPowerOutput = function(system){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(divs).find(\".system\").each(\n\t\t\tfunction(){\n\t\t\t\tif ($(this).data(\"systemId\") == system.id){\n\t\t\t\t\t$(this).find(\".outputMask\").html(system.getOutput());\n\t\t\t\t\tsystem.update();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tthis.getSystemByName = function(name){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getActiveSensor = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected && this.primary.systems[i].name == \"Sensor\"){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.attachEvent = function(td){\n\t\t$(td).data(\"shipId\", this.id);\n\t\t$(td).hover(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).hover(e);\n\t\t\t}\n\t\t).click(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).select(e);\n\t\t\t}\n\t\t).\n\t\tcontextmenu(\n\t\t\tfunction(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!game.sensorMode){game.getUnit($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));}\n\t\t\t}\n\t\t);\n\t\treturn td;\n\t}\n\n\tthis.selectAll = function(e, id){\n\t\tvar s = this.getSystemById(id);\n\t\tvar w = s.getActiveSystem();\n\t\tvar name = w.name;\n\t\tvar hasFire = s.hasUnresolvedFireOrder();\n\t\tif (name == \"Hangar\"){return;}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (! this.structures[i].systems[j].destroyed){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\t\tif (this.structures[i].systems[j].weapon && this.structures[i].systems[j].hasUnresolvedFireOrder() == hasFire){\n\t\t\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tthis.doUnpowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".unpower\").hide().end().find(\".power\").show();\n\t\tvar name = system.getActiveSystem().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doUnpower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.doPowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".power\").hide().end().find(\".unpower\").show();\n\t\tvar name = system.getActiveSystem().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\t\t//this.structures[i].systems[j].highlight = 1;\n\t\t\t\t\t\tthis.structures[i].systems[j].doPower();\n\t\t\t\t\t\t//this.structures[i].systems[j].highlight = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchModeAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\tvar name = system.getActiveSystem().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].locked){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].switchMode(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getProfileMod = function(){\n\t\treturn Math.floor((1+((((this.getBaseImpulse() / this.getCurrentImpulse())-1)/3)))*100);\n\t}\n\n\tthis.canBoost = function(system){\n\t\tif (system.disabled || system.destroyed){\n\t\t\treturn false;\n\t\t}\n\t\telse if (system instanceof Weapon && !system.disabled && !system.destroyed && (system.getLoadLevel() >= 1 || system.getBoostEffect(\"Reload\") && system.getLoadLevel() < 1)){\n\t\t\tif (system instanceof Launcher){\n\t\t\t\tif (system.getOutput() < system.getEffiency()){\n\t\t\t\t\tif (system.getRemainingAmmo() > system.getOutput()){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"There is not enough ammunition left\");\n\t\t\t\t} else popup(\"The launcher is already at maximum capacity\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (system.getBoostLevel() < system.maxBoost){\n\t\t\t\t\tvar avail = this.getUnusedPower();\n\t\t\t\t\tvar need = system.getEffiency();\n\t\t\t\t\tif (avail >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t\t\t} else popup(\"The selected system cant be boosted further.\");\n\t\t\t}\n\t\t}\n\t\telse if (!(system instanceof Weapon)){\n\t\t\tif (this.getUnusedPower() >= system.getEffiency()){\n\t\t\t\treturn true;\n\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnusedPower = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\treturn this.primary.systems[i].getUnusedPower();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tthis.setTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].translate(cam.o.x, cam.o.y);\n\t\t\targuments[i].scale(cam.o.x, cam.o.y);\n\t\t}\n\t}\n\n\tthis.resetTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\tthis.setMoveTranslation = function(){\n\t\tmoveCtx.translate(cam.o.x, cam.o.y);\n\t\tmoveCtx.scale(cam.z, cam.z);\n\t\tplanCtx.translate(cam.o.x, cam.o.y);\n\t\tplanCtx.scale(cam.z, cam.z);\n\t}\n\n\tthis.resetMoveTranslation = function(){\n\t\tmoveCtx.setTransform(1,0,0,1,0,0);\n\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.setMoveMode = function(){\n\t\tgame.mode = 1;\n\t\tturn.set(this);\n\t\tthis.setTurnData();\n\t\tthis.setMoveTranslation();\n\t\t//this.drawTurnGUI();\t\t\n\t\t//this.drawMoveArea();\n\t\t//this.drawVectorIndicator();\n\n\n\t\tif (game.phase == -1 && (this.available == game.turn && game.turn == 1|| this.id < 0)){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.drawTurnArcs();\n\t\t}\n\t\telse if (game.phase == 0){\n\t\t\tthis.drawMoveUI();\n\t\t}\n\t\telse if (game.phase == 2){ // FIRE\n\t\t}\n\t\telse if (game.phase == 3){ // Dmg control\n\t\t}\n\n\t\tthis.resetMoveTranslation();\n\t\tthis.checkSensorHighlight();\n\t\tthis.updateDiv();\n\t}\n\t\n\tthis.unsetMoveMode = function(){\n\t\tgame.mode = 0;\n\t\t$(\"#vectorDiv\").addClass(\"disabled\");\n\t\t$(\"#impulseGUI\").addClass(\"disabled\");\n\t\t$(\".turnEle\").addClass(\"disabled\");\n\t\t$(\"#maxVector\").addClass(\"disabled\");\n\t\t$(\"#maxTurnVector\").addClass(\"disabled\");\n\t\t$(\"#maxCutVector\").addClass(\"disabled\");\n\t\t$(\"#plusImpulse\").addClass(\"disabled\");\n\t\t$(\"#minusImpulse\").addClass(\"disabled\");\n\t\t$(\"#undoLastAction\").addClass(\"disabled\");\n\t\tif (game.turnMode){this.switchTurnMode();}\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.isInEWArc = function(origin, target, sensor, ew){\t\t\n\t\tvar str = sensor.getOutput();\n\t\tvar\tw = Math.min(180, game.const.ew.len * Math.pow(str/ew.dist, game.const.ew.p));\n\t\tvar start = addAngle(0 + w, ew.angle);\n\t\tvar end = addAngle(360 - w, ew.angle);\n\t\treturn isInArc(getCompassHeadingOfPoint(origin,  target, this.getPlannedFacing()), start, end);\n\t}\n\n\tthis.canSetSensor = function(sensor){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tif (sensor.selected && !sensor.locked){\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\t\n\tthis.unselectSystems = function(){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#weaponAimTableWrapper\").hide();\n\t//\tvar buttons = $(this.element).find(\".system.selected\").each(function(){\n\t//\t\t$(this).removeClass(\"selected\");\n\t//\t});\t\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\tthis.structures[i].systems[j].select();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.flight || this.salvo){return;}\n\t\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected){\n\t\t\t\tthis.primary.systems[i].select();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.getFireOrders = function(){\n\tvar fires = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n\t\t\t\t} else break;\n\t\t\t}\n\t\t}\n\t}\n\treturn fires;\n}\n\nShip.prototype.getPowerOrders = function(){\n\tvar powers = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var k = 0; k < this.structures[i].powers.length; k++){\n\t\t\tif (this.structures[i].powers[k].new){\n\t\t\t\tpowers.push(this.structures[i].powers[k]);\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = 0; k < this.structures[i].systems[j].powers.length; k++){\n\t\t\t\tif (this.structures[i].systems[j].powers[k].new){\n\t\t\t\t\tpowers.push(this.structures[i].systems[j].powers[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n\t\t\tif (this.primary.systems[i].powers[j].new){\n\t\t\t\tpowers.push(this.primary.systems[i].powers[j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn powers;\n}\n\nShip.prototype.switchDiv = function(){\n\tif (this.selected){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse if ($(this.element).hasClass(\"disabled\")){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse {\n\t\tgame.zIndex--;\n\t\t$(this.element).addClass(\"disabled\").css(\"zIndex\", 10);\n\t}\n}\n\nShip.prototype.setPreMoveFacing = function(){\n\tthis.drawFacing = this.facing;\n\tif (this.available == game.turn){\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"deploy\" || this.actions[i].type == \"jump\"){\n\t\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.setPostMoveFacing = function(){\n\tthis.drawFacing = this.facing;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\t//if (this.actions[i].type == \"turn\"){\n\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t//}\n\t}\n}\n\nShip.prototype.setPreMovePosition = function(){\n\t//console.log(\"setPreMovePosition\");\n\tthis.drawX = this.x;\n\tthis.drawY = this.y;\n}\n\nShip.prototype.setPostMovePosition = function(){\n\t//console.log(\"setPostMovePosition\");\n\t//this.setPreMovePosition(); return;\n\tthis.drawX = this.actions[this.actions.length-1].x;\n\tthis.drawY = this.actions[this.actions.length-1].y;\n}\n\nShip.prototype.setDrawData = function(){\n\tif (this.available > game.turn || !this.available || game.turn == 1 && game.phase == -1){\n\t\treturn;\n\t}\n\t\n\tif (game.phase > 2){\n\t\tthis.setPostMovePosition();\n\t\tthis.setPostMoveFacing();\n\t}\n\telse if (game.phase == 1){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFacing();\n\t}\n\telse {\n\t\tthis.setPreMovePosition();\n\t\tif (this.ship){\n\t\t\tthis.setPreMoveFacing();\n\t\t}\n\t}\n}\n\nShip.prototype.setUnitGUI = function(){\n\tvar id = this.id;\n\t$(\"#unitGUI\").find(\"img\").each(function(){\n\t\tif ($(this).data(\"id\") == id){\n\t\t\t$(this).toggleClass(\"selected\"); return;\n\t\t}\n\t});\n\t$(this.element).toggleClass(\"selection\");\n}\n\nShip.prototype.getArmourString = function(a){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\treturn (this.structures[i].getArmourString());\n\t\t\t//return (this.structures[i].remainingNegation + \" / \" + this.structures[i].negation);\n\t\t}\n\t}\n}\n\nShip.prototype.drawMovePlan = function(){\n\t//console.log(\"draw moves for #\" + this.id);\n\tif (!this.actions.length || this.actions[this.actions.length-1].resolved){\n\t\treturn;\n\t}\n\telse if (this.ship && game.phase == 0 || this.flight && game.phase == 1){\n\t//else if (true){\n\t\tthis.setMoveTranslation();\n\n\t\tplanCtx.strokeStyle = \"#00ea00\";\n\t\tif (!this.friendly){\n\t\t\tplanCtx.strokeStyle = \"red\";\n\t\t}\n\t\tvar i;\n\t\tfor (i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tvar action = this.actions[i];\n\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\n\t\t\t\tif (i == 0){\n\t\t\t\t\tvar p = this.getGamePos();\n\t\t\t\t\tplanCtx.moveTo(p.x, p.y);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplanCtx.moveTo(this.actions[i-1].x, this.actions[i-1].y);\n\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\tplanCtx.lineTo(action.x, action.y);\n\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\tvar angle = this.getPlannedFacing(i);\n\t\t\t\t\t\n\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\tplanCtx.arc(action.x, action.y, 3, 0, 2*Math.PI, false);\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tplanCtx.closePath();\n\t\t\t}\n\t\t}\n\t\tplanCtx.strokeStyle = \"black\";\n\t\tthis.drawPlanMarker();\n\t\tthis.resetMoveTranslation();\n\t}\n}\n\nShip.prototype.getShortInfo = function(){\n\tvar ele = $(\"#shortInfo\");\n\tif (this.userid == game.userid){\n\t\t$(ele).attr(\"class\", \"friendly\");\n\t} else $(ele).attr(\"class\", \"hostile\");\n\n\tvar impulse = this.getCurrentImpulse();\n\n\tvar table = document.createElement(\"table\");\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.name + \" #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.getStringHitChance();\n\treturn table;\n}\n\nShip.prototype.getStringHitChance = function(){\n\tvar baseHit = this.getBaseHitChance();\n\treturn (\"Base Hit: \" + Math.floor(this.profile[0] * baseHit) + \"% - \" + Math.floor(this.profile[1] * baseHit) + \"%\");\n}\n\nShip.prototype.getParent = function(){\n\treturn this;\n}\n\nShip.prototype.isReady = function(){\n\tif (this.available < game.turn){\n\t\treturn true;\n\t}\n\telse if (this.available == game.turn && !(game.phase == 0 && game.animating && !this.deployed)){\n\t\tif (this.userid == game.userid && this.actions.length || game.phase >= 0){\n\t\t\treturn true;\n\t\t}\n\t} else if (this.available > game.turn && this.actions.length == 1 && !this.actions[0].resolved){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\nShip.prototype.setTarget = function(){\n\treturn;\n}\n\nShip.prototype.select = function(){\n\t//if (game.animating){return;}\n\tif (!this.selected){\n\t\tthis.doSelect();\n\t} else this.switchDiv();\n}\n\nShip.prototype.doSelect = function(){\n\tconsole.log(this);\n\t//console.log(this.cc);\n\taUnit = this.id;\n\tthis.selected = true;\n\tthis.setUnitGUI();\n\t//game.drawShipOverlays();\n\tgame.setShipTransform();\n\tthis.drawPositionMarker();\n\tgame.resetShipTransform();\n\tthis.switchDiv();\n\tgame.drawMixedMoves();\n\tif (this.ship){this.setMoveMode();}\n\n\t//console.log(this.getRemainingEP() / this.baseTurnCost)\n}\n\nShip.prototype.doUnselect = function(){\n\tthis.unselectSystems();\n\taUnit = false;\n\tthis.selected = false;\n\tthis.setUnitGUI();\n\tif (game.deploying){game.disableDeployment();}\n\telse if (game.flightDeploy){game.flightDeploy = false;}\n\telse if (game.mission){this.disableMissionMode()}\n\t//game.setShipTransform();\n\t//this.drawPositionMarker();\n\t//game.resetShipTransform();\n\tgame.redraw();\n\t//game.drawShipOverlays();\n\tthis.switchDiv();\n\tthis.unsetMoveMode();\n\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n\t$(\"#popupWrapper\").hide()\n\t$(\"#instructWrapper\").hide()\n\t$(\"#systemDetailsDiv\").remove();\n\tmouseCtx.clearRect(0, 0, res.x, res.y);\n}\n\nShip.prototype.doHighlight = function(){\n\tif (this.highlight){\n\t\tthis.highlight = false;\n\t\tgame.draw();\n\t}\t\n\telse {\n\t\t//console.log(\"highlight on\");\n\t\tthis.highlight = true;\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t\tctx.beginPath();\n\t\tctx.arc(this.drawX, this.drawY, this.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.lineWidth = 3;\n\t\tctx.globalAlpha = 1;\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t\tctx.setTransform(1,0,0,1,0,0);\n\n\t\t//this.drawMovePlan();\n\t\t//this.drawIncomingMovePlan();\n\t\t//this.drawTargetMovePlan();\n\t\t//this.drawTrajectory();\n\t}\n}\n\nShip.prototype.drawTrajectory = function(){\n\treturn;\n}\n\nShip.prototype.create = function(){\n\tthis.img = window.shipImages[this.name.toLowerCase()];\n\t//this.setDrawData();\n\tthis.setHitTable();\n\n\tif (game.turn > 1 && game.phase == -1 &&this.available == game.turn){\n\t\tthis.x = this.actions[0].x;\n\t\tthis.y = this.actions[0].y;\n\t\tthis.drawX = this.actions[0].x;\n\t\tthis.drawY = this.actions[0].y;\n\t}\n}\n\nShip.prototype.setSize = function(){\n\treturn;\n}\n\nShip.prototype.setLayout = function(){\n\treturn;\n}\n\nShip.prototype.setImage = function(){\n\treturn;\n}\n\nShip.prototype.draw = function(){\n\tif (!this.doDraw){\n\t\t//this.drawPositionMarker();\n\t\treturn;\n\t}\n\n\tif (this.isReady()){\n\t \tthis.drawPositionMarker();\n\t\tthis.drawSelf();\n\t\tthis.drawEscort();\n\t}\n}\n\nShip.prototype.drawSelf = function(){\n\tctx.translate(this.drawX, this.drawY);\n\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\n\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n}\n\nShip.prototype.drawEscort = function(){\n\tif (this.cc.length && this.drawImg != undefined){\n\t\tvar s = this.drawImg.width/2;\n\t\tctx.drawImage(this.drawImg, -s/2, -s/2, s, s);\n\t}\n\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\tctx.translate(-this.drawX, -this.drawY);\n}\n\nShip.prototype.drawPositionMarker = function(){\n\tvar color = \"\";\n\tif (this.selected){color = \"yellow\"}\n\telse if (this.friendly){color = \"#27e627\";}\n\telse {color = \"red\";}\n\tthis.drawMarker(this.drawX, this.drawY, color, ctx);\n}\n\nShip.prototype.drawPlanMarker = function(){\n\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\tif (!this.actions[i].resolved){\n\t\t\tvar color = \"green\";\n\t\t\tif (!this.friendly){color = \"red\";}\n\t\t\tthis.drawMarker(this.actions[i].x, this.actions[i].y, color, planCtx);\n\t\t\treturn;\n\t\t} else return;\n\t}\n}\n\nShip.prototype.drawMarker = function(x, y, c, context){\n\tcontext.beginPath();\n\tcontext.arc(x, y, (this.size-2)/2, 0, 2*Math.PI, false);\n\tcontext.closePath();\n\tcontext.lineWidth = 1 + Math.floor(this.selected*2);\n\tcontext.globalAlpha = 0.8;\n\tcontext.globalCompositeOperation = \"source-over\";\n\tcontext.strokeStyle = c;\n\tcontext.stroke();\n\tcontext.globalAlpha = 1;\n\tcontext.lineWidth = 1;\n\tcontext.strokeStyle = \"black\";\n}\n\nShip.prototype.getPlannedFacing = function(){\n\tvar angle = 0;\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tangle += this.actions[i].a;\n\t}\n\treturn this.facing + angle;\n}\n\nShip.prototype.getDrawFacing = function(){\n\treturn this.drawFacing;\n}\n\nShip.prototype.getImpulseMod = function(){\n\treturn this.getCurrentImpulse() / this.getBaseImpulse();\n}\n\n\nShip.prototype.getBaseHitChance = function(){\n\treturn this.baseHitChance;\n}\n\nShip.prototype.getAngledHitChance = function(angle){\n\tvar a, b, c, base;\n\t\n\twhile (angle > 90){\n\t\tangle -= 180;\n\t}\n\tif (angle < 0){\n\t\tangle *= -1;\n\t}\n\n\tbase = this.getBaseHitChance();\n\ta = base * this.profile[0];\n\tb = base * this.profile[1];\n\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n\tsub /= (90 - 0);\n\treturn Math.ceil(sub);\n}\n\n\nShip.prototype.getDmgByFire = function(fire){\n\t//console.log(fire.hits);\n\tvar dmgs = [];\n\tvar lookup = 0;\n\n\tfor (var i = 0; i < fire.hits.length; i++){\n\t\tlookup += fire.hits[i] * fire.weapon.getDmgsPerShot();\n\t}\n\n\tif (!lookup){\n\t\treturn dmgs;\n\t}\n\n\tfor (var i = this.primary.damages.length-1; i >= 0; i--){\n\t\tif (this.primary.damages[i].fireid == fire.id){\t\t\t\t\t\n\t\t\tdmgs.push(this.primary.damages[i]);\n\t\t\tdmgs[dmgs.length-1].system = \"Main Structure\";\n\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(-1);\n\t\t\tlookup--;\n\t\t\tif (!lookup){return dmgs};\n\t\t}\n\t\telse if (this.primary.damages[i].turn < fire.turn){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = this.primary.systems[i].damages.length-1; j >= 0; j--){\n\t\t\tif (this.primary.systems[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.primary.systems[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.primary.systems[i].display\n\t\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(-1);\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.primary.systems[i].damages[j].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].damages.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].damages[k].fireid == fire.id){\n\t\t\t\t\tdmgs.push(this.structures[i].systems[j].damages[k]);\n\t\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].systems[j].display\n\t\t\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(i);\n\t\t\t\t\tlookup--;\n\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t} else if (this.structures[i].systems[j].damages[k].turn < fire.turn){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dmgs;\n}\n\nShip.prototype.getSystemLocation = function(i){\n\tif (i == -1){\n\t\treturn getPointInDirection(this.size/6, this.getDrawFacing()+range(0, 359), 0, 0);\n\t}\n\tvar p = getPointInDirection(this.size/4, this.structures[i].getDirection() + this.getDrawFacing(), 0, 0);\n\t\tp.x += range(-5, 5);\n\t\tp.y += range(-5, 5);\n\treturn p;\n}\n\nShip.prototype.canDeploy = function(){\n\tif (this.userid == game.userid && (game.turn == 1 || this.id < 0)){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.getWeaponOrigin = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (i == this.structures.length-1 || id > this.structures[i].id && id < this.structures[i+1].id){\n\t\t\tvar dev = this.size / 6;\n\t\t\treturn getPointInDirection(this.size/3 + range (-dev, dev), (this.structures[i].getDirection() + this.getDrawFacing()), 0, 0);\n\t\t}\n\t}\n\tconsole.log(\"lacking gun origin\");\n\treturn this.getSystemById(id);\n}\n\nShip.prototype.resetMoveMode = function(){\n\tvar turn = game.turnMode;\n\tthis.unsetMoveMode();\n\tthis.setMoveMode();\n\tif (turn && this.canTurn()){\n\t\tthis.switchTurnMode();\n\t}\n}\n\nShip.prototype.getCurrentImpulse = function(){\n\tif (game.phase >= 1 && this.ship){\n\t\treturn this.currentImpulse;\n\t}\n\tvar step = this.getImpulseStep();\n\tvar amount = 0;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type != \"speed\"){continue;}\n\t\tamount += this.actions[i].dist;\n\t}\n\treturn this.currentImpulse + step*amount;\n}\n\nShip.prototype.getRemainingImpulse = function(){\n\tif (game.phase >= 1 && this.ship){\n\t\treturn 0;\n\t}\n\tvar impulse = this.getCurrentImpulse();\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].turn == game.turn){\n\t\t\tif (this.actions[i].type == \"move\"){\n\t\t\t\timpulse -= this.actions[i].dist;\n\t\t\t}\n\t\t}\n\t}\n\treturn impulse;\n}\n\nShip.prototype.getFireDest = function(fire, isHit, nbrHit){\n\tif (!isHit){\n\t\treturn {\n\t\t\tx: ((this.size/2 + (range (0, this.size/6))) * (1-(range(0, 1)*2))),\n\t\t\ty: ((this.size/2 + (range (0, this.size/6))) * (1-(range(0, 1)*2)))\n\t\t}\n\t}\n\treturn fire.damages[nbrHit].loc;\n}\n\nShip.prototype.getExplosionSize = function(j){\n\treturn this.size;\n}\n\nShip.prototype.setMoveAngles = function(){\n\tvar angle = this.getPlannedFacing();\n\tvar slipAngle = this.getSlipAngle();\t\n\tthis.moveAngles = {start: addAngle(0 + slipAngle, angle), end: addAngle(360 - slipAngle, angle)};\n}\n\nShip.prototype.drawMoveArea = function(){\n\t//moveCtx.clearRect(0, 0, res.x, res.y);\n\tthis.setMoveAngles();\n\n\tif (this.moveAngles.start + this.moveAngles.end == 360){\n\t\t//return;\n\t}\n\n\tvar center = this.getPlannedPos();\t\n\tvar rem = this.getRemainingImpulse();\n\tvar p1 = getPointInDirection(rem, this.moveAngles.start, center.x, center.y);\n\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\tvar rad1 = degreeToRadian(this.moveAngles.start);\n\tvar rad2 = degreeToRadian(this.moveAngles.end);\n\tvar delay = this.getRemainingDelay();\n\n\t\n\tif (delay > 0){\n\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\tmoveCtx.lineWidth = 2\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\tmoveCtx.fill();\n\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\n\t\tif (delay > 5 && this.canMaxCut()){\n\t\t\tdelay = Math.round(delay/2);\n\t\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\tmoveCtx.lineWidth = 2\n\t\t\tmoveCtx.stroke();\n\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmoveCtx.fill();\n\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\t\t}\n\t}\n\n\tmoveCtx.beginPath();\t\t\t\n\tmoveCtx.moveTo(center.x, center.y);\n\tmoveCtx.lineTo(p1.x, p1.y); \n\tmoveCtx.arc(center.x, center.y, dist, rad1, rad2, false);\n\tmoveCtx.closePath();\n\tmoveCtx.globalAlpha = 0.15;\n\tmoveCtx.fillStyle = \"white\";\n\tmoveCtx.fill();\n\tmoveCtx.globalAlpha = 1;\n}\n\nShip.prototype.drawMoveArcs = function(center, rem){\n\tfor (var i in this.moveAngles){\n\t\tvar p = getPointInDirection(rem, this.moveAngles[i], center.x, center.y);\n\t\tmoveCtx.beginPath();\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.strokeStyle = \"white\"\n\t\tmoveCtx.stroke();\n\t}\n}\n\nShip.prototype.getEP = function(){\n\tvar ep = 0;\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == \"Engine\"){\n\t\t\tep += this.primary.systems[i].getOutput();\n\t\t}\n\t}\n\n\treturn ep;\n}\n\nShip.prototype.getRemainingEP = function(){\n\tvar ep = this.getEP();\n\t\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].turn == game.turn){\n\t\t\tif (this.actions[i].cost != 0){\n\t\t\t\tep -= this.actions[i].cost// * this.actions[i].costmod;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn Math.floor(ep);\n}\n\nShip.prototype.getRemainingDelay = function(){\n\tvar delay = this.remainingDelay;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t//delay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n\t\t\tdelay += this.actions[i].delay;\n\t\t}\n\t\telse if (this.actions[i].type == \"move\"){\n\t\t\tdelay = Math.max(0, delay - this.actions[i].dist);\n\t\t}\n\t}\n\treturn Math.ceil(delay);\n}\t\n\nShip.prototype.getRemainingDelaya = function(){\n\treturn this.remainingDelay;\n}\n\nShip.prototype.setRemainingDelay = function(){\n\treturn;\n\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\tthis.remainingDelay = Math.max(0, Math.max(this.remainingDelay - this.actions[this.actions.length-1].dist), this.actions[this.actions.length-1].delay);\n\t}\n\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\tthis.remainingDelay = Math.max(0, this.remainingDelay + this.actions[this.actions.length-1].delay);\n\t}\n}\n\nShip.prototype.getNextPosition = function(){\n\treturn this.getPlannedPos();\n}\n\nShip.prototype.getPlannedPos = function(){\n\tif (this.actions.length){\n\t\treturn new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t}\n\treturn new Point(this.x, this.y);\n}\n\t\nShip.prototype.getGamePos = function(){\n\tif (this.actions.length){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\treturn {x: this.actions[i].x, y: this.actions[i].y};\n\t\t\t}\n\t\t}\n\t}\n\treturn {x: this.x, y: this.y};\n}\n\nShip.prototype.getDrawPos = function(){\n\treturn {x: this.drawX, y: this.drawY};\n}\n\nShip.prototype.getWeaponPosition = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n\t\t\t\treturn getPointInDirection(range(-size/3, size / 3), a, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.unpowerAllSystems = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].destroyed){\n\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n\t\t\t\tthis.structures[i].systems[j].setTableRow();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.createBaseDiv = function(){\n\tvar owner = \"friendly\";\n\tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n\tvar div = document.createElement(\"div\");\n\t\tdiv.className = \"shipDiv \" + owner;\n\t\t$(div).data(\"shipId\", this.id);\n\n\tthis.element = div;\n\n\tvar subDiv = document.createElement(\"div\");\n\t\tsubDiv.className = \"header\";\n\t\n\tvar table = document.createElement(\"table\");\n\t\ttable.className = \"general\";\n\n\tvar header = \"red\";\n\tif (this.friendly){header = \"green\";}\n\n\t\t$(table)\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colSpan\", 2).addClass(header)))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Classification\"))\n\t\t\t\t.append($(\"<td>\").html(game.getUnitType(this.traverse))))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Thrust\"))\n\t\t\t\t.append($(\"<td>\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).addClass(\"Thrust\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Engine Power:\"))\n\t\t\t\t.append($(\"<td>\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"ep\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Thrust Change:\"))\n\t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Turn Cost per 1\"))\n\t\t\t\t.append($(\"<td>\").html(round(this.getTurnCost(), 2) + \" EP\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Turn Delay per 1\"))\n\t\t\t\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Active Turn Delay\"))\n\t\t\t\t.append($(\"<td>\").html(this.getRemainingDelay()).addClass(\"delay\")))\n\t\t\t\n\tsubDiv.appendChild(table);\n\tdiv.appendChild(subDiv);\n\n\t$(this.expandDiv(div))\n\t\t//.addClass(\"disabled\")\n\t\t.drag()\n\t\t.find(\".structContainer\")\n\t\t\t.contextmenu(function(e){e.stopPropagation(); e.preventDefault()})\n\t\t\t.end()\n\t\t.find(\".header\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t})\n\t\t\t.end()\n\t\t.find(\".iconContainer\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\tif ($(this).parent().data(\"shipId\") != aUnit){\n\t\t\t\t\tgame.zIndex--;\n\t\t\t\t\t$(this).parent().addClass(\"disabled\");\n\t\t\t\t}\n\t\t\t})\n\n\n\tif (game.phase == 2){\n\t\t$(div).find(\".structContainer\").show();\n\t}\n}\n\nShip.prototype.expandDiv = function(div){\n\t$(div)\n\t.append($(\"<div>\")\n\t\t.addClass(\"iconContainer\")\n\t\t\t.append($(window.shipImages[this.name.toLowerCase()].cloneNode(true)).addClass(\"rotate270\").addClass(\"size90\"))\n\t\t\t.hover(function(e){\n\t\t\t\tif (aUnit){\n\t\t\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\t\t\tvar target = game.getUnit($(this).parent().data(\"shipId\"));\n\t\t\t\t\tif (shooter.id != target.id && shooter.hasWeaponsSelected()){\n\t\t\t\t\t\thandleWeaponAimEvent(shooter, target, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).\n\t\t\tclick(function(e){\n\t\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\t\tvar target = game.getUnit($(this).parent().data(\"shipId\"));\n\t\t\t\tif (shooter && target){\n\t\t\t\t\tif (target.id != shooter.id && (target.userid != game.userid && target.userid != shooter.userid)){\n\t\t\t\t\t\thandleFireClick(shooter, target);\n\t\t\t\t\t} else target.switchDiv();\n\t\t\t\t}\n\t\t\t}));\n\t\t\t\n\t\t\n\t//document.getElementById(\"game\").appendChild(div);\n\tdocument.body.appendChild(div);\n\t$(div).css(\"position\", \"absolute\").css(\"top\", 300);\n\n\tstructContainer = document.createElement(\"div\");\n\tstructContainer.className = \"structContainer\";\n\tdiv.appendChild(structContainer);\n\n\tvar noFront = true;\n\tvar noAft = true;\n\tvar sides = 0;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tthis.structures[i].direction = this.structures[i].getDirection();\n\t\tif (this.structures[i].direction == 0 || this.structures[i].direction == 360){\n\t\t\tnoFront = false;\n\t\t}\n\t\telse if (this.structures[i].direction == 180){\n\t\t\tnoAft = false;\n\t\t}\n\t\telse if (this.structures[i].direction > 0 && this.structures[i].direction < 180 || this.structures[i].direction > 180 && this.structures[i].direction < 360){\n\t\t\tsides++;\n\t\t}\n\t}\n\tsides /= 2;\n\n\tvar maxWidth = 0;\n\tif (this.structures.length <= 4){\n\t\tif (this.structures[1].systems.length > 4){\n\t\t\tmaxWidth = 320;\n\t\t}\n\t\telse if (this.structures[1].systems.length  < 4){\n\t\t\tmaxWidth = 280;\n\t\t} else maxWidth = 300;\n\t}\n\telse {\n\t\tmaxWidth = 340;\n\t}\n\n\t$(div).css(\"width\", maxWidth);\n\n\n\tvar conWidth = $(structContainer).width();\n\tvar conHeight = $(structContainer).height();\n\n\t// PRIMARY\n\tvar primaryDiv = document.createElement(\"div\");\n\t\tprimaryDiv.className = \"primaryDiv\";\n\tvar primaryTable = document.createElement(\"table\");\n\t\tprimaryTable.className = \"PrimaryTable\";\n\t\tprimaryTable.appendChild(this.primary.getTableData());\n\n\t\tvar systems = 0;\n\t\tvar max = 2;\n\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (systems == 0){\n\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t}\n\n\t\t\tvar td = this.primary.systems[i].getTableData(false);\n\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\tif (this.id > 0 || game.turn == 1){\n\t\t\t\tvar boostDiv = this.primary.systems[i].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\tvar powerDiv = this.primary.systems[i].getPowerDiv();\n\t\t\t\tif (powerDiv){\n\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t}\n\t\t\t\tvar modeDiv =this.primary.systems[i].getModeDiv();\n\t\t\t\tif (modeDiv){\n\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsystems++;\n\t\t\ttr.appendChild(td);\n\n\n\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n\t\t\t\tprimaryTable.appendChild(tr);\n\t\t\t\tsystems = 0;\n\t\t\t}\n\t\t}\n\n\t// PRIMARY OFFSET\n\tvar offsetX = 0;\n\tvar offsetY = -50;\n\tif (noFront){\n\t\toffsetY -= 40;\n\t} else if (noAft){\n\t\toffsetY += 20;\n\t}\n\n\tprimaryDiv.appendChild(primaryTable);\n\tstructContainer.appendChild(primaryDiv);\n\tvar w = $(primaryDiv).width();\n\tvar h = $(primaryDiv).height();\n\tvar primX = conWidth/2 - w/2;\n\tvar primY = conHeight/2 - h/2 + offsetY\n\t$(primaryDiv)\n\t\t.css(\"left\", primX)\n\t\t.css(\"top\", primY);\n\n\t$(structContainer).append($(\"<div>\").addClass(\"mainPower\").html(this.getSystemByName(\"Reactor\").getOutput()));\n\n\n\t// OUTER STRUCTS\n\tfor (var i = 0; i < this.structures.length; i++){\n\n\t\tvar structDiv = document.createElement(\"div\");\n\t\t\tstructDiv.className = \"structDiv\";\n\t\tstructContainer.appendChild(structDiv);\n\t\t\t\n\t\tvar structTable = document.createElement(\"table\");\n\t\t\tstructTable.className = \"structTable\";\n\t\tstructDiv.appendChild(structTable);\n\n\n\t\tvar armourEle = this.structures[i].getTableData();\n\n\t\tif ((this.id > 0 || game.turn == 1) && this.structures[i].effiency){\n\t\t\t{armourEle.appendChild(this.structures[i].getBoostDiv())};\n\t\t}\n\n\t\tvar tr = document.createElement(\"tr\");\n\t\t\ttr.appendChild(armourEle);\n\t\tstructTable.appendChild(tr);\n\n\n\t\tvar col = 0;\n\t\tvar colWidth = 1;\n\t\tvar max;\n\t\tvar a = this.structures[i].direction; if (a == 360){a = 0;}\n\t\tvar w;\n\t\tvar maxRow = 0;\n\n\t\tif (a == 0 || a == 180){ // front or aft\n\t\t\tif (a == 180){\n\t\t\t\tmax = Math.min(6, this.structures[i].systems.length);\n\t\t\t}\n\t\t\telse if (this.structures[i].systems.length % 4 == 0){\n\t\t\t\tmax = 4;\n\t\t\t}\n\t\t\telse if (this.structures[i].systems.length % 4 == 3){\n\t\t\t\tmax = 3;\n\t\t\t}\n\t\t\telse if (this.structures[i].systems.length % 3 == 0){\n\t\t\t\tmax = 6;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = 5;\n\t\t\t}\n\t\t}\n\t\telse { // sides\n\t\t\tif (sides > 1){\n\t\t\t\tmax = 2;\n\t\t\t}\n\t\t\telse if (this.structures[i].systems.length <= 3){\n\t\t\t\tmax = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.structures[i].systems.length <= 4 && noFront){\n\t\t\t\t\tmax = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmax = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//max = Math.min(max, this.structures[i].systems.length)\n\n\t\tvar outerFill = 0; // front / aft, make a wider system in a single row\n\t\tvar innerFill = 0;\n\t\tif (a == 0 || a == 180){\n\t\t\tif (this.structures[i].getBoostEffect(\"Armour\") && this.structures[i].systems.length < 3){\n\t\t\t\tmax = 2;\n\t\t\t\tinnerFill = 1;\n\t\t\t}\n\t\t\telse if (this.structures[i].systems.length == 1 || this.structures[i].systems.length == 2 && this.structures[i].systems[0].name != this.structures[i].systems[1].name){\n\t\t\t\tmax = 3;\n\t\t\t\touterFill = 1;\n\t\t\t}\n\t\t}\n\n\t\tif (max == 1){\n\t\t\tif (this.structures[i].getBoostEffect(\"Armour\")){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"45px\";\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.width = \"40px\";\n\t\t\t} \n\t\t\telse {\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"60px\";\n\t\t\t}\n\t\t}\n\t\telse if (max == 2 && !innerFill){\n\t\t\tif (this.structures[i].getBoostEffect(\"Armour\")){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"45px\";\n\t\t\t} \n\t\t\telse {\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"25px\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"25px\";\n\t\t}\n\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (col == 0){\n\t\t\t\ttr = document.createElement(\"tr\");\n\t\t\t\t//structTable.appendChild(tr);\n\t\t\t\tif (this.structures[i].systems.length - j != max){\n\t\t\t\t\tif ((this.structures[i].systems.length - j) *2 == max){\n\t\t\t\t\t\tcolWidth = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (outerFill){\n\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t}\n\t\t\telse if (innerFill && (j == Math.floor(this.structures[i].systems.length / 2))){\n\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t}\n\n\t\t\tvar td = this.structures[i].systems[j].getTableData(false);\n\t\t\t\ttd.colSpan = colWidth;\n\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\tcol++;\n\t\t\ttr.appendChild(td);\n\n\t\t\tif (this.id > 0 || game.turn == 1){\n\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv);}\n\n\t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n\t\t\t\tif (powerDiv){\n\t\t\t\t\t//console.log($(powerDiv).width());\n\t\t\t\t\ttd.appendChild(powerDiv);}\n\n\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\tif (modeDiv){td.appendChild(modeDiv);}\n\t\t\t}\n\n\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t}\n\n\t\t\tif (outerFill){\n\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t}\n\n\t\t\tif (col == max || j == this.structures[i].systems.length-1){\n\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\tif (maxRow < col){\n\t\t\t\t\tmaxRow = col;\n\t\t\t\t}\n\t\t\t\tcol = 0;\n\t\t\t}\n\n\t\t\t$(structTable).find(\".armour\").attr(\"colSpan\", maxRow);\n\n\n\t\t}\n\n\t\tif (!this.structures[i].systems.length){\n\t\t\tif (a != 0 && a != 180){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.width = \"23px\";\n\t\t\t}\n\t\t}\n\n\t\tvar offsetX = 0;\n\t\tvar offsetY = -20;\n\n\t\t// STRUCT X\n\n\t\tif (a == 90 || a == 270){\n\t\t\tif (max == 2){\n\t\t\t\toffsetX += 25;\n\t\t\t\toffsetY -= 20;\n\t\t\t}\n\t\t\telse if (max == 1){\n\t\t\t\toffsetX += 40;\n\t\t\t}\n\t\t}\n\t\telse if (a == 60 || a == 300 || noAft){\n\t\t\tif (sides > 1){offsetX += 10;}\n\t\t\telse offsetX += 20;\n\t\t}\n\t\t\n\t\tvar pos = getPointInDirection(135 - offsetX, a-90, conWidth/2, conHeight/2-40);\n\t\tvar w = $(structDiv).width();\n\t\tvar h = $(structDiv).height();\n\n\t\t// STRUCT Y\n\t\tif (noFront){\n\t\t\toffsetY -= 60;\n\t\t}\n\n\t\tif (a == 0){\n\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n\t\t\t\toffsetY += 10;\n\t\t\t} else if (outerFill){\n\t\t\t\toffsetY -= 10;\n\t\t\t\t$(primaryDiv).css(\"top\", (primY + 20));\n\t\t\t}\n\t\t}\n\t\telse if (noAft){\n\t\t\tif (sides > 1){ // Octurion\n\t\t\t} else offsetY -= 60 + this.structures.length*12;\n\t\t}\n\t\telse if (a == 180){\n\t\t\tif (noFront){offsetY += 20;}\n\t\t\telse offsetY -= 40;\n\t\t}\n\t\telse if (sides >= 2 && a-90 != 0 && a-90 != 180){\n\t\t\toffsetY += 0;\n\t\t}\n\t\telse if (!noFront && !noAft){\n\t\t\toffsetY -= 30;\n\t\t}\n\t\t\n\t\t$(structDiv)\n\t\t\t.data(\"id\", this.structures[i].id)\n\t\t\t.css(\"left\", pos.x + -w/2)\n\t\t\t.css(\"top\", pos.y + offsetY)\n\t}\n\n\tvar width = 0;\n\tvar height = 0;\n\t$(div).find(\".structDiv\").each(function(){\n\t\tvar x = $(this).position().left + $(this).width();\n\t\tif (x > width){\n\t\t\twidth = x;\n\t\t}\n\t\tvar y = $(this).position().top + $(this).height();\n\t\tif (y > height){\n\t\t\theight = y;\n\t\t}\n\t})\n\n\t$(structContainer).css(\"height\", Math.max($(primaryDiv).position().top + $(primaryDiv).height(), height) + 20);\n\n\t/*\n\tvar w = $(div).width();\n\tvar h = $(div).height();\n\tvar left = 50;\n\tif (this.facing < 90 || this.facing > 270){\n\tleft = res.x - w - 50;\n\t}\n\tvar x = this.x +cam.o.x - w/2;\n\tvar y = this.y +cam.o.y + 150;\n\n\t$(div).css(\"left\", x).css(\"top\", y);\n\t*/\t\n\n\n\t//if (this.id == 10){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tvar s = $(this.structures[i].systems[j].element)\n\t\t\t\tvar w = s.width();\n\t\t\t\tvar h = s.height();\n\n\t\t\t\ts\n\t\t\t\t.find(\".boostDiv\").css(\"left\", -14).css(\"top\", -4).end()\n\t\t\t\t.find(\".powerDiv\").css(\"left\", w-2).css(\"top\", -4).end()\n\t\t\t\t.find(\".modeDiv\").css(\"left\", w/2 - 9).css(\"top\", h);\n\n\t\t\t}\n\t\t}\n\t\t//console.log($(this.structures[3].systems[0].element).width());\n\t//}\n\n\t$(div).addClass(\"disabled\");\n\treturn div;\n}\n\nShip.prototype.doOffset = function(){\n\tif (this.ship){return;}\n\tif (!this.doDraw){return;}\n\t//console.log(\"doOffset #\" + this.id);\n\tvar o = this.getPlannedPos();\n\tvar t = this.getTarget();\n\tvar a = 0;\n\tif (t){\n\t\ta = getAngleFromTo(o, this.getTarget().getPlannedPos());\n\t} else a = range(0, 360);\n\t\n\tvar p = getPointInDirection(Math.max(25, this.size/3), a, o.x, o.y);\n\n\tthis.drawX = p.x;\n\tthis.drawY = p.y;\n\n\tfor (var i = 0; i < this.cc.length; i++){\n\t\tvar s = game.getUnit(this.cc[i]);\n\t\t\ts.drawX = p.x;\n\t\t\ts.drawY = p.y;\n\t}\n}\n\nShip.prototype.getAttachDivs = function(){\n\tif (this.cc.length){\n\t\t$(this.element).find(\".ccContainer\").remove();\n\t\tvar attach = [];\n\t\tvar valid = this.ship;\n\n\t\tfor (var i = 0; i < this.cc.length; i++){\n\t\t\tattach.push(game.getUnit(this.cc[i]));\n\t\t}\n\n\t\tif (!valid){\n\t\t\tvalid = 1;\n\t\t\tfor (var i = 0; i < attach.length; i++){\n\t\t\t\tif (attach[i].ship){\n\t\t\t\t\tvalid = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (valid){\n\t\t\tvar ccContainer = $(\"<div>\").addClass(\"ccContainer\")\n\t\t\t\t.append(($(\"<div>\").addClass(\"general\")\n\t\t\t\t\t.append($(\"<span>\").addClass(\"center15\").html(\"Local Units\"))));\n\n\t\t\tattach.sort(function(a, b){\n\t\t\t\treturn b.friendly - a.friendly;\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < attach.length; i++){\n\t\t\t\tif (attach[i].ship){continue;}\n\n\t\t\t\t//if (this.flight){\n\t\t\t\t//\tconsole.log(\"ding\");\n\t\t\t\t//}\n\t\t\t\tccContainer = attach[i].supplyAttachDiv(ccContainer);\n\t\t\t}\n\n\t\t\t$(this.element).append(ccContainer);\n\t\t}\n\n\t}\n}\n\nShip.prototype.previewSetup = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.updateDiv = function(){\n\t$(this.element)\n\t\t.find(\".pos\").html(this.x + \" / \" + this.y).end()\n\t\t.find(\".thrust\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).end()\n\t\t.find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end()\n\t\t.find(\".delay\").html(this.getRemainingDelay()).end()\n\t\t.find(\".change\").html(this.getImpulseChangeCost() + \" EP\").end()\t\t\t\n\t\t.find(\".turn\").html(this.getImpulseChangeCost() + \" EP\").end()\n}\n\nShip.prototype.detachFlight = function(id){\n\tfor (var i = this.cc.length-1; i >= 0; i--){\n\t\tif (this.cc[i] == id){\n\t\t\tthis.cc.splice(i, 1);\n\t\t} else {\n\t\t\tvar attach = game.getUnit(this.cc[i]);\n\t\t\tif (!attach.ship && attach.mission.targetid == id){\n\t\t\t\tthis.cc.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(this.element).find(\".ccContainer\").find(\".attachDiv\").each(function(i){\n\t\t$(this).remove();\n\t});\n\n\tthis.getAttachDivs();\n\tthis.setSupportImage();\n}\n\nShip.prototype.attachFlight = function(unit){\n\t$(this.element).find(\".ccContainer\").remove();\n\tthis.cc.push(unit.id);\n\tfor (var i = 0; i < unit.cc.length; i++){\n\t\tthis.cc.push(unit.cc[i]);\n\t}\n\tunit.cc.push(this.id);\n\tthis.getAttachDivs();\n}\n\nShip.prototype.setPostFireImage = function(){\n\tif (this.ship){return;}\n\tconsole.log(\"setPostFireImage\");\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].draw && (this.structures[i].destroyed || this.structures[i].disabled)){\n\t\t\tthis.structures[i].draw = 0;\n\t\t}\n\t}\n\tthis.resetImage();\n}\n\nShip.prototype.resetImage = function(){\n\tif (this.salvo){return;}\n\tthis.img = undefined;\n\tthis.setImage();\n}\n\nShip.prototype.setDogFightImage = function(){\n\t//console.log(\"setDogFightImage \" + this.id);\n\tif (!this.flight){return;}\n\tthis.doDraw = 1;\n\tthis.setPatrolLayout();\n\tthis.setPatrolImage();\n}\n\nShip.prototype.setSupportImage = function(){\n\tconsole.log(\"setSupportImage #\" + this.id);\n\tvar friendlies = [];\n\tvar hostiles = [];\n\tvar friendly = [];\n\tvar hostile = [];\n\n\tvar hasShip = 0;\n\n\tfor (var i = 0; i < this.cc.length; i++){\n\t\tif (game.getUnit(this.cc[i]).ship){hasShip = 1; break;}\n\t}\n\n\tif (hasShip){return;}\n\n\tfor (var i = 0; i < this.cc.length; i++){\n\t\tvar u = game.getUnit(this.cc[i]);\n\t\tvar add = 0;\n\n\t\t//if (!u.doDraw){continue;}\n\t\t if (this.ship){add = 1;}\n\t\telse if (u.salvo && u.mission.arrived && u.mission.targetid == this.id){add = 1;}\n\t\telse if (!this.ship && !this.mission.arrived && u.mission.arrived && u.mission.targetid == this.id){add = 1;}\n\n\t\tif (!add){continue;}\n\t\telse u.doDraw = 0;\n\n\t\tif (this.userid == u.userid){\n\t\t\tfriendlies.push(u);\n\t\t}\n\t\telse hostiles.push(u);\n\t\tfor (var j = 0; j < u.structures.length; j++){\n\t\t\tif (!u.structures[j].draw){;continue;}\n\t\t\tif (this.userid == u.userid){\n\t\t\t\tfriendly.push(u.structures[j]);\n\t\t\t} else hostile.push(u.structures[j]);\n\t\t}\n\t}\n\n\tif (!friendlies.length && !hostiles.length){this.drawImg = undefined; return;}\n\tthis.setEscortImage(friendly, friendlies, hostile, hostiles);\n}\n\nShip.prototype.setEscortImage = function(friendly, friendlies, hostile, hostiles){\n\tconsole.log(\"setEscortImage #\" + this.id);\n\tvar size = this.size;\n\tvar fSize = 26;\n\tvar tresh = fSize-2;\n\tvar drawFacing = 0; this.getDrawFacing() / 2;\n\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = 300;\n\t\tt.height = 300;\t\t\t\n\tvar ctx = t.getContext(\"2d\");\n\tvar shipFriendly = true;\n\tvar flightFriendly = true;\n\n\tif (this.userid != game.userid){\n\t\tshipFriendly = false;\n\t}\n\n\tif (friendly.length){\n\t\tfor (var i = 0; i < friendlies.length; i++){\n\t\t\tfriendlies[i].size = size + tresh;\n\t\t}\n\t\t\n\t\tvar color = \"#27e627\";\n\t\tif (!shipFriendly){color = \"red\";}\n\n\t\tctx.translate(t.width/2, t.height/2);\n\t\tctx.globalAlpha = 0.8;\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n\t\tctx.closePath();\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = 2;\n\t\tctx.stroke();\n\t\tctx.globalAlpha = 1;\n\t\tctx.lineWidth = 1;\n\t\t\n\t\t//var rota = range(0, 360);\n\t\t\n\t\tvar split = Math.floor(360/friendly.length+1);\n\n\t\t//ctx.rotate(rota*(Math.PI/180));\n\t\tfor (var i = 0; i < friendly.length; i++){\n\t\t\tvar a = split*i + drawFacing;\n\t\t\tvar drawPos = getPointInDirection(size+tresh - fSize/2, a, 0, 0);\n\t\t\t//var aPos = getPointInDirection(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t//console.log(a); \n\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\tfriendly[i].layout = drawPos;\n\t\t\tctx.translate(drawPos.x, drawPos.y);\n\t\t\tctx.rotate((a+90)*(Math.PI/180));\n\t\t\tctx.drawImage(\n\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase()],\n\t\t\t\t-fSize/2,\n\t\t\t\t-fSize/2,\n\t\t\t\tfSize, \n\t\t\t\tfSize\n\t\t\t);\n\t\t\tctx.rotate(-((a+90)*(Math.PI/180)));\n\t\t\tctx.translate(-drawPos.x, -drawPos.y);\n\n\t\t}\n\t\t//ctx.rotate(-rota*(Math.PI/180));\n\t\tctx.translate(-t.width/2, -t.height/2);\n\t\ttresh *= 2\n\t}\n\n\tif (hostile.length){\n\t\tfor (var i = 0; i < hostiles.length; i++){\n\t\t\thostiles[i].size = size + tresh;\n\t\t}\n\t\t\t\n\t\tvar color = \"red\";\n\t\tif (!shipFriendly){color = \"#27e627\";}\n\n\t\tctx.translate(t.width/2, t.height/2);\n\t\tctx.globalAlpha = 0.8;\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n\t\tctx.closePath();\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = 2;\n\t\tctx.stroke();\n\t\tctx.globalAlpha = 1;\n\t\tctx.lineWidth = 1;\n\t\t\n\t\tvar split = Math.floor(360/hostile.length+1)\n\n\t\tfor (var i = 0; i < hostile.length; i++){\n\t\t\tvar a = split*i + drawFacing;\n\t\t\tvar drawPos = getPointInDirection(size+tresh - fSize/2, a, 0, 0);\n\t\t\t//var aPos = getPointInDirection(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t//console.log(a); \n\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\thostile[i].layout = drawPos;\n\t\t\tctx.translate(drawPos.x, drawPos.y);\n\t\t\tctx.rotate((a-90)*(Math.PI/180));\n\t\t\tctx.drawImage(\n\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase()],\n\t\t\t\t-fSize/2,\n\t\t\t\t-fSize/2,\n\t\t\t\tfSize, \n\t\t\t\tfSize\n\t\t\t);\n\t\t\tctx.rotate(-((a-90)*(Math.PI/180)));\n\t\t\tctx.translate(-drawPos.x, -drawPos.y);\n\n\t\t}\n\t\tctx.translate(-t.width/2, -t.height/2);\n\t}\n\n\tthis.drawImg = t;\n\tctx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.animationSetupMove = function(){\n\tthis.setPreMovePosition();\n\tthis.setPreMoveFacing();\n}\n\nShip.prototype.getLockEffect = function(target){\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tvar ew = sensor.getEW();\n\tif (sensor.disabled || sensor.destroyed || ew.type == 1){return 0;}\n\n\tvar tPos = target.getGamePos();\n\tvar origin = this.getGamePos();\n\tvar d = getDistance(origin, tPos);\n\tvar multi = 0;\n\n\tif (target.ship){\n\t\tmulti = 0.5;\n\t\tmulti += (multi / 10 * this.traverse);\n\t}\n\telse if (target.flight){\n\t\tmulti = 1.5;\n\t}\n\telse if (target.salvo){\n\t\tmulti = 1;\n\t}\t\n\n\tif (d == 0 && game.isCloseCombat(this, target) && this.isInEWArc(origin, target.getTrajectory(), sensor, ew)){\n\t\tif (target.salvo){\n\t\t\treturn multi;\n\t\t}\n\t\telse if (target.flight){\n\t\t\tif (ew.angle == -1){return multi;}\n\t\t\telse return Math.round(multi / 180 * (Math.min(180, game.const.ew.len * Math.pow(sensor.getOutput()/ew.dist, game.const.ew.p)))*100)/100;\n\t\t}\n\t}\n\telse if (d <= ew.dist && this.isInEWArc(origin, tPos, sensor, ew)){\n\t\treturn multi;\n\t}\n\telse return 0;\n}\n\nShip.prototype.getMaskEffect = function(shooter){\n\tif (this.flight || this.salvo || shooter.flight | shooter.salvo){return 0;}\n\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tvar ew = sensor.getEW();\n\tif (sensor.disabled || sensor.destroyed || ew.type == 0){return 0;}\n\n\tvar tPos = shooter.getGamePos();\n\tvar origin = this.getGamePos();\n\tvar d = getDistance(origin, tPos);\n\tvar multi = 0;\n\n\tif (shooter.ship){\n\t\tmulti = 0.5;\n\t\tmulti += (multi / 10 * this.traverse);\n\t}\n\telse if (shooter.flight){\n\t\treturn 0;\n\t}\n\telse if (shooter.salvo){\n\t\tmulti = 0.33;\n\t}\t\n\n\tif (d == 0 && game.isCloseCombat(this, shooter) && this.isInEWArc(origin, shooter.getTrajectory(), sensor, ew)){\n\t\tif (shooter.salvo){\n\t\t\treturn multi;\n\t\t}\n\t}\n\telse if (d <= ew.dist && this.isInEWArc(origin, tPos, sensor, ew)){\n\t\treturn multi;\n\t}\n\telse return 0;\n}\n\n\nShip.prototype.drawTargetMovePlan = function(){\n\treturn;\n}\n\nShip.prototype.drawIncomingMovePlan = function(){\n\tfor (var i = 0; i < game.ships.length; i++){\n\t\tif (game.ships[i].flight || game.ships[i].salvo){\n\t\t\tif (game.ships[i].mission.arrived){continue;}\n\t\t\tif (game.ships[i].mission.targetid == this.id){\n\t\t\t\tgame.ships[i].drawMovePlan();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.drawEW = function(){\n\tif (!this.ship){return;}\n\tthis.getSystemByName(\"Sensor\").drawEW();\n}\n\nShip.prototype.drawMoveLength = function(){\n\tif (this.selected){return;}\n\tmouseCtx.translate(cam.o.x, cam.o.y);\n\tmouseCtx.scale(cam.z, cam.z);\n\n\tvar center = this.getPlannedPos();\n\tvar angle = this.getPlannedFacing();\n\tvar p = getPointInDirection(this.getCurrentImpulse(), angle, center.x, center.y);\n\t\n\tmouseCtx.beginPath();\t\t\t\n\tmouseCtx.moveTo(center.x, center.y);\n\tmouseCtx.lineTo(p.x, p.y);\n\tmouseCtx.closePath();\n\tmouseCtx.lineWidth = .5;\n\tmouseCtx.strokeStyle = \"white\";\n\tmouseCtx.stroke();\n\tmouseCtx.strokeStyle = \"black\";\n\n\tmouseCtx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.checkSensorHighlight = function(){\n\tif (this.flight || this.salvo){return;}\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n}\n\nShip.prototype.hasSystemSelected = function(name){\t\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n\t\t\treturn this.primary.systems[i];\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.getStructureById = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].id == id){\n\t\t\treturn this.structures[i];\n\t\t}\n\t}\n}\n\nShip.prototype.getSystemById = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].id == id){\n\t\t\treturn this.structures[i];\n\t\t}\n\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j = 0; j < this.primary.systems.length; j++){\n\t\tif (this.primary.systems[j].id == id){\n\t\t\treturn this.primary.systems[j];\n\t\t}\n\t}\n}\n\nShip.prototype.getPrimarySection = function(){\n\treturn this.primary;\n}\n\nShip.prototype.highlightSingleSystem = function(system){\n\tvar angle = this.getPlannedFacing();\n\tvar pos = this.getPlannedPos();\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.highlightAllSelectedWeapons = function(){\n\t//mouseCtx.clearRect(0, 0, res.x, res.y);\n\tfxCtx.clearRect(0, 0, res.x, res.y);\n\tfxCtx.translate(cam.o.x, cam.o.y);\n\tfxCtx.scale(cam.z, cam.z);\n\n\t//$(fxCanvas).css(\"opacity\", 1);\n\tvar angle = this.getPlannedFacing();\n\tvar pos = this.getPlannedPos();\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfxCtx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.weaponHighlight = function(weapon){\n\tif (weapon.highlight){\n\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n\t\tweapon.highlight = false;\n\t}\n\telse {\n\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar shipPos = this.getPlannedPos();\n\t\tweapon.highlight = true;\t\t\n\t\tweapon.drawArc(angle, shipPos);\n\t}\n}\n\n\n",
			"file": "shipclasses.js",
			"file_size": 88882,
			"file_write_time": 131581751872675291,
			"settings":
			{
				"buffer_size": 85762,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 20500,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6275,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 386,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 47473,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3193,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3132,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2515,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 23837,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 3055,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 5049,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 3421,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 4907,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2770,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2473,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 3214,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1833,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 4033,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 8777,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 75 files for \"Squadron\"\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  104  \t<script src='classes.js'></script>\n  105  \t<script src='mixed.js'></script>\n  106: \t<script src='squadron.js'></script>\n  107  \t<script src='salvo.js'></script>\n  108  \t<script src='flights.js'></script>\n  ...\n  406  \t}\n  407  \n  408: \tfunction requestSquadron(){\n  409  \t\t$(\".shipDiv\").remove();\n  410  \t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n  ...\n  412  \t\t$(\"#hangarTable\").html(\"\");\n  413  \t\tvar data = {id: 1, $userid: 1, available: 0, display: \"Squad\", notes: \"\", faction: \"Faction\", mass: 0, cost: 0, profile: 0, size: 50, traverse: -1}\n  414: \t\tvar ship = new Squadron(data);\n  415  \t\t\tship.actions.push(new Move(-1, \"deploy\", 0, res.x/2, res.y/2, 0, 0, 0, 1, 1, 1));\n  416  \t\t\tship.create();\n  ...\n  447  \t\t\t\t\tname: name,\n  448  \t\t\t\t\t},\n  449: \t\t\tsuccess: addSquadronUnit,\n  450  \t\t\terror: ajax.error,\n  451  \t\t});\n  452  \t}\n  453  \n  454: \tfunction addSquadronUnit(data){\n  455  \t\tif (!game.ships[0].squad){return;}\n  456  \t\telse if (game.ships[0].structures.length >= 3){return;}\n  ...\n  675  \t\t\t\t\t$(this).toggleClass(\"highlight\");\n  676  \t\t\t\t})\n  677: \t\t\t\t.append($(\"<td>\").html(\"Mixed Squadron\"))\n  678  \t\t\t\t.append($(\"<td>\").html(\"VARIABLE\"))\n  679  \t\t\t\t.append($(\"<td>\").html(\"Add to fleet\")\n  ...\n  683  \t\t\t\t\t\t$(this).toggleClass(\"selectionHighlight\");\n  684  \t\t\t\t\t}).click(function(){\n  685: \t\t\t\t\t\trequestSquadron();\n  686  \t\t\t\t\t})\n  687  \t\t\t\t)\n\n7 matches in 1 file\n\n\nSearching 75 files for \"previewS\"\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  420  \t\t$(\"#game\").removeClass(\"disabled\");\n  421  \t\tship.createBaseDiv();\n  422: \t\tship.previewSetup();\n  423  \t\t$(\".shipDiv\")\n  424  \t\t\t.css(\"left\", \"460px\").css(\"top\", \"220px\").removeClass(\"disabled\")\n  ...\n  497  \t\t$(\"#game\").removeClass(\"disabled\");\n  498  \t\tship.createBaseDiv();\n  499: \t\tship.previewSetup();\n  500  \t\t$(\".shipDiv\")\n  501  \t\t\t.css(\"left\", \"460px\").css(\"top\", \"220px\").removeClass(\"disabled\")\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2677  }\n 2678  \n 2679: Ship.prototype.previewSetup = function(){\n 2680  \tfor (var i = 0; i < this.structures.length; i++){\n 2681  \t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\n3 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 2216,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2822,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 2729,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 5960,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4690,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 1857,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 6528,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 7287,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 3024,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 2128,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/mixed.php",
			"settings":
			{
				"buffer_size": 13287,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4546,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"file": "salvo.js",
			"settings":
			{
				"buffer_size": 9329,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 32780,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4778,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 94896,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8642,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 13736,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 8620,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 52934,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 81344,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 14916,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 708,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3743,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 4038,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7661,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethyss.php",
			"settings":
			{
				"buffer_size": 1417,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3609,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2288,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1768,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2724,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/Octurion.php",
			"settings":
			{
				"buffer_size": 4545,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 3546,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1660,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 3109,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 2409,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 2165,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1584,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3132,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 1149,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6748,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2382,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 137.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/ships/omega.php",
		"/C/xampp/htdocs/fire/server/ships/olympus.php",
		"/C/xampp/htdocs/fire/flights.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/ships/altarian.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
		"/C/xampp/htdocs/fire/server/wing.php",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"*.js",
			"*.ks",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"*.js",
			"",
			"*.js",
			".js",
			"*.php",
			"",
			"re",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"shooter.ship",
			"",
			"contact imminent",
			"",
			"*.js",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"setPureImage",
			"",
			"flights.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.pphp",
			"",
			"*.js",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"style.css",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"this.turnAngles = {}",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"previewS",
			"squad",
			"Squadron",
			"BBB",
			"error - r",
			"structconta",
			"setLayout",
			"this.img = ",
			"setRawImage",
			"this.img = ",
			"this.drawimg",
			"this.img = ",
			"setLayout",
			"squadd",
			"squaddie",
			"ultraheavy ",
			"class UltraHeavy",
			"SuperHeavy",
			"value",
			"208",
			"public $value =",
			"value ",
			"single",
			"requests",
			"addUnitToSquadron",
			"preview",
			"requestship",
			"tetyhs",
			"requestSingleUnitData",
			"shipdata",
			"requestship",
			"setShipTotal",
			"document.getElementsByClassName(\"shipDiv\")[0].appendChild(div);",
			"this.img = ",
			"img = ",
			"drawship",
			"ect.cr",
			"requestShipData",
			"requestShipsForFaction",
			"shipdiv",
			"ship.list",
			"hitchance",
			"setArmourMod",
			"testUnitCrits",
			"plasma.prototype.ge",
			"plasma.prototype.getani",
			"animateAllFireOrders",
			"confirmdeployment",
			"insertEW",
			"total Mass",
			"popup",
			"popupw",
			"if (all",
			"if (call",
			"if (canadd",
			"function missi",
			"function miss",
			"function mis",
			"function m",
			".fighter",
			"$fighter = ",
			"$fighter",
			"$figher",
			"plus ",
			"selectAll",
			"selecta",
			"select all",
			"Engine Power",
			"targetid = ",
			"targetid",
			"determine",
			"impulse",
			"setupsh",
			"pickre",
			"->reinforce ",
			"getkit",
			"cc[]",
			"cc = ",
			"getFireDistance",
			"pickre",
			"Emperor",
			"$this->structures[sizeof($this->structures)-1]->boostEffect[] = new Effect(\"Armour\", 4);",
			".prototype.set",
			"debug::log($",
			"debug::log",
			"0.05",
			"$this->structures[$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 4;",
			"$this->structures$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 4;",
			"[sizeof($this->structures)-1]->effiency = $this->traverse + 4",
			"[sizeof($this->structures)-1]->effiency = $this->traverse + 3",
			"$this->structures[sizeof($this->structures)-1]->effiency = 3;",
			"Deployment / ",
			"Deployment",
			"handleMouseDown",
			"doSelect",
			"drawEW",
			"getArcW",
			"setew",
			"this.arc",
			"this.ar",
			"this.arc",
			".select",
			"system.prototype.select",
			"system.prototype.selec ",
			"system.prototype.select ",
			"turn.step ",
			"doshortenturn",
			"turnstep ",
			"doshortenturn",
			"setturndata",
			"shortenT",
			"shorternT",
			"calcu",
			"new EW",
			"EW",
			"setEw",
			"handleT",
			"temparc",
			"hasOpenMoves",
			"concluded",
			"deployment l",
			"contextmenu",
			"setshipdiv",
			"combat log",
			"combatlog",
			"initselectionw",
			"upperGUI",
			"overflow"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"public static $value = ",
			"setUnitTotal",
			"game.ships[0].element.appendChild(div);",
			"requestSingleUnitData",
			"$this->structures[sizeof($this->structures)-1]->boostEffect[] = new Effect(\"Armour\", 3);",
			"$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 4;",
			"$this->structures[$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 4;",
			"[sizeof($this->structures)-1]->effiency = $this->traverse + 4;",
			"$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 4",
			"$this->structures[sizeof($this->structures)-1]->effiency = $this->traverse + 3",
			"De",
			"getMaskBonus",
			"getMaskEffect",
			"getLockBonus",
			"multi",
			"salvoCtx",
			"drawEW(salvoCtx)",
			"ctx",
			"this.deployArea",
			"game.deployArea",
			"$overload",
			"\"b;\"",
			"\"p;\"",
			"\"p\"",
			"\"Disabled\"",
			"Dmg, $dmg->overkill",
			"$Dmg, $dmg->overkill",
			"",
			"$dmg->overkill +=",
			"array(115, 4)",
			"Power Req",
			"$s->",
			"$s",
			"setLocks",
			"updateUnitState",
			"public $size = ",
			"public static $size = ",
			"\tfunction __construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust, $notes){\n        parent::__construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust, $notes);\n\t}",
			"\tfunction __construct($id, $userid, $available, $status, $destroyed){\n",
			"\tfunction __construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust, $notes){\n        parent::__construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust, $notes);\n\t}",
			"\tfunction __construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust){\n        parent::__construct($id, $userid, $available, $status, $destroyed, $x, $y, $facing, $delay, $thrust);\n\t}",
			"addLoadout",
			"$k",
			"$j",
			"$i",
			"$j",
			"$i",
			"fpsTicks",
			"$negation = $fire->target->getArmour($fire, $system);",
			"getStruct(",
			"getWeaponOrigin",
			"2000",
			"setSupportImage",
			"$negation = $fire->target->getStructureById($fire->section)->getArmourValue($system);\n",
			">getArmourValue($system);",
			"unit.",
			"getGamePos",
			"getTableData",
			"redrawArc",
			"game.timeout",
			"$this->ships",
			"getDmgByFire",
			"Main Hull",
			"handleFlightDeployMouseMove",
			"salvoCtx",
			"testForCrits",
			"MediumIon",
			"getPlannedPos",
			"drawShipOverlays",
			"shooter.ship",
			"shooter",
			"target",
			"redraw",
			"doHover",
			"handleHoverEvent",
			"doHoverEvent",
			"getCritModMax",
			"contact imminent",
			"setFocusToPos",
			"getUnitExplosionDetails",
			"animateUnitExplosions",
			"</b> - ",
			"</br>",
			"</br></br>",
			"updateShipPower",
			"public static $size = ",
			"selectFromPopup",
			"speed",
			"font16",
			"font15",
			"DBManager::app()->updateFireOrders",
			"getFireAngle",
			"getImpactAngle",
			"insertClientFireOrder",
			"getAngledHitSection",
			"getAngledHitChance",
			"getAnglesHitChance",
			"target.",
			"setRawImage",
			"setPureImage",
			"",
			"Local Units",
			"shipImages",
			"game.getUnitByClick",
			"getUnitById",
			"resolveFlightMovement",
			"isCloseCombat($id)",
			"getHitSection",
			"s",
			"pSize",
			"isCloseCombat",
			"setPostMoveFacing",
			"updateIntercepts",
			"[$j]",
			"$stack[$i][j]",
			"planCtx",
			"inRange",
			"updateTargets",
			"resolveUnitMovement",
			"animateUnitMovement",
			"getIncomingUnits",
			"drawMovePlan",
			"launchData",
			"$",
			"$unit",
			"\"<td>\"",
			"\"<tr>\"",
			", "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9323,
						"regions":
						{
						},
						"selection":
						[
							[
								6644,
								6646
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2702.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5293,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								407
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22652,
						"regions":
						{
						},
						"selection":
						[
							[
								624,
								624
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22277,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6949.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								245
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 117,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22365,
						"regions":
						{
						},
						"selection":
						[
							[
								705,
								705
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 975.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16157,
						"regions":
						{
						},
						"selection":
						[
							[
								15672,
								15683
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6113.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85762,
						"regions":
						{
						},
						"selection":
						[
							[
								764,
								764
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20500,
						"regions":
						{
						},
						"selection":
						[
							[
								12857,
								12857
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5090.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6275,
						"regions":
						{
						},
						"selection":
						[
							[
								1093,
								1093
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 386,
						"regions":
						{
						},
						"selection":
						[
							[
								197,
								197
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47473,
						"regions":
						{
						},
						"selection":
						[
							[
								40119,
								40095
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15743.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								2192,
								2192
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 464.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3132,
						"regions":
						{
						},
						"selection":
						[
							[
								2650,
								2650
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 193.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2515,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1561
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23837,
						"regions":
						{
						},
						"selection":
						[
							[
								21199,
								21391
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 238.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3055,
						"regions":
						{
						},
						"selection":
						[
							[
								2126,
								2126
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5049,
						"regions":
						{
						},
						"selection":
						[
							[
								3623,
								3623
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3421,
						"regions":
						{
						},
						"selection":
						[
							[
								2395,
								2474
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4907,
						"regions":
						{
						},
						"selection":
						[
							[
								1808,
								1808
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 303.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2770,
						"regions":
						{
						},
						"selection":
						[
							[
								565,
								565
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2473,
						"regions":
						{
						},
						"selection":
						[
							[
								1918,
								1918
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3214,
						"regions":
						{
						},
						"selection":
						[
							[
								1623,
								1623
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1833,
						"regions":
						{
						},
						"selection":
						[
							[
								1107,
								1371
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4033,
						"regions":
						{
						},
						"selection":
						[
							[
								1731,
								1731
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 368.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								1310,
								1310
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 62.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8777,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 325.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 27,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2216,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										176,
										184
									],
									[
										331,
										339
									],
									[
										654,
										662
									],
									[
										854,
										862
									],
									[
										948,
										956
									],
									[
										1184,
										1192
									],
									[
										1408,
										1416
									],
									[
										1632,
										1640
									],
									[
										1843,
										1851
									],
									[
										2035,
										2043
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								2042,
								2042
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 598.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2822,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2729,
						"regions":
						{
						},
						"selection":
						[
							[
								2046,
								2046
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 560.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2516.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4690,
						"regions":
						{
						},
						"selection":
						[
							[
								477,
								477
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1857,
						"regions":
						{
						},
						"selection":
						[
							[
								1351,
								1351
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6528,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2119.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7287,
						"regions":
						{
						},
						"selection":
						[
							[
								1959,
								1959
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 260.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3024,
						"regions":
						{
						},
						"selection":
						[
							[
								1206,
								1206
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 212.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2128,
						"regions":
						{
						},
						"selection":
						[
							[
								1584,
								1584
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 375.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13287,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4546,
						"regions":
						{
						},
						"selection":
						[
							[
								1062,
								1062
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9329,
						"regions":
						{
						},
						"selection":
						[
							[
								6072,
								6072
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2036.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32780,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6175.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4778,
						"regions":
						{
						},
						"selection":
						[
							[
								2122,
								2122
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 904.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								624,
								624
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94896,
						"regions":
						{
						},
						"selection":
						[
							[
								74676,
								74676
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 35595.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8642,
						"regions":
						{
						},
						"selection":
						[
							[
								8196,
								8196
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2949.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3132,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 115,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 114,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13736,
						"regions":
						{
						},
						"selection":
						[
							[
								4141,
								4141
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1922.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8620,
						"regions":
						{
						},
						"selection":
						[
							[
								5262,
								5262
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1502.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52934,
						"regions":
						{
						},
						"selection":
						[
							[
								44317,
								44317
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1363.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81344,
						"regions":
						{
						},
						"selection":
						[
							[
								25314,
								25314
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12110.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14916,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5788.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 708,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								56
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3743,
						"regions":
						{
						},
						"selection":
						[
							[
								1780,
								1757
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 130.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2540,
						"regions":
						{
						},
						"selection":
						[
							[
								1202,
								1202
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4038,
						"regions":
						{
						},
						"selection":
						[
							[
								733,
								733
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 40.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				}
			]
		},
		{
			"selected": 19,
			"sheets":
			[
				{
					"buffer": 42,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								711,
								711
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 34.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2128,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 243.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47473,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19123.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2822,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 95.0,
						"zoom_level": 1.0
					},
					"stack_index": 116,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32780,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15197.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6528,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8620,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3137.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4690,
						"regions":
						{
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14916,
						"regions":
						{
						},
						"selection":
						[
							[
								4977,
								4977
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2601.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7661,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/ships/tethyss.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1417,
						"regions":
						{
						},
						"selection":
						[
							[
								798,
								798
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8642,
						"regions":
						{
						},
						"selection":
						[
							[
								2576,
								2576
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 585.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2515,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2613.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85762,
						"regions":
						{
						},
						"selection":
						[
							[
								898,
								898
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 20183.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6275,
						"regions":
						{
						},
						"selection":
						[
							[
								770,
								770
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52934,
						"regions":
						{
						},
						"selection":
						[
							[
								231,
								231
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8642,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22652,
						"regions":
						{
						},
						"selection":
						[
							[
								4108,
								4108
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2133.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52934,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7933.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2729,
						"regions":
						{
						},
						"selection":
						[
							[
								752,
								752
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 234.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81344,
						"regions":
						{
						},
						"selection":
						[
							[
								60416,
								60417
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 28490.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23837,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 25.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13736,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4385.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20500,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5226.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22365,
						"regions":
						{
						},
						"selection":
						[
							[
								265,
								265
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3609,
						"regions":
						{
						},
						"selection":
						[
							[
								2921,
								2921
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 234.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2288,
						"regions":
						{
						},
						"selection":
						[
							[
								1856,
								1856
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1768,
						"regions":
						{
						},
						"selection":
						[
							[
								740,
								740
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5293,
						"regions":
						{
						},
						"selection":
						[
							[
								494,
								494
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 37.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2724,
						"regions":
						{
						},
						"selection":
						[
							[
								764,
								764
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 104.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "server/ships/Octurion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4545,
						"regions":
						{
						},
						"selection":
						[
							[
								2765,
								2765
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 52.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3546,
						"regions":
						{
						},
						"selection":
						[
							[
								2207,
								2207
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 91.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1660,
						"regions":
						{
						},
						"selection":
						[
							[
								811,
								811
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3109,
						"regions":
						{
						},
						"selection":
						[
							[
								850,
								850
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 39.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2409,
						"regions":
						{
						},
						"selection":
						[
							[
								1930,
								1930
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2165,
						"regions":
						{
						},
						"selection":
						[
							[
								1655,
								1655
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1584,
						"regions":
						{
						},
						"selection":
						[
							[
								1569,
								1569
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3132,
						"regions":
						{
						},
						"selection":
						[
							[
								450,
								450
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16157,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9329,
						"regions":
						{
						},
						"selection":
						[
							[
								5852,
								5852
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2293.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3055,
						"regions":
						{
						},
						"selection":
						[
							[
								2786,
								2786
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 245.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4038,
						"regions":
						{
						},
						"selection":
						[
							[
								1122,
								1122
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9323,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 602.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8777,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2210.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4546,
						"regions":
						{
						},
						"selection":
						[
							[
								1550,
								1528
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3024,
						"regions":
						{
						},
						"selection":
						[
							[
								1098,
								1098
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 49.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1149,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6748,
						"regions":
						{
						},
						"selection":
						[
							[
								459,
								459
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								1473,
								1473
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2382,
						"regions":
						{
						},
						"selection":
						[
							[
								555,
								555
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1857,
						"regions":
						{
						},
						"selection":
						[
							[
								235,
								235
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								1380,
								1380
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7287,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13287,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 345.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4778,
						"regions":
						{
						},
						"selection":
						[
							[
								1597,
								1585
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 286.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3743,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2540,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.547084233261,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethyss.php"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\combattest.php"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"ammo",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"omega",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"ave",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"gameset",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"lgo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"vo",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"oly",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"ol",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"flig",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"ajax",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"oc",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Octurion.php"
			],
			[
				"ocut",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Octurion.php"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"dark",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"mx",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"wea",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"salv",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"salvo",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"oct",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Octurion.php"
			],
			[
				"weap",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"gq",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gquan.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"han",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"p",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"saag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sharli",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"whi",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"struc",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"cnonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"gamej",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"os",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"aven",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"ge",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"aj",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"om",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"o",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"ame.j",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 128.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
