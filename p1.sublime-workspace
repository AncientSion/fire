{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getOut",
				"getOutputMods"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"getImp",
				"getTotalImpulse"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"getRem",
				"getRemainingAmmo"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"back",
				"background-color"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"getU",
				"getUnitById"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"getRe",
				"getRelevantBallistics"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"getHit",
				"getHitChance"
			],
			[
				"fire",
				"fireOrders"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"draw",
				"drawExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"rema",
				"getRemainingDelay"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"getBas",
				"getBaseHitChance"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"getRema",
				"getRemainingIntegrity"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			],
			[
				"target",
				"targetInfo"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"stru",
				"structures"
			],
			[
				"getRemaining",
				"getRemainingIntegrity"
			],
			[
				"prima",
				"primaryContainer"
			],
			[
				"is",
				"isInArc"
			],
			[
				"db",
				"dbManager"
			],
			[
				"hangar",
				"hangarLoadoutDiv"
			],
			[
				"getE",
				"getElementById"
			],
			[
				"flight",
				"flightSelection"
			],
			[
				"create",
				"createLogEntry"
			],
			[
				"explo",
				"exploAnimated"
			],
			[
				"struc",
				"structureid"
			],
			[
				"addDama",
				"addDamagesToShip"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"resolve",
				"resolveBallisticMovement"
			],
			[
				"getR",
				"getRemainingIntegrity"
			],
			[
				"reSolve",
				"resolveFireOrder"
			],
			[
				"animateShV",
				"animateShipVsBallisticsFire"
			],
			[
				"getShipV",
				"getShipVsBallisticsAnimationDetails"
			],
			[
				"arm",
				"armourDmg"
			],
			[
				"insertBs",
				"insertBallisticActions"
			],
			[
				"Struct",
				"structDiv"
			],
			[
				"vecto",
				"vectorDiv"
			],
			[
				"int",
				"integrity"
			],
			[
				"getRemain",
				"getRemainingImpulse"
			],
			[
				"getF",
				"getPlannedFacingToMove"
			],
			[
				"getRemai",
				"getRemainingDelay"
			],
			[
				"vector",
				"drawVectorIndicator"
			],
			[
				"getIm",
				"getImpulseChangeCost"
			],
			[
				"undo",
				"undoLastAction"
			],
			[
				"drawmov",
				"drawMovementUI"
			],
			[
				"impu",
				"impulseGUI"
			],
			[
				"disable",
				"disableDeployment"
			],
			[
				"beam",
				"beamWidth"
			],
			[
				"disa",
				"disableDeployment"
			],
			[
				"deploy",
				"deployWrapper"
			],
			[
				"selee",
				"canSelectReinforcement"
			],
			[
				"text-",
				"text-align"
			],
			[
				"shipc",
				"shipClass"
			],
			[
				"getFact",
				"getShipsForFaction"
			],
			[
				"proto",
				"prototype"
			],
			[
				"re",
				"reinforcementsTD"
			],
			[
				"mem",
				"memory_get_usage"
			],
			[
				"json_",
				"json_encode"
			],
			[
				"calcu",
				"calculateHitChance"
			],
			[
				"getD",
				"getDmgLoss"
			],
			[
				"rollf",
				"rollForDamage"
			],
			[
				"jsco",
				"json_encode"
			],
			[
				"jso",
				"JSON"
			],
			[
				"gets",
				"getShipsForFaction"
			],
			[
				"showSHi",
				"showShipList"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"spee",
				"speedChange"
			],
			[
				"background",
				"background-color"
			],
			[
				"JS",
				"json_decode"
			],
			[
				"drawSh",
				"drawShipForPreview"
			],
			[
				"elint",
				"elintResult"
			],
			[
				"json",
				"json_encode"
			],
			[
				"addTa",
				"addTableRedBackground"
			],
			[
				"currentS",
				"currentSubTick"
			],
			[
				"current",
				"currentSubStick"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5668,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 4575,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 29051,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 16425,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2954,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shipclasses.js",
			"settings":
			{
				"buffer_size": 57348,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 5968,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 455,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3682,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 15037,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 61 files for \"launch selected\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  412  \t\t\t</table>\n  413  \t\t\t<div class=\"header\">\n  414: \t\t\t\t<input type=\"button\" class=\"disabled\" value=\"Launch selected strikecraft as mixed flight\">\n  415  \t\t\t</div>\n  416  \t\t</div>\n\n1 match in 1 file\n\n\nSearching 61 files for \"launchFlight\"\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  328  }\n  329  \n  330: function launchFlight(e){\n  331: \tgame.getUnitById(aUnit).getSystemById(e.data.systemid).launchFlight();\n  332  }\n  333  \n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2462  \t}\n 2463  \n 2464: \tvar button = $(\"#hangarLoadoutDiv\").find(\"input\").on(\"click\", {systemid: id}, launchFlight)\n 2465  \tconsole.log(button);\n 2466  \n 2467: \tif (this.canLaunchFlight()){\n 2468  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2469  \t} else $(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2470  }\n 2471  \n 2472: Hangar.prototype.launchFlight = function(){\n 2473  \tfor (var i = game.ships.length-1; i >= 0; i--){\n 2474  \t\tif (game.ships[i].userid == game.userid){\n ....\n 2535  \t}\n 2536  \n 2537: \tif (this.canLaunchFlight()){\n 2538  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2539  \t}\n ....\n 2543  }\n 2544  \n 2545: Hangar.prototype.canLaunchFlight = function(){\n 2546  \tif (this.canFire()){\n 2547  \t\tfor (var i = 0; i < this.loads.length; i++){\n\n7 matches across 2 files\n\n\nSearching 61 files for \"launchFlight\n\"\n\n0 matches\n\nSearching 61 files for \"launchFLight\"\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  328  }\n  329  \n  330: function launchFlight(e){\n  331: \tgame.getUnitById(aUnit).getSystemById(e.data.systemid).launchFlight();\n  332  }\n  333  \n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2462  \t}\n 2463  \n 2464: \tvar button = $(\"#hangarLoadoutDiv\").find(\"input\").on(\"click\", {systemid: id}, launchFlight)\n 2465  \tconsole.log(button);\n 2466  \n 2467: \tif (this.canLaunchFlight()){\n 2468  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2469  \t} else $(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2470  }\n 2471  \n 2472: Hangar.prototype.launchFlight = function(){\n 2473  \tfor (var i = game.ships.length-1; i >= 0; i--){\n 2474  \t\tif (game.ships[i].userid == game.userid){\n ....\n 2535  \t}\n 2536  \n 2537: \tif (this.canLaunchFlight()){\n 2538  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2539  \t}\n ....\n 2543  }\n 2544  \n 2545: Hangar.prototype.canLaunchFlight = function(){\n 2546  \tif (this.canFire()){\n 2547  \t\tfor (var i = 0; i < this.loads.length; i++){\n\n7 matches across 2 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   85  \n   86  \tthis.canSetSensor = function(){\n   87: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   88  \t\tif (sensor.locked){\n   89  \t\t\treturn false;\n   ..\n  568  \n  569  \t\t\t\tif (elements[i].ship){\n  570: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  571  \t\t\t\t}\n  572  \t\t\t}\n  ...\n  707  \t\t\t\t\tunit.unsetMoveMode();\n  708  \t\t\t\t\tunit.setMoveMode();\n  709: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  710  \t\t\t\t}\n  711  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n",
			"settings":
			{
				"buffer_size": 27086,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 35601,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 40399,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 187,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3641,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2684,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2478,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2253,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1713,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 3697,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 2837,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 3106,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3665,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 8636,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 579,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 14967,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 75803,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nfunction drawVector(origin, target, dist, angle){\n\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\tmouseCtx.beginPath();\n\tmouseCtx.moveTo(origin.x * cam.z + cam.o.x, origin.y * cam.z + cam.o.y);\n\tmouseCtx.lineTo(target.x, target.y);\n\tmouseCtx.closePath();\n\tmouseCtx.strokeStyle = \"white\";\n\tmouseCtx.stroke();\n\n\tif (angle > 180){\n\t\tangle = (360-angle) *-1;\n\t}\n\n\t$(\"#vectorDiv\").html(\"Distance: \" + dist + \" </br>Angle: \" + Math.round(angle))\n\t.css(\"left\", target.x- 45 + \"px\")\n\t.css(\"top\", target.y + 40 + \"px\")\n\t.removeClass(\"disabled\");\n}\n\nfunction drawSensorArc(w, d, p, str, len, loc, facing, a){\n\tif (w == 180){\n\t\tvar d = str/Math.pow(180/len, 1/p);\n\t\tmouseCtx.beginPath();\t\t\t\n\t\tmouseCtx.arc(loc.x, loc.y, d, 0, 2*Math.PI, false);\n\t\tmouseCtx.closePath();\n\t}\n\telse {\n\t\tvar start = addAngle(0 + w-facing, a);\n\t\tvar end = addAngle(360 - w-facing, a);\n\t\tvar p1 = getPointInDirection(str, start, loc.x, loc.y);\n\t\tvar rad1 = degreeToRadian(start);\n\t\tvar rad2 = degreeToRadian(end);\n\t\tmouseCtx.beginPath();\t\t\t\n\t\tmouseCtx.moveTo(loc.x, loc.y);\n\t\tmouseCtx.lineTo(p1.x, p1.y); \n\t\tmouseCtx.arc(loc.x, loc.y, d, rad1, rad2, false);\n\t\tmouseCtx.closePath();\n\t}\n\n\tmouseCtx.globalAlpha = 0.2;\n\tmouseCtx.fillStyle = \"red\";\n\tmouseCtx.fill();\n\tmouseCtx.globalAlpha = 1;\n\tmouseCtx.setTransform(1,0,0,1,0,0);\n}\n\n\n//function drawProjectile(weapon, ox, oy, x, y, now, end){\nfunction drawProjectile(weapon, fire){\n\t//getPointInDirection(dis, angle, oX, oY){\n\n\tvar x = fire.ox + fire.nx * fire.n;\n\tvar y = fire.oy + fire.ny * fire.n;\n\tvar trailEnd = getPointInDirection(weapon.projSize*2.5, fire.f, x, y);\n\tvar w = 1;\n\n\tfxCtx.translate(cam.o.x, cam.o.y);\n\tfxCtx.scale(cam.z, cam.z)\n\n\tif (fire.n/fire.m > 0.7){\n\t\tw -= 2*(fire.n/fire.m- 0.7);\n\t}\n\n\tfxCtx.globalAlpha = w\n\tfxCtx.beginPath();\n\tfxCtx.moveTo(x, y);\n\tfxCtx.lineTo(trailEnd.x, trailEnd.y);\n\tfxCtx.closePath();\n\tfxCtx.strokeStyle = weapon.animColor;\n\tfxCtx.lineWidth = weapon.projSize/2;\n\tfxCtx.stroke();\n\n\tfxCtx.globalCompositeOperation = \"lighter\";\n\tfxCtx.strokeStyle = \"white\";\n\tfxCtx.lineWidth = weapon.projSize/4;\n\tfxCtx.stroke();\n\n\tfxCtx.globalCompositeOperation = \"source-over\";\n\tfxCtx.setTransform(1,0,0,1,0,0);\n}\n\nfunction drawExplosion(weapon, x, y, now, max, explo){  // 150, 150, 30\n\tvar fraction = (now-max)/(explo);\n\t//\tconsole.log(now, max);\n\t//function drawExplosion(weapon, shooter, ele){\n\tfxCtx.translate(cam.o.x, cam.o.y);\n\tfxCtx.scale(cam.z, cam.z)\n\n\tvar sin = weapon.exploSize*1*Math.sin(Math.PI*fraction);\n\tif (sin < 0){\n\t\treturn;\n\t}\n\t//console.log(sin);\n\tfxCtx.globalAlpha = 1.5 - fraction;\n\n\tvar outer;\n\tvar mid;\n\tvar inner;\n\n\tif (weapon instanceof EM){\n\t\touter = \"rgb(95,125,255)\";\n\t\tmid = \"rgb(95,125,255)\";\n\t\tinner = \"rgb(255,255,255)\";\n\t}\n\telse {\n\t\touter =\"rgb(255,225,75)\";\n\t\tmid = \"rgb(255,200,0)\";\n\t\tinner = \"rgb(255,0,0)\";\n\t}\n\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin, 0, 2*Math.PI); fxCtx.closePath(); fxCtx.fillStyle = outer; fxCtx.fill();\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin*0.66, 0, 2*Math.PI); fxCtx.closePath(); fxCtx.fillStyle = mid; fxCtx.fill();\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin*0.35, 0, 2*Math.PI); fxCtx.closePath(); fxCtx.fillStyle = inner; fxCtx.fill();\n\n\tfxCtx.globalAlpha = 1;\n\tfxCtx.setTransform(1,0,0,1,0,0);\n}\n\nfunction drawFighterExplosion(x, y, s, now, max){\n\tvar sin = s*0.5*Math.sin(Math.PI*now/max);\n\tif (sin < 0){\n\t\treturn;\n\t}\n\n\tfxCtx.globalAlpha = 1.5 - (now/max);\n\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"rgb(255,225,75)\"; fxCtx.fill();\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin/3*2, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"rgb(255,200,0)\"; fxCtx.fill();\n\tfxCtx.beginPath(); fxCtx.arc(x, y, sin/4, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"rgb(255,0,0)\"; fxCtx.fill();\n\n\tfxCtx.globalAlpha = 1;\n}\n\nfunction drawBeam(weapon, fire){\n\tfxCtx.translate(cam.o.x, cam.o.y);\n\tfxCtx.scale(cam.z, cam.z)\n\n\tvar fraction = fire.n/fire.m;\n\tvar charge =  0.5 - 0.3*Math.cos(2*Math.PI*fraction);\n\n\tfxCtx.globalAlpha = 1;\n\tfxCtx.beginPath();\n\tfxCtx.arc(fire.ox, fire.oy, weapon.beamWidth*charge, 0, 2*Math.PI);\n\tfxCtx.closePath();\t\n\tfxCtx.fillStyle = weapon.animColor;\n\tfxCtx.fill();\n\n\tfxCtx.beginPath();\n\tfxCtx.arc(fire.ox, fire.oy, weapon.beamWidth/2*charge, 0, 2*Math.PI);\n\tfxCtx.closePath();\n\tfxCtx.globalCompositeOperation = \"lighter\";\n\tfxCtx.fillStyle = \"white\";\n\tfxCtx.fill();\t\n\n\tvar x = fire.tax + fire.nx * fire.n;\n\tvar y = fire.tay + fire.ny * fire.n;\n\n\tif (fraction > 0.3){\n\t\tvar beamW = 0.5 + 0.5 * Math.cos(2*Math.PI*fraction);\n\t\tfxCtx.lineCap = \"round\";\t\n\t\tfxCtx.beginPath();\n\t\tfxCtx.moveTo(fire.ox, fire.oy);\n\t\tfxCtx.lineTo(x, y);\n\t\tfxCtx.closePath();\n\n\t\tfxCtx.globalAlpha = 1 - beamW;\n\t\tfxCtx.globalCompositeOperation = \"source-over\";\n\t\tfxCtx.lineWidth = weapon.beamWidth * 0.5 + weapon.beamWidth * beamW;\n\t\tfxCtx.strokeStyle = weapon.animColor;\n\t\tfxCtx.stroke();\n\n\t\tfxCtx.globalCompositeOperation = \"lighter\";\n\t\tfxCtx.lineWidth = 1 + 1* beamW;\n\t\tfxCtx.strokeStyle = \"white\";\n\t\tfxCtx.stroke();\n\t\tif (fire.h){\n\t\t\tdrawBeamExplosion(weapon, x, y, fraction);\n\t\t}\n\t}\n\t\t\n\tfxCtx.globalCompositeOperation = \"source-over\";\n\tfxCtx.lineCap = \"butt\";\n\tfxCtx.setTransform(1,0,0,1,0,0);\n}\n\nfunction drawBeamExplosion(weapon, x, y, fraction){\n\tfxCtx.globalAlpha = 1.5 - fraction;\n\tfxCtx.globalCompositeOperation = \"source-over\";\n\n\tfor (var i = 0; i < 1; i++){\n\t\tvar subX = x + range(-2, 3);\n\t\tvar subY = y + range(-2, 3);\n\t\tvar subS = weapon.exploSize + (range(-weapon.exploSize*.15, weapon.exploSize*.15));\n\n\t\tfxCtx.beginPath(); fxCtx.arc(x, y, subS, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"rgb(255,255,155)\"; fxCtx.fill();\n\t\tfxCtx.beginPath(); fxCtx.arc(x, y, subS/3*2, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"orange\"; fxCtx.fill();\n\t\tfxCtx.beginPath(); fxCtx.arc(x, y, subS/4, 0, 2*Math.PI); fxCtx.closePath();\tfxCtx.fillStyle = \"red\"; fxCtx.fill();\n\t}\n\tfxCtx.globalAlpha = 1;\n}\n\nfunction drawCircle(x, y, s, op, color){\n\tctx.globalCompositeOperation = op;\n\tctx.beginPath();\n\tctx.arc(x, y, s, 0, 2*Math.PI, false);\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\n\nfunction getRadialGradient(x, y, s){\n\tvar grad = fxCtx.createRadialGradient(x, y, 0, x, y, s);\n\t\t/*\n\t\tgrad.addColorStop(0, \"white\");\n\t\tgrad.addColorStop(0.3, \"yellow\");\n\t\tgrad.addColorStop(0.8, \"orange\");\n\t\tgrad.addColorStop(1, \"red\");\n\t\t*/\n\n\t\tgrad.addColorStop(0.25, \"red\");\n\t\tgrad.addColorStop(0.4, \"orange\");\n\t\tgrad.addColorStop(1, \"rgba(255,255,0,0)\");\n\treturn grad;\n}\t",
			"file": "graphics.js",
			"file_size": 6659,
			"file_write_time": 131382153683348077,
			"settings":
			{
				"buffer_size": 6434,
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3512,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1839,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 15433,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 5592,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nfunction Game(id, name, status, userid, turn, phase){\n\tthis.id = id;\n\tthis.name = name;\n\tthis.status = status;\n\tthis.userid = userid;\n\tthis.turn = turn;\n\tthis.phase = phase;\n\tthis.ships = [];\n\tthis.fireOrders = []\n\tthis.mode = false;\n\tthis.deploying = false;\n\tthis.flightDeploy = false;\n\tthis.canSubmit = false;\n\tthis.index = 1;\n\tthis.reinforcePoints = 0;\n\tthis.reinforcements = [];\n\tthis.animating = false;\n\tthis.deployArea = [];\n\tthis.deployBlock = [];\n\tthis.vector = false;\n\tthis.opacity = false;\n\tthis.markers = [];\n\tthis.ballistics = [];\n\tthis.antiBallistics = [];\n\tthis.shortInfo = false;\n\tthis.flightPath = false;\n\n\tthis.doDeployFlight = function(e, pos){\n\t\tvar facing = Math.floor(getAngleFromTo(game.getUnitById(aUnit).getOffsetPos(), {x: pos.x, y: pos.y}))\n\n\t//id, name, shipType, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\t\tvar flight = new Flight(\n\t\t\t{id: -game.ships.length, name: \"Flight\", shipType: \"Flight\", x: pos.x, y: pos.y, facing: facing, \n\t\t\tfaction: false, mass: false, cost: false, profile: false, size: 0, userid: this.userid, available: this.turn, baseHitChance: 0, baseImpulse: 0}\n\t\t)\n\n\t\tflight.deployed = 1;\n\t\tflight.friendly = 1;\n\t\tflight.primary = new Primary(0, flight.id, 0, 0, 0);\n\t\tflight.actions.push(new Move(\"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n\t\tflight.launchdata = {\n\t\t\tshipid: aUnit,\n\t\t\tsystemid: this.flightDeploy.id,\n\t\t\tloads: this.flightDeploy.loads\n\t\t}\n\n\t\tfor (var i = 0; i < this.flightDeploy.loads.length; i++){\n\t\t\tfor (var j = 1; j <= this.flightDeploy.loads[i].launch; j++){\n\t\t\t\tvar f = new Fighter({id: j, name: this.flightDeploy.loads[i].name, ep: 0, mass: 0, integrity: 0, value: 0, negation: 0, crits: 0, destroyed: 0})\n\t\t\t\tflight.structures.push(f);\n\t\t\t}\n\t\t}\n\t\tflight.size = 32 + (flight.structures.length-1)*5;\n\t\tflight.create();\n\t\tflight.createBaseDiv();\n\t\tgame.ships.push(flight);\n\n\t\t$(\"#instructWrapper\").hide();\n\t\t$(\"#deployOverlay\").hide();\n\t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select(e);\n\t\tgame.flightDeploy = false;\n\t\tthis.draw();\n\t}\n\t\n\tthis.getDeployedFlights = function(){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (this.ships[i].flight && this.ships[i].actions[0].turn == this.turn){\n\t\t\t\t\tvar flight = {\n\t\t\t\t\t\tname: \"Flight\",\n\t\t\t\t\t\tlaunchdata: this.ships[i].launchdata,\n\t\t\t\t\t\tactions: this.ships[i].actions,\n\t\t\t\t\t\tturn: this.turn,\n\t\t\t\t\t\tarrival: 0,\n\t\t\t\t\t\tupgrades: []\n\t\t\t\t\t}\n\t\t\t\t\tret.push(flight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.canSetSensor = function(){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tif (sensor.locked){\n\t\t\treturn false;\n\t\t} return true;\n\t}\n\n\tthis.getSensorSettings = function(){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].ship && this.ships[i].userid == this.userid){\n\t\t\t\tret.push(this.ships[i].getSensorSettings());\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.checkDeployment = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (! this.ships[i].deployed){\n\t\t\t\t\tif (this.ships[i].available <= this.turn){\n\t\t\t\t\t\tpopup(\"You need to deploy all arriving vessels.\");\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.checkPower = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\tfor (var j = 0; j < this.ships[i].primary.systems.length; j++){\n\t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Reactor\"){\n\t\t\t\t\t\t\tif (this.ships[i].primary.systems[j].getOutput() < 0){\n\t\t\t\t\t\t\t\tpopup(\"You have units with invalid Reactor settings (#\" + this.ships[i].id + \")\"); \n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.checkMoves = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\tif ((game.phase == 0 && this.ships[i].ship) || (game.phase == 1 && this.ships[i].flight)){\n\t\t\t\t\tif (this.ships[i].getRemainingImpulse() > 0){\n\t\t\t\t\t\tpopup(\"You have units with unused Impulse (#\" + this.ships[i].id + \")\"); \n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.endPhase = function(){\n\t\tif (this.canSubmit){\n\t\t\tif (this.phase == -1){\n\t\t\t\tif (this.checkDeployment()){return;}\n\t\t\t\telse if (this.checkPower()){return;}\n\t\t\t\telse {ajax.confirmDeployment(goToLobby);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.phase == 0 || this.phase == 1){ // SHIP MOVEMENT\n\t\t\t\tif (this.checkMoves()){return;}\n\t\t\t\telse {ajax.confirmMovement(goToLobby);}\n\t\t\t}\n\t\t\telse if (this.phase == 2){ajax.confirmFiringOrders(goToLobby);\n\t\t\t}\n\t\t\telse if (this.phase == 3){ajax.confirmDamageControl(goToLobby);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tpopup(\"You have already confirmed your orders\");\n\t\t}\n\t}\n\n\tthis.drawBallisticFlightPaths = function(){\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].targetid == game.ballistics[i].id){}\n\t\t}\n\t}\n\n\tthis.enableDeployment = function(shipid){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id == shipid){\n\t\t\t\tthis.deploying = shipid;\n\t\t\t\tthis.setupDeploymentDiv()\n\t\t\t\tthis.setupDeploymentZone();\n\t\t\t\tthis.drawDeploymentZone();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.disableDeployment = function(){\n\t\tthis.deploying = false;\n\t\tthis.deployArea = [];\n\t\tthis.deployBlock = false;\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#deployOverlay\").hide();\n\t}\n\n\tthis.setupDeploymentDiv = function(){\n\t\tvar ele = (\"#deployOverlay\");\n\t\tif (game.flightDeploy){\n\t\t\t//img.src = game.getUnitById(game.flightDeploy).img.src;\n\t\t\t$(ele).find(\"span\").html(\"Deploy Flight\").end().find(\".img\").html(\"\");\n\t\t}\n\t\telse if (game.deploying){\n\t\t\tvar img = new Image();\n\t\t\t\timg.className = \"img80\";\n\t\t\t\timg.src = game.getUnitById(game.deploying).img.src;\n\t\t\t$(ele).find(\"span\").html(\"Deploy Ship\").end().find(\".img\").html(\"\").append(img);\n\t\t}\n\t}\n\n\tthis.setupDeploymentZone = function(){\n\n\t\tif (game.turn == 1){\n\t\t\tfor (var i = 0; i < window.playerstatus.length; i++){\n\n\t\t\t\tvar step;\n\t\t\t\tvar h = 700;\n\t\t\t\tvar w = 200;\n\t\t\t\tvar x = 600;\n\t\t\t\tvar y = h/2;\n\n\t\t\t\tif (i % 2 == 0){\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\n\t\t\t\tif (window.playerstatus[i].userid == this.userid){\n\t\t\t\t\tvar id = this.userid;\n\t\t\t\t\tvar color = \"green\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar id = 0;\n\t\t\t\t\tvar color = \"red\";\n\t\t\t\t}\n\n\t\t\t\tthis.deployArea.push({\n\t\t\t\t\tid: id,\n\t\t\t\t\tx: 0 + (x * step),\n\t\t\t\t\ty: y/2*-1,\n\t\t\t\t\tw: w * step,\n\t\t\t\t\th: h,\n\t\t\t\t\tc: color\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.deployArea.push({\n\t\t\t\tid: this.userid,\n\t\t\t\tx: -800,\n\t\t\t\ty: -800,\n\t\t\t\tw: 1600,\n\t\t\t\th: 1600,\n\t\t\t\tc: \"green\"\n\t\t\t});\n\t\t}\n\t}\n\n\tthis.drawDeploymentZone = function(){\n\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.globalAlpha = 0.3;\n\t\tfor (var i = 0; i < this.deployArea.length; i++){\n\t\t\tplanCtx.translate(cam.o.x, cam.o.y)\n\t\t\tplanCtx.scale(cam.z, cam.z)\n\t\t\tplanCtx.beginPath();\n\t\t\tplanCtx.rect(this.deployArea[i].x, this.deployArea[i].y, this.deployArea[i].w, this.deployArea[i].h);\n\t\t\tplanCtx.closePath();\n\t\t\tplanCtx.fillStyle = this.deployArea[i].c;\n\t\t\tplanCtx.fill();\n\t\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t\t//return;\n\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t//if (this.ships[i].id != game.deploying){\n\t\t\t\tvar inValid = this.ships[i].getControlArea();\n\t\t\t\tif (inValid){\n\t\t\t\t\tplanCtx.translate(cam.o.x, cam.o.y)\n\t\t\t\t\tplanCtx.scale(cam.z, cam.z)\n\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\tplanCtx.arc(inValid.pos.x, inValid.pos.y, inValid.s, 0, 2*Math.PI, false);\n\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t\tplanCtx.fillStyle = \"red\";\n\t\t\t\t\tplanCtx.fill();\n\t\t\t\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t\t\t\t}\n\t\t\t//}\n\t\t}\n\t\tplanCtx.globalAlpha = 1;\n\t\t//moveCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.createDeploymentTable = function(){\n\t\tvar toDo = [];\n\t\tvar table;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].deployed == false){\n\t\t\t\tif (this.ships[i].userid == this.userid){\n\t\t\t\t\ttoDo.push(this.ships[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < window.incoming.length; i++){\n\t\t\tif (window.incoming[i].userid == this.userid){\n\t\t\t\ttoDo.push(window.incoming[i]);\n\t\t\t}\n\t\t}\n\n\t\tif (toDo.length){\n\t\t\ttable = document.getElementById(\"deployTable\");\n\n\t\t\tfor (var i = 0; i < toDo.length; i++){\n\t\t\t\tvar available = false;\n\t\t\t\tif (toDo[i].available <= this.turn){\n\t\t\t\t\tavailable = true;\n\t\t\t\t}\n\n\t\t\t\tvar tr = document.createElement(\"tr\");\n\n\t\t\t\tif (available){\n\t\t\t\t\t$(tr).data(\"shipid\", toDo[i].id).click(function(e){\n\t\t\t\t\t\t//console.log($(this).data());\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tif (! aUnit){\n\t\t\t\t\t\t\tif (game.deploying == $(this).data(\"shipid\")){\n\t\t\t\t\t\t\t\t$(this).toggleClass(\"selected\");\n\t\t\t\t\t\t\t\tgame.disableDeployment();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (!game.deploying){\n\t\t\t\t\t\t\t\t$(this).toggleClass(\"selected\");\n\t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"shipid\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.innerHTML = \"<img class='img50' src='shipIcons/\"+toDo[i].name.toLowerCase() + \".png'>\";\n\t\t\t\t//\ttd.appendChild(img);\n\t\t\t\ttr.appendChild(td);\n\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.innerHTML = toDo[i].name;\n\t\t\t\ttr.appendChild(td);\n\n\t\t\t\tvar td = document.createElement(\"td\");\n\t\t\t\t\ttd.colSpan = 2;\n\n\t\t\t\t\tif (toDo[i].available - this.turn == 0){\n\t\t\t\t\t\ttd.innerHTML = \"NOW\";\n\t\t\t\t\t\ttd.className = \"shipAvailable\"\n\t\t\t\t\t}\n\t\t\t\t\telse if (toDo[i].available - this.turn == 1){\n\t\t\t\t\t\ttd.innerHTML = toDo[i].available - this.turn + \" turn\";\n\t\t\t\t\t\ttd.className = \"shipUnavailable\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttd.innerHTML = toDo[i].available - this.turn + \" turns\";\n\t\t\t\t\t\ttd.className = \"shipUnavailable\";\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\ttr.appendChild(td);\n\t\t\t\ttable.appendChild(tr);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.initDeployment = function(){\n\t\tcam.setZoom(0.6);\n\t\t//cam.setFocus()\n\t\t$(\"#deployWrapper\").removeClass(\"disabled\");\n\t}\n\n\tthis.movementResolved = function(){\n\t\tconsole.log(\"movementResolved\");\n\t}\n\n\tthis.initDamageControl = function(){\n\t\tthis.resolveFire();\n\t}\n\n\tthis.fireResolved = function(){\n\t\tthis.draw();\n\t\tconsole.log(\"fireResolved\");\n\t}\n\n\tthis.setShipDivs = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar ele = $(this.ships[i].element);\n\t\t\tvar w = $(ele).width();\n\t\t\tvar h = $(ele).height();\n\t\t\tvar x = this.ships[i].x + cam.o.x + w/2;\n\t\t\tvar y = this.ships[i].y + cam.o.y;\n\n\t\t\t$(ele)\n\t\t\t\t.css(\"left\", x)\n\t\t\t\t.css(\"top\", y);\n\t\t}\n\t}\n\nGame.prototype.getUnitType = function (val){\n\tswitch (val){\n\t\tcase 3: return \"Ultra Heavy\";\n\t\tcase 2: return \"Super Heavy\";\n\t\tcase 1: return \"Heavy\";\n\t\tcase 0: return \"Medium\";\n\t\tcase -1: return \"Light\";\n\t\tcase -2: return \"SuperLight\";\n\t\tcase -3: return \"Flight\";\n\t\tcase -4: return \"Salvo\";\n\t}\n}\n/*\t\tvar w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\t\tleft = res.x - w - 50;\n\t\t}\n\t\tvar x = this.x +cam.o.x - w/2;\n\t\tvar y = this.y +cam.o.y + 150;\n\n\t\t$(div).css(\"left\", x).css(\"top\", y);\n\t}*/\n\n\t\n\tthis.initPhase = function(n){\n\t\t$(\"#turnDiv\").html(\"Turn: \" + this.turn);\n\t\tthis.createDeploymentTable();\n\t\tthis.setShipDivs();\n\t\tgame.draw();\n\n\t\tif (n == -1){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseDiv\").html(\"Deployment and Initial\")\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.initDeployment();\n\t\t\t\t\t//$(\"#deployWrapper\").find(\"#reinforceTable\").show();\n\t\t\t\t\t$(this).hide();\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 0){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseDiv\").html(\"Capital Movement\")\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveDeployment();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t\t//$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 1){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseDiv\").html(\"Flight Movement\")\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveShipMovement();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t//\t$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 2){\n\t\t\t\t$(\"#phaseDiv\").html(\"Firing\")\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.resolveShipMovement();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t//\t$(this).fadeOut(200);\n\t\t\t\t});\n\t\t}\n\t\telse if (n == 3){\n\t\t\tthis.phase = n;\n\t\t\t\t$(\"#phaseDiv\").html(\"Damage Control\")\n\t\t\t\t$(\"#phaseSwitchDiv\").click(function(){\n\t\t\t\t\tgame.initDamageControl();\n\t\t\t\t\t$(this).hide()\n\t\t\t\t\t//$(this).fadeOut(200);\n\t\t\t\t});\n\t\t\t\n\t\t}\n\t}\n\t\n\tthis.create = function(){\n\t\t$(\"#phaseSwitchDiv\").show();\n\n\t\tfor (var i = 0; i < window.ships.length; i++){\n\t\t\tvar ship = window.initiateShip(i);\n\t\t\tvar deployed = false;\n\t\t\tvar friendly = false;\n\n\t\t\tif (window.ships[i].userid == this.userid){\n\t\t\t\tfriendly = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (friendly && window.ships[i].actions.length && window.ships[i].actions[0].turn == this.turn){\n\t\t\t\tdeployed = true;\n\t\t\t}\n\t\t\telse if (window.ships[i].actions.length && window.ships[i].actions[0].resolved == 1){\n\t\t\t\tdeployed = true;\n\t\t\t}\n\n\t\t\tship.friendly = friendly;\n\t\t\tship.deployed = deployed;\n\n\t\t\tif (! friendly){\n\t\t\t\tif (deployed){\n\t\t\t\t\tfor (var j = 0; j < window.ships[i].actions.length; j++){\n\t\t\t\t\t\tif (window.ships[i].actions[j].resolved){\n\t\t\t\t\t\t\tship.actions.push(window.ships[i].actions[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (var j = 0; j < window.ships[i].actions.length; j++){\n\t\t\t\t\tship.actions.push(window.ships[i].actions[j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tship.create();\n\t\t\tthis.ships.push(ship);\n\t\t\tship.createBaseDiv();\n\t\t}\n\n\t\tfor (var i = 0; i < window.ballistics.length; i++){\n\t\t\tgame.ballistics.push(window.initiateBallistic(i));\n\t\t}\n\n\t\tvar canSubmit = false;\n\t\tvar isPlaying = false;\n\t\tfor (var i = 0; i < playerstatus.length; i++){\n\t\t\tif (playerstatus[i].userid == userid){\n\t\t\t\tisPlaying = true;\n\t\t\t\tthis.reinforcePoints = $(\"#reinforce\").html();\n\t\t\t\tif (playerstatus[i].status == \"waiting\"){\n\t\t\t\t\tcanSubmit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.canSubmit = canSubmit;\n\t\tcam.setFocus(0, 0);\n\t\tthis.initPhase(this.phase);\n\t}\n\n\tthis.unitHover = function(elements){\n\t\tif (elements){\n\t\t\tvar ele = $(\"#shortInfo\");\n\t\t\t\t$(ele).children().remove();\n\n\t\t\tfor (var i = 0; i < elements.length; i++){\n\t\t\t\ttable = elements[i].getShortInfo();\n\t\t\t\t$(ele).append($(table).css(\"width\", \"100%\"));\n\t\t\t\tgame.shortInfo = elements[i].id;\n\n\t\t\t\tvar balls = this.getRelevantBallistics(elements[i]);\n\n\t\t\t\tfor (var j = 0; j < balls.length; j++){\n\t\t\t\t\tif (balls[j].destroyed){continue;}\n\t\t\t\t\tballs[j].drawFlightPath();\n\t\t\t\t}\n\n\t\t\t\tif (elements[i].ship){\n\t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar oX = $(ele).width()/2;\n\t\t\tvar pos = elements[0].getBaseOffsetPos();\n\t\t\tvar top = (pos.y * cam.z) + cam.o.y + 40;\n\t\t\tvar left =(pos.x * cam.z) + cam.o.x - oX;\n\n\t\t\t$(ele).css(\"top\", top).css(\"left\", left).show();\n\t\t}\n\t}\n\n\tthis.getRelevantBallistics = function(unit){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tif (this.ballistics[i].id == unit.id || this.ballistics[i].targetid == unit.id || this.ballistics[i].id == unit.targetid){\n\t\t\t\tret.push(this.ballistics[i]);\n\t\t\t\tfor (var j = i+1; j < this.ballistics.length; j++){\n\t\t\t\t\tif (this.ballistics[i].id == this.ballistics[j].targetid){\n\t\t\t\t\t\tret.push(this.ballistics[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.resetHover = function(){\n\t\tif (game.flightPath){\n\t\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tgame.flightPath = false;\n\t\t}\n\t\tif (game.deploying){\n\t\t\tgame.drawDeploymentZone();\n\t\t}\n\t\t$(\"#shortInfo\").html(\"\").hide();\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tgame.shortInfo = false;\n\t}\n\t\n\tthis.posIsOccupied = function(ship, pos){\n\t\treturn false;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].x < pos.x + this.ships[i].size/2 && this.ships[i].x > pos.x - this.ships[i].size/2){\n\t\t\t\tif (this.ships[i].y > pos.y - this.ships[i].size/2 && this.ships[i].y < pos.y + this.ships[i].size/2){\n\t\t\t\t\tif (this.ships[i].id != ship.id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\treturn false;\n\t}\n\n\tthis.hasShipOnPos = function(pos){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar r = this.ships[i].size/4;\n\t\t\tif (! this.ships[i].destroyed){\n\t\t\t\tif (this.ships[i].deployed){\n\t\t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n\t\t\t\t\tif (shipPos.x < pos.x + r && shipPos.x > pos.x - r){\n\t\t\t\t\t\tif (shipPos.y > pos.y - r && shipPos.y < pos.y + r){\n\t\t\t\t\t\t\tret.push(this.ships[i]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\tif (ret.length){return ret;}else return false;\n\t}\n\n\tthis.hasAmmoOnPos = function(pos){\n\t\tvar ret = [];\n\t\tvar r = 7;\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tvar x = this.ballistics[i].actions[this.ballistics[i].actions.length-1].x;\n\t\t\tvar y = this.ballistics[i].actions[this.ballistics[i].actions.length-1].y;\n\t\t\tif (x < pos.x + r && x > pos.x - r){\n\t\t\t\tif (y > pos.y - r && y < pos.y + r){\n\t\t\t\t\tret.push(this.ballistics[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ret.length){return ret;}else return false;\n\t}\n\n\tthis.getShipByClick = function(pos){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar r = this.ships[i].size/4;\n\t\t\tif (! this.ships[i].destroyed){\n\t\t\t\tif (this.ships[i].deployed){\n\t\t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n\t\t\t\t\tif (pos.x < shipPos.x + r && pos.x > shipPos.x - r){\n\t\t\t\t\t\tif (pos.y > shipPos.y - r && pos.y < shipPos.y + r){\n\t\t\t\t\t\t\treturn this.ships[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getAmmoByClick = function(pos){\n\t\tvar r = 7;\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tvar ammoPos = this.ballistics[i].getBaseOffsetPos();\n\t\t\tif (pos.x < ammoPos.x + r && pos.x > ammoPos.x - r){\n\t\t\t\tif (pos.y > ammoPos.y - r && pos.y < ammoPos.y + r){\n\t\t\t\t\treturn this.ballistics[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getUnitByClick = function(pos){\n\t\treturn this.getAmmoByClick(pos) || this.getShipByClick(pos) || false;\n\t}\n\n\tthis.redraw = function(){\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y)\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y)\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y)\n\t\tgame.draw();\n\n\t\t$(\"#shortInfo\").hide();\n\n\t\tif (aUnit){\n\t\t\tvar unit = game.getUnitById(aUnit);\n\t\t\tif (unit instanceof Ship){\n\t\t\t\tif (unit.hasWeaponsSelected()){\n\t\t\t\t\tunit.highlightAllSelectedWeapons();\n\t\t\t\t}\n\t\t\t\tif (game.phase == -1 || game.phase == 0 || game.phase == 1){\n\t\t\t\t\tunit.unsetMoveMode();\n\t\t\t\t\tunit.setMoveMode();\n\t\t\t\t}\n\t\t\t\tif (game.flightDeploy){\n\t\t\t\t\tgame.flightDeploy.drawArc();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.draw = function(){\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\n\t\tthis.drawShips();\n\t\tthis.drawBallistics();\n\n\t\tif (this.deploying){\n\t\t\tthis.drawDeploymentZone();\n\t\t}\n\t}\n\t\n\tthis.drawShips = function(){\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tthis.ships[i].draw();\n\t\t}\n\t\tctx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.drawBallistics = function(){\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t\tfor (var i = 0; i < this.ballistics.length; i++){\n\t\t\tthis.ballistics[i].draw();\n\t\t}\n\t\tctx.setTransform(1,0,0,1,0,0);\n\t}\n\t\n\tthis.drawOtherShips = function(id){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].id != id){\n\t\t\t\tthis.ships[i].draw();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getShipById = function(id){\t\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].id == id){\n\t\t\t\treturn game.ships[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getBallById = function(id){\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].id == id){\n\t\t\t\treturn game.ballistics[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnitById = function(id){\n\t\tvar unit = this.getShipById(id);\n\t\tif (unit){\n\t\t\treturn unit;\n\t\t}\n\t\telse {\n\t\t\treturn this.getBallById(id);\n\t\t}\n\t}\n\t\n\tthis.getActiveShip = function(){\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].selected){\n\t\t\t\treturn this.ships[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getCurrentReinforceCost = function(){\n\t\tvar cost = 0;\n\t\tif (this.reinforcements.length){\n\t\t\tfor (var i = 0; i < this.reinforcements.length; i++){\n\t\t\t\tcost += this.reinforcements[i].cost;\n\t\t\t}\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\tthis.selectReinforcements = function(id){\n\t\tvar found = false;\n\n\t\tfor (var i = this.reinforcements.length-1; i >= 0; i--){\n\t\t\tif (this.reinforcements[i].id == id){\n\t\t\t\tfound = true;\n\t\t\t\tthis.reinforcements.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tif (! found){\n\t\t\tfor (var i = 0; i < window.reinforcements.length; i++){\n\t\t\t\tif (window.reinforcements[i].id == id){\n\t\t\t\t\tthis.reinforcements.push(window.reinforcements[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$(\"#totalRequestCost\").html(this.getCurrentReinforceCost());\n\t}\n\n\tthis.showReinforcementsPreview = function(id){\n\t\tfound = 0;\n\t\tfor (var i = 0; i < window.reinforcements.length; i++){\n\t\t\tif (window.reinforcements[i].id == id){\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconsole.log(window.reinforcements[i]);\n\t}\n\n\tthis.resolveDeployment = function(){\n\t\tconsole.log(\"resolveDeployment\");\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tif (this.ships[i].available == game.turn){\n\t\t\t\tif (this.ships[i].actions[0].turn == this.turn){\n\t\t\t\t\tif (this.ships[i].ship){\n\t\t\t\t\t\tthis.ships[i].deployAnim = {done: false, t: [0, 200]};\n\t\t\t\t\t\tthis.ships[i].deployed = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetFPS(60);\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\t\tthis.animating = true;\n\t\tcam.setZoom(0.7);\n\t\tthis.animateDeployment();\n\t}\n\n\tthis.animateDeployment = function(){\n\t\tanim = window.requestAnimationFrame(game.animateDeployment.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tctx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\t\tctx.scale(cam.z, cam.z);\n\n\t\t\t\tif (game.ships[i].deployAnim == undefined || game.ships[i].deployAnim.done){\n\t\t\t\t\tgame.ships[i].drawSelf();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgame.ships[i].deployAnim.t[0] += 3;\n\t\t\t\t\tvar fraction = game.ships[i].deployAnim.t[0] / game.ships[i].deployAnim.t[1];\n\n\t\t\t\t\tif (fraction >= 1){\n\t\t\t\t\t\tgame.ships[i].deployAnim.done = true;\n\t\t\t\t\t\tgame.ships[i].drawSelf();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar sin = Math.sin(Math.PI*fraction);\n\t\t\t\t\t\tdrawCircle(game.ships[i].x, game.ships[i].y, game.ships[i].size*0.55*sin, \"source-over\", \"blue\");\n\t\t\t\t\t\tdrawCircle(game.ships[i].x, game.ships[i].y, game.ships[i].size*0.2*sin/2, \"lighter\", \"lightBlue\");\n\n\t\t\t\t\t\tif (fraction >= 0.3){\n\t\t\t\t\t\t\tctx.globalAlpha = fraction;\n\t\t\t\t\t\t\tgame.ships[i].drawSelf();\n\t\t\t\t\t\t\tgame.ships[i].deployed = true;\n\t\t\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t}\n\n\t\t\tvar done = true;\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployAnim != undefined && ! game.ships[i].deployAnim.done){\n\t\t\t\t\tdone = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (done){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tgame.deployDone()\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.deployDone = function(){\n\t\tgame.animating = false;\n\t\tgame.draw();\n\t\tconsole.log(\"deployDone\");\n\t}\n\t\n\tthis.resolveShipMovement = function(){\n\t\tif (aUnit){\n\t\t\tgame.getUnitById(aUnit).select();\n\t\t}\n\n\t\tsetFPS(120);\n\t\twindow.animShip = false;\n\t\twindow.animFlight = false;\n\t\tif (game.phase == 1){\n\t\t\tanimShip = true;\n\t\t}\n\t\telse if (game.phase == 2){ // check if its firing phase and we animate fighters OR ships (skipped flight pa)\n\t\t\tanimShip = true;\n\t\t\tanimFlight = false;\n\t\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\t\tif (this.ships[i].flight){\n\t\t\t\t\tanimShip = false;\n\t\t\t\t\tanimFlight = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//console.log(\"animShip: \"+animShip);\n\t\t//console.log(\"animFlight: \"+animFlight);\n\n\t\tvar toDo;\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tvar toDo = true;\n\t\t\tif (! this.ships[i].deployed){\n\t\t\t\ttoDo = false;\n\t\t\t}\n\t\t\telse if (this.ships[i].flight && !animFlight || this.ships[i].ship && !animShip){\n\t\t\t\tfor (var j = this.ships[i].actions.length-1; j >= 0; j--){\n\t\t\t\t\tthis.ships[i].actions[j].animated = true;\n\t\t\t\t}\n\t\t\t\ttoDo = false;\n\t\t\t}\n\n\n\t\t\t/*else if ((game.phase == 1 && this.ships[i].flight) || (game.phase == 2 && !this.ships[i].flight)){\n\t\t\t\tfor (var j = this.ships[i].actions.length-1; j >= 0; j--){\n\t\t\t\t\tthis.ships[i].actions[j].animated = true;\n\t\t\t\t}\n\t\t\t\ttoDo = false;\n\t\t\t}*/\n\n\t\t\tif (! toDo){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.ships[i].animationSetup();\n\n\t\t\tvar frameMod = window.fps / this.ships[i].getTotalImpulse();\n\n\t\t\tfor (var j = 0; j < this.ships[i].actions.length; j++){\n\t\t\t\tif (this.ships[i].actions[j].turn == game.turn){\n\t\t\t\t\tvar action = this.ships[i].actions[j];\n\n\t\t\t\t\tif (action.type == \"deploy\" || action.type == \"speedChange\"){\n\t\t\t\t\t\tthis.ships[i].actions[j].animated = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (j == 0){\n\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\tvar v = new Vector(this.ships[i].getBaseOffsetPos(), {x: action.x, y: action.y});\n\t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n\t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\tvar v = new Vector({x: this.ships[i].actions[j-1].x, y: this.ships[i].actions[j-1].y}, {x: action.x, y: action.y});\n\t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n\t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n\t\t\t\t\t\t\t//console.log(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\t\tgame.animateShipMovement();\n\t}\n\n\tthis.animateShipMovement = function(){\n\t\tanim = window.requestAnimationFrame(game.animateShipMovement.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\t//frameCounter++;\n\t\t\t//console.log(frameCounter);\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tctx.clearRect(0, 0, res.x, res.y);\n\t\t\tgame.drawBallistics();\n\n\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\tctx.scale(cam.z, cam.z);\n\t\t\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployed){\n\t\t\t\t\tif (this.ships[i].flight && !animFlight || this.ships[i].ship && !animShip){\n\t\t\t\t\t\tgame.ships[i].draw();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var j = 0; j < game.ships[i].actions.length; j++){\n\t\t\t\t\t\tif (game.ships[i].actions[j].turn == game.turn && !game.ships[i].actions[j].animated){\n\t\t\t\t\t\t\tvar action = game.ships[i].actions[j];\n\t\t\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\t\t\t//\tconsole.log(game.ships[i].actions[j].v);\n\t\t\t\t\t\t\t\tgame.ships[i].actions[j].v.t[0] += 1;\n\t\t\t\t\t\t\t\tgame.ships[i].x += action.v.x * 1 / game.ships[i].actions[j].v.t[1];\n\t\t\t\t\t\t\t\tgame.ships[i].y += action.v.y * 1 / game.ships[i].actions[j].v.t[1];\n\t\t\t\t\t\t\t\tif (game.ships[i].actions[j].v.t[0] >= game.ships[i].actions[j].v.t[1]){\n\t\t\t\t\t\t\t\t//\tconsole.log(\"anim true\");\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].animated = true;\n\t\t\t\t\t\t\t\t\tgame.ships[i].x = game.ships[i].actions[j].x;\n\t\t\t\t\t\t\t\t\tgame.ships[i].y = game.ships[i].actions[j].y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\t\t\tvar step = 1;\n\t\t\t\t\t\t\t\t//\tconsole.log(\"turn\");\n\t\t\t\t\t\t\t\t\tif (action.a > 0){\n\t\t\t\t\t\t\t\t\t\tgame.ships[i].facing = addToDirection(game.ships[i].facing, step);\n\t\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].angle -= step;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tgame.ships[i].facing = addToDirection(game.ships[i].facing, -step);\n\t\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].angle += step;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (game.ships[i].actions[j].angle == 0){\n\t\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].animated = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/*\tif (action.a > 0){\n\t\t\t\t\t\t\t\t\tgame.ships[i].add(action.a);\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].a = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (action.a < 0) {\n\t\t\t\t\t\t\t\t\tgame.ships[i].add(action.a);\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].a = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (game.ships[i].actions[j].a == 0){\n\t\t\t\t\t\t\t\t//\tconsole.log(\"turn done\")\n\t\t\t\t\t\t\t\t\tgame.ships[i].actions[j].animated = true;\n\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*else if (action.type == \"deploy\"){\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (action.type == \"speedChange\"){\n\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgame.ships[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\t\n\t\t\tvar done = true;\n\t\t\t\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (! done){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < game.ships[i].actions.length; j++){\n\t\t\t\t\tif (game.ships[i].actions[j].turn == game.turn){\n\t\t\t\t\t\tif (! game.ships[i].actions[j].animated){\n\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (done){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tgame.draw();\n\t\t\t\tgame.movementResolved();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.resolveFire = function(){\n\t\tthis.getResolvingFireOrders();\n\t\tthis.getShotDetails();\n\t\tthis.getFireAnimationDetails();\n\t\tthis.getBallDetails();\n\t\tthis.getShipExplosionDetails();\n\n\t\t$(\"#combatlogWrapper\").show();\n\t\tsetFPS(45);\n\t\twindow.then = Date.now();\n\t\twindow.startTime = then;\n\t\t\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tctx.clearRect(0, 0, res.x, res.y);\n\n\t\tthis.animateFire = true;\n\t\tthis.drawShips();\n\t\t//this.animateBallistics()\n\t\tthis.animateFireOrders();\n\n\t\t//this.animateFire = true; this.fireResolved();\n\t}\n\n\tthis.getResolvingFireOrders= function(){\n\t\tthis.fireOrders = [];\n\t\tfor (var i = 0; i < this.ships.length; i++){\n\t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n\t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n\t\t\t\t\tif (this.ships[i].structures[j].systems[k].weapon){\n\t\t\t\t\t\tif (!(this.ships[i].structures[j].systems[k] instanceof Launcher)){\n\t\t\t\t\t\t\tfor (var l = 0; l < this.ships[i].structures[j].systems[k].fireOrders.length; l++){\n\t\t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].fireOrders[l].turn == this.turn){\n\t\t\t\t\t\t\t\t\tthis.fireOrders.push(this.ships[i].structures[j].systems[k].fireOrders[l]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getShotDetails = function(){\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tthis.fireOrders[i].target = game.getUnitById(this.fireOrders[i].targetid);\n\t\t\tthis.fireOrders[i].shooter = game.getUnitById(this.fireOrders[i].shooterid);\n\t\t\tthis.fireOrders[i].weapon = this.fireOrders[i].shooter.getSystemById(this.fireOrders[i].weaponid).getActiveWeapon();\n\t\t\tthis.fireOrders[i].hits = [this.fireOrders[i].hits];\n\t\t\tthis.fireOrders[i].damages = this.fireOrders[i].target.getDamageEntriesByFireId(this.fireOrders[i].id);\n\t\t}\n\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tif (this.fireOrders[i].guns){\n\t\t\t\tthis.fireOrders[i].min = this.fireOrders[i].req;\n\t\t\t\tthis.fireOrders[i].max = this.fireOrders[i].req;\n\t\t\t\tfor (var j = i+1; j < this.fireOrders.length; j++){\n\t\t\t\t\tif (this.fireOrders[j].guns){\n\t\t\t\t\t\tif (this.fireOrders[i].shooterid == this.fireOrders[j].shooterid){\n\t\t\t\t\t\t\tif (this.fireOrders[i].targetid == this.fireOrders[j].targetid){\n\t\t\t\t\t\t\t\tif (this.fireOrders[i].weapon.name == this.fireOrders[j].weapon.name){\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].guns += this.fireOrders[j].guns;\n\t\t\t\t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[j].damages.length; k++){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].damages.push(this.fireOrders[j].damages[k])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].hits.push(this.fireOrders[j].hits[0]);\n\t\t\t\t\t\t\t\t\tthis.fireOrders[j].guns = 0;\n\n\t\t\t\t\t\t\t\t\tif (this.fireOrders[j].req > this.fireOrders[i].max){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].max = this.fireOrders[j].req;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (this.fireOrders[j].req != -1 && this.fireOrders[j].req < this.fireOrders[i].min){\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].min = this.fireOrders[j].req;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//console.log(this.fireOrders);\n\t\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n\t\t\t\tthis.fireOrders[i].type = \"Regular Fire\";\n\t\t\tif (! this.fireOrders[i].guns){\n\t\t\t\tthis.fireOrders.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar a = this.fireOrders[i].shooter.getBaseOffsetPos();\n\t\t\t\tvar b = this.fireOrders[i].target.getBaseOffsetPos();\n\t\t\t\tthis.fireOrders[i].dist = getDistance(\n\t\t\t\t\t{\n\t\t\t\t\t\tx: a.x,\n\t\t\t\t\t\ty: a.y\n\t\t\t\t\t},\n\t\t\t\t\t{\tx: b.x,\n\t\t\t\t\t\ty: b.y\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.fireOrders[i].focus = {x: (a.x + b.x) / 2, y: (a.y + b.y) / 2}\n\t\t\t}\n\n\t\t\tif (this.fireOrders[i].target instanceof Salvo){\n\t\t\t\tthis.fireOrders[i].type = \"Intercept\";\n\t\t\t\twindow.animate.intercepts.push(this.fireOrders[i]);\n\t\t\t\tthis.fireOrders.splice(i, 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getFireAnimationDetails = function(){\n\t\tfor (var i = 0; i < this.fireOrders.length; i++){\n\t\t\tthis.fireOrders[i].anim = this.fireOrders[i].weapon.getAnimation(this.fireOrders[i]);\n\t\t}\n\n\t\tthis.fireOrders.sort(function(a, b){\n\t\t\treturn (\n\t\t\t\ta.shooter.flight - b.shooter.flight ||\n\t\t\t\ta.targetid - b.targetid ||\n\t\t\t\ta.weapon.priority - b.weapon.priority ||\n\t\t\t\ta.shooterid - b.shooterid\n\t\t\t)\n\t\t});\n\t\t//console.log(this.fireOrders)\n    }\n\n\tthis.getShipExplosionDetails = function(){\n\t\twindow.animations = [];\n\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].deployed){\n\t\t\t\tvar anim = {\n\t\t\t\t\t\tanims: [],\n\t\t\t\t\t\tbase: {x: game.ships[i].x, y: game.ships[i].y},\n\t\t\t\t\t\tdone: false\n\t\t\t\t}\n\n\t\t\t\tif (game.ships[i].flight){\n\t\t\t\t\tfor (var j = 0; j < game.ships[i].structures.length; j++){\n\t\t\t\t\t\tif (game.ships[i].structures[j].isDestroyedThisTurn()){\n\t\t\t\t\t\t\tanim.anims.push({\n\t\t\t\t\t\t\t\ta: game.ships[i].facing+90,\n\t\t\t\t\t\t\t\tid: game.ships[i].id,\n\t\t\t\t\t\t\t\tt: [0-30*anim.anims.length, 70],\n\t\t\t\t\t\t\t\ts: game.ships[i].structures[j].mass / 3,\n\t\t\t\t\t\t\t\tx: game.ships[i].layout[j].x,\n\t\t\t\t\t\t\t\ty: game.ships[i].layout[j].y\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (game.ships[i].ship && game.ships[i].isDestroyedThisTurn()){\n\t\t\t\t\tanim.anims.push({\n\t\t\t\t\t\ta: game.ships[i].facing,\n\t\t\t\t\t\tid: game.ships[i].id,\n\t\t\t\t\t\tt: [0, 100],\n\t\t\t\t\t\ts: game.ships[i].structures[j].mass / 400,\n\t\t\t\t\t\tx: range(-20, 20),\n\t\t\t\t\t\ty: range(-20, 20)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif (anim.anims.length){\n\t\t\t\tanimations.push(anim);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.animateFireOrders = function(){\n\t\tanim = window.requestAnimationFrame(game.animateFireOrders.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tfor (var i = 0; i  < game.fireOrders.length; i++){ \n\t\t\t\tif (! game.fireOrders[i].animated){\n\t\t\t\t\t//cam.setFocus(game.fireOrders[i].focus.x, game.fireOrders[i].focus.y);\n\t\t\t\t\tfor (var j = 0; j < game.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\tfor (var k = 0; k < game.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].done){continue;}\n\t\t\t\t\t\t\tif (game.fireOrders[i].weapon.animation == \"projectile\"){\n\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n < game.fireOrders[i].anim[j][k].m){ // still to animate\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n > 0){ // valid, now animate\n\t\t\t\t\t\t\t\t\t\tdrawProjectile(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (game.fireOrders[i].anim[j][k].h){ // shot animated, does it explode ?\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\tdrawExplosion(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k].tx, game.fireOrders[i].anim[j][k].ty, game.fireOrders[i].anim[j][k].n, game.fireOrders[i].anim[j][k].m, 30); // EXPLO\n\t\t\t\t\t\t\t\t\t//drawExplosion(game.fireOrders[i].weapon, game.fireOrders[i].shooter, game.fireOrders[i].anim[j][k]);\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n >= game.fireOrders[i].anim[j][k].m+30){\n\t\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (game.fireOrders[i].weapon.animation == \"beam\"){\n\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n < game.fireOrders[i].anim[j][k].m){ // still to animate\n\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].n += 1;\n\t\t\t\t\t\t\t\t\tif (game.fireOrders[i].anim[j][k].n > 0){ // t valid, now animate\n\t\t\t\t\t\t\t\t\t\tdrawBeam(game.fireOrders[i].weapon, game.fireOrders[i].anim[j][k]);\n\n\t\t\t\t\t\t\t\t \t\tif (game.fireOrders[i].anim[j][k].n >= game.fireOrders[i].anim[j][k].m){\n\t\t\t\t\t\t\t\t\t\t\tgame.fireOrders[i].anim[j][k].done = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar allAnimated = true;\n\t\t\t\t\tfor (var j = 0; j < game.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\tfor (var k = 0; k < game.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (! game.fireOrders[i].anim[j][k].done){\n\t\t\t\t\t\t\t\tallAnimated = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!allAnimated){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (allAnimated){\n\t\t\t\t\t\tgame.fireOrders[i].animated = allAnimated;\n\t\t\t\t\t\tgame.createCombatLogEntry(game.fireOrders[i]);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar done = true\n\t\t\t\n\t\t\tfor (var i = 0; i  < game.fireOrders.length; i++){\n\t\t\t\tif (! game.fireOrders[i].animated){\n\t\t\t\t\tdone = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (done){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\tgame.animateBallistics();\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\t\tthis.fireOrders.push(\n\t\t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: targetid, weaponid: this.id, \n\t\t\tshots: this.getShots(), req: -1, notes: \"\", hits: -1, resolved: 0}\n\t\t);\n*/\n\n\tthis.getBallDetails = function(){\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].actions[game.ballistics[i].actions.length-1].type == \"impact\"){\n\t\t\t\t//var fireOrder = new FireOrder(0, this.turn, game.ballistics[i].id, game.ballistics[i].targetid, 0, 0, 0, \"\", [], 1);\n\t\t\t\tvar fireOrder = new FireOrder({id: 0, turn: game.turn, shooterid: game.ballistics[i].id, targetid: game.ballistics[i].targetid,\n\t\t\t\t\tweaponid: 0, shots: 0, req: 0, notes: \"\", hits: [], resolved: 1})\n\t\t\t\t\tfireOrder.type = \"Ballistic\";\n\t\t\t\t\tfireOrder.weapon = game.ballistics[i].structures[0];\n\t\t\t\t\tfireOrder.shooter = game.ballistics[i];\n\t\t\t\t\tfireOrder.target = game.getUnitById(game.ballistics[i].targetid);\n\t\t\t\t\tfireOrder.req = 0;\n\t\t\t\t\tfireOrder.guns = 0;\n\t\t\t\t//(id, turn, shooterid, targetid, weaponid, shots, req, notes, hits, resolved){\n\t\t\t\tfor (var j = 0; j < game.ballistics[i].structures.length; j++){\n\t\t\t\t\tfor (var k = 0; k < game.ballistics[i].structures[j].fireOrders.length; k++){\n\t\t\t\t\t\tfireOrder.guns++;\n\t\t\t\t\t\tvar damages = game.getUnitById(game.ballistics[i].targetid).getDamageEntriesByFireId(game.ballistics[i].structures[j].fireOrders[k].id);\n\t\t\t\t\t\tfor (var l = 0; l < damages.length; l++){fireOrder.damages.push(damages[l]);}\n\t\t\t\t\t\tif (fireOrder.req == 0){fireOrder.min = game.ballistics[i].structures[j].fireOrders[k].req; fireOrder.max = game.ballistics[i].structures[j].fireOrders[k].req; fireOrder.req = game.ballistics[i].structures[j].fireOrders[k].req;}\n\t\t\t\t\t\tfireOrder.hits.push(game.ballistics[i].structures[j].fireOrders[k].hits);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tgame.ballistics[i].fireOrder = fireOrder;\n\t\t\t}\n\t\t\tgame.ballistics[i].found = false;\n\t\t\tif (!game.getUnitById(game.ballistics[i].targetid).salvo){\n\t\t\t\tgame.ballistics[i].found = true;\n\t\t\t\tanimate.ballAnims.push({\"done\": false,\"anims\": [game.ballistics[i]]});\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tfor (var j = 0; j < animate.intercepts.length; j++){\n\t\t\t\tif (!animate.intercepts[j].found && animate.ballAnims[i].anims[0].id == animate.intercepts[j].targetid){\n\t\t\t\t\t//console.log(animate.intercepts[j]);\n\t\t\t\t\tanimate.intercepts[j].found = true;\n\t\t\t\t\tanimate.ballAnims[i].anims.push(animate.intercepts[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = 0; j < game.ballistics.length; j++){\n\t\t\t\tif (game.ballistics[j].found){continue;}\n\t\t\t\telse if (animate.ballAnims[i].anims[0].id == game.ballistics[j].targetid){\n\t\t\t\t\tgame.ballistics[j].found = true;\n\t\t\t\t\tanimate.ballAnims[i].anims.push(game.ballistics[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tfor (var j = 0; j < animate.ballAnims[i].anims.length; j++){\n\t\t\t\tif (animate.ballAnims[i].anims[j] instanceof Salvo){\n\t\t\t\t\tvar hit = false;\n\t\t\t\t\tif (animate.ballAnims[i].anims[j].fireOrder != undefined && animate.ballAnims[i].anims[j].fireOrder.damages.length){\n\t\t\t\t\t\thit = true;\n\t\t\t\t\t}\n\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(\n\t\t\t\t\t\tnew BallVector(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].actions[animate.ballAnims[i].anims[j].actions.length-2],\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].actions[animate.ballAnims[i].anims[j].actions.length-1],\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].getTotalImpulse() / animate.ballAnims[i].anims[0].getTotalImpulse(),\n\t\t\t\t\t\t\thit\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if (animate.ballAnims[i].anims[j] instanceof FireOrder){\n\t\t\t\t\tvar targetMove = new Vector(\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.actions[animate.ballAnims[i].anims[j].target.actions.length-2],\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.actions[animate.ballAnims[i].anims[j].target.actions.length-1]\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!(animate.ballAnims[i].anims[j].weapon instanceof Laser)){\n\t\t\t\t\t\tvar interceptPos = getProjIntercept(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.actions[animate.ballAnims[i].anims[j].target.actions.length-2],\n\t\t\t\t\t\t\ttargetMove,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].weapon.projSpeed/2\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].guns; k++){\n\t\t\t\t\t\t\tfor (var l = 0; l < animate.ballAnims[i].anims[j].shots; l++){\n\t\t\t\t\t\t\t\tvar hit = false;\n\t\t\t\t\t\t\t\tif (l < animate.ballAnims[i].anims[j].hits[k]){\n\t\t\t\t\t\t\t\t\thit = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar interceptVector = new BallVector(\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\t\t\trandomize(interceptPos, 6, 6),\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].weapon.projSpeed/2,\n\t\t\t\t\t\t\t\t\thit\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tinterceptVector.n -= l*15;\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(interceptVector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar interceptPos = getBeamIntercept(\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].target.actions[animate.ballAnims[i].anims[j].target.actions.length-2],\n\t\t\t\t\t\t\ttargetMove\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].guns; k++){\n\t\t\t\t\t\t\tfor (var l = 0; l < animate.ballAnims[i].anims[j].shots; l++){\n\t\t\t\t\t\t\t\tvar hit = false;\n\t\t\t\t\t\t\t\tif (l < animate.ballAnims[i].anims[j].hits[k]){\n\t\t\t\t\t\t\t\t\thit = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar interceptVector = new BallVector(\n\t\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].shooter,\n\t\t\t\t\t\t\t\t\trandomize(interceptPos, 8, 8),\n\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\thit\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tinterceptVector.ox = animate.ballAnims[i].anims[j].shooter.x + range(-15, 15);\n\t\t\t\t\t\t\t\tinterceptVector.oy = animate.ballAnims[i].anims[j].shooter.y + range(-15, 15);\n\t\t\t\t\t\t\t\tinterceptVector.n -= 5*k;\n\t\t\t\t\t\t\t\tinterceptVector.m *= 0.5;\n\t\t\t\t\t\t\t\tinterceptVector.nx = 0;\n\t\t\t\t\t\t\t\tinterceptVector.ny = 0;\n\t\t\t\t\t\t\t\tinterceptVector.tax = interceptPos.x\n\t\t\t\t\t\t\t\tinterceptVector.tay = interceptPos.y\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim.push(interceptVector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.animateBallistics = function(){\n\t\tanim = window.requestAnimationFrame(game.animateBallistics.bind(this));\n\n\t\tctx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tgame.drawShips();\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\tanimate.ballAnims[i].done = true;\n\t\t\t\tfor (var j = 0; j < animate.ballAnims[i].anims.length; j++){\n\t\t\t\t\tif (animate.ballAnims[i].anims[j].animated){\n\t\t\t\t\t\tanimate.ballAnims[i].anims[j].drawSelf();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar done = true;\n\t\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[i].anims[j].anim.length; k++){\n\t\t\t\t\t\t\tif (animate.ballAnims[i].anims[j].anim[k].done){continue;}\n\t\t\t\t\t\t\telse if (animate.isDone(i, j, k)){\n\t\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].anim[k].done = true;\n\t\t\t\t\t\t\t\tanimate.doAnimate(i, j, k);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (animate.isReady(i, j, k)){\n\t\t\t\t\t\t\t\tanimate.doAnimate(i, j, k);\n\t\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tanimate.doAdvance(i, j, k);\n\t\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (done){\n\t\t\t\t\t\t\tanimate.doLog(i, j);\n\t\t\t\t\t\t\tanimate.ballAnims[i].anims[j].animated = true;\n\t\t\t\t\t\t} else animate.ballAnims[i].done = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (var j = 0; j <= i; j++){\n\t\t\t\t\tfor (var k = 0; k < animate.ballAnims[j].anims.length; k++){\n\t\t\t\t\t\tanimate.ballAnims[j].anims[k].drawSelf();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.setTransform(1,0,0,1,0,0);\n\n\t\tallDone = true;\n\t\tfor (var i = 0; i < animate.ballAnims.length; i++){\n\t\t\tif (!animate.ballAnims[i].done){\n\t\t\t\tallDone = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t//allDone = true;\n\t\tif (allDone){\n\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\tgame.animateFire = false;\n\t\t\tgame.animateShipExplosions();\n\t\t}\n\t}\n\n\tthis.animateShipExplosions = function(){\n\t\tanim = window.requestAnimationFrame(game.animateShipExplosions.bind(this));\n\t\twindow.now = Date.now();\t\t\n\t\twindow.elapsed = window.now - window.then;\n\t\tif (elapsed > window.fpsInterval){\n\t\t\twindow.then = window.now - (window.elapsed % window.fpsInterval);\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t\tvar allDone = true;\n\t\t\tfor (var i = 0; i < window.animations.length; i++){\n\t\t\t\tif (!window.animations[i].done){\n\n\t\t\t\t\tfxCtx.translate(window.animations[i].base.x, window.animations[i].base.y);\n\t\t\t\t\tfxCtx.rotate(window.animations[i].anims[0].a * (Math.PI/180));\n\n\t\t\t\t\tvar done = true;\n\n\t\t\t\t\tfor (var j = 0; j < window.animations[i].anims.length; j++){\n\t\t\t\t\t\tif (window.animations[i].anims[j].t[0] < window.animations[i].anims[j].t[1]){\n\t\t\t\t\t\t\twindow.animations[i].anims[j].t[0]++;\n\t\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (window.animations[i].anims[j].t[0] > 0){\n\t\t\t\t\t\t\tdrawFighterExplosion(\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].x,\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].y, \n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].s,\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].t[0],\n\t\t\t\t\t\t\t\twindow.animations[i].anims[j].t[1]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\n\t\t\t\t\tif (!done){\n\t\t\t\t\t\tallDone = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse window.animations[i].done = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (allDone){\n\t\t\t\twindow.cancelAnimationFrame(anim);\n\t\t\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\tgame.fireResolved();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.createCombatLogEntry = function(fire){\n\t\tif (fire == undefined){return;}\n\t\tvar shots = 0;\n\t\tvar hits = 0;\n\t\tvar struct = 0;\n\t\tvar armour = 0;\n\t\tvar rolls = [];\n\t\tvar log = document.getElementById(\"combatLog\");\n\t\t\n\t\tfor (var i = 0; i < fire.guns; i++){\n\t\t\tshots += fire.weapon.shots;\n\t\t\thits += fire.hits[i];\n\t\t}\n\t\tfor (var i = 0; i < fire.damages.length; i++){\n\t\t\tstruct += fire.damages[i].structDmg;\n\t\t\tarmour += fire.damages[i].armourDmg;\n\t\t\trolls.push(fire.damages[i].roll);\n\t\t}\n\n\t\trolls.sort(function(a, b){return a-b});\n\n\t\tif (fire.weapon.linked > 1){\n\t\t\tshots *= fire.weapon.linked;\n\t\t\thits *= fire.weapon.linked;\n\t\t}\n\t\tif (fire.weapon.output){\n\t\t\thits /= fire.weapon.output;\n\t\t}\n\t\tvar chance = \"\"\n\t\tif (fire.min != fire.max){\n\t\t\tchance = fire.min + \" - \" + fire.max;\n\t\t} else chance = fire.req;\n\n\t\tvar tr = document.createElement(\"tr\"); tr.style.border = \"1px solid white\";\n\n\t\t$(tr)\n\t\t\t.data(\"shooterid\", fire.shooter.id)\n\t\t\t.data(\"targetid\", fire.target.id)\n\t\t\t.hover(function(){\n\t\t\t\tvar data = $(this).data();\n\t\t\t\tgame.getUnitById(data.shooterid).doHighlight();\n\t\t\t\tgame.getUnitById(data.targetid).doHighlight();\n\t\t\t})\n\n\t\ttr.insertCell(-1).innerHTML = fire.type //+ \":\" + fire.id;\n\t\ttr.insertCell(-1).innerHTML = fire.shooter.name + \" #\" + fire.shooter.id;\n\t\ttr.insertCell(-1).innerHTML = fire.target.name + \" #\" + fire.target.id;\n\t\ttr.insertCell(-1).innerHTML = fire.weapon.display;\n\t\ttr.insertCell(-1).innerHTML = chance + \"%\";\n\t\ttr.insertCell(-1).innerHTML = hits + \" / \" + shots;\n\t\ttr.insertCell(-1).innerHTML = armour;\n\t\ttr.insertCell(-1).innerHTML = struct;\n\t\n\t\tlog.appendChild(tr);\n\n\t\tif (hits){\n\t\t\tthis.setDamageDetails(fire, log, tr);\n\t\t}\n\t}\n\n\tthis.setDamageDetails = function(fire, log, parent){\n\t\tvar details = document.createElement(\"tr\"); details.style.border = \"1px solid white\"; details.style.display = \"none\";\n\t\tvar td = details.insertCell(-1)\n\t\t\ttd.colSpan = 8;\n\n\t\tvar dmgs = {};\n\n\t\tfor (var i = 0; i < fire.damages.length; i++){\n\t\t\tvar name;\n\t\t\tif (fire.damages[i].systemid == -1){\n\t\t\t\tname = \"Main Structure\";\n\t\t\t}\n\t\t\telse name = fire.target.getSystemById(fire.damages[i].systemid).display;\n\n\t\t\tif (dmgs.hasOwnProperty(name)){\n\t\t\t\tdmgs[name]++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdmgs[name] = 1;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i in dmgs){\n\t\t\ttd.innerHTML += dmgs[i] + \"x \" + i + \";  \";\n\t\t}\n\t\n\t\tlog.appendChild(details);\n\n\t\t$(parent).click(function(){\n\t\t\tif ($(this).hasClass(\"red\")){\n\t\t\t\t$(this).removeClass(\"red\").next().hide();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$(this).addClass(\"red\").next().show();\n\t\t\t}\n\n\t\t})\n\t\treturn log;\n\t}\n}",
			"file": "game.js",
			"file_size": 50325,
			"file_write_time": 131382906276636030,
			"settings":
			{
				"buffer_size": 48549,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Flight(data){\n\tShip.call(this, data);\n\tthis.flight = true;\n\tthis.primary = false;\n\tthis.layout = [];\n\tthis.ep = 1000;\n\tthis.turns = 10;\n\tthis.maxTurns = 1;\n\tthis.dogfights = [];\n\n\tthis.create = function(){\n\t\tthis.setFighterState();\n\t\tthis.setMaxMass();\n\t\tthis.setEP();\n\t\tthis.setTurns();\n\t\tthis.setFacing();\n\t\tthis.setPosition();\n\t\tthis.setLayout();\n\t}\n\n\tthis.isDestroyed = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (!this.structures[i].destroyed && !this.structures[i].disabled){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tthis.setFighterState = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].crits.length; j++){\n\t\t\t\tif (this.structures[i].crits[j].type == \"disengaged\"){\n\t\t\t\t\tthis.structures[i].disabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.structures[i].destroyed){\n\t\t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n\t\t\t\t\tthis.structures[i].systems[k].destroyed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.structures[i].disabled){\n\t\t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n\t\t\t\t\tthis.structures[i].systems[k].disabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setLayout = function(){\n\t\tvar size = 15;\n\n\t\tvar toDo = Math.min(4, Math.ceil(this.structures.length/2));\n\t\tvar alive = (this.size - 32) / 5;\n\t\tvar done = 0;\n\n\t\tfor (var i = 0; i < toDo; i++){\n\t\t\tthis.layout.push({\n\t\t\t\tx: -size/2 - size*i/2,\n\t\t\t\ty: -toDo*size/2 +size*(i)\n \t\t\t});\n\t\t\tthis.layout.push({\n\t\t\t\tx: size/2 + size*i/2,\n\t\t\t\ty: -toDo*size/2 +size*(i)\n \t\t\t});\n \t\t\tdone += 2;\n\t\t}\n\n\t\tif (done < this.structures.length){\n\t\t\tfor (var i = 0; i < (this.structures.length-done)/2; i++){\n\t\t\t\tthis.layout.push({\n\t\t\t\t\tx: -size/2 - size/2*i,\n\t\t\t\t\ty: size/2 + size*i\n\t \t\t\t});\n\t\t\t\tthis.layout.push({\n\t\t\t\t\tx: size/2 + size/2*i,\n\t\t\t\t\ty: size/2 + size*i\n\t \t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setMaxMass = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (! this.structures[i].destroyed){\n\t\t\t\tif (this.structures[i].mass > this.mass){\n\t\t\t\t\tthis.mass = this.structures[i].mass; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getEP = function(){\n\t\tif (this.actions.length && this.actions[0].turn == game.turn){\n\t\t\treturn Math.floor(this.ep/2);\n\t\t}\n\t\treturn this.ep;\n\t}\n\n\tthis.setEP = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (! this.structures[i].destroyed){\n\t\t\t\tthis.ep = Math.min(this.ep, this.structures[i].ep);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setTurns = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (! this.structures[i].destroyed){\n\t\t\t\tthis.maxTurns = Math.min(this.turns, this.structures[i].turns);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawSelf = function(){\n\t\tctx.save();\n\t\tctx.translate(this.x, this.y)\n\t\tctx.rotate((this.facing+90) * (Math.PI/180));\n\n\t\tif (game.animateFire){\n\t\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\t\tvar draw = false;\n\t\t\t\tif (this.structures[i].destroyed || this.structures[i].disabled){\n\t\t\t\t\tif (this.structures[i].isDestroyedThisTurn()){\n\t\t\t\t\t\tthis.drawFighter(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse this.drawFighter(i);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\t\tif (!this.structures[i].destroyed && !this.structures[i].disabled){\n\t\t\t\t\tthis.drawFighter(i);\n\t\t\t\t}\n\t\t\t}\n\t/*\t\tvar index = 0;\n\t\t\tfor (var i = 0; i < this.layout.length; i++){\n\t\t\t\tif (!this.structures[i].destroyed && !this.structures[i].disabled){\n\t\t\t\t\tthis.drawFighter(index);\n\t\t\t\t\tindex++\n\t\t\t\t}\n\t\t\t}*/\n\t\t}\n\t\tctx.restore();\n\t}\n\n\tthis.drawFighter = function(i){\n\t\tvar size = 12;\n\t\tctx.drawImage(\n\t\t\twindow.shipImages[this.structures[i].name.toLowerCase()],\n\t\t\tthis.layout[i].x -size/2,\n\t\t\tthis.layout[i].y -size/2,\n\t\t\tsize, \n\t\t\tsize\n\t\t);\n\t}\n\n\tthis.canShortenTurn = function(){\n\t\treturn false;\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (this.getRemainingEP() >= this.getShortenTurnCost()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoShortenTurn = function(){\n\t\treturn false;\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (this.turns.length){\n\t\t\t\tif (this.turns[0].costmod > 1){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getImpulseChangeCost = function(){\n\t\treturn Math.ceil(Math.pow(this.mass, 1.15)/3*this.getImpulseMod());\n\t\treturn Math.ceil(this.mass/3*this.getImpulseMod());\n\t}\n\n\tthis.getTurnCost = function(){\n\t\treturn Math.ceil(Math.pow(this.mass, 1.15)/100*this.getImpulseMod() * this.getTurnAngle());\n\t\treturn Math.ceil(this.mass/50*this.getImpulseMod() * this.getTurnAngle());\n\t}\n\t\n\tthis.getBaseTurnDelay = function(){\n\t\treturn this.mass/2;\n\t}\n\t\n\tthis.getBaseImpulse = function(){\n\t\tif (this.actions.length && this.actions[0].turn == game.turn){\n\t\t\treturn Math.floor(210/2);\n\t\t}\n\t\treturn 210;\n\t}\n\n\tthis.getTurnAngle = function(){\n\t\treturn 20;\n\t}\n\n\tthis.hasWeaponsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.hasHangarSelected = function(){\n\t\treturn false;\n\t}\n\n\tthis.launchedThisTurn = function(){\n\t\tif (!(this.actions.length) || this.actions[0].turn == game.turn){\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\n\tthis.expandDiv = function(div){\n\t\tvar iconContainer = document.createElement(\"div\");\n\t\t\ticonContainer.className = \"iconContainer\";\n\t\t\t$(iconContainer).css(\"width\", 120)//.append($(\"<div class='dogFightHeader'>Active Dogfights</div>\"));\n\t\t\tif (this.launchedThisTurn()){\n\t\t\t\t$(iconContainer).append($(\"<div class='dogFightEntry'>\").html(\"50 % EP / Impulse due to launch.\"));\n\t\t\t}\n\t\t\tfor (var j = 0; j < this.dogfights.length; j++){\n\t\t\t\t$(iconContainer).append($(\"<div class='dogFightEntry'>\").html(\"Dogfight VS #\" + this.dogfights[j]));\n\t\t\t}\n\t\tdiv.appendChild(iconContainer);\n\n\t\tvar structContainer = document.createElement(\"div\");\n\t\t\tstructContainer.className = \"structContainer\";\n\n\t\tdiv.appendChild(structContainer);\n\t\t\t\n\t\t////document.getElementById(\"game\").appendChild(div);\n\t\tdocument.body.appendChild(div);\n\n\n\n\t\tvar maxWidth = 0;\n\t\tif (this.structures.length <= 6){\n\t\t\tmaxWidth = 330;\n\t\t}\n\t\telse if (this.structures.length <= 12){\n\t\t\tmaxWidth = 400;\n\t\t}\n\n\t\t$(div).css(\"width\", maxWidth);\n\n\n\t\t// OUTER STRUCTS\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tvar active = true;\n\t\t\tif (this.structures[i].destroyed || this.structures[i].disabled){\n\t\t\t\tactive = false;\n\t\t\t}\n\n\t\t\tvar img = new Image()\n\t\t\t\timg.src = window.shipImages[this.structures[i].name.toLowerCase() + \"l\"].src;\n\t\t\t\timg.className = \"size40\";\n\n\t\t\t\t$(img)\n\t\t\t\t\t.data(\"shipId\", this.id)\n\t\t\t\t\t.data(\"fighterId\", this.structures[i].id)\n\t\t\t\t\t.addClass(\"size40\")\n\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tconsole.log(game.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"fighterId\")));\n\t\t\t\t\t})\n\n\n\t\t\tvar fighterDiv = document.createElement(\"div\");\n\t\t\t\tfighterDiv.className = \"fighterDiv\";\n\t\t\t\tfighterDiv.appendChild(img);\n\n\t\t\tif (!active){\n\t\t\t\tfighterDiv.appendChild(new Image()).src = \"varIcons/destroyed.png\";\n\t\t\t\tfighterDiv.childNodes[1].className = \"overlay size30\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$(img).hover(function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"fighterId\")).hover(e);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstructContainer.appendChild(fighterDiv);\n\n\t\t\tvar w = $(fighterDiv).width();\n\t\t\tvar h = $(fighterDiv).height();\n\n\t\t\tvar x = $(structContainer).width()/2 + this.layout[i].x*5- w/2;\n\t\t\tvar y = $(structContainer).height()/2 + this.layout[i].y*5 - 20;\n\n\t\t\t$(fighterDiv)\n\t\t\t\t.css(\"left\", x)\n\t\t\t\t.css(\"top\", y)\n\n\t\t\tvar wrap = document.createElement(\"div\");\n\t\t\t\twrap.className = \"iconIntegrity\"; wrap.style.height = 12;\n\n\t\t\tvar rem = this.structures[i].getRemainingIntegrity();\n\n\t\t\tvar bgDiv = document.createElement(\"div\");\n\t\t\t\tbgDiv.className = \"integrityAmount\"; bgDiv.style.textAlign = \"center\"; bgDiv.style.fontSize = 12; bgDiv.style.top = 0;\n\t\t\t\tbgDiv.innerHTML = rem + \" / \" + this.structures[i].integrity;\n\t\t\t\twrap.appendChild(bgDiv);\n\n\t\t\tvar lowerDiv = document.createElement(\"div\");\n\t\t\t\tlowerDiv.className = \"integrityNow\"; lowerDiv.style.top = 0; lowerDiv.style.height = \"100%\";\n\t\t\t\tlowerDiv.style.width = rem/this.structures[i].integrity * 100 + \"%\";\n\t\t\t\twrap.appendChild(lowerDiv);\n\t\t\t\t\n\t\t\tvar upperDiv = document.createElement(\"div\");\n\t\t\t\tupperDiv.className = \"integrityFull\"; upperDiv.style.top = 0;\n\t\t\t\twrap.appendChild(upperDiv);\n\n\t\t\tfighterDiv.appendChild(wrap);\n\n\t\t\tvar s = 20;\n\t\t\t// FIGHTER WEAPONS\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tvar td = this.structures[i].systems[j].getTableData(true);\n\t\t\t\t\t$(td.childNodes[0]).attr(\"width\", s).attr(\"height\", s);\n\t\t\t\t\tfighterDiv.appendChild(td);\n\t\t\t\t\t$(td)\n\t\t\t\t\t\t.addClass(\"fighter\")\n\t\t\t\t\t\t.css(\"top\", -h -s - 5)\n\t\t\t\t\t\t.css(\"left\", w/2 - s/2)\n\t\t\t\t\t\t.data(\"shipId\", this.id)\n\t\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).select(e)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));\n\t\t\t\t\t\t});\n\n\t\t\t\tif (active){\t\t\t\t\t\n\t\t\t\t\t$(td).hover(function(e){\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t$(\"#systemDetailsDiv\").remove();\n\t\t\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).hover(e)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tvar height = 0;\n\t\t$(structContainer).find(\".fighterDiv\").each(function(){\n\t\t\tvar y = $(this).position().top + $(this).height();\n\t\t\tif (y > height){\n\t\t\t\theight = y;\n\t\t\t}\n\t\t})\n\n\t\t$(structContainer).css(\"height\", height + 20);\n\n\t\t/*var w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\t\tleft = res.x - w - 50;\n\t\t}\n\n\t\t$(div).css(\"top\", 100).css(\"left\", left);\n\t\t*/return div;\n\t}\n\n\tthis.selectAll = function(e, id){\n\t\tvar display = this.getSystemById(id).display;\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].display == display){\n\t\t\t\t\tif (! this.structures[i].systems[j].destroyed){\n\t\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tthis.getShortInfo = function(){\n\t\tvar ele = $(\"#shortInfo\");\n\t\tif (this.userid == game.userid){\n\t\t\t$(ele).attr(\"class\", \"friendly\");\n\t\t} else $(ele).attr(\"class\", \"hostile\");\n\n\t\tvar baseHit = this.getBaseHitChance();\n\t\tvar impulse = this.getTotalImpulse();\n\t\t\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Flight #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Impulse: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Base Hit: \" +  this.getBaseHitChance() + \"% \";\n\t\tvar baseHit = this.getBaseHitChance();\n\t\tvar impulse = this.getTotalImpulse();\n\t\treturn table;\n\t}\n\n\tthis.getBaseHitChance = function(){\n\t\tvar min = 0; var max = 0;\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (!this.structures[i].destroyed){\n\t\t\t\tmin = Math.max(min, this.structures[i].mass);\n\t\t\t\tmax = Math.max(max, this.structures[i].mass);\n\t\t\t}\n\t\t}\n\t\tif (min == max){return Math.ceil(min/1.5)}\n\t\telse return Math.ceil(min/1.5) + \" - \" + Math.ceil(max/1.5);\n\t}\n\n\tthis.getHitSectionFromAngle = function(a){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getHitChanceFromAngle = function(angle){\n\t\treturn Math.ceil(this.getBaseHitChance() / 100 * this.getProfileMod());\n\t}\n\n\tthis.getWeaponPosition = function(fire){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\t\treturn {x: this.layout[i].x, y: this.layout[i].y};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nFlight.prototype = Object.create(Ship.prototype);\n\nfunction Fighter(data){\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.ep = data.ep;\n\tthis.turns = data.turns;\n\tthis.mass = data.mass;\n\tthis.integrity = data.integrity;\n\tthis.value = data.value;\n\tthis.negation = data.negation;\n\tthis.destroyed = data.destroyed;\n\tthis.crits = [];\n\tthis.damages = [];\n\tthis.systems = [];\n\tthis.fighter = true;\n\tthis.highlight = false;\n\tthis.disabled = false;\n\n\tfor (var i = 0; i < data.crits.length; i++){\n\t\tthis.crits.push(new Crit(\n\t\t\t\tdata.crits[i].id,\n\t\t\t\tdata.crits[i].shipid,\n\t\t\t\tdata.crits[i].systemid,\n\t\t\t\tdata.crits[i].turn,\n\t\t\t\tdata.crits[i].type,\n\t\t\t\tdata.crits[i].duration\n\t\t\t)\n\t\t)\n\t}\n\t\n\tthis.isDestroyedThisTurn = function(){\n\t\tif (this.disabled){\n\t\t\tfor (var j = this.crits.length-1; j >= 0; j--){\n\t\t\t\tif (this.crits[j].type == \"disengaged\" && this.crits[j].turn == game.turn){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.destroyed){\n\t\t\tfor (var j = this.damages.length-1; j >= 0; j--){\n\t\t\t\tif (this.damages[j].destroyed == 1 && this.damages[j].turn == game.turn){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getRemainingIntegrity = function(){\n\t\tvar integrity = this.integrity;\n\t\tfor (var i = 0; i < this.damages.length; i++){\n\t\t\tintegrity -= this.damages[i].structDmg;\n\t\t}\n\t\treturn integrity;\n\t}\n\n\tthis.hover = function(e){\n\t\tif (!this.highlight){\n\t\t\tthis.highlight = true;\n\t\t\tvar ele = this.getDetailsDiv();\n\t\t\t$(\"#game\").append(ele);\n\t\t\t$(ele).css(\"left\", e.clientX).css(\"top\", e.clientY + 20)\n\t\t}\n\t\telse {\n\t\t\tthis.highlight = false;\n\t\t\t$(\"#systemDetailsDiv\").remove();\n\t\t}\n\t}\n\n\tthis.getDetailsDiv = function(){\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.id = \"systemDetailsDiv\";\n\t\t\tdiv.className = this.id;\n\n\t\t\tvar table = $(\"<table>\")\n\t\t\t\t.append($(\"<tr>\").append($(\"<th>\").attr(\"colspan\", 2).html(this.name)))\n\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").html(\"Mass / Turn Delay\")).append($(\"<td>\").html(this.mass)))\n\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").html(\"Engine Power\")).append($(\"<td>\").html(this.ep)))\n\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").html(\"Frontal Armour\")).append($(\"<td>\").html(this.negation[0])))\n\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").html(\"Side Armour\")).append($(\"<td>\").html(this.negation[1])))\n\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").html(\"Rear Armour\")).append($(\"<td>\").html(this.negation[2])))\n\n\t\tif (this.crits.length){\n\t\t\t\t$(table)\n\t\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").attr(\"colspan\", 2).css(\"fontSize\", 16).css(\"borderBottom\", \"1px solid white\").css(\"borderTop\", \"1px solid white\").html(\"Modifiers\")))\n\n\t\t\tfor (var i = 0; i < this.crits.length; i++){\n\t\t\t\tval = this.crits[i].html;\n\t\t\t\t$(table)\n\t\t\t\t\t.append($(\"<tr>\").append($(\"<td>\").attr(\"colSpan\", 2).addClass(\"negative\").html(val)))\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tdiv.appendChild(table[0]);\n\t\treturn div;\n\t}\n}",
			"file": "flights.js",
			"file_size": 15364,
			"file_write_time": 131380467746388572,
			"settings":
			{
				"buffer_size": 14817,
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 19109,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3806,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 91,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 6157,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2943,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 13240,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17304,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2260,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3667,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2723,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1889,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1746,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1627,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 1664,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 8524,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 4239,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\nclass Launcher extends Weapon {\n\tpublic $type = \"Launcher\";\n\tpublic $animation = \"projectile\";\n\tpublic $priority = 8;\n\tpublic $loads = array();\n\tpublic $reload = 2;\n\tpublic $launchRate;\n\tpublic $ammo;\n\n\tfunction __construct($id, $parentId, $start, $end, $output, $launchRate, $loads, $destroyed = false){\n\t\t$this->mass = $launchRate * 10;\n\t\t$this->launchRate = $launchRate;\n\t\t$this->powerReq = $launchRate;\n\n\t\tfor ($i = 0; $i < sizeof($loads); $i++){\n\t\t\t$this->loads[] = new $loads[$i]($this->id, -1);\n\t\t}\n\n        parent::__construct($id, $parentId, $start, $end, $output, $destroyed);\n\t}\n\n\tpublic function getAmmo(){\n\t\treturn $this->ammo->name;\n\t}\n\n\tpublic function getBaseDamage($fire){\n\t\treturn 0;\n\t}\n\n\tpublic function adjustLoad($dbLoad){\n\t\t$this->loads = array();\n\t\t$this->ammo = new $dbLoad[0][\"name\"]($this->id, 0);\n\t\t$this->ammo->output = $dbLoad[0][\"amount\"];\n\t}\n\n\tpublic function setArmourMod(){\n\t\t$w = $this->getArcWidth();\n\n\t\tif ($w <= 120){$this->armourMod = 0.8;}\n\t\telse if ($w <= 180){$this->armourMod =  0.6;}\n\t\telse $this->armourMod =  0.3;\n\t}\n\n\tpublic function getCritEffects(){\n\t\treturn array(\"disabled\", \"ammoLoss\", \"ammolossDamage\");\n\t}\n\n\tpublic function getCritTreshs(){\n\t\treturn array(25, 50, 80);\n\t}\n\tpublic function getCritDuration(){\n\t\treturn array(1, 0, 0);\n\t}\n}\n\nclass MissileLauncher extends Launcher {\n\tpublic $name = \"MissileLauncher\";\n\tpublic $display = \"Missile Launcher\";\n\tpublic $animColor = \"black\";\n\n\tfunction __construct($id, $parentId, $start, $end, $output = 0, $launchRate, $loads, $destroyed = false){\n        parent::__construct($id, $parentId, $start, $end, $output, $launchRate, $loads, $destroyed);\n\t}\n}\n\nclass Hasta extends Ammo {\n\tpublic $name = \"Hasta\";\n\tpublic $display = \"Light Antifighter Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 23;3\n\tpublic $maxDmg = 29;\n\tpublic $impulse = 110;\n\tpublic $integrity = 12;\n\tpublic $armour = 3;\n\tpublic $mass = 3;\n\tpublic $fc = array(0 => 90, 1 => 90);\n\tpublic $cost = 6;\n\tpublic $exploSize = 5;\n\tpublic $traverse = -3;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}\n\nclass Javelin extends Ammo {\n\tpublic $name = \"Javelin\";\n\tpublic $display = \"Multi-purpose Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 36;\n\tpublic $maxDmg = 48;\n\tpublic $impulse = 90;\n\tpublic $integrity = 16;\n\tpublic $armour = 5;\n\tpublic $mass = 4;\n\tpublic $fc = array(0 => 85, 1 => 85);\n\tpublic $cost = 10;\n\tpublic $exploSize = 6;\n\tpublic $traverse = -2;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}\n\nclass Patriot extends Ammo {\n\tpublic $name = \"Patriot\";\n\tpublic $display = \"Light Interceptor Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 13;\n\tpublic $maxDmg = 18;\n\tpublic $impulse = 140;\n\tpublic $integrity = 10;\n\tpublic $armour = 3;\n\tpublic $mass = 2;\n\tpublic $fc = array(0 => 85, 1 => 95);\n\tpublic $cost = 8;\n\tpublic $exploSize = 5;\n\tpublic $traverse = -4;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}\n\nclass Naga extends Ammo {\n\tpublic $name = \"Naga\";\n\tpublic $display = \"Multi-purpose Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 36;\n\tpublic $maxDmg = 48;\n\tpublic $impulse = 90;\n\tpublic $integrity = 16;\n\tpublic $armour = 5;\n\tpublic $mass = 4;\n\tpublic $fc = array(0 => 85, 1 => 85);\n\tpublic $cost = 10;\n\tpublic $exploSize = 6;\n\tpublic $traverse = -2;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}\n\nclass Cyclops extends Ammo {\n\tpublic $name = \"Cyclops\";\n\tpublic $display = \"Light Antiship Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 55;\n\tpublic $maxDmg = 76;\n\tpublic $impulse = 75;\n\tpublic $integrity = 18;\n\tpublic $armour = 6;\n\tpublic $mass = 5;\n\tpublic $fc = array(0 => 90, 1 => 65);\n\tpublic $cost = 14;\n\tpublic $exploSize = 8;\n\tpublic $traverse = 0;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}\n\nclass Titan extends Ammo {\n\tpublic $name = \"Titan\";\n\tpublic $display = \"Heavy Antiship Missiles\";\n\tpublic $type = \"explosive\";\n\tpublic $minDmg = 78;\n\tpublic $maxDmg = 96;\n\tpublic $impulse = 65;\n\tpublic $integrity = 22;\n\tpublic $armour = 7;\n\tpublic $mass = 6;\n\tpublic $fc = array(0 => 90, 1 => 45);\n\tpublic $cost = 20;\n\tpublic $exploSize = 10;\n\tpublic $traverse = 1;\n\n\tfunction __construct($parentId, $id){\n\t\tparent::__construct($parentId, $id);\n\t}\n}",
			"file": "server/systems/weapons/launcher.php",
			"file_size": 4561,
			"file_write_time": 131380478977520956,
			"settings":
			{
				"buffer_size": 4377,
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3555,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 7109,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 3545,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 1786,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/test.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/04_StaticScene.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/30_LightAnimation.as"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"*p.hp",
			"*php",
			"",
			"salvo.php",
			"*.php",
			"salvo.php",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"getActiveUnits",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"*",
			"",
			"*.js",
			".js",
			"",
			"*.js",
			"",
			"*.php",
			"*.*",
			"",
			"manager.php",
			"*.php",
			"*.js",
			"*.php",
			"php",
			"",
			"*.php",
			"",
			"classname",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"this.getEP()",
			"",
			"*.php",
			"",
			"*.php",
			".php",
			"php"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getSystemByName",
			"\"Sensor\"",
			"unselectSystems",
			"this.dounselect",
			"checksensorhig",
			"launchFLight",
			"launchFlight\n",
			"launchFlight",
			"this.size",
			"this.size ",
			"launch selected",
			"launched Flight",
			"launch selected fl",
			"confirm and l",
			"game.mode = ",
			"this.mode = ",
			"checkSensorHighlight",
			"powerdiv",
			"canPower",
			"canpower\ncanPower",
			"switchModeAll",
			"Launcher",
			"prototype.select",
			"select()",
			".bind",
			"sharedLaunchFlight",
			"unbind",
			"bind",
			".bind",
			"getanim",
			"this.explos",
			"setanimation",
			"this.exploSize =",
			"this.exploSize = ",
			"this.explosize = ",
			"drawExplosion",
			"sensori",
			"animatefireor",
			"hit\"",
			"setupsh",
			"handlenormalfireo",
			"handlefiringphase",
			"this->facing",
			"sensor(",
			"getoutput ",
			"\treturn $this->primary;",
			"getSystemById",
			"json",
			"assembleUnits",
			"isInArc",
			"\t\tmouseCtx.moveTo(loc.x, loc.y);\ngetFacing",
			"getFacing",
			"drawSensorArc",
			"deploying = ",
			"deployMode = ",
			"deployBlock",
			"candeployhere",
			"\"red\"",
			"setstate ",
			"setstate",
			"set se",
			"moveCtx",
			"moveCtx.clearRect",
			"mousemove",
			"drawDeploymentZone",
			"fxCtx",
			"deployarea",
			"canDeployHere",
			"please deploy i",
			"getOutput ",
			"drawSensorArc",
			"getUnusedPower ",
			"getUnusedPower",
			"getOutput ",
			"reactor.",
			"getUsedPower",
			".call",
			"debug::",
			"debug",
			"getShipsForFaction",
			"echo",
			"redraw",
			"textContent",
			"innerText",
			"innerText ",
			"basediv",
			"\"#game",
			"createbasediv",
			"hasShipOnPos",
			"hasshiponpos",
			"unitHover",
			"getShortInfo",
			"shortInfo",
			"checkSensorHighlight",
			"drawImpulseUI",
			"drawmovementui",
			"canvasMouseClick",
			"movePhase",
			"canadvance",
			"drawSensorRadius",
			"\"Sensor",
			"sensor",
			"getpointinD",
			"salvo",
			"drawSensorRadius",
			"setstate",
			"getPowers",
			"insertsensor",
			"insertsensorse",
			"getGameData",
			"insertSensorSettings",
			"getSystemByName(",
			"getSystemByName ",
			"getSystemByName",
			"confirmdeployment",
			"primarysystem = ",
			"primarysy",
			"sensorEvent",
			"sensorev",
			"this.drawmoverange ",
			"this.drawmoverange()",
			"drawMovementUI",
			"setMoveMode",
			"this.setMoveMode",
			"setMoveMode",
			"drawMoveRange",
			"sensorEvent",
			"getPointInDirection"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data.",
			"getTraverseMod",
			"ding",
			"getCritMod",
			"= data.",
			", \"LightParticleBeam\"",
			"deployArea[i].",
			"deployArea[i]",
			"MediumPlasma",
			"Dual",
			"getActiveSystem",
			"setState = function($turn)",
			"setState($turn)",
			"setSystemBorder",
			"gui",
			"ele",
			"boostable",
			"MediumPulse",
			"LightPulse",
			"getImpulse",
			"system",
			"= data.",
			"",
			"getTotalImpulse",
			"getRemainingImpulse()",
			"structContainer",
			"ele",
			" = data.",
			"hit",
			"system",
			"fire.explo.t",
			"end",
			"fire.",
			", maxBoost, boostEffect);",
			", maxBoost, boostEffect){",
			"maxBoost, boostEffect, ",
			"__construct($id, $userid, $available, $status, $destroyed){",
			"construct($id, $userid, $available, $status, $destroyed);",
			"[k]",
			"ele.anim[0].",
			"ele.anim[k].",
			"animate",
			"window.animation.ballAnims[i]",
			"game.ballistics",
			"ballAnims",
			"window.animate.ballAnims",
			"",
			"getPosition",
			"",
			"finalStep",
			"finalPos",
			"setFinalStep",
			"setFinalDestination",
			"setFinalPosition",
			"",
			"hasUnresolvedFireOrder",
			"data",
			"$ballistic",
			"FusionCannon",
			"HeavyIon",
			"MediumIon",
			"LightIon",
			"expandDiv",
			"fire",
			"this",
			"fire",
			"ongoing",
			"canAdvance",
			"canAdvanceGamestate(",
			"public $name",
			"removeFighter",
			"addFighter",
			"loads[l]",
			"isDestroyedThisTurn",
			"Armor",
			"MissileLauncher",
			"select()",
			"getUnitById",
			"aUnit",
			"",
			"aShip",
			"sizeof($this->fires)",
			"$this->fires[$i]",
			"IonCannon",
			"IonProjector",
			"IonBolter",
			"game.ships",
			"drawMovementPlan",
			"div",
			"didiv",
			"div",
			"getOutputMods()",
			"$i",
			"$this->",
			"$this->primary->systems[] = ",
			"$this->primary = new P",
			"    }",
			"",
			"$this->primary->systems[] = new",
			"return (",
			"$structs = array()",
			"powerReq",
			"mouseCtx",
			"moveCtx.",
			"attachEvent",
			"getRemainingNegation($fire)",
			"targetid",
			"weaponid",
			"shooterid",
			"->dogfights",
			"this->ships",
			"insertFireOrders",
			"fxCtx.",
			"moveCtx.",
			"shipHover",
			"window.ballImages.",
			"->hitSystem",
			"->hitSection",
			"damages[l]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5668,
						"regions":
						{
						},
						"selection":
						[
							[
								5366,
								5366
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4112.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4575,
						"regions":
						{
						},
						"selection":
						[
							[
								1133,
								1133
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 995.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29051,
						"regions":
						{
						},
						"selection":
						[
							[
								299,
								299
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16425,
						"regions":
						{
						},
						"selection":
						[
							[
								11801,
								11801
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15007.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2954,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57348,
						"regions":
						{
						},
						"selection":
						[
							[
								54437,
								54437
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36204.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5968,
						"regions":
						{
						},
						"selection":
						[
							[
								1719,
								1719
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1367.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 455,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								65
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3682,
						"regions":
						{
						},
						"selection":
						[
							[
								1395,
								1395
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15037,
						"regions":
						{
						},
						"selection":
						[
							[
								9851,
								9851
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6980.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27086,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										179,
										194
									],
									[
										383,
										395
									],
									[
										463,
										475
									],
									[
										634,
										646
									],
									[
										705,
										717
									],
									[
										908,
										920
									],
									[
										1086,
										1098
									],
									[
										1234,
										1246
									],
									[
										1527,
										1539
									],
									[
										1607,
										1619
									],
									[
										1778,
										1790
									],
									[
										1849,
										1861
									],
									[
										2052,
										2064
									],
									[
										2230,
										2242
									],
									[
										2378,
										2390
									],
									[
										2672,
										2680
									],
									[
										2824,
										2832
									],
									[
										2976,
										2984
									],
									[
										3149,
										3157
									],
									[
										3342,
										3350
									],
									[
										3603,
										3611
									],
									[
										3814,
										3822
									],
									[
										3994,
										4002
									],
									[
										4125,
										4133
									],
									[
										4257,
										4265
									],
									[
										4389,
										4397
									],
									[
										4518,
										4526
									],
									[
										4643,
										4651
									],
									[
										4821,
										4829
									],
									[
										4857,
										4865
									],
									[
										5064,
										5072
									],
									[
										5322,
										5330
									],
									[
										5565,
										5573
									],
									[
										5816,
										5824
									],
									[
										5995,
										6003
									],
									[
										6264,
										6272
									],
									[
										6416,
										6424
									],
									[
										6568,
										6576
									],
									[
										6741,
										6749
									],
									[
										6934,
										6942
									],
									[
										7195,
										7203
									],
									[
										7406,
										7414
									],
									[
										7586,
										7594
									],
									[
										7717,
										7725
									],
									[
										7849,
										7857
									],
									[
										7981,
										7989
									],
									[
										8110,
										8118
									],
									[
										8235,
										8243
									],
									[
										8413,
										8421
									],
									[
										8449,
										8457
									],
									[
										8656,
										8664
									],
									[
										8914,
										8922
									],
									[
										9157,
										9165
									],
									[
										9408,
										9416
									],
									[
										9587,
										9595
									],
									[
										9856,
										9864
									],
									[
										10008,
										10016
									],
									[
										10160,
										10168
									],
									[
										10333,
										10341
									],
									[
										10526,
										10534
									],
									[
										10787,
										10795
									],
									[
										10998,
										11006
									],
									[
										11178,
										11186
									],
									[
										11309,
										11317
									],
									[
										11441,
										11449
									],
									[
										11573,
										11581
									],
									[
										11702,
										11710
									],
									[
										11827,
										11835
									],
									[
										12005,
										12013
									],
									[
										12041,
										12049
									],
									[
										12248,
										12256
									],
									[
										12506,
										12514
									],
									[
										12749,
										12757
									],
									[
										13000,
										13008
									],
									[
										13179,
										13187
									],
									[
										13448,
										13456
									],
									[
										13600,
										13608
									],
									[
										13752,
										13760
									],
									[
										13925,
										13933
									],
									[
										14118,
										14126
									],
									[
										14379,
										14387
									],
									[
										14590,
										14598
									],
									[
										14770,
										14778
									],
									[
										14901,
										14909
									],
									[
										15033,
										15041
									],
									[
										15165,
										15173
									],
									[
										15294,
										15302
									],
									[
										15419,
										15427
									],
									[
										15597,
										15605
									],
									[
										15633,
										15641
									],
									[
										15840,
										15848
									],
									[
										16098,
										16106
									],
									[
										16341,
										16349
									],
									[
										16592,
										16600
									],
									[
										16771,
										16779
									],
									[
										17040,
										17048
									],
									[
										17192,
										17200
									],
									[
										17342,
										17350
									],
									[
										17535,
										17543
									],
									[
										17796,
										17804
									],
									[
										18007,
										18015
									],
									[
										18187,
										18195
									],
									[
										18318,
										18326
									],
									[
										18450,
										18458
									],
									[
										18582,
										18590
									],
									[
										18711,
										18719
									],
									[
										18836,
										18844
									],
									[
										19014,
										19022
									],
									[
										19050,
										19058
									],
									[
										19257,
										19265
									],
									[
										19515,
										19523
									],
									[
										19758,
										19766
									],
									[
										20009,
										20017
									],
									[
										20188,
										20196
									],
									[
										20457,
										20465
									],
									[
										20609,
										20617
									],
									[
										20759,
										20767
									],
									[
										20952,
										20960
									],
									[
										21213,
										21221
									],
									[
										21424,
										21432
									],
									[
										21604,
										21612
									],
									[
										21735,
										21743
									],
									[
										21867,
										21875
									],
									[
										21999,
										22007
									],
									[
										22128,
										22136
									],
									[
										22253,
										22261
									],
									[
										22431,
										22439
									],
									[
										22467,
										22475
									],
									[
										22674,
										22682
									],
									[
										22932,
										22940
									],
									[
										23175,
										23183
									],
									[
										23426,
										23434
									],
									[
										23605,
										23613
									],
									[
										23874,
										23882
									],
									[
										24026,
										24034
									],
									[
										24176,
										24184
									],
									[
										24369,
										24377
									],
									[
										24630,
										24638
									],
									[
										24841,
										24849
									],
									[
										25021,
										25029
									],
									[
										25152,
										25160
									],
									[
										25284,
										25292
									],
									[
										25416,
										25424
									],
									[
										25545,
										25553
									],
									[
										25670,
										25678
									],
									[
										25848,
										25856
									],
									[
										25884,
										25892
									],
									[
										26091,
										26099
									],
									[
										26349,
										26357
									],
									[
										26592,
										26600
									],
									[
										26843,
										26851
									],
									[
										27022,
										27030
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								23985,
								23985
							],
							[
								24538,
								24538
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 11,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 15228.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35601,
						"regions":
						{
						},
						"selection":
						[
							[
								17969,
								17969
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 11187.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40399,
						"regions":
						{
						},
						"selection":
						[
							[
								1116,
								1116
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3641,
						"regions":
						{
						},
						"selection":
						[
							[
								1660,
								1660
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2684,
						"regions":
						{
						},
						"selection":
						[
							[
								1697,
								1697
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2478,
						"regions":
						{
						},
						"selection":
						[
							[
								971,
								971
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2253,
						"regions":
						{
						},
						"selection":
						[
							[
								449,
								449
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1713,
						"regions":
						{
						},
						"selection":
						[
							[
								1103,
								1103
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3697,
						"regions":
						{
						},
						"selection":
						[
							[
								559,
								559
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1706,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								686,
								686
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 115.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3106,
						"regions":
						{
						},
						"selection":
						[
							[
								400,
								400
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								584,
								584
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3665,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8636,
						"regions":
						{
						},
						"selection":
						[
							[
								905,
								905
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 186.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14967,
						"regions":
						{
						},
						"selection":
						[
							[
								7922,
								7922
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75803,
						"regions":
						{
						},
						"selection":
						[
							[
								68354,
								68357
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 44304.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								672,
								672
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3512,
						"regions":
						{
						},
						"selection":
						[
							[
								314,
								314
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1839,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15433,
						"regions":
						{
						},
						"selection":
						[
							[
								8906,
								8906
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5335.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5592,
						"regions":
						{
						},
						"selection":
						[
							[
								4153,
								4156
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2006.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48549,
						"regions":
						{
						},
						"selection":
						[
							[
								14260,
								14260
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9826.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14817,
						"regions":
						{
						},
						"selection":
						[
							[
								13336,
								13336
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8595.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19109,
						"regions":
						{
						},
						"selection":
						[
							[
								11189,
								11189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 333.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				}
			]
		},
		{
			"selected": 12,
			"sheets":
			[
				{
					"buffer": 38,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3806,
						"regions":
						{
						},
						"selection":
						[
							[
								29,
								34
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								2089,
								2089
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19109,
						"regions":
						{
						},
						"selection":
						[
							[
								11668,
								11668
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 890.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 91,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8636,
						"regions":
						{
						},
						"selection":
						[
							[
								5424,
								5424
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 965.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6157,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								2149,
								2149
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1196.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2943,
						"regions":
						{
						},
						"selection":
						[
							[
								126,
								126
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 43.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14967,
						"regions":
						{
						},
						"selection":
						[
							[
								4719,
								4719
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3320.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57348,
						"regions":
						{
						},
						"selection":
						[
							[
								54101,
								54101
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36142.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75803,
						"regions":
						{
						},
						"selection":
						[
							[
								11422,
								11422
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7015.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5968,
						"regions":
						{
						},
						"selection":
						[
							[
								643,
								643
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40399,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								533,
								533
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29051,
						"regions":
						{
						},
						"selection":
						[
							[
								17302,
								17314
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12833.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48549,
						"regions":
						{
						},
						"selection":
						[
							[
								17579,
								17579
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12154.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13240,
						"regions":
						{
						},
						"selection":
						[
							[
								8011,
								8011
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5332.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17304,
						"regions":
						{
						},
						"selection":
						[
							[
								11713,
								11713
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6607.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2260,
						"regions":
						{
						},
						"selection":
						[
							[
								453,
								453
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								2299,
								2299
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 131.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1775,
						"regions":
						{
						},
						"selection":
						[
							[
								716,
								728
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3682,
						"regions":
						{
						},
						"selection":
						[
							[
								897,
								897
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4575,
						"regions":
						{
						},
						"selection":
						[
							[
								3877,
								3877
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2723,
						"regions":
						{
						},
						"selection":
						[
							[
								1214,
								1214
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1889,
						"regions":
						{
						},
						"selection":
						[
							[
								1780,
								1780
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1746,
						"regions":
						{
						},
						"selection":
						[
							[
								1136,
								1136
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1627,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1664,
						"regions":
						{
						},
						"selection":
						[
							[
								693,
								694
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14817,
						"regions":
						{
						},
						"selection":
						[
							[
								5054,
								5054
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3786.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8524,
						"regions":
						{
						},
						"selection":
						[
							[
								690,
								690
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5668,
						"regions":
						{
						},
						"selection":
						[
							[
								5286,
								5277
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3907.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3496.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								760,
								760
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35601,
						"regions":
						{
						},
						"selection":
						[
							[
								32700,
								32700
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2025.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4239,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4377,
						"regions":
						{
						},
						"selection":
						[
							[
								3979,
								3979
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2968.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								282,
								282
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3555,
						"regions":
						{
						},
						"selection":
						[
							[
								1072,
								1072
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3512,
						"regions":
						{
						},
						"selection":
						[
							[
								1493,
								1493
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 530.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7109,
						"regions":
						{
						},
						"selection":
						[
							[
								805,
								805
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 63.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3545,
						"regions":
						{
						},
						"selection":
						[
							[
								3220,
								3220
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3665,
						"regions":
						{
						},
						"selection":
						[
							[
								519,
								519
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1786,
						"regions":
						{
						},
						"selection":
						[
							[
								119,
								119
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.610570609867,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"shipc",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"om",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"getg",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"cl",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"ash",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"pl",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"laun",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"ys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"hyop",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"tin",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"ssh",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"game.p",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"sagg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"du",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"pa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"ion",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"wh",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"la",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"ha",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"ave",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"whi",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"fb",
				"C:\\xampp\\htdocs\\fire\\balltest.php"
			],
			[
				"plasa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"aven",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sasl",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"auo",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"lasr",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"mna",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"xlas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"find",
				"Find Results"
			],
			[
				"shr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"a",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"scri",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"share",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"ckass",
				"Package Control Messages"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"uls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 151.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
