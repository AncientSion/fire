{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"flig",
				"flightDeploy"
			],
			[
				"getSyste",
				"getSystemById"
			],
			[
				"backg",
				"background-color"
			],
			[
				"targe",
				"targetData1"
			],
			[
				"getHit",
				"getHitSectionFromAngle"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"getImp",
				"getImpulseProfileMod"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"var_",
				"var_export"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"getRem",
				"getRemainingAmmo"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"getU",
				"getUnitById"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"getRe",
				"getRelevantBallistics"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"fire",
				"fireOrders"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"draw",
				"drawExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"rema",
				"getRemainingDelay"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"getRema",
				"getRemainingIntegrity"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			],
			[
				"target",
				"targetInfo"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"stru",
				"structures"
			],
			[
				"getRemaining",
				"getRemainingIntegrity"
			],
			[
				"prima",
				"primaryContainer"
			],
			[
				"is",
				"isInArc"
			],
			[
				"db",
				"dbManager"
			],
			[
				"hangar",
				"hangarLoadoutDiv"
			],
			[
				"getE",
				"getElementById"
			],
			[
				"flight",
				"flightSelection"
			],
			[
				"create",
				"createLogEntry"
			],
			[
				"explo",
				"exploAnimated"
			],
			[
				"struc",
				"structureid"
			],
			[
				"addDama",
				"addDamagesToShip"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"resolve",
				"resolveBallisticMovement"
			],
			[
				"getR",
				"getRemainingIntegrity"
			],
			[
				"reSolve",
				"resolveFireOrder"
			],
			[
				"animateShV",
				"animateShipVsBallisticsFire"
			],
			[
				"getShipV",
				"getShipVsBallisticsAnimationDetails"
			],
			[
				"arm",
				"armourDmg"
			],
			[
				"insertBs",
				"insertBallisticActions"
			],
			[
				"Struct",
				"structDiv"
			],
			[
				"vecto",
				"vectorDiv"
			],
			[
				"int",
				"integrity"
			],
			[
				"getRemain",
				"getRemainingImpulse"
			],
			[
				"getF",
				"getPlannedFacingToMove"
			],
			[
				"getRemai",
				"getRemainingDelay"
			],
			[
				"vector",
				"drawVectorIndicator"
			],
			[
				"getIm",
				"getImpulseChangeCost"
			],
			[
				"undo",
				"undoLastAction"
			],
			[
				"drawmov",
				"drawMovementUI"
			],
			[
				"impu",
				"impulseGUI"
			],
			[
				"disable",
				"disableDeployment"
			],
			[
				"beam",
				"beamWidth"
			],
			[
				"disa",
				"disableDeployment"
			],
			[
				"deploy",
				"deployWrapper"
			],
			[
				"selee",
				"canSelectReinforcement"
			],
			[
				"text-",
				"text-align"
			],
			[
				"shipc",
				"shipClass"
			],
			[
				"getFact",
				"getShipsForFaction"
			],
			[
				"proto",
				"prototype"
			],
			[
				"re",
				"reinforcementsTD"
			],
			[
				"mem",
				"memory_get_usage"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5876,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 4736,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 13714,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "salvo.js",
			"settings":
			{
				"buffer_size": 15703,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "body {\n\tcolor: white;\n\tbackground-color: black;\n}\n\n.hinter {\n\tfont-size: 50px;\n\tcolor: red;\n}\n\n.cache {\n\tposition: absolute;\n\tz-index: 20;\n\twidth: 100px;\n\theight: 100px;\n\tbackground-color: white;\n}\n\n#popupWrapper {\n\tdisplay: none;\n\tposition: absolute;\n\tleft: 500px;\n\ttop: 300px;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tborder: 5px solid red;\n\tpadding: 20px;\n\twidth: 400px;\n\tz-index: 20;\n}\n\n#popupText {\n\tmargin: auto;\n\ttext-align: center;\n\twidth: 90%;\n\tleft: 500px;\n\ttop: 500px;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tcolor: white;\n\tfont-size: 20px;\n}\n\n#instructWrapper {\n\tdisplay: none;\n\tposition: absolute;\n\tleft: 500px;\n\ttop: 300px;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tborder: 5px solid #27e627;\n\tpadding: 20px;\n\twidth: 400px;\n\theight: 70px;\n\tz-index: 20;\n}\n\n#instructText {\n\tmargin: auto;\n\ttext-align: center;\n\twidth: 80%;\n\tleft: 500px;\n\ttop: 500px;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tcolor: white;\n\tfont-size: 20px;\n}\n\n.img15 {\n\twidth: 15px;\n\theight: 15px;\n}\n\n.img30 {\n\twidth: 30px;\n\theight: 30px;\n}\n\n.img50 {\n\twidth: 50px;\n\theight: 50px;\n}\n\n.img80 {\n\twidth: 80px;\n\theight: 80px;\n}\n\n.img100pct {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.fullBorderTable {\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n\n.unitTest {\n\tborder: 1px solid white;\n\tdisplay: inline-block;\n\tmargin-left: 20px;\n\tmargin-top: 20px;\n}\n\n.unitTest td {\n\tfont-size: 15px;\n}\n\n.unitTest th {\n\tfont-size: 15px;\n\tcolor: red;\n}\n\n.fullBorderTable th {\n\tborder: 1px solid white;\n\tpadding: 4px;\n\tfont-size: 25px;\n}\n\n.fullBorderTable td {\n\tborder: 1px solid white;\n\tpadding: 4px;\n\tfont-size: 20px;\n\ttext-align: right;\n}\n\nbody {\n\tmargin: 0 0 0 0;\n}\n\nbody, table, tr, td, div, span {\n\tfont-family: arial;\n\tfont-size: 12px;\n\tcursor: default;\n}\n\ntable, th, tr, td {\n\ttext-align: center;\n}\n\n#deployWrapper {\n\tposition: absolute;\n\tdisplay: inline-block;\n\tborder: 1px solid white;\n\tborder-radius: 5px;\n\tpadding: 5 5 5 5;\n\tz-index: 6;\n\tbackground-color: black;\n\ttop: 110px;\n\twidth: 250px;\n}\n\n#deployWrapper.disabled  {\n\tdisplay: none;\n}\n\n#deployTable {\n\tmargin: auto;\n\twidth: 98%;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n\n#deployTable tr {\t\n\tbackground-color: black;\n}\n\n#deployTable th, #deployTable td {\n\tborder: 1px solid white\n}\n\n#deployTable .head, #reinforceTable .head {\n\tfont-size: 18;\n\tbackground-color: lightBlue;\n\tcolor: black;\n}\n\n#deployTable tr.selected {\n\tbox-shadow: inset 0 0 0.5em 0.5em #27e627;\n}\n\n.selected {\n\tbox-shadow: inset 0 0 0.5em 0.5em #27e627;\n}\n\n#reinforce:hover {\n\tbackground-color: white;\n\tcolor: black;\n}\n\n#reinforceTable {\n\tmargin: auto;\n\tmargin-top: 40px;\n\twidth: 98%;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n\n#reinforceTable tr {\t\n\tbackground-color: black;\n}\n\n#reinforceTable th, #reinforceTable td {\n\tborder: 1px solid white\n}\n\n.requestReinforcements.selected {\n\tbox-shadow: inset 0 0 0.5em 0.5em #27e627;\n}\n\n.header {\n\twidth: 90%;\n\tmargin: auto;\n\tfont-size: 14px;\n\ttext-align: center;\n\tpadding: 3 3 0 0;\n\tmargin-top: 4px;\n\tmargin-bottom: 4px;\n}\n\n.link {\n\tborder: 1px solid white;\n\tmargin: auto;\n\tmargin-top: 100px;\n\tfont-size: 20px;\n\twidth: 200px;\n\ttext-align: center;\n\tbackground: black;\n\tcolor: white;\n}\n\n.link:hover {\n\tborder: 1px solid black;\n\tbackground: white;\n\tcolor: black;\n\tcursor: pointer;\n}\n\n#createGame {\n\tborder: 1px solid white;\n\tmargin: auto;\n\twidth: 200px;\n\ttext-align: center;\n\tbackground: black;\n\tcolor: white;\n}\n\n#launchRate, #capacity, #reload {\n\tcolor: red;\n}\n\n#hangarLoadoutDiv, #weaponLoadoutDiv {\n\tposition: absolute;\n\twidth: 500px;\n\tborder: 2px solid yellow;\n\tbackground-color: black;\n\tz-index: 15;\n\tborder-radius: 5px;\n}\n\n#hangarTable, #weaponTable {\n\twidth: 90%;\n\tmargin: auto;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n\tbackground-color: black;\n}\n\n#missionType table {\n\twidth: 50%;\n\tmargin: auto;\n\tmargin-top: 20px;\n\tmargin-bottom: 20px;\n}\n\n#missionType tr {\n\tborder: 1px solid white;\n}\n\n#missionType th, #missionType td {\n\tfont-size: 18px;\n}\n\n#missionType td {\n\tfont-size: 14px;\n}\n\n#shipsBoughtTable {\n\twidth: 300px;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tmargin: 0 0 0 0;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n\n#shipsBoughtTable tr.selected {\n\tbackground-color: lightBlue;\n}\n\n#factionDiv {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tmargin: 0 0 0 0;\n}\n\n#factionDiv tr, th, td {\n\tborder: none;\n}\n\n.factionUpperTable {\n\twidth: 405px;\n\tmargin: auto;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n\tborder-radius: 5px;\n}\n.factionUpperTable tr {\n\tborder: 1px solid white;\n}\n\n.factionUpperTable td.selected {\n\tbackground-color: lightBlue;\n}\n\n.factionclassnameTable {\n\tmargin: auto;\n\twidth: 95%;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n.factionclassnameTable tr {\n}\n\n.factionclassnameTable td {\n\ttext-align: center;\n}\n\n.highlight {\n\tbackground-color: white;\n\tcolor: black;\n}\n\n.fontHighlight {\n\tbackground-color: red;\n\tcolor: white;\n}\n\n.font20 {\n\tfont-size: 18px;\n}\n\n.lobbyDiv {\n\ttext-align: center;\n\tmargin: auto;\n\tmargin-top: 60px;\n\tpadding: 5px;\n\twidth: 700px;\n}\n\n.lobbDiv a {\n\tfont-size: 16px;\n}\n\n.lobbyDiv table {\n\tborder-collapse: collapse;\n\twidth: 95%;\n\tborder: 1px solid black;\n\tmargin: auto;\n}\n\n.lobbyDiv td {\n\tfont-size: 16px;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n.lobbyDiv th {\n\tfont-size: 20px;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n}\n\n.gui {\n\tdisplay: inline-block;\n\tborder: 1px solid white;\n\tposition: absolute;\n}\n\n.gameSetupStatus {\n\tmargin: 0 0 0 0;\n\tborder-collapse: collapse;\n\tborder: 1px solid white;\n\twidth: 405px;\n\tborder-radius: 5px;\n}\n\n.joinGame, .leaveGame, .toLobby {\n\theight: 30px;\n\tfont-size: 20px;\n\tcursor: pointer;\n\tbackground-color: blue;\n\tcolor: white;\n}\n\n.joinGame:hover, .leaveGame:hover, .toLobby:hover {\n\tcolor: red;\n}\n\n.gameSetupStatus td {\n\tfont-size: 16px;\n\tborder: 1px solid white;\n}\n\n.buttonSelection {\n\tfont-size: 22px;\n\tbackground-color: blue;\n\tcolor: white;\n\tcursor: pointer;\n}\n\n.buttonSelection:hover{\n\tcolor: red;\n}\n\n#totalShipCost img {\n\twidth: 20px;\n\theight: 20px;\n}\n\n#game {\n\tposition: absolute;\n\ttop: 0px;\n\tleft: 0px;\n}\n#game.disabled {\n\tdisplay: none;\n}\n\n#game.setup {\n\tposition: relative;\n\ttop: 0px;\n\tleft: 0px;\n}\n\n#canvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n\tbackground-image: url(\"varIcons/space.jpg\");\n}\n\n#drawCanvas {\n\tdisplay: none;\n}\n\n#shipCanvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n\n#fxCanvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n#fxCanvas.disabled {\n\tdisplay: none;\n}\n\n#planCanvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n\n#moveCanvas {\n\tdisplay: inline-block;\n}\n\n#salvoCanvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n\n#mouseCanvas {\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n\n.iconDiv {\n\tposition: absolute;\n\tz-index: 5;\n}\n\n.rotate270 {\n\ttransform: rotate(270deg);\n\t-webkit-transform: rotate(270deg);\n\t-ms-transform: rotate(270deg);\n}\n\n.size90 {\n\twidth: 90px;\n\theight: 90px;\n\tmargin: auto;\n\tmargin-top: 10px;\n}\n\n.size60 {\n\twidth: 60px;\n\theight: 60px;\n\tmargin: auto;\n}\n\n.size40 {\n\twidth: 40px;\n\theight: 40px;\n\tmargin: auto;\n}\n\n.size30 {\n\twidth: 30px;\n\theight: 30px;\n\tmargin: auto;\n}\n\n.structContainer {\n\theight: 400px;\n\tposition: relative;\n\tcolor: white;\n\tmargin: auto;\n\tmargin-top: 5px;\n\tborder: 1px solid white;\n}\n\n.structDiv, .primaryDiv {\n\tdisplay: inline-block;\n\tposition: absolute;\n\tcolor: black;\n\tborder: 1px solid white;\n}\n\n.structTable td {\n\tposition: relative;\n}\n\n.structTable td, .structTable th, .primaryTable td, .primaryTable th {\n\tborder: 1px solid white;\n}\n.structTable td.emptySystem {\n\tborder: none;\n}\n\n.struct {\n\theight: 42px;\n\tfont-size: 16px;\n}\n\n.primaryTable {\n\tmargin: auto;\n}\n\n.primaryTable .struct {\n\theight: 25px;\n}\n\n.primaryTable td {\n\tposition: relative;\n}\n\n.primaryTable.system {\n\tbackground-color: lightBlue;\n}\n\n\n.struct div.integrityAmount {\n\tposition: absolute;\n\ttop: 3;\n\tz-index: 2;\n\tfont-size: 16px;\n\tcolor: white;\n\tmargin: auto;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.struct div.integrityNow {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\tz-index: 1;\n\tbackground-color: blue;\n\theight: 100%;\n}\n\n.primaryTable div.integrityNow {\n\tbackground-color: green;\n}\n\n.primaryTable .system div.integrityNow {\n\ttop: 26px;\n}\n\n.primaryTable .system div.integrityFull {\n\ttop: 26px;\n}\n\n.primaryTable .system div.outputMask {\n\ttop: 9px;\n}\n\n.struct div.integrityFull {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\tbackground-color: red;\n\tz-index: 0;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.integrityAmount {\n\tposition: absolute;\n\ttop: 20;\n\tz-index: 2;\n\tfont-size: 16px;\n\tcolor: white;\n\tmargin: auto;\n\twidth: 100%;\n}\n\n.integrityNow {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 20;\n\tbottom: 0;\n\tz-index: 1;\n\tbackground-color: green;\n}\n\n.integrityFull {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 20;\n\tbottom: 0;\n\tbackground-color: red;\n\tz-index: 0;\n\twidth: 100%;\n}\n\n.loadLevel {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\tbackground-color: rgb(0, 220, 255);\n\tz-index: -1;\n}\n\n.bgloadLevel {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\tbackground-color: white;\n\tz-index: -2;\n\twidth: 100%;\n}\n\n.outputMask {\n\tmargin: auto;\n\tposition: absolute;\n\ttop: 4px;\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: #ff3b00;\n\ttext-align: center;\n\tvertical-align: middle;\n\tdisplay: table-cell;\n}\n\n.exposed {\n\tbackground-color: rgb(255, 177, 0);\n}\n\n.system {\n\tcolor: black;\n}\n\n.primaryTable .system img {\n\tcolor: black;\n\twidth: 32px;\n\theight: 32px;\n}\n\n.system img {\n\tcolor: black;\n\twidth: 24px;\n\theight: 24px;\n}\n\n.system.fighter img {\n\tcolor: black;\n\twidth: 18px;\n\theight: 18px;\n}\n\n.structTable .boostDiv img, .structTable .powerDiv img, .structTable .modeDiv img {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.primaryTable .boostDiv img, .primaryTable .powerDiv img, .primaryTable .modeDiv img {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.emptySystem {\n\tcolor: black;\n\theight: 16px;\n\twidth: 16px;\n}\n\n.system.fighter {\n\tposition: relative;\n\tcolor: black;\n}\n\n.system.destroyed {\n\tbackground-color: red;\n}\n\n.system.unpowered {\n\tbackground-color: grey;\n}\n\n.system.selected {\n    box-shadow: inset 0 0 5px 4px #0400ff;\n}\n\n.system.fireOrder {\n    box-shadow: inset 0 0 5px 4px red;\n}\n\n.system.hasCritical {\n\tcolor: red;\n}\n\n.system.hasCritical.destroyed {\n\tbackground-color: red;\n\tcolor: black;\n}\n.system.hasCritical.disabled {\n\tbackground-color: blue;\n\tcolor: black;\n}\n\n.ammoDiv {\n\tposition: absolute;\n\tborder: 1px solid white;\n\tborder-radius: 5px;\n\tz-index: 10;\n\tbackground-color: black;\n\tpadding: 5px;\n\twidth: 350px;\n\tborder-collapse: collapse;\n}\n\n.ammoDiv table {\n\tmargin: auto;\n\tborder: 1px solid white;\n\tborder-collapse: collapse;\n\tmargin-bottom: 5px;\n}\n\n.ammoDiv .header {\n\tfont-size: 18px;\n}\n\n.ammoDiv .subHeader {\n\tfont-size: 15px;\n}\n\n.ammoDiv td, .ammoDiv th {\n\tborder: 1px solid white;\n}\n\n.impact {\n\tbackground-color: blue;\n}\n\n.ammoImpact {\n\tposition: absolute;\n}\n\n.ammoOverlay {\n\tposition: absolute;\n}\n.fighterDiv {\n\tposition: absolute;\n\tcolor: black;\n\theight: 50px;\n\twidth: 50px;\n\ttext-align: center;\n}\n\n.overlay {\n\tposition: absolute;\n\ttop: 5;\n\tleft: 10;\n}\n\n.size30 {\n\twidth: 30px;\n\theight: 30px;\n}\n\n.size40 {\n\twidth: 40px;\n\theight: 40px;\n}\n\n.selectionHighlight {\n\tcolor: red;\n}\n\n.iconIntegrity {\n\tposition: relative;\n\theight: 20px;\n\tborder: 1px solid white;\n\tborder-collapse: collapse;\n}\n\n.shipDiv  {\n\tposition: absolute;\n\tborder: 1px solid white;\n\tborder-radius: 5px;\n\tz-index: 10;\n\tbackground-color: black;\n\tpadding: 5px;\n}\n\n.shipDiv.disabled {\n\tdisplay: none;\n}\n\n.shipDiv.red {\n\tbackground-color: red;\n}\n\n.shipDiv.selection {\n\tborder: 2px solid yellow;\n}\n\n.shipdiv .header {\n\tdisplay: inline-block;\n\twidth: 180px;\n\theight: 130px;\n\tmargin: auto;\n\tpadding: 0 0 0 0;\n\tborder: 1px solid white;\n}\n\n.shipDiv .general {\n\twidth: 100%;\n\tcolor: white;\n\tborder-collapse: collapse;\n}\n\n.shipDiv .iconContainer {\n\tfloat: right;\n\tdisplay: inline-block;\n\theight: 130px;\n\tborder: 1px solid white;\n}\n\n.shipDiv .structure {\n\twidth: 140px;\n\tborder: 1px solid white;\n\tborder-radius: 3px;\n}\n\n#totalShipCost {\n\tmargin: auto;\n\twidth: 90%;\n}\n#totalShipCost td {\n\tfont-size: 16px;\n}\n\n.shipDiv th, td {\n\tmargin: auto;\n\ttext-align: center;\n}\n\n#phaseSwitchInnerDiv {\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: 600px;\n\theight: 200px;\n\tz-index: 20;\n\tborder: 2px solid white;\n\tbackground: black;\n\tcolor: white;\n\tmargin-top: 300px;\n\tmargin-left: 300px;\n\tborder-radius: 5px;\n}\n\n#phaseSwitchInnerDiv div {\n\twidth: 200px;\n\tfont-size: 30px;\n\ttext-align: center;\n\tmargin: auto;\n}\n#phaseSwitchDiv {\n\tposition: absolute;\n\tz-index: 20;\n\tbackground: black;\n\tcolor: white;\n}\n#phaseSwitchDiv.disabled {\n\tdisplay: none;\n}\n\n#phaseSwitchInnerDiv .hintDiv {\n\twidth: 550px;\n\tfont-size: 15px;\n\ttext-align: center;\n\tmargin: auto;\n\tmargin-top: 60px;\n}\n\n#systemDetailsDiv {\n\tz-index: 20;\n\tdisplay: inline-block;\n\tposition: absolute;\n}\n\n#systemDetailsDiv table {\n\twidth: 220px;\n\tborder: 2px solid white;\n\tborder-collapse: collapse;\n}\n\n#systemDetailsDiv.flight table {\n\twidth: 180px;\n\tborder: 2px solid white;\n\tborder-collapse: collapse;\n}\n\n#systemDetailsDiv th {\n\tfont-size: 14px;\n}\n\n#systemDetailsDiv th, #systemDetailsDiv td {\n\tbackground: black;\n\tcolor: white;\n}\n\n#systemDetailsDiv td.negative {\n\tfont-size: 12px;\n\tcolor: #ff3d00;\n}\n\n#systemDetailsDiv td.positive {\n\tfont-size: 12px;\n\tcolor: #27e627;\n}\n\n.structTable .boostDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: -4px;\n\tleft: -15px;\n}\n\n.primaryTable .boostDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: -1px;\n\tleft: -15px;\n}\n\n.plus, .minus, .power, .unpower {\n\tdisplay: block;\n\tbackground-color: black;\n\tborder: 1px solid red;\n\twidth: 15px;\n\theight: 15px;\n}\n\n.structTable .powerDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: -4px;\n}\n\n.primaryTable .powerDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: -4px;\n\tleft: 30px;\n}\n\n.mode {\n\tdisplay: block;\n\tbackground-color: black;\n\tborder: 1px solid red;\n\twidth: 20px;\n\theight: 20px;\n}\n\n.structTable .modeDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: 24px;\n\tleft: 4px;\n}\n\n.primaryTable .modeDiv {\n\tz-index: 15;\n\tposition: absolute;\n\ttop: 28px;\n\tleft: 6px;\n}\n\n#upperGUI {\n\tdisplay: inline-block;\n\tposition: absolute;\n\tz-index: 8;\n\tborder: 1px solid white;\n\tcolor: white;\n\twidth: 250px;\n\tbackground-color: black;\n\tpadding: 5px;\n\tborder-radius: 5px;\n}\n\n#unitGUI {\n\tdisplay: inline-block;\n\tposition: absolute;\n\tz-index: 8;\n\tborder: 1px solid white;\n\tcolor: white;\n\tbackground-color: black;\n\tpadding: 5px;\n\tpadding-bottom: 10px;\n\tborder-radius: 5px;\n}\n\n#unitGUI .selected {\n\tbox-shadow: inset 0 0 4px 3px yellow\n}\n\n#unitGUI img {\n\tmargin: 2px;\n}\n\n#unitGUI img:hover {\n\tbackground-color: white;\n}\n\n#unitGUI .friendly {\n\tborder: 1px solid #27e627;\n}\n\n#unitGUI .hostile {\n\tborder: 1px solid red;\n}\n\n#overview {\n\tborder-collapse: collapse;\n\twidth: 100%;\n\tcolor: white;\n}\n\n#overview th {\n\tborder: 1px solid black;\n}\n\n#overview td {\n\tborder: 1px solid black;\n}\n\n#confirmOrders {\n\tfont-size: 20px;\n\tcursor: pointer;\n\tcolor: black;\n\tbackground-color: lightBlue;\n}\n\n#confirmOrders:hover {\n\tbackground-color: #27e627;\n}\n\n#combatlogWrapper, #deployLogWrapper {\n\tposition: absolute;\n\ttop: 110px;\n\tleft: 400px;\n\twidth: 800px;\t\n\tz-index: 8;\n\tpadding: 3px;\n\tborder-radius: 5px;\n\tborder: 1px solid white;\n\tbackground-color: black;\n}\n\n#combatlogWrapper disabled, #deployLogWrapper disabled {\n\tdisplay: none;\n}\n\n.combatLogheader, .deployLogHeader {\n\tfont-size: 18px;\n\twidth: 100%;\n\ttext-align: center;\n} \n\n.bold {\n\tfont-weight: bold;\n}\n\n#combatLog, #deployLog {\n\tborder-radius: 5px;\n\tborder: 1px solid white;\n\tborder-collapse: collapse;\n\tbackground: black;\n\tcolor: white;\n\tmargin: auto;\n\twidth: 100%;\n}\n\n#combatLog .selected {\n\tbackground-color: white;\n\tcolor: black;\n\tbox-shadow: none;\n\tborder: 1px solid black;\n\tborder-left: 1px solid white;\n\tborder-right: 1px solid white;\n}\n\n#combatLog tr {\n\theight: 22px;\n\tborder: 1px solid white;\n}\n\n.friendly {\n\tborder: 2px solid #27e627;\n}\n\n.hostile {\n\tborder: 2px solid red;\n}\n\n.size16 {\n\tfont-size: 16px;\n}\n.size15 {\n\tfont-size: 15px;\n}\n\n.red {\n\tcolor: #ff3d00;\n}\n\n.green {\n\tcolor: #27e627;\n}\n\n.bgYellow {\n\tbackground: yellow;\n}\n\n.disabled {\n\tdisplay: none;\n}\n\n#shortInfo {\n\tz-index: 7;\n\tposition: absolute;\n\tcolor: white;\n\tbackground-color: black;\n\tborder-radius: 5px;\n\twidth: 135px;\n}\n\n#weaponAimTableWrapper {\n\tbackground-color: black;\n\tborder-radius: 5px;\n\tborder: 2px solid white;\n\tz-index: 11;\n\tpadding: 3 3 3 3;\n\tposition: absolute;\n\twidth: 500px;\n}\n\n#weaponAimTableWrapper.disabled {\n\tdisplay: none;\n}\n\n#weaponInfo {\n\tposition: relative;\n}\n\n#targetInfo, #weaponInfo {\n\tborder: 1px solid white;\n\tcolor: white;\n\tz-index: 10;\n\tmargin: auto;\n\tborder-collapse: collapse;\n\twidth: 100%;\n}\n\n#targetInfo tr, #weaponInfo tr {\n}\n\n.final {\n\tfont-size: 20px;\n}\n\n#targetInfo th, #weaponInfo th {\n\ttext-align: center;\n\tbackground-color: #001ad2;\n}\n\n#targetInfo {\n\tmargin-bottom: 20px;\n}\n\n#deployOverlay {\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 100px;\n\tborder: 2px solid white;\n\tborder-collapse: collapse;\n\tborder-radius: 5px;\n\tz-index: 10;\n\tposition: absolute;\n\ttext-align: center;\n\tfont-size: 14px;\n\tpadding: 3px;\n}\n\n#deployOverlay#deployTarget {\n\tcolor: red;\n}\n\n.shipAvailable {\n\tfont-size: 20px;\n\tcolor: #27e627;\n\tbox-shadow: inset 0 0 20px #27e627;\n}\n\n.shipUnavailable {\n\tfont-size: 20px;\n\tcolor: red;\n}\n\n#vectorDiv {\n\tdisplay: inline;\n\tposition: absolute;\n\tborder: 1px solid white;\n\tborder-radius: 5px;\n\tbackground-color: black;\n\tcolor: white;\n\tpadding: 3px;\n\tz-index: 10;\n\twidth: 110px;\n}\n\n#vectorDiv.disabled {\n\tdisplay: none;\n}\n\n#vectorDiv table {\n\tmargin: auto;\n}\n\n#vectorDiv td {\n\tcolor: white;\n}\n\n#impulseGUI {\n\tborder-radius: 5px;\n\tpadding: 2px;\n}\n\n#impulseGUI table {\n\twidth: 175px;\n\tborder-collapse: collapse;\n}\n\n#impulseGUI tr {\n\tborder: 1px solid black;\n}\n\n#plusImpulse, #minusImpulse {\n}\n\n#plusImpulse:hover, #minusImpulse:hover, #undoLastAction:hover {\n\tbackground-color: white;\n}\n\n.opaque {\n\topacity: 0.2;\n}\n\n#undoLastAction {\n\tcolor: black;\n\tbackground-color: black;\n\tz-index: 7;\n}\n\n#turnButton, #epButton {\n\tcolor: white;\n\tborder-radius: 5px;\n\twidth: 120px;\n}\n\n#epButton {\n\tcolor: white;\n\tborder-radius: 5px;\n\twidth: 160px;\n}\n\n\n.turnEle.disabled {\n\tdisplay: none;\n}\n\n#turnMode {\n\tcolor: red;\n}\n\n#turnMode.on {\n\tcolor: #27e627;\n}\n\n.size20 {\n\theight: 20px;\n\twidth: 20px;\n}\n\n.ep {\n\tcolor: #27e627;\n}\n\n.ui {\n\tposition: absolute;\n\tdisplay: inline-block;\n\tborder: 1px solid white;\n\tbackground-color: black;\n\tz-index: 8;\n\tborder-radius: 5px;\n}\n\n.ui.disabled {\n\tdisplay: none;\n}\n\n.doShortenTurn:hover, .doUndoShortenTurn:hover {\n\tbackground-color: white;\n\tcolor: black;\n}\n\n#maxTurnVector, #maxVector, #maxCutVector {\n\twidth: 30px;\n\theight: 30px;\n\tborder-radius: 20px;\n\tcolor: white;\n}\n\n#maxTurnVector div, #maxVector div, #maxCutVector div {\n\tmargin-left: 4px;\n\tmargin-top: 7px;\n}\n\n#maxVector.disabled, #maxTurnVector.disabled, #maxCutVector.disabled #shortenTurn.disabled {\n\tdisplay: none;\n}\n\n#maxVector:hover, #maxTurnVector:hover, #maxCutVector:hover {\n\tbackground-color: white;\n\tcolor: black;\n}\n\n.dogFightHeader {\n\tdisplay: inline-block;\n\tcolor: red;\n\tfont-size: 12px;\n\ttext-align: center;\n\twidth: 100%;\n\tmargin-top: 5px;\n\tmargin-bottom: 20px;\n}\n\n.dogFightEntry {\n\tmargin-top: 10px;\n\tdisplay: inline-block;\n\tcolor: red;\n\ttext-align: center;\n\twidth: 100%;\n}\n\n.tri4 {\n\tposition: absolute;\n\twidth: 0;\n\theight: 0;\n\tborder-style: solid;\n\tborder-width: 10px 20px 10px 0;\n\tborder-color: transparent white transparent transparent;\n}\n\n.tri6 {\n\tposition: absolute;\n\twidth: 0;\n\theight: 0;\n\tborder-style: solid;\n\tborder-width: 10px 0 10px 20px;\n\tborder-color: transparent transparent transparent white;\n}",
			"file": "style.css",
			"file_size": 20754,
			"file_write_time": 131461546270696130,
			"settings":
			{
				"buffer_size": 19384,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Ship(data){\n\t//id, name, shipType, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.shipType = data.shipType;\n\tthis.x = data.x || 0;\n\tthis.y = data.y || 0;\n\tthis.facing = data.facing || 0;\n\tthis.faction = data.faction;\n\tthis.mass = data.mass;\n\tthis.cost = data.cost;\n\tthis.profile = data.profile;\n\tthis.size = data.size;\n\tthis.userid = data.userid;\n\tthis.shipType = data.shipType;\n\tthis.available = data.available;\n\tthis.baseHitChance = data.baseHitChance;\n\tthis.baseImpulse = data.baseImpulse;\n\tthis.traverse = data.traverse\n\tthis.status = data.status;\n\tthis.actions = data.actions || [];\n\n\tthis.slipAngle = data.slipAngle;\n\tthis.turnAngle = data.turnAngle;\n\tthis.turnStep = data.turnStep;\n\tthis.turnMod = 1;\n\tthis.baseTurnDelay = data.baseTurnDelay;\n\tthis.baseTurnCost = data.baseTurnCost;\n\tthis.baseImpulseCost = data.baseImpulseCost;\n\tthis.currentImpulse = data.currentImpulse;\n\tthis.remainingImpulse = data.remainingImpulse;\n\tthis.remainingDelay = data.remainingDelay;\n\n\tthis.turnAngles = {};\n\tthis.moveAngles = {};\n\n\tthis.ship = data.ship;\n\tthis.flight = data.flight;\n\tthis.salvo = data.salvo;\n\n\tthis.friendly;\n\tthis.deployed;\n\tthis.drawFacing = 0;\n\tthis.drawX = 0;\n\tthis.drawY = 0;\n\n\tthis.primary;\n\n\tthis.highlight = false;\n\tthis.destroyed = false;\n\tthis.disabled = data.disabled;\n\tthis.element;\n\n\tthis.hitTable;\n\tthis.img;\n\tthis.structures = [];\n\n\tthis.getDamageEntriesByFireId = function(fire){\n\t\tvar dmgs = [];\n\t\tvar lookup = 0;\n\n\t\tfor (var i = 0; i < fire.hits.length; i++){\n\t\t\tlookup += fire.hits[i]\n\t\t}\n\n\t\tif (!lookup){\n\t\t\treturn dmgs;\n\t\t}\n\n\t\tfor (var i = this.primary.damages.length-1; i >= 0; i--){\n\t\t\tif (this.primary.damages[i].fireid == fire.id){\t\t\t\t\t\n\t\t\t\tdmgs.push(this.primary.damages[i]);\n\t\t\t\tdmgs[dmgs.length-1].system = \"Main Structure\";\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.primary.damages[i].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tfor (var j = this.primary.systems[i].damages.length-1; j >= 0; j--){\n\t\t\t\tif (this.primary.systems[i].damages[j].fireid == fire.id){\n\t\t\t\t\tdmgs.push(this.primary.systems[i].damages[j]);\n\t\t\t\t\tdmgs[dmgs.length-1].system = this.primary.systems[i].display\n\t\t\t\t\tlookup--;\n\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t}\n\t\t\t\telse if (this.primary.systems[i].damages[j].turn < fire.turn){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tfor (var k = this.structures[i].systems[j].damages.length-1; k >= 0; k--){\n\t\t\t\t\tif (this.structures[i].systems[j].damages[k].fireid == fire.id){\n\t\t\t\t\t\tdmgs.push(this.structures[i].systems[j].damages[k]);\n\t\t\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].systems[j].display\n\t\t\t\t\t\tlookup--;\n\t\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t\t} else if (this.structures[i].systems[j].damages[k].turn < fire.turn){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dmgs;\n\t}\n\n\tthis.drawDeploymentPreview = function(pos){\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.translate(cam.o.x, cam.o.y)\n\t\tmouseCtx.scale(cam.z, cam.z)\n\t\tmouseCtx.translate(pos.x, pos.y);\n\t\t/*mouseCtx.globalAlpha = 0.3;\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.arc(0, 0, this.size*1, 0, 2*Math.PI, false);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.fillStyle = \"red\";\n\t\tmouseCtx.fill();\n*/\n\t\tthis.drawMarker(0, 0, \"yellow\", mouseCtx);\n\t\t//mouseCtx.globalAlpha = 1;\n\t\tmouseCtx.rotate(this.getDrawFacing * Math.PI/180);\n\t\tmouseCtx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t//mouseCtx.globalAlpha = 1;\n\n\t}\n\n\tthis.isReady = function(){\n\t\tif (this.available < game.turn){\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.available == game.turn && !(game.phase == 0 && game.animating && !this.deployed)){\n\t\t\tif (this.userid == game.userid && this.actions.length || game.phase >= 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this.available > game.turn && this.actions.length == 1 && !this.actions[0].resolved){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.draw = function(){\n\t\tif (this.isReady()){\n\t\t\tthis.drawPositionMarker();\n\t\t\tthis.drawSelf();\n\t\t}\n\t}\n\n\tthis.drawSelf = function(){\n\t\tctx.save();\n\t\tctx.translate(this.drawX, this.drawY)\n\t\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\t\tctx.restore();\n\t}\n\n\tthis.getPlannedFacing = function(){\n\t\tvar angle = 0;\n\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\tangle += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t\treturn this.facing + angle;\n\t}\n\n\tthis.getDrawFacing = function(){\n\t\treturn this.drawFacing;\n\t}\n\n\tthis.drawPositionMarker = function(){\n\t\tvar c = \"\";\n\t\tif (this.selected){c = \"yellow\"}\n\t\telse if (this.friendly){c = \"green\";}\n\t\telse {c = \"red\";}\n\t\tthis.drawMarker(this.drawX, this.drawY, c, ctx);\n\t}\n\n\tthis.drawPlanMarker = function(){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (!this.actions[i].resolved){\n\t\t\t\tvar c = \"green\";\n\t\t\t\tif (!this.friendly){c = \"red\";}\n\t\t\t\tthis.drawMarker(this.actions[i].x, this.actions[i].y, c, planCtx);\n\t\t\t\treturn;\n\t\t\t} else return;\n\t\t}\n\t}\n\n\tthis.drawMarker = function(x, y, c, context){\n\t\tcontext.beginPath();\n\t\tcontext.arc(x, y, this.size/2, 0, 2*Math.PI, false);\n\t\tcontext.closePath();\n\t\tcontext.lineWidth = 1;\n\t\tcontext.globalAlpha = 0.8;\n\t\tcontext.globalCompositeOperation = \"source-over\";\n\t\tcontext.strokeStyle = c;\n\t\tcontext.stroke();\n\t\tcontext.globalAlpha = 1;\n\t\tcontext.lineWidth = 1;\n\t\tcontext.strokeStyle = \"black\";\n\t}\n\n\tthis.drawCenterPoint = function(){\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, 2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.fillStyle = \"red\";\n\t\tctx.fill();\n\t}\n\n\tthis.animationSetupMove = function(){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFacing();\n\t}\n\n\tthis.animationSetupDamage = function(){\n\t\treturn true;\n\t}\n\n\tthis.getFiringPosition = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n\t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n\t\t)\n\t}\n\n\tthis.getTargettingPos = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n\t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n\t\t)\t\t\n\t}\n\n\tthis.getTurnEndPosition = function(){\n\t\treturn this.actions[this.actions.length-1];\n\t}\n\n\tthis.canDeploy = function(){\n\t\tif (this.userid == game.userid && (game.turn == 1 || this.id < 0)){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.canDeployHere = function(pos){\n\t\t//console.log(pos);\n\t\tvar valid = false;\n\n\t\tif (game.turn >= 2){\n\t\t\tif (getDistance({x: 0, y: 0}, pos) >= 750){\n\t\t\t\treturn false;\n\t\t\t} return true;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < game.deploys.length; i++){\n\t\t\t\tif (game.deploys[i].userid != this.userid){continue;}\n\n\t\t\t\tif (getDistance(game.deploys[i], pos) + this.size/2 < game.deploys[i].s){\n\t\t\t\t\tfor (var j = 0; j < game.ships.length; j++){\n\t\t\t\t\t\tif (game.ships[j].deployed && game.ships[j].id != this.id && game.ships[j].userid == this.userid){ // different ship, different owners\n\t\t\t\t\t\t\tvar step = game.ships[j].getBaseOffsetPos();\n\t\t\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[j].size/2 + this.size/2)){\n\t\t\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\n\t\tfor (var i = 0; i < game.deployArea.length; i++){\n\t\t\tif (game.deployArea[i].id != game.userid){continue;}\n\t\t\tif (game.deployArea[i].x > 0){\n\t\t\t\tif (pos.x >= game.deployArea[i].x && pos.x <= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x <= game.deployArea[i].x && pos.x >= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x > game.deployArea[i].x && pos.x < game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y > game.deployArea[i].y && pos.y < game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (valid){\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployed && game.ships[i].id != this.id && game.ships[i].userid == this.userid){ // different ship, different owners\n\t\t\t\t\tvar step = game.ships[i].getBaseOffsetPos();\n\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[i].size/2 + this.size/2)){\n\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tthis.doDeploy = function(pos){\n\t\tconsole.log(this);\n\t\tif (this.actions.length){\n\t\t\tthis.actions[0].x = pos.x;\n\t\t\tthis.actions[0].y = pos.y;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\t\t}\n\t\telse {\n\t\t\tvar facing = 0;\n\t\t\tvar index;\n\t\t\tfor (var i = 0; i < playerstatus.length; i++){\n\t\t\t\tif (playerstatus[i].userid == this.userid){\n\t\t\t\t\tindex = i % 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfacing = 0 + (180 * (index % 2));\n\t\t\tthis.actions.push(new Move(-1, \"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n\t\t\tthis.deployed = true;\n\t\t\tthis.facing = facing;\n\t\t\tthis.drawFacing = facing;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\n\t\t\tvar shipId = this.id;\n\t\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n\t\t\t\tif ($(this).data(\"shipid\") == shipId){\n\t\t\t\t\t$(this).remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tthis.select();\n\n\t\t$(\"#game\")\n\t\t\t.find(\"#deployOverlay\").hide().end()\n\t\t\t.find(\"#deployWrapper\").find(\"#reinforceTable\").find(\".requestReinforcements\").each(function(){\n\t\t\tif ($(this).hasClass(\"selected\")){\n\t\t\t\t//$(this).find(\".cost\").addClass(\"green\");\n\t\t\t\t$(this).addClass(\"green\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}).end().find(\"#totalRequestCost\").html(game.getCurrentReinforceCost());\n\t\tgame.redraw();\n\t}\n\n\tthis.canDeployFlightHere = function(pos){\n\t\tvar dist = getDistance({x: this.x, y: this.y}, {x: pos.x, y: pos.y})\n\t\tif (dist <= game.flightDeploy.range){\n\t\t\tvar a = getAngleFromTo( {x: this.x, y: this.y}, {x: pos.x, y: pos.y} );\n\t\t\t\ta = addAngle(this.getDrawFacing(), a);\n\t\t\tif (isInArc(a, game.flightDeploy.start, game.flightDeploy.end)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.getBaseOffsetPos = function(){\n\t\tif (this.actions.length){\n\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\t\treturn {x: this.actions[i].x, y: this.actions[i].y};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {x: this.x, y: this.y};\n\t}\n\t\n\tthis.getPlannedPosition = function(){\n\t\tif (this.actions.length){\n\t\t\treturn new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t\t}\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tthis.getWeaponPosition = function(fire){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n\t\t\t\t\treturn getPointInDirection(range(0, this.size / 4), a, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.create = function(){\n\t\tthis.img = window.shipImages[this.name.toLowerCase()];\n\t\tthis.setDrawData();\n\t\tthis.setHitTable();\n\t\tthis.setInternals();\n\t\tthis.setSystems();\n\t}\n\n\tthis.setSystems = function(){\n\t\treturn;\n\t\tif (this.ship){\n\t\t\tif (this.disabled){\n\t\t\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\t\t\tthis.structures[i].systems[j].locked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\t\t\tthis.primary.systems[i].locked = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setInternals = function(){\n\t/*\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\tif (this.primary.systems[i].disabled || this.primary.systems[i].destroyed){\n\t\t\t\t\tthis.unpowerAllSystems();\n\t\t\t\t}\n\t\t\t}\n\t\t}*/\n\t}\n\n\n\tthis.unpowerAllSystems = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].destroyed){\n\t\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n\t\t\t\t\tthis.structures[i].systems[j].setTableRow();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setHitTable = function(){\n\t\t//console.log(\"id: \" + this.id);\n\t\t//this.primary.setRemainingIntegrity();\n\t\tvar fraction = this.primary.remaining / this.primary.integrity;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n\t\t\t\tthis.primary.systems[i].exposed = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.isDestroyed = function(){\n\t\tif (this.primary.destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isDestroyedThisTurn = function(){\n\t\tif (this.primary.destroyed && this.primary.damages[this.primary.damages.length-1].turn == game.turn){\n\t\t\treturn true;\n\t\t} else if (this.getSystemByName(\"Reactor\").destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasHangarSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tthis.hasSystemsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.hasWeaponsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.isInTransit = function(){\n\t\tif (this.ship && this.available == game.turn && this.actions.length == 1 && this.actions[0].resolved){\n\t\t\treturn true;\n\t\t}\n\t\treturn false\n\t}\n\n\tthis.drawHoverElements = function(){\n\t\tthis.drawEW();\n\t\tif (this.isInTransit()){\n\t\t\t//game.drawJumpMarker(this.id);\n\t\t\tconsole.log(\"warp\");\n\t\t}\n\t\t//this.drawMoveLength();\n\n\t\t/*moveCtx.translate(cam.o.x, cam.o.y);\n\t\tmoveCtx.scale(cam.z, cam.z);\n\t\tthis.drawMoveRange();\n\n\t\tmoveCtx.setTransform(1,0,0,1,0,0);\n\t\t*/\n\t}\n\n\tthis.drawEW = function(){\n\t\tif (!this.ship){return;}\n\t\tthis.getSystemByName(\"Sensor\").drawEW();\n\t}\n\n\tthis.drawMoveLength = function(){\n\t\tif (this.selected){return;}\n\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\tmouseCtx.scale(cam.z, cam.z);\n\t\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDirection(this.getCurrentImpulse(), angle, center.x, center.y);\n\t\t\n\t\tmouseCtx.beginPath();\t\t\t\n\t\tmouseCtx.moveTo(center.x, center.y);\n\t\tmouseCtx.lineTo(p.x, p.y);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.lineWidth = .5;\n\t\tmouseCtx.strokeStyle = \"white\";\n\t\tmouseCtx.stroke();\n\t\tmouseCtx.strokeStyle = \"black\";\n\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.checkSensorHighlight = function(){\n\t\tif (this.flight || this.salvo){return;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n\t}\n\n\tthis.hasSystemSelected = function(name){\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getStructureById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getSystemById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.primary.systems.length; j++){\n\t\t\tif (this.primary.systems[j].id == id){\n\t\t\t\treturn this.primary.systems[j];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getPrimarySection = function(){\n\t\treturn this.primary;\n\t}\n\n\tthis.highlightSingleSystem = function(system){\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.highlightAllSelectedWeapons = function(){\n\t\t//mouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t$(fxCanvas).css(\"opacity\", 0.3);\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.drawSystemAxis = function(system){\n\t\tvar color = \"\";\n\t\tvar alpha = 0;\n\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar p1 = getPointInDirection(system.range || res.x, system.start + angle, pos.x, pos.y);\n\t\tvar p2 = getPointInDirection(system.range || res.y, system.end + angle, pos.x, pos.y)\n\t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n\t\tvar rad1 = degreeToRadian(system.start + angle);\n\t\tvar rad2 = degreeToRadian(system.end + angle);\n\t\t\n\t\tfxCtx.beginPath();\t\t\t\n\t\tfxCtx.moveTo(pos.x, pos.y);\n\t\tfxCtx.arc(pos.x, pos.y, dist, rad1, rad2, false);\n\t\tfxCtx.closePath();\n\t\tswitch (system.name){\n\t\t\tcase \"Hangar\": color = \"white\"; opacity = 0.7; break;\n\t\t\tcase \"Structure\": color = \"lightBlue\"; opacity = 0.7; break;\n\t\t}\t\n\t\tfxCtx.globalAlpha = opacity;\n\t\tfxCtx.fillStyle = color;\n\t\tfxCtx.fill();\n\t\tfxCtx.globalAlpha = 1;\n\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\t\n\tthis.weaponHighlight = function(weapon){\n\t\tif (weapon.highlight){\n\t\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n\t\t\tweapon.highlight = false;\n\t\t}\n\t\telse {\n\t\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n\t\t\tvar angle = this.getPlannedFacing();\n\t\t\tvar shipPos = this.getPlannedPosition();\n\t\t\tweapon.highlight = true;\t\t\n\t\t\tweapon.drawArc(angle, shipPos);\n\t\t}\n\t}\n\t\n\tthis.getImpulseChangeCost = function(){\n\t\tvar cost = Math.round(this.baseImpulseCost*this.getImpulseMod());\t\n\t\treturn cost;\n\t}\n\n\tthis.getBaseImpulse = function(){\n\t\treturn this.baseImpulse;\n\t}\n\n\tthis.getCurrentImpulsea = function(){\n\t\tconsole.log(\"a\");\n\t\tvar base = this.getBaseImpulse();\n\t\tvar change = this.getImpulseStep();\n\t\t\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"speedChange\"){\n\t\t\t\tif (this.actions[i].dist == 1){\n\t\t\t\t\tbase += change;\n\t\t\t\t}\n\t\t\t\telse if (this.actions[i].dist == -1){\n\t\t\t\t\tbase -= change;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn base;\n\t}\n\n\tthis.getCurrentImpulse = function(){\n\t\tif (game.phase >= 1 && this.ship || game.phase >= 2 && this.flight){\n\t\t\treturn this.currentImpulse;\n\t\t}\n\t\tvar step = this.getImpulseStep();\n\t\tvar amount = 0;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type != \"speedChange\"){continue;}\n\t\t\tamount += this.actions[i].dist;\n\t\t}\n\t\treturn this.currentImpulse + step*amount;\n\t}\n\n\tthis.setCurrentImpulse = function(){\n\t\treturn;\n\t\tvar add = this.getImpulseStep() * this.actions[this.actions.length-1].dist\n\t\tthis.currentImpulse += add;\n\t\tthis.remainingImpulse += add;\n\t}\n\n\tthis.getRemainingImpulse = function(){\n\n\t\tif (game.phase >= 1 && this.ship || game.phase >= 2 && this.flight){\n\t\t\treturn 0;\n\t\t}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tif (this.actions[i].type == \"move\"){\n\t\t\t\t\timpulse -= this.actions[i].dist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn impulse;\n\t}\n\n\tthis.getRemainingImpulses = function(){\n\t\treturn this.remainingImpulse;\n\t}\n\n\tthis.setRemainingImpulse = function(){\n\t\treturn;\n\t\tthis.remainingImpulse -= this.actions[this.actions.length-1].dist;\n\t}\n\n\tthis.getImpulseStep = function(){\n\t\t//return 15;\n\t\treturn Math.floor(this.getBaseImpulse() / 10);\n\t}\n\t\n\tthis.getImpulseMod = function(){\n\t\treturn this.getCurrentImpulse() / this.getBaseImpulse();\n\t}\n\t\n\tthis.getTurnCost = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t}\n\t\tif (this.actions.length && (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0)){\n\t\t\treturn 0;\n\t\t}\n\t\telse return this.baseTurnCost*this.getImpulseMod() * this.getTurnMod();\n\t\t//else return this.baseTurnCost; //Math.pow(this.mass, 1.25)/10000;\n\t\t//else return Math.found((Math.pow(this.mass, 1.56) / 10000) *  this.getImpulseMod());\n\t}\n\n\tthis.getTurnMod = function(){\n\t\treturn turn.mod || 1;\n\t}\n\t\n\tthis.getTurnDelay = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t}\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\treturn 0;\n\t\t}\n\t\telse return this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t//else return round(this.getBaseTurnDelay() * this.getImpulseMod(), 2);\n\t}\n\n\tthis.drawArcIndicator = function(){\n\t\treturn;\n\t\tvar shipPos = this.getBaseOffsetPos();\n\t\tvar angle = this.getPlannedFacing();\n\n\t\tvar p1 = getPointInDirection(80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p2 = getPointInDirection(-80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p3 = getPointInDirection(80, 180+angle, shipPos.x, shipPos.y);\n\t\tvar p4 = getPointInDirection(-80, 180+angle, shipPos.x, shipPos.y);\n\n\t\tmoveCtx.beginPath();\n\t\tmoveCtx.moveTo(p1.x, p1.y);\n\t\tmoveCtx.lineTo(p2.x, p2.y);\n\t\tmoveCtx.moveTo(p3.x, p3.y);\n\t\tmoveCtx.lineTo(p4.x, p4.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.stroke();\n\n\t}\n\n\tthis.getSlipAngle = function(){\n\t\treturn this.slipAngle;\n\t}\n\n\tthis.drawMoveRange = function(){\n\t\tvar center = this.getPlannedPosition();\t\t\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar slipAngle = this.getSlipAngle();\n\n\t\tthis.moveAngles = {start: addAngle(0 + slipAngle, angle), end: addAngle(360 - slipAngle, angle)};\n\t\t//console.log(this.moveAngles);\n\t\tif (slipAngle != 180){\n\t\t\tthis.drawMoveArea(center, rem);\n\t\t}\n\n\t\tvar turnEle = $(\"#game\").find(\"#epButton\")[0];\n\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, 90), center.x, center.y);\n\n\t\t$(turnEle)\n\t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n\t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n\t\t\t.find(\"#impulseCost\").html(this.getImpulseChangeCost() + \" EP\");\n\t}\n\t\n\tthis.drawMoveArea = function(center, rem){\n\t\t//if (game.phase < 0 || game.phase > 1){return;}\n\t\tvar p1 = getPointInDirection(rem, this.moveAngles.start, center.x, center.y);\n\t\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\t\tvar rad1 = degreeToRadian(this.moveAngles.start);\n\t\tvar rad2 = degreeToRadian(this.moveAngles.end);\n\t\tvar delay = this.getRemainingDelay();\n\t\t\n\t\tif (delay > 0){\n\t\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\tmoveCtx.lineWidth = 2\n\t\t\tmoveCtx.stroke();\n\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmoveCtx.fill();\n\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\n\t\t\tif (delay > 5 && this.canMaxCut()){\n\t\t\t\tdelay = Math.round(delay/2);\n\t\t\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\t\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\t\tmoveCtx.closePath();\n\t\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\t\tmoveCtx.lineWidth = 2\n\t\t\t\tmoveCtx.stroke();\n\t\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\t\tmoveCtx.fill();\n\t\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\t\t\t}\n\t\t}\n\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p1.x, p1.y); \n\t\tmoveCtx.arc(center.x, center.y, dist, rad1, rad2, false);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.globalAlpha = 0.25;\n\t\tmoveCtx.fillStyle = \"white\";\n\t\tmoveCtx.fill();\n\t\tmoveCtx.globalAlpha = 1;\n\t}\n\n\tthis.drawMoveArcs = function(center, rem){\n\t\tfor (var i in this.moveAngles){\n\t\t\tvar p = getPointInDirection(rem, this.moveAngles[i], center.x, center.y);\n\t\t\tmoveCtx.beginPath();\n\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"white\"\n\t\t\tmoveCtx.stroke();\n\t\t}\n\t}\n\n\tthis.getEP = function(){\n\t\tvar ep = 0;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == \"Engine\"){\n\t\t\t\tep += this.primary.systems[i].getOutput();\n\t\t\t}\n\t\t}\n\n\t\treturn ep;\n\t}\n\t\n\tthis.getRemainingEP = function(){\n\t\tvar ep = this.getEP();\n\t\t\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tif (this.actions[i].cost != 0){\n\t\t\t\t\tep -= this.actions[i].cost// * this.actions[i].costmod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn Math.floor(ep);\n\t}\n\t\n\n\tthis.getRemainingDelay = function(){\n\t\tvar delay = this.remainingDelay;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\t//delay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n\t\t\t\tdelay += this.actions[i].delay;\n\t\t\t}\n\t\t\telse if (this.actions[i].type == \"move\"){\n\t\t\t\tdelay = Math.max(0, delay - this.actions[i].dist);\n\t\t\t}\n\t\t}\n\t\treturn Math.ceil(delay);\n\t}\t\n\n\tthis.getRemainingDelaya = function(){\n\t\treturn this.remainingDelay;\n\t}\n\n\tthis.setRemainingDelay = function(){\n\t\treturn;\n\t\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\tthis.remainingDelay = Math.max(0, Math.max(this.remainingDelay - this.actions[this.actions.length-1].dist), this.actions[this.actions.length-1].delay);\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\t\tthis.remainingDelay = Math.max(0, this.remainingDelay + this.actions[this.actions.length-1].delay);\n\t\t}\n\t}\n\t\t\n\tthis.canIncreaseImpulse = function(){\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tthis.canDecreaseImpulse = function(){\n\t\tif (this.getCurrentImpulse() <= 0){return false;}\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\tthis.getShortenTurnCost = function(){\n\t\treturn this.getTurnCost() / turn.mod * (turn.mod + 0.1) * turn.a;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\tthis.canShortenTurn = function(){\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod < 2 && this.getRemainingEP() >= this.getShortenTurnCost()){\n\t\t\t\t//console.log(\"can shorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant shorten\")\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoShortenTurn = function(){\n\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod > 1){\n\t\t\t\t//console.log(\"can unshorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant unshorten\")\n\t\treturn false;\n\t}\n\n\tthis.doShortenTurn = function(max){\n\t\tif (max){\n\t\t\twhile (this.canShortenTurn()){\n\t\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\t}\n\t\t\tthis.setTurnData();\n\t\t}\n\t\telse if (this.canShortenTurn()){\n\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\t\n\tthis.doUndoShortenTurn = function(max){\n\t\tif (turn.mod > 1){\n\t\t\tif (max){\n\t\t\t\tturn.mod = 1;\n\t\t\t} else turn.mod = Math.floor((turn.mod * 10) - turn.step*10) / 10;\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\n\tthis.setTurnData = function(){\n\t\t//console.log(turn);\n\n\t\tvar button = $(\"#game\").find(\"#turnButton\");\n\t\tvar vector = $(\"#vectorDiv\")\n\n\t\tif (game.turnMode){\n\t\t\t$(button)\n\t\t\t\t.find(\"#turnMode\").html(\"ON\").addClass(\"on\").end()\n\t\t\t\t//.find(\"#impulseMod\").html(turn.dif).end()\n\t\t\t\t.find(\"#turnCost\").html(round(turn.cost * turn.mod * turn.dif, 2) + \" EP\").end()\n\t\t\t\t.find(\"#turnDelay\").html(round(turn.delay * turn.mod * turn.dif, 2) + \" px\").end()\n\t\t\t\t.find(\"#turnMod\").html(turn.mod).end()\n\t\t\t\t.find(\"#shortenTurn\").removeClass(\"disabled\");\n\n\t\t\t$(vector).empty()\n\t\t\t\t.append($(\"<table>\")\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Angle: \" + turn.a)))\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.ceil(turn.cost * turn.a * turn.mod * turn.dif) + \" EP\")))\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Delay: \" + Math.ceil(turn.delay * turn.a / turn.mod * turn.dif) + \" px\"))))\n\t\t\t\t.removeClass(\"disabled\");\n\t\t\tthis.drawDelay();\n\t\t\tthis.adjustMaxTurn()\n\t\t}\n\t\telse {\n\t\t\t$(button)\n\t\t\t\t.find(\"#turnMode\").html(\"OFF\").removeClass(\"on\").end()\n\t\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t\t.find(\"#turnDelay\").html(\"\").end()\n\t\t\t\t.find(\"#turnMod\").html(\"\").end()\n\t\t\t\t.find(\"#shortenTurn\").addClass(\"disabled\");\n\t\t\t$(vector).addClass(\"disabled\")\n\t\t}\n\n\t\tif (this.flight){\n\t\t\t$(button).find(\"#shortenTurn\").addClass(\"disabled\");\n\t\t}\n\t\tthis.drawEW();\n\t}\n\n\tthis.adjustMaxTurn = function(){\n\t\t//\tconsole.log(this.getTurnAngle());\n\t\t//\tconsole.log(\"max angle: \" + this.getMaxTurnAngle());\n\t\tif (this.getMaxTurnAngle() < turn.max){\n\t\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tthis.setMoveTranslation();\n\t\t//\tthis.drawMoveRange();\n\t\t\tthis.drawTurnArcs();\n\t\t\tthis.drawVectorIndicator();\n\t\t\tthis.resetMoveTranslation();\n\t\t}\n\t}\n\n\tthis.canDoAnotherTurn = function(){\n\t\tvar i = 0;\n\t\tif (!this.getRemainingImpulse()){\n\t\t\treturn false;\n\t\t}\n\t\telse if (this.turns[i].cost * (this.turns[i].costmod + 0.2) + this.getTurnCost() < this.getRemainingEP()){\n\t\t\treturn true;\n\t\t}\n\t\telse return false;\n\t}\n\n\tthis.doIncreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speedChange\", 1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.setCurrentImpulse();\n\t\tthis.resetMoveMode();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.doDecreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speedChange\", -1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.setCurrentImpulse();\n\t\tthis.resetMoveMode();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.drawMovePlan = function(){\n\t\tif (!this.actions.length || this.actions[this.actions.length-1].resolved){\n\t\t\treturn;\n\t\t}\n\t\telse if (this.ship && game.phase == 0 || this.flight && game.phase == 1){\n\t\t\tthis.setMoveTranslation();\n\n\t\t\tplanCtx.strokeStyle = \"#00ea00\";\n\t\t\tif (!this.friendly){\n\t\t\t\tplanCtx.strokeStyle = \"red\";\n\t\t\t}\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < this.actions.length; i++){\n\t\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\t\tvar action = this.actions[i];\n\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\t\n\t\t\t\t\tif (i == 0){\n\t\t\t\t\t\tvar p = this.getBaseOffsetPos();\n\t\t\t\t\t\tplanCtx.moveTo(p.x, p.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplanCtx.moveTo(this.actions[i-1].x, this.actions[i-1].y);\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\t\tplanCtx.lineTo(action.x, action.y);\n\t\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\t\tvar angle = this.getPlannedFacing(i);\n\t\t\t\t\t\t\n\t\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\t\tplanCtx.arc(action.x, action.y, 3, 0, 2*Math.PI, false);\n\t\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t}\n\t\t\t}\n\t\t\tplanCtx.strokeStyle = \"black\";\n\t\t\tthis.drawPlanMarker();\n\t\t\tthis.resetMoveTranslation();\n\t\t}\n\t}\n\n\tthis.drawMoveUI = function(){\n\t\tthis.drawImpulseUI();\n\t\tthis.drawVectorMovementUI();\n\t\tif (this.canTurn()){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.drawTurnArcs();\n\t\t\tthis.updateDiv();\n\t\t}\n\t}\n\n\tthis.drawVectorMovementUI = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar ele;\n\n\t\tif (rem > 0){\n\t\t\tele = document.getElementById(\"maxVector\");\n\t\t\tvar p = getPointInDirection(rem + 90, angle, center.x, center.y);\n\t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t$(ele)\n\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t.data(\"dist\", rem)\n\t\t\t\t//.html(\"<div style='margin-left: 4px; margin-top: 7px'>\"+rem+\"<div>\")\n\t\t\t\t.html(\"<div>\"+rem+\"<div>\")\n\t\t\t\t.css(\"left\", left)\n\t\t\t\t.css(\"top\", top)\n\t\t\t\t.removeClass(\"disabled\");\n\t\t}\n\t\tif (delay > 0){\n\t\t\tif (rem >= delay){\n\t\t\t\tele = document.getElementById(\"maxTurnVector\");\n\t\t\t\tvar p = getPointInDirection(rem + 60, angle, center.x, center.y);\n\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t$(ele)\n\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t.removeClass(\"disabled\");\n\n\t\t\t\tif (this.canMaxCut()){\n\n\t\t\t\t\tdelay = Math.ceil(delay/2);\n\n\t\t\t\t\tele = document.getElementById(\"maxCutVector\");\n\t\t\t\t\tvar p = getPointInDirection(rem + 30, angle, center.x, center.y);\n\t\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t\t$(ele)\n\t\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t\t.removeClass(\"disabled\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.canMaxCut = function(){\n\t\tvar last = this.getLastTurn();\n\t\tvar ep = this.getRemainingEP();\n\n\t\tif (last.costmod == 1 && ep && ep >= last.cost / 10){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.drawVectorIndicator = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDirection(200, angle, center.x, center.y);\n\t\t\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.lineWidth = 1;\n\t\tmoveCtx.strokeStyle = \"white\";\n\t\tmoveCtx.globalAlpha = 0.5;\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.globalAlpha = 1;\n\t\tmoveCtx.strokeStyle = \"black\";\n\t}\n\n\tthis.getTurnAngle = function(){\n\t\tif (game.phase == -1 && (game.turn == 1 || this.id < 0)){\n\t\t\treturn 180;\n\t\t}\n\t\treturn this.turnAngle;\n\t}\n\n\tthis.getTurnStep = function(){\n\t\treturn this.turnStep;\n\t}\n\n\tthis.getMaxTurnAngle = function(){\n\t\tvar ep = this.getRemainingEP();\n\t\tvar limit = this.getTurnAngle();\n\t\tvar c = this.getTurnCost();\n\n\t\treturn Math.min(limit, Math.floor(ep/c));\n\t}\n\n\tthis.drawTurnUI = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar turnEle = $(\"#game\").find(\"#turnButton\")[0];\n\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n\t\t$(turnEle)\n\t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n\t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.find(\"#impulseMod\").html(\"x \" +turn.dif).end();\n\t}\n\n\tthis.drawTurnArcs = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar turnAngle = this.getMaxTurnAngle();\n\t\tvar w = this.getTurnStep();\n\n\t\tthis.turnAngles = {start: addAngle(0 + turnAngle, angle), end: addAngle(360 - turnAngle, angle)};\n\t\t\n\t\tfor (var j = 1; j >= -1; j = j-2){\n\t\t\tfor (var i = 1; i <= w; i++){\t\t\t\n\t\t\t\tvar modAngle = turnAngle * i * j;\n\t\t\t\tvar newAngle = addToDirection(angle, modAngle);\n\t\t\t\tvar p = getPointInDirection(Math.max(100, this.getRemainingImpulse()*2), newAngle, center.x, center.y);\n\t\t\t\tif (turnAngle != 180){\n\t\t\t\t\tmoveCtx.beginPath();\n\t\t\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\t\t\tmoveCtx.closePath();\n\t\t\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\t\t\tmoveCtx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawDelay = function(){\n\t\tif (this.actions.length == 1){\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t\tvar delay = turn.a * turn.delay / turn.mod * turn.dif;\n\t\tif (delay){\n\t\t\tvar angle = this.getPlannedFacing();\n\t\t\tvar center = this.getPlannedPosition();\n\t\t\tvar delayRad1 = degreeToRadian(angle-45);\n\t\t\tvar delayRad2 = degreeToRadian(angle+45);\n\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\t\tmouseCtx.scale(cam.z, cam.z);\n\t\t\tmouseCtx.beginPath();\t\t\t\n\t\t\tmouseCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmouseCtx.closePath();\n\t\t\tmouseCtx.strokeStyle = \"red\";\n\t\t\tmouseCtx.lineWidth = 3\n\t\t\tmouseCtx.stroke();\n\t\t\tmouseCtx.arc(center.x, center.y, delay, 0, 2*Math.PI, false);\n\t\t\tmouseCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmouseCtx.fill();\n\t\t\tmouseCtx.globalCompositeOperation = \"source-over\";\n\t\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t} else \n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.drawImpulseUI = function(){\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.getDrawFacing() + 180, center.x, center.y);\n\n\t\tif (this.canUndoLastAction()){\n\t\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#undoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#undoLastAction\").addClass(\"disabled\");\n\n\n\t\tif (this.disabled){return;}\n\n\t/*\tvar gui = $(\"#impulseGUI\");\n\t\tvar w = gui.width();\n\t\tvar h = gui.height();\n\t\tvar p = getPointInDirection((this.size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n\n\t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n\t\tgui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse());\n\t\tgui.find(\"#remTurnDelay\").html(this.getRemainingDelay());\n\t\tgui.find(\"#baseDelay\").html(round(this.getTurnDelay(), 1));\n\t\tgui.find(\"#enginePower\").html(this.getRemainingEP() + \" / \" + this.getEP());\n\t\tgui.find(\"#impulseChange\").html(this.getImpulseChangeCost() + \" EP\");\n\t\tgui.find(\"#turnCost\").html(\"<span>\" + round(this.getTurnCost(), 1) + \" EP</span>\");\n\n\t*/\tif (this.canIncreaseImpulse()){\n\t\t\tvar pPlus = getPointInDirection(50, this.getDrawFacing() +90, p1.x, p1.y);\n\t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n\n\t\tif (this.canDecreaseImpulse()){\n\t\t\tvar mMinus = getPointInDirection(50, this.getDrawFacing() -90, p1.x, p1.y);\n\t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n\t}\t\n\n\tthis.issueMove = function(pos, dist){\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"move\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\tthis.actions[this.actions.length-1].dist+= dist;\t\n\t\t\tthis.actions[this.actions.length-1].x = pos.x;\n\t\t\tthis.actions[this.actions.length-1].y = pos.y;\n\t\t} else this.actions.push(new Move(-1, \"move\", dist, pos.x, pos.y, 0, 0));\t\n\t\t\n\t\tthis.turnAngles = {}\n\t\t$(\"#popupWrapper\").hide();\n\t\tthis.unsetMoveMode();\n\t\tthis.setRemainingImpulse();\n\t\tthis.setRemainingDelay();\n\t\tthis.autoShortenTurn();\n\t\tthis.setMoveMode();\n\t\tgame.redrawEW();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.autoShortenTurn = function(){\n\t\tif (this.flight){return;}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar move = this.getLastTurn();\n\n\t\tif (!impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n\t\t\t}\n\t\t}\n\t\telse if (impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tdelay -= move.delay;\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\tdelay += move.delay;\n\t\t\t\tif (delay <= 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\n\t\tmove.cost = Math.round(move.cost);\n\t\tmove.delay = Math.round(move.delay);\n\t\tthis.setTurnData();\n\n\t}\n\n\tthis.autoShortenTurna= function(){\n\t\tif (this.flight){return;}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar move = this.getLastTurn();\n\n\t\tif (!impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n\t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n\t\t\t}\n\t\t}\n\t\telse if (impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tdelay -= move.delay;\n\t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n\t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\tdelay += move.delay;\n\t\t\t\tif (delay <= 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tthis.setTurnData();\n\n\t}\n\t\n\tthis.canShortenOldTurn = function(move){\n\t\tif (!this.getRemainingDelay()){return;}\n\t\tif (move.costmod < 2 && this.getRemainingEP() >= this.getShortenOldTurnCost(move)){\n\t\t\t//console.log(\"can shorten\")\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.getShortenOldTurnCost = function(move){\n\t\tvar c = this.getTurnCost();\n\t\tvar a = Math.abs(move.a);\n\t\treturn Math.ceil((c * a * (move.costmod + 0.1)) - (c * a * move.costmod));\n\t\treturn Math.ceil(this.getTurnCost() * Math.abs(move.a) * (move.costmod + 0.1)) - move.cost;\n\t\treturn (this.getTurnCost() / move.costmod * (move.costmod + 0.1)) * Math.abs(move.a) - move.cost;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\n\tthis.getLastTurn = function(){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\treturn this.actions[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoLastAction = function(){\n\t\tif (this.actions.length){\n\t\t\tif (this.actions[this.actions.length-1].resolved == 0){\n\t\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.undoOrderButton = false;\n\t\treturn false;\n\t}\n\t\n\tthis.undoLastAction = function(pos){\n\t\tif (this.actions[this.actions.length-1].type == \"speedChange\"){\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t\tthis.setCurrentImpulse();\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\tthis.setRemainingDelay();\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t\tthis.setRemainingImpulse();\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\t\tthis.actions[this.actions.length-1].delay *= -1;\n\t\t\tthis.setRemainingDelay();\n\t\t}\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\tif (game.turnMode){\n\t\t\tthis.switchTurnMode();\n\t\t}\n\t\tthis.turnAngles = {}\n\t\tgame.redrawEW();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.moveInVector = function(dist){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\n\tthis.moveToMaxVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.moveToMaxTurnVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\t\n\n\tthis.moveToMaCutVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.canTurn = function(){\n\t\tif (this.disabled){return false;}\n\t\tif (this.getRemainingDelay() == 0){\n\t\t\tvar min = 5;\n\t\t\tvar have = this.getRemainingEP();\n\t\t\tvar need = this.getTurnCost() * min;\n\t\t\tif (have >= need){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.flight){\n\t\treturn false;\n\t\t\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\t\tif (this.getRemainingDelay() != 0){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar turns = 0;\n\t\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\t\tif (this.actions[i].turn != game.turn){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.actions[i].type == \"turn\"){\n\t\t\t\t\t\tvar a = Math.abs(this.actions[i].a);\n\t\t\t\t\t\twhile (a > 0){\n\t\t\t\t\t\t\ta -= this.getTurnAngle();\n\t\t\t\t\t\t\tturns++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (turns < this.maxTurns){\n\t\t\t\t\tvar have = this.getRemainingEP();\n\t\t\t\t\tvar need = this.getTurnCost();\n\t\t\t\t\tif (have >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tthis.switchTurnMode = function(){\n\t\tthis.turnMod = 1;\n\t\tif (game.turnMode){\n\t\t\tturn.reset();\n\t\t\tgame.turnMode = 0;\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\t\n\t\telse {\n\t\t\tgame.turnMode = 1;\n\t\t\tturn.set(this);\n\t\t}\n\t\tthis.setTurnData();\n\t}\n\n\tthis.handleTurning = function(e, o, f, pos){\n\t\tvar t = {x: e.clientX - offset.x, y: e.clientY - offset.y};\n\t\tvar max = this.getMaxTurnAngle();\n\t\tvar a =  getAngleFromTo(o, pos);\n\t\t\ta = Math.round(addAngle(f, a));\n\t\tif (a > 180){a = (360-a) *-1;}\n\t\t\ta = Math.min(Math.abs(a), max);\n\t\t\tturn.a = a;\n\n\t\tvar c = this.getTurnCost() * a;\n\t\tvar remEP = \"Cost: \" + Math.round(c, 2) + \" (\" + Math.round(this.getRemainingEP() - c) + \") EP\";\n\t\tvar delay = \"Delay: \" + Math.round(this.getTurnDelay() * a, 2) + \" px\";\n\n\t$(\"#vectorDiv\")\n\t\t.css(\"left\", e.clientX - offset.x - 45 + \"px\")\n\t\t.css(\"top\", e.clientY - offset.y + 40 + \"px\")\n\t\t.find(\"tr\").each(function(i){\n\t\t\tswitch (i){\n\t\t\t\tcase 0: $(this).html(\"Angle: \" + a); break;\n\t\t\t\tcase 1: $(this).html(remEP); break;\n\t\t\t\tcase 2: $(this).html(delay); break;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t})\n\n\t\tthis.drawDelay();\n\t\t//if (this.ship){this.drawEW();}\n\t\tthis.drawMouseVector(o, t);\n\t}\n\n\tthis.drawMouseVector = function(o, t){\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.moveTo(o.x * cam.z + cam.o.x, o.y * cam.z + cam.o.y);\n\t\tmouseCtx.lineTo(t.x, t.y);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.strokeStyle = \"white\";\n\t\tmouseCtx.lineWidth = 1;\n\t\tmouseCtx.stroke();\n\t}\n\n\tthis.handleTurnAttempt = function(dest){\n\t\tvar origin = this.getPlannedPosition();\n\t\tvar a = getAngleFromTo(origin, dest);\n\t\t\ta = addAngle(this.getPlannedFacing(), a);\n\t\tif (a > 180){a -= 360;}\n\t\tvar max = this.getMaxTurnAngle();\n\n\t\tif (isInArc(getCompassHeadingOfPoint(origin, dest, 0), this.turnAngles.start, this.turnAngles.end)){\n\t\t\tif (Math.abs(a) >= 5){\n\t\t\t\tthis.issueTurn(a);\n\t\t\t}\n\t\t} else if (a < 0){\n\t\t\tthis.issueTurn(-max);\n\t\t} else this.issueTurn(max);\n\t}\n\n\tthis.issueTurn = function(a){\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += Math.round(a);\n\t\t\tif (this.actions[0].a > 360){\n\t\t\t\tthis.actions[0].a -= 360;\n\t\t\t} else if (this.actions[0].a < 0){this.actions[0].a += 360;}\n\t\t\tconsole.log(this.actions[0].a);\n\t\t\tthis.drawFacing = this.actions[0].a;\n\t\t\tthis.facing = this.actions[0].a;\n\t\t\t//console.log(this.actions[0].a);\n\t\t\t//this.unsetMoveMode();\n\t\t\t//this.setMoveMode();\n\t\t\tgame.redraw()\n\t\t}\n\t\telse {\n\t\t\tvar o = this.getPlannedPosition();\n\t\t\tif (this.getRemainingImpulse() == 0){\n\t\t\t\twhile (this.canShortenTurn()){\n\t\t\t\t\tthis.doShortenTurn();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.actions.push(\n\t\t\t\tnew Move(-1, \"turn\", 0, o.x, o.y, \n\t\t\t\t\tMath.round(a),\n\t\t\t\t\tMath.ceil(this.getTurnDelay()*Math.abs(a)),\n\t\t\t\t\tMath.ceil(this.getTurnCost()*Math.abs(a)),\n\t\t\t\t\tround(turn.mod, 1), 0\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.setRemainingDelay();\n\t\t\t//console.log(this.actions[this.actions.length-1]);\n\t\t\t$(\"#game\").find(\"#turnButton\")\n\t\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t\t.find(\"#turnDelay\").html(\"\");\n\t\t\t//this.setMoveMode();\n\t\t\tgame.redrawEW();\n\t\t\tgame.drawAllPlans();\n\t\t}\n\t}\n\n\tthis.issueTurna = function(a){\n\t\tconsole.log(\"turn, a: \".a);\n\t\tif (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += a;\n\t\t\tthis.facing += a;\n\t\t\tgame.redraw()\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\tif (this.turns[i].a == a){\n\t\t\t\t\tif (this.flight){\n\t\t\t\t\t\tif (this.actions[this.actions.length-1].type == \"turn\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].a += this.turns[i].a;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].delay += this.turns[i].delay;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].cost += this.turns[i].cost;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//if (this.getRemainingImpulse() == 0){this.doShortenTurn(true);}\n\n\t\t\t\t\tthis.actions.push(\n\t\t\t\t\t\tnew Move(\n\t\t\t\t\t\t\t-1, \"turn\", 0, this.turns[i].x, this.turns[i].y, \n\t\t\t\t\t\t\tthis.turns[i].a, this.turns[i].delay, this.turns[i].cost, this.turns[i].costmod\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgame.redrawEW();\n\t\t\tgame.drawAllPlans();\n\t\t}\n\t}\n\n\tthis.getBaseHitChance = function(){\n\t\treturn this.baseHitChance;\n\t}\n\n\tthis.getHitSectionFromAngle = function(a){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getHitChanceFromAngle = function(angle){\n\t\tvar a, b, c, base;\n\t\t\n\t\twhile (angle > 90){\n\t\t\tangle -= 180;\n\t\t}\n\t\tif (angle < 0){\n\t\t\tangle *= -1;\n\t\t}\n\n\t\tbase = this.getBaseHitChance();\n\t\ta = base * this.profile[0];\n\t\tb = base * this.profile[1];\n\t\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n\t\tsub /= (90 - 0);\n\t\treturn Math.ceil(sub);\n\t}\n\t\n\tthis.createBaseDiv = function(){\n\t\tvar owner = \"friendly\";\n\t\tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.className = \"shipDiv \" + owner;\n\t\t\t$(div).data(\"shipId\", this.id);\n\n\t\tvar subDiv = document.createElement(\"div\");\n\t\t\tsubDiv.className = \"header\";\n\t\t\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.className = \"general\";\n\n\t\tvar header = \"red\";\n\t\tif (this.friendly){header = \"green\";}\n\n\t\t\t$(table)\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colspan\", 2).addClass(header)))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Classification\"))\n\t\t\t\t\t.append($(\"<td>\").html(game.getUnitType(this.traverse))))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Thrust\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).addClass(\"Thrust\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Engine Power:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"ep\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Thrust Change:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Turn Cost per 1\"))\n\t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnCost(), 2) + \" EP\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Turn Delay per 1\"))\n\t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Active Turn Delay\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingDelay()).addClass(\"delay\")))\n\t\t\t\t\n\t\tsubDiv.appendChild(table);\n\t\tdiv.appendChild(subDiv);\n\n\t\t$(this.expandDiv(div))\n\t\t\t.addClass(\"disabled\")\n\t\t\t.drag()\n\t\t\t.find(\".structContainer\")\n\t\t\t\t.contextmenu(function(e){e.stopPropagation;})\n\t\t\t\t//.addClass(\"disabled\")\n\t\t\t\t.end()\n\t\t\t.find(\".header\")\n\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t\t})\n\t\t\t\t.end()\n\t\t\t.find(\".iconContainer\")\n\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t\tif ($(this).parent().data(\"shipId\") != aUnit){\n\t\t\t\t\t\t$(this).parent().addClass(\"disabled\");\n\t\t\t\t\t}\n\t\t\t\t})\n\n\n\t\tif (game.phase == 2){\n\t\t\t$(div).find(\".structContainer\").show();\n\t\t}\n\n\t\tthis.element = div;\n\t}\n\n\tthis.expandDiv = function(div){\n\t\t$(div).append($(\"<div>\").addClass(\"iconContainer\").append($(window.shipImages[this.name.toLowerCase()].cloneNode(true)).addClass(\"rotate270\").addClass(\"size90\")));\n\t\t\t\n\t\t//document.getElementById(\"game\").appendChild(div);\n\t\tdocument.body.appendChild(div);\n\t\t$(div).css(\"position\", \"absolute\").css(\"top\", 300);\n\n\t\tstructContainer = document.createElement(\"div\");\n\t\tstructContainer.className = \"structContainer\";\n\t\tdiv.appendChild(structContainer);\n\n\n\t\tvar noFront = true;\n\t\tvar noAft = true;\n\t\tvar sides = 0;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tthis.structures[i].direction = this.structures[i].getDirection();\n\t\t\tif (this.structures[i].direction == 0 || this.structures[i].direction == 360){\n\t\t\t\tnoFront = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction == 180){\n\t\t\t\tnoAft = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction > 0 && this.structures[i].direction < 180 || this.structures[i].direction > 180 && this.structures[i].direction < 360){\n\t\t\t\tsides++;\n\t\t\t}\n\t\t}\n\t\tsides /= 2;\n\n\t\tvar maxWidth = 0;\n\t\tif (this.structures.length <= 4){\n\t\t\tif (this.structures[1].systems.length > 4){\n\t\t\t\tmaxWidth = 320;\n\t\t\t} else maxWidth = 280;\n\t\t}\n\t\telse {\n\t\t\tmaxWidth = 340;\n\t\t}\n\n\t\t$(div).css(\"width\", maxWidth);\n\n\n\t\tvar conWidth = $(structContainer).width();\n\t\tvar conHeight = $(structContainer).height();\n\n\t\t// PRIMARY\n\t\tvar primaryDiv = document.createElement(\"div\");\n\t\t\tprimaryDiv.className = \"primaryDiv\";\n\t\tvar primaryTable = document.createElement(\"table\");\n\t\t\tprimaryTable.className = \"PrimaryTable\";\n\t\t\tprimaryTable.appendChild(this.primary.getTableRow());\n\n\t\t\tvar systems = 0;\n\t\t\tvar max = 3;\n\t\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n\n\t\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\t\tif (systems == 0){\n\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\t}\n\n\t\t\t\tvar td = this.primary.systems[i].getTableData(false);\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tif (game.turn == 1 || this.id > 0){\n\t\t\t\t\tvar boostDiv = this.primary.systems[i].getBoostDiv();\n\t\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\t\tvar powerDiv = this.primary.systems[i].getPowerDiv();\n\t\t\t\t\tif (powerDiv){\n\t\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t\t}\n\t\t\t\t\tvar modeDiv =this.primary.systems[i].getModeDiv();\n\t\t\t\t\tif (modeDiv){\n\t\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsystems++;\n\t\t\t\ttr.appendChild(td);\n\n\n\t\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n\t\t\t\t\tprimaryTable.appendChild(tr);\n\t\t\t\t\tsystems = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\tvar offsetX = 0;\n\t\tvar offsetY = -40;\n\t\tif (noFront){\n\t\t\toffsetY -= 40;\n\t\t}\n\t\telse if (noAft){\n\t\t\toffsetY -= 10;\n\t\t}\n\n\t\tprimaryDiv.appendChild(primaryTable);\n\t\tstructContainer.appendChild(primaryDiv);\n\t\tvar w = $(primaryDiv).width();\n\t\tvar h = $(primaryDiv).height();\n\t\tvar primX = conWidth/2 - w/2;\n\t\tvar primY = conHeight/2 - h/2 + offsetY\n\t\t$(primaryDiv)\n\t\t\t.css(\"left\", primX)\n\t\t\t.css(\"top\", primY)\n\n\t\t// OUTER STRUCTS\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\n\t\t\tvar structDiv = document.createElement(\"div\");\n\t\t\t\tstructDiv.className = \"structDiv\";\n\t\t\t\t\n\t\t\tvar structTable = document.createElement(\"table\");\n\t\t\t\tstructTable.className = \"structTable\";\n\n\t\t\tstructTable.appendChild(this.structures[i].getTableRow());\n\n\t\t\tvar col = 0;\n\t\t\tvar colWidth = 1;\n\t\t\tvar max;\n\t\t\tvar a = this.structures[i].direction; if (a == 360){a = 0;}\n\t\t\tvar w;\n\t\t\tvar maxRow = 0;\n\n\t\t\tif (a == 0 || a == 180){ // front or aft\n\t\t\t\tif (a == 180){\n\t\t\t\t\tmax = Math.min(6, this.structures[i].systems.length);\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 0){\n\t\t\t\t\tmax = 4;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 3){\n\t\t\t\t\tmax = 3;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 3 == 0){\n\t\t\t\t\tmax = 6;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmax = 5;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // sides\n\t\t\t\tif (sides > 1){\n\t\t\t\t\tmax = 2;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length <= 3){\n\t\t\t\t\tmax = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.structures[i].systems.length <= 4 && noFront){\n\t\t\t\t\t\tmax = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmax = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (max == 1){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"62px\";\n\t\t\t}\n\t\t/*\telse if (max == 2){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"42px\";\n\t\t\t}\n\t\t*/\telse {\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"23px\";\n\t\t\t}\n\n\t\t\tvar fill = 0;\n\t\t\tif (a == 0 || a == 180){\n\t\t\t\tif (this.structures[i].systems.length == 1 || this.structures[i].systems.length == 2 && this.structures[i].systems[0].name != this.structures[i].systems[1].name){\n\t\t\t\t\tmax = 3;\n\t\t\t\t\tfill = 1;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (col == 0){\n\t\t\t\t\ttr = document.createElement(\"tr\");\n\t\t\t\t\tif (this.structures[i].systems.length - j != max){\n\t\t\t\t\t\tif ((this.structures[i].systems.length - j) *2 == max){\n\t\t\t\t\t\t\tcolWidth = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fill){\n\t\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t\t}\n\n\t\t\t\tvar td = this.structures[i].systems[j].getTableData(false);\n\t\t\t\t\ttd.colSpan = colWidth;\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tif (game.turn == 1 || this.id > 0){\n\t\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n\t\t\t\t\tif (powerDiv){\n\t\t\t\t\t\tpowerDiv.style.left = colWidth * 24 + \"px\";\n\t\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\t\tif (modeDiv){\n\t\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t\t}\n\n\t\t\t\tcol++;\n\t\t\t\ttr.appendChild(td);\n\n\t\t\t\tif (fill){\n\t\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t\t}\n\n\t\t\t\tif (col == max){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t}\n\t\t\t\tif (j == this.structures[i].systems.length-1){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t\t$(structTable).find(\".struct\").attr(\"colSpan\", maxRow);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstructDiv.appendChild(structTable);\n\t\t\tstructContainer.appendChild(structDiv);\n\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = -20;\n\n\n\t\t\tif (a == 90 || a == 270){\n\t\t\t\tif (max == 2){\n\t\t\t\t\toffsetX += 25;\n\t\t\t\t\toffsetY -= 20;\n\t\t\t\t}\n\t\t\t\telse if (max == 1){\n\t\t\t\t\toffsetX += 40;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (a == 60 || a == 300 || noAft){\n\t\t\t\t\toffsetX += 20;\n\t\t\t}\n\t\t\t\n\t\t\tvar pos = getPointInDirection(135 - offsetX, a-90, conWidth/2, conHeight/2-40);\n\t\t\tvar w = $(structDiv).width();\n\t\t\tvar h = $(structDiv).height();\n\n\t\t\tif (noFront){\n\t\t\t\toffsetY -= 60;\n\t\t\t}\n\n\t\t\tif (a == 0){\n\t\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n\t\t\t\t\toffsetY += 10;\n\t\t\t\t} else if (fill){\n\t\t\t\t\t$(primaryDiv).css(\"top\", (primY + 20));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (noAft){\n\t\t\t\toffsetY -= 60 + this.structures.length*12;\n\t\t\t}\n\t\t\telse if (a == 180){\n\t\t\t\tif (noFront){offsetY += 20;}\n\t\t\t\telse offsetY -= 40;\n\t\t\t}\n\t\t\telse if (sides >= 2 && a-90 != 0 && a-90 != 180){\n\t\t\t\toffsetY += 0;\n\t\t\t}\n\t\t\telse if (!noFront && !noAft){\n\t\t\t\toffsetY -= 30;\n\t\t\t}\n\t\t\t\n\t\t\t$(structDiv)\n\t\t\t\t.data(\"id\", this.structures[i].id)\n\t\t\t\t.css(\"left\", pos.x + -w/2)\n\t\t\t\t.css(\"top\", pos.y + offsetY)\n\t\t}\n\n\t\tvar width = 0;\n\t\tvar height = 0;\n\t\t$(div).find(\".structDiv\").each(function(){\n\t\t\tvar x = $(this).position().left + $(this).width();\n\t\t\tif (x > width){\n\t\t\t\twidth = x;\n\t\t\t}\n\t\t\tvar y = $(this).position().top + $(this).height();\n\t\t\tif (y > height){\n\t\t\t\theight = y;\n\t\t\t}\n\t\t})\n\n\t\t$(structContainer).css(\"height\", Math.max($(primaryDiv).position().top + $(primaryDiv).height(), height) + 20);\n\n/*\t\tvar w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\t\tleft = res.x - w - 50;\n\t\t}\n\t\tvar x = this.x +cam.o.x - w/2;\n\t\tvar y = this.y +cam.o.y + 150;\n\n\t\t$(div).css(\"left\", x).css(\"top\", y);\n*/\t\treturn div;\n\t}\n\n\tthis.previewSetup = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.updateDiv = function(){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t$(divs)\n\t\t\t.find(\".pos\").html(this.x + \" / \" + this.y).end()\n\t\t\t.find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end()\n\t\t\t.find(\".impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).end()\n\t\t\t.find(\".delay\").html(this.getRemainingDelay())\t\t\n\t\t\t.find(\".change\").html(this.getImpulseChangeCost() + \" EP\").end()\t\t\t\n\t\t\t.find(\".turn\").html(this.getImpulseChangeCost() + \" EP\").end()\n\t}\n\n\tthis.updateDivPower = function(system){\n\t\tvar reactor = this.getSystemByName(\"Reactor\");\n\t\tvar s = reactor.getOutput();\n\t\t$(this.getSystemByName(\"Reactor\").element).find(\".outputMask\").html(reactor.getOutput());\n\n\t\t$(system.element).find(\".outputMask\").html(system.getOutput());\n\t\tsystem.update();\n\t}\n\n\tthis.updateNonPowerOutput = function(system){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(divs).find(\".system\").each(\n\t\t\tfunction(){\n\t\t\t\tif ($(this).data(\"systemId\") == system.id){\n\t\t\t\t\t$(this).find(\".outputMask\").html(system.getOutput());\n\t\t\t\t\tsystem.update();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tthis.getSystemByName = function(name){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getActiveSensor = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected && this.primary.systems[i].name == \"Sensor\"){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.attachEvent = function(td){\n\t\t$(td).data(\"shipId\", this.id);\n\t\t$(td).hover(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).hover(e);\n\t\t\t}\n\t\t).click(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).select(e);\n\t\t\t}\n\t\t).\n\t\tcontextmenu(\n\t\t\tfunction(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));\n\t\t\t}\n\t\t);\n\t\treturn td;\n\t}\n\n\tthis.selectAll = function(e, id){\n\t\tvar s = this.getSystemById(id);\n\t\tvar w = s.getActiveWeapon();\n\t\tvar name = w.name;\n\t\tvar hasFire = s.hasUnresolvedFireOrder();\n\t\tif (name == \"Hangar\"){return;}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (! this.structures[i].systems[j].destroyed){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tif (this.structures[i].systems[j].weapon && this.structures[i].systems[j].hasUnresolvedFireOrder() == hasFire){\n\t\t\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tthis.doUnpowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".unpower\").hide().end().find(\".power\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doUnpower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.doPowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".power\").hide().end().find(\".unpower\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doPower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchModeAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].locked){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].switchMode(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getShortInfo = function(){\n\t\tvar ele = $(\"#shortInfo\");\n\t\tif (this.userid == game.userid){\n\t\t\t$(ele).attr(\"class\", \"friendly\");\n\t\t} else $(ele).attr(\"class\", \"hostile\");\n\n\t\tvar baseHit = this.getBaseHitChance();\n\t\tvar impulse = this.getCurrentImpulse();\n\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.name + \" #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Base Hit: \" + Math.floor(this.profile[0] * baseHit) + \"% - \" + Math.floor(this.profile[1] * baseHit) + \"%\";\n\t\treturn table;\n\t}\n\n\tthis.getProfileMod = function(){\n\t\treturn Math.floor((1+((((this.getBaseImpulse() / this.getCurrentImpulse())-1)/3)))*100);\n\t}\n\n\tthis.getIncomingBallistics = function(){\n\t\tvar inc = [];\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].targetid == this.id){\n\t\t\t\tinc.push(game.ballistics[i])\n\t\t\t}\n\t\t}\n\t\treturn inc;\n\t}\n\n\tthis.canBoost = function(system){\n\t\tif (system.disabled || system.destroyed){\n\t\t\treturn false;\n\t\t}\n\t\telse if (system instanceof Weapon && !system.disabled && !system.destroyed && (system.getLoadLevel() >= 1 || system.getBoostEffect(\"Reload\") && system.getLoadLevel() < 1)){\n\t\t\tif (system instanceof Launcher){\n\t\t\t\tif (system.getOutput() < system.getEffiency()){\n\t\t\t\t\tif (system.getRemainingAmmo() > system.getOutput()){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"There is not enough ammunition left\");\n\t\t\t\t} else popup(\"The launcher is already at maximum capacity\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (system.getBoostLevel() < system.maxBoost){\n\t\t\t\t\tvar avail = this.getUnusedPower();\n\t\t\t\t\tvar need = system.getEffiency();\n\t\t\t\t\tif (avail >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t\t\t} else popup(\"The selected system cant be boosted further.\");\n\t\t\t}\n\t\t}\n\t\telse if (!(system instanceof Weapon)){\n\t\t\tif (this.getUnusedPower() >= system.getEffiency()){\n\t\t\t\treturn true;\n\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnusedPower = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\treturn this.primary.systems[i].getUnusedPower();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tthis.setTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].translate(cam.o.x, cam.o.y);\n\t\t\targuments[i].scale(cam.o.x, cam.o.y);\n\t\t}\n\t}\n\n\tthis.resetTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\tthis.setMoveTranslation = function(){\n\t\tmoveCtx.translate(cam.o.x, cam.o.y);\n\t\tmoveCtx.scale(cam.z, cam.z);\n\t\tplanCtx.translate(cam.o.x, cam.o.y);\n\t\tplanCtx.scale(cam.z, cam.z);\n\t}\n\n\tthis.resetMoveTranslation = function(){\n\t\tmoveCtx.setTransform(1,0,0,1,0,0);\n\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.resetMoveMode = function(){\n\t\tvar turn = game.turnMode;\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t\tif (turn && this.canTurn()){\n\t\t\tthis.switchTurnMode();\n\t\t}\n\t\tthis.drawEW();\n\t}\n\n\tthis.setMoveMode = function(){\n\t\tgame.mode = 1;\n\t\tturn.set(this);\n\t\tthis.turnAngles = {};\n\t\t//this.setTranslation(moveCtx, planCtx);\n\t\tthis.setMoveTranslation();\n\t\tthis.drawMoveRange();\n\t\tthis.drawVectorIndicator();\n\n\t\tif (game.phase == -1 && (this.available == game.turn && game.turn == 1|| this.id < 0)){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.drawTurnArcs();\n\t\t\t//this.updateDiv();\n\t\t}\n\t\telse if (game.phase == 0 && !this.flight){\n\t\t\tthis.drawMoveUI();\n\t\t}\n\t\telse if (game.phase == 1 && this.flight){\n\t\t\tif (! this.dogfights.length){\n\t\t\t\tthis.drawMoveUI();\n\t\t\t}\n\t\t}\n\t\telse if (game.phase == 2){ // FIRE\n\t\t}\n\t\telse if (game.phase == 3){ // Dmg control\n\t\t}\n\n\t\tthis.resetMoveTranslation();\n\t\tthis.checkSensorHighlight();\n\t\tthis.updateDiv();\n\t}\n\t\n\tthis.unsetMoveMode = function(){\n\t\tgame.mode = 0;\n\t\t$(\"#vectorDiv\").addClass(\"disabled\");\n\t\t$(\"#impulseGUI\").addClass(\"disabled\");\n\t\t$(\".turnEle\").addClass(\"disabled\");\n\t\t$(\"#maxVector\").addClass(\"disabled\");\n\t\t$(\"#maxTurnVector\").addClass(\"disabled\");\n\t\t$(\"#maxCutVector\").addClass(\"disabled\");\n\t\t$(\"#plusImpulse\").addClass(\"disabled\");\n\t\t$(\"#minusImpulse\").addClass(\"disabled\");\n\t\t$(\"#undoLastAction\").addClass(\"disabled\");\n\t\tif (game.turnMode){this.switchTurnMode();}\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.select = function(){\n\t\tif (!this.selected){\n\t\t\tthis.doSelect();\n\t\t} else this.switchDiv();\n\t}\n\n\tthis.doSelect = function(){\n\t\tconsole.log(this);\n\t\taUnit = this.id;\n\t\tthis.selected = true;\n\t\tthis.setUnitGUI();\n\t\tgame.setShipTransform();\n\t\tthis.drawPositionMarker();\n\t\tgame.resetShipTransform();\n\t\tgame.drawAllPlans();\n\t\tthis.switchDiv();\n\t\tthis.setMoveMode();\n\n\t\t//console.log(this.getRemainingEP() / this.baseTurnCost)\n\t}\n\t\n\tthis.doUnselect = function(){\n\t\taUnit = false;\n\t\tthis.selected = false;\n\t\tthis.setUnitGUI();\n\t\tif (game.deploying){game.disableDeployment();}\n\t\telse if (game.flightDeploy){game.flightDeploy = false;}\n\t\tthis.unselectSystems();\n\t\tgame.setShipTransform();\n\t\tthis.drawPositionMarker();\n\t\tgame.resetShipTransform();\n\t\tgame.drawAllPlans();\n\t\tthis.switchDiv();\n\t\tthis.unsetMoveMode();\n\t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n\t\t$(\"#popupWrapper\").hide()\n\t\t$(\"#instructWrapper\").hide()\n\t\t$(\"#systemDetailsDiv\").remove();\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.doHighlight = function(){\n\t\tif (this.highlight){\n\t\t\tthis.highlight = false;\n\t\t\tgame.draw();\n\t\t}\t\n\t\telse {\n\t\t\tthis.highlight = true;\n\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\tctx.scale(cam.z, cam.z);\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(this.drawX, this.drawY, this.size/2, 0, 2*Math.PI, false);\n\t\t\tctx.closePath();\n\t\t\tctx.lineWidth = 3;\n\t\t\tctx.globalAlpha = 1;\n\t\t\tctx.strokeStyle = \"white\";\n\t\t\tctx.stroke();\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\t//\treturn isInArc(getCompassHeadingOfPoint(loc, pos, facing), start, end);\n\n\tthis.getOffensiveBonus = function(t){\n\t\treturn 0\n\t\tvar tPos;\n\t\tif (this.flight){return false;}\n\t\tif (t.salvo){\n\t\t\tif (t.targetid == this.id){\n\t\t\t\tif (t.nextStep == t.finalStep){\n\t\t\t\t\ttPos = t.getBaseOffsetPos();\n\t\t\t\t} else tPos = t.nextStep;\n\t\t\t}\n\t\t\telse return 0;\n\t\t} else tPos = t.getBaseOffsetPos();\n\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tvar ew = sensor.getEW();\n\t\tif (sensor.disabled || sensor.destroyed || ew.type == 1 || ew.type == 3){return 0;}\n\t\tif (ew.type == 2){return 0.2}\n\t\tvar origin = this.getBaseOffsetPos();\n\t\tvar d = getDistance(origin, tPos);\t\t\n\t\tif (d <= ew.dist || t.salvo && t.nextStep == t.finalStep){\n\t\t\tif (this.isInEWArc(origin, tPos, sensor, ew)){\n\t\t\t\treturn 0.5;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.getDefensiveBonus = function(s){\n\t\treturn 0\n\t\tif (this.flight || s.flight){\n\t\t\treturn 0;\n\t\t}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tvar ew = sensor.getEW();\n\n\t\tif (sensor.disabled || sensor.destroyed || ew.type == 0 || ew.type == 2){return 0;}\n\t\tif (ew.type == 3){return 0.2}\n\n\t\tvar origin = this.getBaseOffsetPos();\n\t\tvar tPos = s.getBaseOffsetPos();\n\t\tvar d = getDistance(origin, tPos);\n\n\t\tif (d <= ew.dist){\n\t\t\tif (this.isInEWArc(origin, tPos, sensor, ew)){\n\t\t\t\treturn 0.5;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isInEWArc = function(origin, target, sensor, ew){\t\t\n\t\tvar str = sensor.getOutput();\n\t\tvar len = 20;\n\t\tvar p = 1.5;\n\t\tvar\tw = Math.min(180, len * Math.pow(str/ew.dist, p));\n\t\tvar start = addAngle(0 + w, ew.angle);\n\t\tvar end = addAngle(360 - w, ew.angle);\n\t\treturn isInArc(getCompassHeadingOfPoint(origin,  target, this.getPlannedFacing()), start, end);\n\t}\n\n\tthis.getLockString = function(lock){\n\t\tif (lock){\n\t\t\treturn \"<span class='green'>Active Lock (x 1.5)</span>\";\n\t\t}\n\t\treturn \"<span class='red'>No Sensor Lock</span>\";\n\t}\n\n\tthis.canSetSensor = function(sensor){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tif (sensor.selected && !sensor.locked){\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\t\n\tthis.unselectSystems = function(){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\tvar buttons = $(this.element).find(\".system.selected\").each(function(){\n\t\t\t$(this).removeClass(\"selected\");\n\t\t});\t\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tthis.structures[i].systems[j].highlight = false;\n\t\t\t\tthis.structures[i].systems[j].selected = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.flight || this.salvo){return;}\n\t\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected){\n\t\t\t\tthis.primary.systems[i].select();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getFireOrders = function(){\n\t\tvar fires = [];\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n\t\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n\t\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n\t\t\t\t\t} else break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn fires;\n\t}\n\n\tthis.getEWSettings = function(){\n\t\treturn this.getSystemByName(\"Sensor\").getEW();\n\t}\n\n\tthis.getPowerOrders = function(){\n\t\tvar powers = [];\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tfor (var k = 0; k < this.structures[i].systems[j].powers.length; k++){\n\t\t\t\t\tif (this.structures[i].systems[j].powers[k].new){\n\t\t\t\t\t\tpowers.push(this.structures[i].systems[j].powers[k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n\t\t\t\tif (this.primary.systems[i].powers[j].new){\n\t\t\t\t\tpowers.push(this.primary.systems[i].powers[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn powers;\n\t}\n}\n\nShip.prototype.switchDiv = function(){\n\tif (this.selected){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse if ($(this.element).hasClass(\"disabled\")){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse {\n\t\tgame.zIndex--;\n\t\t$(this.element).addClass(\"disabled\").css(\"zIndex\", 10);\n\t}\n}\n\n\n\nShip.prototype.setPreMoveFacing = function(){\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\"){\n\t\t\tthis.drawFacing = 0;\n\t\t\tfor (var i = 0; i < Math.min(this.actions.length, 2); i++){\n\t\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.drawFacing = this.facing;\n\t\t}\n\t\t//console.log(this.id + \" \" + this.drawFacing);\n\t}\n\nShip.prototype.setPostMoveFacing = function(){\n\tthis.drawFacing = this.facing;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t}\n\t}\n}\n\nShip.prototype.setPreMovePosition = function(){\n\tthis.drawX = this.x;\n\tthis.drawY = this.y;\n}\n\nShip.prototype.setPostMovePosition = function(){\n\tif (!this.actionslength){\n\t\tthis.drawX = this.x;\n\t\tthis.drawY = this.y;\n\t\treturn;\n\t}\n\tif (this.ship){\n\t\tthis.drawX = this.actions[this.actions.length-1].x;\n\t\tthis.drawY = this.actions[this.actions.length-1].y;\n\t}\n\telse if (this.flight){\n\t\tif (game.phase == 1){\n\t\t\tthis.drawX = this.x;\n\t\t\tthis.drawY = this.y;\n\t\t}\n\t\telse if (game.phase >= 2){\n\t\t\tthis.drawX = this.actions[this.actions.length-1].x;\n\t\t\tthis.drawY = this.actions[this.actions.length-1].y;\n\t\t}\n\t}\n}\n\nShip.prototype.setDrawData = function(){\n\tif (this.available > game.turn || !this.available || game.turn == 1 && game.phase == -1){\n\t\treturn;\n\t}\n\t\n\tif (game.phase > 1){\n\t\tthis.setPostMovePosition();\n\t\tthis.setPostMoveFacing();\n\t}\n\telse {\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFacing();\n\t}\n}\n\nShip.prototype.setUnitGUI = function(){\n\tvar id = this.id;\n\t$(\"#unitGUI\").find(\"img\").each(function(){\n\t\tif ($(this).data(\"id\") == id){\n\t\t\t$(this).toggleClass(\"selected\"); return;\n\t\t}\n\t});\n\t$(this.element).toggleClass(\"selection\");\n}\n\n\t",
			"file": "shipclasses.js",
			"file_size": 81959,
			"file_write_time": 131459718041403224,
			"settings":
			{
				"buffer_size": 78861,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 69 files for \"moveToMaxVector\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  530  \t\t.click(function(){\n  531  \t\t\t//console.log(\"maxVector\")\n  532: \t\t\tgame.getUnitById($(this).data(\"shipid\")).moveToMaxVector();\n  533  \t\t})\n  534  \n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 1520  \t}\n 1521  \n 1522: \tthis.moveToMaxVector = function(){\n 1523  \t\tvar pos = this.getPlannedPosition();\n 1524  \t\tvar dist = this.getRemainingImpulse();\n\n2 matches across 2 files\n\n\nSearching 71 files for \"°!\"\n\n0 matches\n\nSearching 71 files for \"°\"\"\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 1080  \t\t\t\t.append($(\"<table>\")\n 1081  \t\t\t\t\t.append($(\"<tr>\")\n 1082: \t\t\t\t\t\t.append($(\"<td>\").html(\"Angle: \" + turn.a + \"°\")))\n 1083  \t\t\t\t\t.append($(\"<tr>\")\n 1084  \t\t\t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.ceil(turn.cost * turn.a * turn.mod * turn.dif) + \" EP\")))\n ....\n 1680  \t/*\t.append($(\"<table>\")\n 1681  \t\t\t.append($(\"<tr>\")\n 1682: \t\t\t\t.append($(\"<td>\").html(\"Angle: \" + a + \"°\")))\n 1683  \t\t\t.append($(\"<tr>\")\n 1684  \t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.round(c, 2) + \" (\" + Math.round(this.getRemainingEP() - c) + \") EP\")))\n ....\n 1689  \t\t.find(\"tr\").each(function(i){\n 1690  \t\t\tswitch (i){\n 1691: \t\t\t\tcase 0: $(this).html(\"Angle: \" + a + \"°\"); break;\n 1692  \t\t\t\tcase 1: $(this).html(remEP); break;\n 1693  \t\t\t\tcase 2: $(this).html(delay); break;\n ....\n 1864  \t\t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n 1865  \t\t\t\t.append($(\"<tr>\")\n 1866: \t\t\t\t\t.append($(\"<td>\").html(\"Turn Cost per 1°\"))\n 1867  \t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnCost(), 2) + \" EP\")))\n 1868  \t\t\t\t.append($(\"<tr>\")\n 1869: \t\t\t\t\t.append($(\"<td>\").html(\"Turn Delay per 1°\"))\n 1870  \t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n 1871  \t\t\t\t.append($(\"<tr>\")\n\n5 matches in 1 file\n\n\nSearching 71 files for \"°\"\"\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 1680  \t/*\t.append($(\"<table>\")\n 1681  \t\t\t.append($(\"<tr>\")\n 1682: \t\t\t\t.append($(\"<td>\").html(\"Angle: \" + a + \"°\")))\n 1683  \t\t\t.append($(\"<tr>\")\n 1684  \t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.round(c, 2) + \" (\" + Math.round(this.getRemainingEP() - c) + \") EP\")))\n\n1 match in 1 file\n\n\nSearching 71 files for \"confirmOrders\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  246  \t\t\t\t\t\t<?php \n  247  \t\t\t\t\t\t\tif (!$status){\n  248: \t\t\t\t\t\t\t\techo '<th colSpan=3 id=\"confirmOrders\" style=\"background-color: yellow;\">Anonymus Mode</th>';\n  249  \t\t\t\t\t\t\t}\n  250  \t\t\t\t\t\t\telse if ($status == \"ready\"){\n  251: \t\t\t\t\t\t\t\techo '<th colSpan=3 id=\"confirmOrders\" style=\"background-color: lightGreen;\">Waiting for Opponent</th>';\n  252  \t\t\t\t\t\t\t}\n  253  \t\t\t\t\t\t\telse {\n  254: \t\t\t\t\t\t\t\techo '<th colSpan=3 id=\"confirmOrders\" onclick=\"this.disabled=true;game.endPhase()\">Confirm Orders</th>';\n  255  \t\t\t\t\t\t\t}\n  256  \t\t\t\t\t\t\t?>\n\nC:\\xampp\\htdocs\\fire\\style.css:\n 1066  }\n 1067  \n 1068: #confirmOrders {\n 1069  \tfont-size: 20px;\n 1070  \tcursor: pointer;\n ....\n 1073  }\n 1074  \n 1075: #confirmOrders:hover {\n 1076  \tbackground-color: #27e627;\n 1077  }\n\n5 matches across 2 files\n\n\nSearching 71 files for \"insertFireOrders\"\n\nC:\\xampp\\htdocs\\fire\\postGameData.php:\n   52  \t\t}\n   53  \t\tif (isset($_POST[\"fireOrders\"])){\n   54: \t\t\t$dbManager->insertFireOrders($_POST[\"gameid\"], $_POST[\"gameturn\"], $_POST[\"fireOrders\"]);\n   55  \t\t}\n   56  \t\tif (isset($_POST[\"ew\"])){\n   ..\n   70  \t}\n   71  \telse if ($_POST[\"type\"] == \"firing\"){\n   72: \t\tif ($dbManager->insertFireOrders($_POST[\"gameid\"], $_POST[\"gameturn\"], $_POST[\"fireOrders\"])){\n   73  \t\t\tif ($dbManager->setPlayerStatus($_POST[\"userid\"], $_POST[\"gameid\"], $_POST[\"gameturn\"], $_POST[\"gamephase\"], \"ready\")){\n   74  \t\t\t\techo \"firing success\";\n\nC:\\xampp\\htdocs\\fire\\server\\dbManager.php:\n  889  \t}\n  890  \n  891: \tpublic function insertFireOrders($gameid, $turn, $fires){\n  892: \t\t//Debug::log(\"insertFireOrders: \".sizeof($fires));\n  893  \t\t$stmt = $this->connection->prepare(\"\n  894  \t\t\tINSERT INTO fireorders \n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  696  \t\t}\n  697  \t\tif (sizeof($fires)){\n  698: \t\t\tDBManager::app()->insertFireOrders($this->gameid, $this->turn, $fires);\n  699  \t\t}\n  700  \t\treturn true;\n  ...\n 1240  \n 1241  \t\tif (sizeof($fires)){ // resolve fireorders, insert and get to receive DB id\n 1242: \t\t\tDBManager::app()->insertFireOrders($this->gameid, $this->turn, $fires);\n 1243  \t\t\t$fires = array();\n 1244  \t\t\t$fires = DBManager::app()->getUnresolvedFireOrders($this->gameid, $this->turn);\t\t\n\n6 matches across 3 files\n\n\nSearching 71 files for \"setFire\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   85  \t\t$(\"#instructWrapper\").hide();\n   86  \t\t$(\"#deployOverlay\").hide();\n   87: \t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select(e);\n   88  \t\tgame.flightDeploy = false;\n   89  \t\tthis.draw();\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  581  \t\t\t\t\t\t\t\tif (inArc && validWeapon){\n  582  \t\t\t\t\t\t\t\t\t// FireOrder(id, turn, shooterid, targetid, weaponid, req, notes, hits, resolved){\n  583: \t\t\t\t\t\t\t\t\tship.structures[i].systems[j].setFireOrder(vessel.id);\n  584  \t\t\t\t\t\t\t\t}\n  585  \t\t\t\t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  722  \t\t$this->setupShips();\n  723  \n  724: \t\t$this->setFireOrderDetails();\n  725  \t\t$this->sortFireOrders();\n  726  \t\t$this->resolveShipFireOrders();\n  ...\n  898  \t}\n  899  \n  900: \tpublic function setFireOrderDetails(){\n  901  \t\tfor ($i = sizeof($this->fires)-1; $i >= 0; $i--){\n  902  \t\t\t//echo \"fire: \".$this->fires[$i]->id; echo \"</br></br>\";\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n  571  \treturn;\n  572  }\n  573: System.prototype.setFireOrder = function(targetid){\n  574  \tif (this.odds <= 0){return;}\n  575  \tthis.fireOrders.push(\n  ...\n  581  \tthis.setSystemBorder();\n  582  }\n  583: System.prototype.unsetFireOrder = function(){\n  584  \tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n  585  \t\tif (this.fireOrders[i].turn == game.turn){\n  ...\n 1329  \t\telse if (this.getLoadLevel() >= 1){\n 1330  \t\t\tif (this.hasUnresolvedFireOrder()){\n 1331: \t\t\t\tthis.unsetFireOrder();\n 1332  \t\t\t}\n 1333  \t\t\tif (this.selected){\n ....\n 1892  }\n 1893  \n 1894: Dual.prototype.setFireOrder = function(targetid){\n 1895  \tvar w = this.getActiveWeapon();\n 1896  \tif (w.odds <= 0){return;}\n ....\n 2244  \telse if (this.canFire()){\n 2245  \t\tif (this.hasUnresolvedFireOrder()){\n 2246: \t\t\tthis.unsetFireOrder();\n 2247  \t\t}\n 2248  \n ....\n 2494  }\n 2495  \n 2496: Hangar.prototype.setFireOrder = function(targetid){\n 2497  \tthis.fireOrders.push(\n 2498  \t\t{id: 0, turn: game.turn, shooterid: this.parentId, targetid: 0, weaponid: this.id, \n ....\n 2605  \t\t$(\"#launchRate\").html(this.getLaunchRate());\n 2606  \t\t$(\"#capacity\").html(this.output);\n 2607: \tthis.unsetFireOrder();\n 2608  \tthis.doUndoActions();\n 2609  \tthis.showHangarControl();\n ....\n 2679  \t\t\t\t\tif (game.ships[i].launchdata.shipid == window.aUnit && game.ships[i].launchdata.systemid == this.id){\n 2680  \t\t\t\t\t\t//console.log(\"splice\");\n 2681: \t\t\t\t\t\t//this.unsetFireOrder();\n 2682  \t\t\t\t\t\tgame.ships.splice(i, 1);\n 2683  \t\t\t\t\t\tgame.draw();\n\n12 matches across 4 files\n\n\nSearching 71 files for \"set up\"\n\n0 matches\n\nSearching 71 files for \"setup EW\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  158  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Sensor\" && !this.ships[i].primary.systems[j].destroyed){\n  159  \t\t\t\t\t\t\tif (!this.ships[i].primary.systems[j].used){\n  160: \t\t\t\t\t\t\t\tpopup(\"You havent setup EW for unit (#\" + this.ships[i].id + \")\"); \n  161  \t\t\t\t\t\t\t\treturn true;\n  162  \t\t\t\t\t\t\t}\n\n1 match in 1 file\n\n\nSearching 71 files for \"setup EW\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  158  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Sensor\" && !this.ships[i].primary.systems[j].destroyed){\n  159  \t\t\t\t\t\t\tif (!this.ships[i].primary.systems[j].used){\n  160: \t\t\t\t\t\t\t\tpopup(\"You havent setup EW for unit (#\" + this.ships[i].id + \")\"); \n  161  \t\t\t\t\t\t\t\treturn true;\n  162  \t\t\t\t\t\t\t}\n\n1 match in 1 file\n\n\nSearching 71 files for \"speed mod\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  150  \t\t\t\t\t<tr>\n  151  \t\t\t\t\t\t<th style=\"text-align: left\">\n  152: \t\t\t\t\t\t\t Speed Mod\n  153  \t\t\t\t\t\t</th>\n  154  \t\t\t\t\t\t<th id=\"impulseMod\" style=\"text-align: center\">\n\n1 match in 1 file\n\n\nSearching 71 files for \"\"---\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n 1474  \t\t//\tconsole.log(this.fireOrders[i].weapon.priority);\n 1475  \t\t//}\n 1476: \t\t//console.log(\"------------------\");\n 1477  \n 1478      }\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  264  \t\t\t\t\t\ttr.className = \"buttonSelection\";\n  265  \t\t\t\t\tvar button = tr.insertCell(-1);\n  266: \t\t\t\t\t\tbutton.innerHTML = \"--- Confirm Ship Selection ---\";\n  267  \t\t\t\t\t\tbutton.colSpan = 2;\n  268  \t\t\t\t\t\t$(button).click(function(){\n\n2 matches across 2 files\n\n\nSearching 71 files for \"havent\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  159  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Sensor\" && !this.ships[i].primary.systems[j].destroyed){\n  160  \t\t\t\t\t\t\tif (!this.ships[i].primary.systems[j].used){\n  161: \t\t\t\t\t\t\t\tpopup(\"You havent setup EW for unit (#\" + this.ships[i].id + \")\"); \n  162  \t\t\t\t\t\t\t\tthis.ships[i].select();\n  163  \t\t\t\t\t\t\t\treturn true;\n\n1 match in 1 file\n\n\nSearching 71 files for \"enableHangarDeployment\"\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2549  \t\t\tif (! ship.hasSystemsSelected()){\n 2550  \t\t\t\tthis.selected = true;\n 2551: \t\t\t\tthis.enableHangarDeployment(e);\n 2552  \t\t\t\tthis.drawArc();\n 2553  \t\t\t}\n ....\n 2622  }\n 2623  \n 2624: Hangar.prototype.enableHangarDeployment = function(e){\n 2625  \tif (game.getUnitById(aUnit).userid != game.userid){\n 2626  \t\treturn false;\n\n2 matches in 1 file\n\n\nSearching 71 files for \"doDeployFlig\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   53  \t}\n   54  \t\n   55: \tthis.doDeployFlight = function(e, pos){\n   56  \t\tvar facing = Math.floor(getAngleFromTo(game.getUnitById(aUnit).getPlannedPosition(), {x: pos.x, y: pos.y}))\n   57  \n\nC:\\xampp\\htdocs\\fire\\script.js:\n  425  \telse if (game.flightDeploy){ // deploy via hangar\n  426  \t\tif (game.getUnitById(aUnit).canDeployFlightHere(pos)){\n  427: \t\t\tgame.doDeployFlight(e, pos);\n  428  \t\t\t$(\"#popupWrapper\").hide();\n  429  \t\t}\n\n2 matches across 2 files\n\n\nSearching 71 files for \"flightDeploy =\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   13  \tthis.mode = false;\n   14  \tthis.deploying = false;\n   15: \tthis.flightDeploy = false;\n   16  \tthis.canSubmit = false;\n   17  \tthis.index = 1;\n   ..\n   86  \t\t$(\"#deployOverlay\").hide();\n   87  \t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select(e);\n   88: \t\tgame.flightDeploy = false;\n   89  \t\tthis.draw();\n   90  \t}\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2567  \t\tthis.setUnitGUI();\n 2568  \t\tif (game.deploying){game.disableDeployment();}\n 2569: \t\telse if (game.flightDeploy){game.flightDeploy = false;}\n 2570  \t\tthis.unselectSystems();\n 2571  \t\tgame.setShipTransform();\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2558  \t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n 2559  \t\tif (game.flightDeploy){\n 2560: \t\t\tgame.flightDeploy = false;\n 2561  \t\t\t$(\"#deployOverlay\").hide();\n 2562  \t\t}\n ....\n 2741  \tmoveCtx.clearRect(0, 0, res.x, res.y);\n 2742  \tgame.setupDeploymentDiv();\n 2743: \tgame.flightDeploy = this;\n 2744  }\n 2745  \n\n5 matches across 3 files\n\n\nSearching 71 files for \"getPointInDirection\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   59  \t\tvar hangar = ship.getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\"));\n   60  \n   61: \t\tvar p = getPointInDirection()\n   62  \n   63  \t\tvar facing = Math.floor(getAngleFromTo(game.getUnitById(aUnit).getPlannedPosition(), {x: pos.x, y: pos.y}))\n\nC:\\xampp\\htdocs\\fire\\graphics.js:\n   21  //function drawProjectile(weapon, ox, oy, x, y, now, end){\n   22  function drawProjectile(weapon, fire){\n   23: \t//getPointInDirection(dis, angle, oX, oY){\n   24  \n   25  \tvar x = fire.ox + fire.nx * fire.n;\n   26  \tvar y = fire.oy + fire.ny * fire.n;\n   27: \tvar trailEnd = getPointInDirection(weapon.projSize*2.5, fire.f, x, y);\n   28  \tvar w = 1;\n   29  \n   ..\n   53  \n   54  /*\tif (weapon instanceof Plasma){\n   55: \t\t//var end = getPointInDirection(13, fire.f-180, trailEnd.x, trailEnd.y);\n   56  \t\tfor (i = 0; i < 3; i++){\n   57  \t\t\tx = x + range(-2, 2)\n   ..\n  114  \t/*if (weapon instanceof Plasma){\n  115  \t\tfor (i = 0; i < 6; i++){\n  116: \t\t\tvar d = getPointInDirection(2*sin, 360/6*i + range(-15, 15), x, y)\n  117  \n  118  \t\t\tfxCtx.beginPath();\n  ...\n  127  \tif (weapon instanceof Plasma){\n  128  \t\tfor (i = 0; i < 4; i++){\n  129: \t\t\tvar d = getPointInDirection((3 + range(-1, 1))*sin, (getAngle(anim.ox, anim.oy, anim.tx, anim.ty)+(180-(4/2*10) + i*10)), anim.tx, anim.ty)\n  130  \n  131  \t\t\tfxCtx.beginPath();\n  ...\n  274  \t\tvar start = addAngle(0 + w-facing, a);\n  275  \t\tvar end = addAngle(360 - w-facing, a);\n  276: \t\tvar p1 = getPointInDirection(str, start, loc.x, loc.y);\n  277  \t\tvar rad1 = degreeToRadian(start);\n  278  \t\tvar rad2 = degreeToRadian(end);\n\nC:\\xampp\\htdocs\\fire\\mathLib.js:\n    1  \n    2: function getPointInDirection(dis, angle, oX, oY){\n    3  \tvar x = Math.round(oX + dis * Math.cos(angle* Math.PI / 180));\n    4  \tvar y = Math.round(oY + dis * Math.sin(angle* Math.PI / 180));\n\nC:\\xampp\\htdocs\\fire\\salvo.js:\n  433  \t\tif (impulse < dist){\n  434  \t\t\tvar a = getAngleFromTo(this, target.getPlannedPosition());\n  435: \t\t\tthis.nextStep = getPointInDirection(impulse, a, this.x, this.y);\n  436  \t\t}\n  437  \t\telse {\n  ...\n  454  \t\t}\n  455  \n  456: \t\t//var t = getPointInDirection(step, a, this.x, this.y);\n  457  \n  458  \t\tsalvoCtx.translate(cam.o.x, cam.o.y);\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  490  \t\t\t$a = Math::getAngle($sPos->x, $sPos->y, $tPos->x, $tPos->y);\n  491  \n  492: \t\t\t$launch = Math::getPointInDirection($shooter->size/3, $a, $sPos->x + mt_rand(-10, 10), $sPos->y + mt_rand(-10, 10));\n  493  \n  494  \t\t\t$ball = new Salvo(0, $shooter->userid, $fires[$i]->shots, $fires[$i]->targetid, $name, \"launched\", $this->turn, $shooter->id);\n  ...\n 1099  \t\t\telse { // home in target vector\n 1100  \t\t\t\tDebug::log(\"home in\");\n 1101: \t\t\t\t$iPos = Math::getPointInDirection($impulse, $a, $sPos->x, $sPos->y);\n 1102  \t\t\t\t$ballistic->actions[] = new Action(-1, \n 1103  \t\t\t\t\t$this->turn,\n ....\n 1143  \t\t\t\t\t//Debug::log(\"intercept home in\");\n 1144  \t\t\t\t\t$a = Math::getAngle($interceptStartPos->x, $interceptStartPos->y, $interceptEndPos->x, $interceptEndPos->y);\n 1145: \t\t\t\t\t$iPos = Math::getPointInDirection($interceptRange, $a, $interceptStartPos->x, $interceptStartPos->y);\n 1146  \t\t\t\t\t$ballistic->actions[] = new Action(-1, \n 1147  \t\t\t\t\t\t$this->turn,\n ....\n 1174  \t\t\t\t$tPos = $ballistic->target->actions[sizeof($ballistic->target->actions)-1];\n 1175  \t\t\t\t$a = Math::getAngle($interceptStartPos->x, $interceptStartPos->y, $tPos->x, $tPos->y);\n 1176: \t\t\t\t$iPos = Math::getPointInDirection($interceptRange, $a, $interceptStartPos->x, $interceptStartPos->y);\n 1177  \t\t\t\t$ballistic->actions[] = new Action(-1, \n 1178  \t\t\t\t\t$this->turn,\n\nC:\\xampp\\htdocs\\fire\\server\\math.php:\n    6  \t}\n    7  \n    8: \tstatic function getPointInDirection($dist, $a, $oX, $oY){\n    9  \t\t$x = round($oX + $dist * cos($a * M_PI / 180));\n   10  \t\t$y = round($oY + $dist * sin($a * M_PI / 180));\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  406  \t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n  407  \t\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n  408: \t\t\t\t\treturn getPointInDirection(range(0, this.size / 4), a, 0, 0);\n  409  \t\t\t\t}\n  410  \t\t\t}\n  ...\n  562  \t\tvar center = this.getPlannedPosition();\n  563  \t\tvar angle = this.getPlannedFacing();\n  564: \t\tvar p = getPointInDirection(this.getCurrentImpulse(), angle, center.x, center.y);\n  565  \t\t\n  566  \t\tmouseCtx.beginPath();\t\t\t\n  ...\n  668  \t\tvar angle = this.getPlannedFacing();\n  669  \t\tvar pos = this.getPlannedPosition();\n  670: \t\tvar p1 = getPointInDirection(system.range || res.x, system.start + angle, pos.x, pos.y);\n  671: \t\tvar p2 = getPointInDirection(system.range || res.y, system.end + angle, pos.x, pos.y)\n  672  \t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n  673  \t\tvar rad1 = degreeToRadian(system.start + angle);\n  ...\n  819  \t\tvar angle = this.getPlannedFacing();\n  820  \n  821: \t\tvar p1 = getPointInDirection(80, 90+angle, shipPos.x, shipPos.y);\n  822: \t\tvar p2 = getPointInDirection(-80, 90+angle, shipPos.x, shipPos.y);\n  823: \t\tvar p3 = getPointInDirection(80, 180+angle, shipPos.x, shipPos.y);\n  824: \t\tvar p4 = getPointInDirection(-80, 180+angle, shipPos.x, shipPos.y);\n  825  \n  826  \t\tmoveCtx.beginPath();\n  ...\n  851  \n  852  \t\tvar turnEle = $(\"#game\").find(\"#epButton\")[0];\n  853: \t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, 90), center.x, center.y);\n  854  \n  855  \t\t$(turnEle)\n  ...\n  863  \tthis.drawMoveArea = function(center, rem){\n  864  \t\t//if (game.phase < 0 || game.phase > 1){return;}\n  865: \t\tvar p1 = getPointInDirection(rem, this.moveAngles.start, center.x, center.y);\n  866  \t\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n  867  \t\tvar rad1 = degreeToRadian(this.moveAngles.start);\n  ...\n  915  \tthis.drawMoveArcs = function(center, rem){\n  916  \t\tfor (var i in this.moveAngles){\n  917: \t\t\tvar p = getPointInDirection(rem, this.moveAngles[i], center.x, center.y);\n  918  \t\t\tmoveCtx.beginPath();\n  919  \t\t\tmoveCtx.moveTo(center.x, center.y);\n  ...\n 1224  \t\tif (rem > 0){\n 1225  \t\t\tele = document.getElementById(\"maxVector\");\n 1226: \t\t\tvar p = getPointInDirection(rem + 90, angle, center.x, center.y);\n 1227  \t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n 1228  \t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n ....\n 1240  \t\t\tif (rem >= delay){\n 1241  \t\t\t\tele = document.getElementById(\"maxTurnVector\");\n 1242: \t\t\t\tvar p = getPointInDirection(rem + 60, angle, center.x, center.y);\n 1243  \t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n 1244  \t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n ....\n 1257  \n 1258  \t\t\t\t\tele = document.getElementById(\"maxCutVector\");\n 1259: \t\t\t\t\tvar p = getPointInDirection(rem + 30, angle, center.x, center.y);\n 1260  \t\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n 1261  \t\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n ....\n 1286  \t\tvar center = this.getPlannedPosition();\n 1287  \t\tvar angle = this.getPlannedFacing();\n 1288: \t\tvar p = getPointInDirection(200, angle, center.x, center.y);\n 1289  \t\t\n 1290  \t\tmoveCtx.beginPath();\t\t\t\n ....\n 1323  \t\tvar angle = this.getPlannedFacing();\n 1324  \t\tvar turnEle = $(\"#game\").find(\"#turnButton\")[0];\n 1325: \t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n 1326  \t\t$(turnEle)\n 1327  \t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n ....\n 1343  \t\t\t\tvar modAngle = turnAngle * i * j;\n 1344  \t\t\t\tvar newAngle = addToDirection(angle, modAngle);\n 1345: \t\t\t\tvar p = getPointInDirection(Math.max(100, this.getRemainingImpulse()*2), newAngle, center.x, center.y);\n 1346  \t\t\t\tif (turnAngle != 180){\n 1347  \t\t\t\t\tmoveCtx.beginPath();\n ....\n 1387  \tthis.drawImpulseUI = function(){\n 1388  \t\tvar center = {x: this.x, y: this.y};\n 1389: \t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.getDrawFacing() + 180, center.x, center.y);\n 1390  \n 1391  \t\tif (this.canUndoLastAction()){\n ....\n 1401  \t\tvar w = gui.width();\n 1402  \t\tvar h = gui.height();\n 1403: \t\tvar p = getPointInDirection((this.size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n 1404  \n 1405  \t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n ....\n 1412  \n 1413  \t*/\tif (this.canIncreaseImpulse()){\n 1414: \t\t\tvar pPlus = getPointInDirection(50, this.getDrawFacing() +90, p1.x, p1.y);\n 1415  \t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n 1416  \t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n ....\n 1419  \n 1420  \t\tif (this.canDecreaseImpulse()){\n 1421: \t\t\tvar mMinus = getPointInDirection(50, this.getDrawFacing() -90, p1.x, p1.y);\n 1422  \t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n 1423  \t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n ....\n 1579  \tthis.moveInVector = function(dist){\n 1580  \t\tvar pos = this.getPlannedPosition();\n 1581: \t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n 1582  \t\t\tthis.issueMove(goal, dist);\n 1583  \t}\n ....\n 1586  \t\tvar pos = this.getPlannedPosition();\n 1587  \t\tvar dist = this.getRemainingImpulse();\n 1588: \t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n 1589  \t\t\tthis.issueMove(goal, dist);\n 1590  \t}\n ....\n 1594  \t\tvar dist = this.getRemainingDelay();\n 1595  \t\tvar impulse = this.getRemainingImpulse();\n 1596: \t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n 1597  \t\tthis.issueMove(goal, dist);\n 1598  \t}\t\n ....\n 1602  \t\tvar dist = this.getRemainingDelay();\n 1603  \t\tvar impulse = this.getRemainingImpulse();\n 1604: \t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n 1605  \t\tthis.issueMove(goal, dist);\n 1606  \t}\n ....\n 2160  \t\t\t}\n 2161  \t\t\t\n 2162: \t\t\tvar pos = getPointInDirection(135 - offsetX, a-90, conWidth/2, conHeight/2-40);\n 2163  \t\t\tvar w = $(structDiv).width();\n 2164  \t\t\tvar h = $(structDiv).height();\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 1508  Weapon.prototype.drawArc = function(facing, pos){\n 1509  \tfor (var i = 0; i < this.arc.length; i++){\n 1510: \t\tvar p1 = getPointInDirection(1200, this.arc[i][0] + facing, pos.x, pos.y);\n 1511: \t\tvar p2 = getPointInDirection(1200, this.arc[i][1] + facing, pos.x, pos.y)\n 1512  \t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n 1513  \t\tvar rad1 = degreeToRadian(this.arc[i][0] + facing);\n ....\n 1842  \t\t\t\tvar a = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.drawX, y: fire.target.drawY} );\n 1843  \t\t\t\ta = addToDirection(a, range(-10, 10));\n 1844: \t\t\t\ttb = getPointInDirection(fire.weapon.rakeTime/4, a, tx, ty); // BEAM swipe END on HIT\t\n 1845  \t\t\t}\n 1846  \t\t\telse { // shot miss\n ....\n 1849  \t\t\t\tvar a = getAngleFromTo( {x: tx, y: ty}, {x: fire.target.drawX, y: fire.target.drawY} );\n 1850  \t\t\t\ta = addToDirection(a, range(-40, 40));\n 1851: \t\t\t\ttb = getPointInDirection(fire.weapon.rakeTime/3, a, tx, ty); // BEAM swipe END on MISS\t\n 1852  \t\t\t}\n 1853  \n\n45 matches across 8 files\n\n\nSearching 71 files for \"flightDeploy = \"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   13  \tthis.mode = false;\n   14  \tthis.deploying = false;\n   15: \tthis.flightDeploy = false;\n   16  \tthis.canSubmit = false;\n   17  \tthis.index = 1;\n   ..\n   54  \n   55  \tthis.doDeployFlight = function(){\n   56: \t\tthis.flightDeploy = 1;\n   57  \n   58  \t\tvar ship = this.getUnitById(aUnit);\n   ..\n   94  \t\t$(\"#deployOverlay\").hide();\n   95  \t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select(e);\n   96: \t\tgame.flightDeploy = false;\n   97  \t\tthis.draw();\n   98  \n   ..\n  133  \t\t$(\"#deployOverlay\").hide();\n  134  \t\tgame.getUnitById(aUnit).getSystemById(this.flightDeploy.id).setFireOrder().select(e);\n  135: \t\tgame.flightDeploy = false;\n  136  \t\tthis.draw();\n  137  \t}\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2567  \t\tthis.setUnitGUI();\n 2568  \t\tif (game.deploying){game.disableDeployment();}\n 2569: \t\telse if (game.flightDeploy){game.flightDeploy = false;}\n 2570  \t\tthis.unselectSystems();\n 2571  \t\tgame.setShipTransform();\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2558  \t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n 2559  \t\tif (game.flightDeploy){\n 2560: \t\t\tgame.flightDeploy = false;\n 2561  \t\t\t$(\"#deployOverlay\").hide();\n 2562  \t\t}\n ....\n 2741  \tmoveCtx.clearRect(0, 0, res.x, res.y);\n 2742  \tgame.setupDeploymentDiv();\n 2743: \tgame.flightDeploy = this;\n 2744  }\n 2745  \n\n7 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 23175,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6013,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 456,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3783,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3037,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 19330,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 48158,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 5498,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 44834,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3748,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2774,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2568,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2273,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1611,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 4564,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 5057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 2900,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 1361,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 4810,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4745,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 5015,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6634,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 2518,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 8026,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4742,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 30476,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4111,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 83979,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8397,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1590,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 183,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 17618,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 6997,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 65028,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 16306,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 3866,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7220,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 1361,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2505,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2383,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1619,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 13157,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2732,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1992,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3214,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2682,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2311,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/game.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"*p.hp",
			"*php",
			"",
			"salvo.php",
			"*.php",
			"salvo.php",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"getActiveUnits",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"*",
			"",
			"*.js",
			".js",
			"",
			"*.js",
			"",
			"*.php",
			"*.*",
			"",
			"manager.php",
			"*.php",
			"*.js",
			"*.php",
			"php",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"strike",
			"hostile",
			"deployOverlay",
			"deployver",
			"flightdeploy",
			"deploy",
			"this.flightdeploy.",
			"flightDeploy = ",
			"flightdeploy = ",
			"getPointInDirection",
			"hangarloadoutdiv",
			"flightDeploy =",
			"flightDeploy",
			"deploying =",
			"doDeployFlig",
			"doDeployFlight",
			"enableHangarDeployment",
			"hangar",
			"enableHangarDeployment",
			"hangarl",
			"launch",
			"doDeployFlight",
			"weaponaimev",
			"getHitSectionFromAngle",
			"weaponaime",
			"canconfirm",
			"canconfrim",
			"hitchance",
			"mass",
			"calcu",
			"endTurn",
			"startfiring",
			"startFiringPhase",
			"startNewTurn",
			"startFiringPhase",
			"startDeploymentPhase",
			"calcula",
			"exposed",
			"expand",
			"havent",
			"setTimeLoaded",
			"loadlevel ",
			"effect(\"reload",
			"\"reload\")",
			"\"reload",
			"getLoadLevel ",
			"getSubHitChance",
			"calcu",
			"getDogfightHitModifier",
			"calculatetohit",
			"isDogfighting",
			"weaponaimevent",
			"\"---",
			"//",
			"shipdiv ",
			"220",
			"speed mod",
			"setup EW",
			"set up",
			"setFire",
			"insertFireOrders",
			"insert into fireo",
			"setUnitGUI",
			".click",
			"contextmen",
			"createDiv",
			"endphase",
			"confirmOrders",
			"baseHit",
			"confirmorders",
			"gree",
			"°\"",
			"°!",
			"basehit",
			"resolvefire",
			"\"yellow",
			"maxturnvector",
			"moveToMaxVector",
			"addclass(\"disabled\"",
			"switchTurnMode",
			"undolastaction",
			"turnarcs",
			"getremainingdelay()",
			"drawDelay",
			"maxvector",
			"#maxvector",
			"initS",
			"shortinfo",
			" ",
			"32",
			"32px",
			"32",
			"system",
			"deploys =",
			"deploy",
			"this.deploy[i]",
			"from depl",
			"insert into deploy",
			"getavaila",
			"getAvailableReinforcements",
			"posisocc",
			"posIsOccupied",
			"ship",
			"canMoveHere",
			"selection",
			"selected po",
			"the sel",
			"drawdeploy",
			"setupdeploymentz",
			"drawDeploymentZone",
			"canDeploy",
			"candeploy",
			"drawDeploymentZone",
			"getAvailableReinforcements",
			"getBoostEffect ",
			"otype.getBoostef",
			"otype.getBoos",
			"otype.get",
			"undoDeployment",
			"initdeploymentw",
			"initdeployment",
			"pickre",
			"salvoCtx",
			"drawDelayEstimator",
			"delayesti",
			"handlet",
			"getPowerDiv",
			"PowerDiv = func"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"hangar.",
			"this.deploys[i]",
			"mouseCtx",
			"doOverkill",
			"applyOverkill",
			"new",
			"$this->boostEffect[] = new",
			"$manager->incoming[$i]",
			"$units",
			"insertServerActions",
			"$units[$i][\"actions\"][$j]",
			"insertClientActions",
			"drawMovePlan",
			"element",
			"",
			"getRemainingIntegrity",
			"getImpulseProfileMod",
			"getShots($this->turn)",
			"public function getShots($turn){",
			"getEWSettings",
			"ctx",
			"</span>",
			"<span class='red'",
			"<span",
			"ballistics",
			"if (this.destroyed || this.disabled || this.locked){",
			"$this",
			"doDamage($fire, $roll, $system)",
			"rollToHit",
			"getSection",
			"angle",
			"section",
			"$negation = $fire->target->getArmourValue($fire, $hitSystem);",
			"$negation = $fire->target->getArmourElement($fire) * $hitSystem->getArmourMod();",
			"salvo",
			"move",
			"moveAngles",
			"getPlannedFacing",
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data.",
			"getTraverseMod",
			"ding",
			"getCritMod",
			"= data.",
			", \"LightParticleBeam\"",
			"deployArea[i].",
			"deployArea[i]",
			"MediumPlasma",
			"Dual",
			"getActiveSystem",
			"setState = function($turn)",
			"setState($turn)",
			"setSystemBorder",
			"gui",
			"ele",
			"boostable",
			"MediumPulse",
			"LightPulse",
			"getImpulse",
			"system",
			"= data.",
			"",
			"getTotalImpulse",
			"getRemainingImpulse()",
			"structContainer",
			"ele",
			" = data.",
			"hit",
			"system",
			"fire.explo.t",
			"end",
			"fire.",
			", maxBoost, boostEffect);",
			", maxBoost, boostEffect){",
			"maxBoost, boostEffect, ",
			"__construct($id, $userid, $available, $status, $destroyed){",
			"construct($id, $userid, $available, $status, $destroyed);",
			"[k]",
			"ele.anim[0].",
			"ele.anim[k].",
			"animate",
			"window.animation.ballAnims[i]",
			"game.ballistics",
			"ballAnims",
			"window.animate.ballAnims",
			"",
			"getPosition",
			"",
			"finalStep",
			"finalPos",
			"setFinalStep",
			"setFinalDestination",
			"setFinalPosition",
			"",
			"hasUnresolvedFireOrder",
			"data",
			"$ballistic",
			"FusionCannon",
			"HeavyIon",
			"MediumIon",
			"LightIon",
			"expandDiv",
			"fire",
			"this",
			"fire",
			"ongoing",
			"canAdvance",
			"canAdvanceGamestate(",
			"public $name",
			"removeFighter",
			"addFighter",
			"loads[l]",
			"isDestroyedThisTurn",
			"Armor",
			"MissileLauncher",
			"select()",
			"getUnitById",
			"aUnit",
			"",
			"aShip"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 12,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5876,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 862.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4736,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 260.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13714,
						"regions":
						{
						},
						"selection":
						[
							[
								8059,
								8141
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5212.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15703,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8609.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19384,
						"regions":
						{
						},
						"selection":
						[
							[
								15816,
								15816
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16917.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 78861,
						"regions":
						{
						},
						"selection":
						[
							[
								73177,
								73177
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 38917.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23175,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										189,
										204
									],
									[
										297,
										312
									],
									[
										675,
										677
									],
									[
										938,
										940
									],
									[
										1209,
										1211
									],
									[
										1494,
										1496
									],
									[
										1655,
										1657
									],
									[
										1965,
										1967
									],
									[
										2300,
										2313
									],
									[
										2469,
										2482
									],
									[
										2626,
										2639
									],
									[
										2799,
										2812
									],
									[
										2896,
										2909
									],
									[
										3148,
										3164
									],
									[
										3359,
										3375
									],
									[
										3688,
										3704
									],
									[
										3753,
										3769
									],
									[
										3981,
										3997
									],
									[
										4195,
										4211
									],
									[
										4606,
										4613
									],
									[
										4910,
										4917
									],
									[
										5064,
										5071
									],
									[
										5210,
										5217
									],
									[
										5442,
										5449
									],
									[
										5617,
										5624
									],
									[
										5872,
										5879
									],
									[
										5975,
										5982
									],
									[
										6186,
										6193
									],
									[
										6268,
										6275
									],
									[
										6544,
										6551
									],
									[
										6804,
										6811
									],
									[
										7230,
										7238
									],
									[
										7618,
										7626
									],
									[
										7875,
										7884
									],
									[
										8144,
										8148
									],
									[
										8348,
										8352
									],
									[
										8748,
										8754
									],
									[
										9068,
										9090
									],
									[
										9181,
										9203
									],
									[
										9426,
										9438
									],
									[
										9756,
										9768
									],
									[
										9999,
										10013
									],
									[
										10229,
										10243
									],
									[
										10447,
										10461
									],
									[
										10673,
										10687
									],
									[
										10845,
										10859
									],
									[
										11095,
										11114
									],
									[
										11399,
										11418
									],
									[
										11559,
										11578
									],
									[
										11718,
										11737
									],
									[
										11943,
										11962
									],
									[
										12136,
										12155
									],
									[
										12425,
										12444
									],
									[
										12614,
										12633
									],
									[
										12954,
										12973
									],
									[
										13074,
										13093
									],
									[
										13322,
										13341
									],
									[
										13675,
										13694
									],
									[
										14006,
										14025
									],
									[
										14388,
										14407
									],
									[
										14633,
										14652
									],
									[
										14990,
										15009
									],
									[
										15188,
										15207
									],
									[
										15422,
										15441
									],
									[
										15520,
										15539
									],
									[
										15793,
										15812
									],
									[
										15868,
										15887
									],
									[
										15944,
										15963
									],
									[
										16020,
										16039
									],
									[
										16205,
										16224
									],
									[
										16445,
										16464
									],
									[
										16755,
										16774
									],
									[
										16999,
										17018
									],
									[
										17298,
										17317
									],
									[
										17580,
										17599
									],
									[
										17889,
										17908
									],
									[
										18113,
										18132
									],
									[
										18412,
										18431
									],
									[
										18686,
										18705
									],
									[
										18910,
										18929
									],
									[
										19201,
										19220
									],
									[
										19444,
										19463
									],
									[
										19727,
										19746
									],
									[
										19961,
										19980
									],
									[
										20198,
										20217
									],
									[
										20435,
										20454
									],
									[
										20597,
										20616
									],
									[
										20908,
										20927
									],
									[
										20992,
										21011
									],
									[
										21349,
										21368
									],
									[
										21644,
										21663
									],
									[
										21920,
										21935
									],
									[
										22068,
										22083
									],
									[
										22291,
										22306
									],
									[
										22495,
										22510
									],
									[
										22713,
										22728
									],
									[
										22939,
										22954
									],
									[
										23111,
										23126
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								23117,
								23117
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 18,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 12345.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6013,
						"regions":
						{
						},
						"selection":
						[
							[
								596,
								596
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 456,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3783,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3037,
						"regions":
						{
						},
						"selection":
						[
							[
								990,
								990
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 139.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19330,
						"regions":
						{
						},
						"selection":
						[
							[
								13560,
								13560
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7287.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48158,
						"regions":
						{
						},
						"selection":
						[
							[
								1149,
								1149
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 644.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5498,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44834,
						"regions":
						{
						},
						"selection":
						[
							[
								12504,
								12504
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7593.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3748,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 381.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2774,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2568,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1611,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 258.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4564,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5057,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1107.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2900,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 210.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1361,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4810,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 359.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4745,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 65.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5015,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								4296,
								4296
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5609.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8026,
						"regions":
						{
						},
						"selection":
						[
							[
								3634,
								3634
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1844.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4742,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 387.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30476,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 134.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 723.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83979,
						"regions":
						{
						},
						"selection":
						[
							[
								75722,
								75722
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 40616.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 2756.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1590,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 183,
						"regions":
						{
						},
						"selection":
						[
							[
								120,
								120
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17618,
						"regions":
						{
						},
						"selection":
						[
							[
								9764,
								9764
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5030.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6997,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 164.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65028,
						"regions":
						{
						},
						"selection":
						[
							[
								37867,
								37867
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21583.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16306,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6710.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3866,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 217.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				}
			]
		},
		{
			"selected": 20,
			"sheets":
			[
				{
					"buffer": 32,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8026,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 339.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3474,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30476,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 329.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4745,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3485.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7220,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1361,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2802.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2505,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 43.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4810,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 78861,
						"regions":
						{
						},
						"selection":
						[
							[
								51153,
								51153
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 26677.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83979,
						"regions":
						{
						},
						"selection":
						[
							[
								1984,
								1988
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 260.0,
						"translation.y": 620.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6013,
						"regions":
						{
						},
						"selection":
						[
							[
								3154,
								3154
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1975.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2383,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								525,
								525
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44834,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 75.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13714,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5586.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1361,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65028,
						"regions":
						{
						},
						"selection":
						[
							[
								2244,
								2244
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 905.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13157,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7225.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17057,
						"regions":
						{
						},
						"selection":
						[
							[
								7553,
								7553
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 462.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3651,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 815.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 232.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3783,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4736,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 409.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2732,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19330,
						"regions":
						{
						},
						"selection":
						[
							[
								13290,
								13290
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8892.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 246.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3214,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16306,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5498,
						"regions":
						{
						},
						"selection":
						[
							[
								234,
								234
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3866,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 144.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4742,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 151.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5876,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3151.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5057,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 165.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48158,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5674.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6815,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								2685,
								2685
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1530.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2682,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3037,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2311,
						"regions":
						{
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.505313499339,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"gme",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"pa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"scri",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"sjh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"gq",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gquan.php"
			],
			[
				"tina",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"sen",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"mis",
				"C:\\xampp\\htdocs\\fire\\systemtest.php"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"laun",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"partic",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"com",
				"C:\\xampp\\htdocs\\fire\\combattest.php"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"test",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"la",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"tin",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"wea",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"whit",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"lasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"aven",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"game.j",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"salvo",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"game.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"struc",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"fight",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"now",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"n",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"np",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"fighter",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sa",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"dbm",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"aaj",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"postg",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"ca",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"vorc",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"weap",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"ssal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"wa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"sah",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"cls",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 124.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
