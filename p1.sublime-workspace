{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"dr",
				"drawTrajectory"
			],
			[
				"assemble",
				"assembleBallistics"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getHit",
				"getHitSection"
			],
			[
				"getMis",
				"getMissionTypeString"
			],
			[
				"setPostMo",
				"setPostMoveImage"
			],
			[
				"geu",
				"getUnitById"
			],
			[
				"getUnt",
				"getUnitById"
			],
			[
				"order",
				"ordered"
			],
			[
				"target",
				"targetid"
			],
			[
				"dodepl",
				"doDeployFlight"
			],
			[
				"reset",
				"resetHover"
			],
			[
				"getU",
				"getUnitByClick"
			],
			[
				"hasInvali",
				"hasInvalidPower"
			],
			[
				"confirm",
				"confirmFiringOrders"
			],
			[
				"unit",
				"unitSize"
			],
			[
				"getPo",
				"getPowerReq"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"getRema",
				"getRemainingDelay"
			],
			[
				"getRem",
				"getCurrentImpulse"
			],
			[
				"getRemain",
				"getRemainingEP"
			],
			[
				"add",
				"addClass"
			],
			[
				"getRe",
				"getReinforcements"
			],
			[
				"getAmg",
				"getAngleFromTo"
			],
			[
				"getPositi",
				"getCurrentPosition"
			],
			[
				"col",
				"colspan"
			],
			[
				"gethit",
				"getHitSystem"
			],
			[
				"fire",
				"handleFireClick"
			],
			[
				"getpla",
				"getPlannedPosition"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"play",
				"playerName"
			],
			[
				"getbase",
				"getBaseOffsetPos"
			],
			[
				"setPre",
				"setPreMovePosition"
			],
			[
				"bac",
				"background-color"
			],
			[
				"getImp",
				"getImpulseStep"
			],
			[
				"ren",
				"reinforce"
			],
			[
				"setRemain",
				"setRemainingDelay"
			],
			[
				"remai",
				"remainingDelay"
			],
			[
				"rema",
				"remainingImpulse"
			],
			[
				"remaining",
				"remainingImpulse"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"getRei",
				"getReinforcementShips"
			],
			[
				"draw",
				"drawSystemAxis"
			],
			[
				"font-",
				"font-size"
			],
			[
				"se",
				"select"
			],
			[
				"roate",
				"rotate270size90"
			],
			[
				"getre",
				"getRemainingImpulse"
			],
			[
				"getImpu",
				"getImpulseChangeCost"
			],
			[
				"getTurn",
				"getMaxTurnAngle"
			],
			[
				"turn",
				"turnAngle"
			],
			[
				"baseI",
				"baseImpulseCost"
			],
			[
				"getPlann",
				"getPlannedPosition"
			],
			[
				"getPlanned",
				"getPlannedPosition"
			],
			[
				"switchM",
				"switchTurnMode"
			],
			[
				"getPla",
				"getPlannedPosition"
			],
			[
				"getD",
				"getDefensiveBonus"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5896,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 5231,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 15560,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 20085,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mixed.js",
			"settings":
			{
				"buffer_size": 12624,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shipclasses.js",
			"settings":
			{
				"buffer_size": 84049,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6014,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3193,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3046,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2481,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 18270,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 1070,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1619,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3748,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2568,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2273,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1611,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 4540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 5248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 1991,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 4867,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4724,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 5055,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6634,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 2518,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 1492,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/mixed.php",
			"settings":
			{
				"buffer_size": 6073,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"contents": "Searching 73 files for \"if (game.deploying)\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  595  \t\t\t$(ele).find(\"span\").html(\"Deploy Flight\").end().find(\".img\").html(\"\");\n  596  \t\t}\n  597: \t\telse if (game.deploying){\n  598  \t\t\t//var img = new Image();\n  599  \t\t\t//\timg.className = \"img80\";\n  ...\n 1062  \n 1063  \tthis.resetHover = function(){\n 1064: \t\tif (game.deploying){\n 1065  \t\t\tgame.drawDeploymentZone();\n 1066  \t\t}\n ....\n 1182  \t\tif (game.flightDeploy){\n 1183  \t\t\tgame.flightDeploy.drawArc();\n 1184: \t\t} else if (game.deploying){\n 1185  \t\t\tgame.drawDeploymentZone();\n 1186  \t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  384  \t\t}\n  385  \t}\n  386: \telse if (game.deploying){\t\t\t\t\t\n  387  \t\tvar ele = $(\"#deployOverlay\");\n  388  \t\tvar w = $(ele).width()/2;\n  ...\n  409  \tvar ammo;\n  410  \tvar index;\n  411: \tif (game.deploying){\n  412  \t\tunit = game.getUnitById(game.deploying); // ship deploy\n  413  \t\tif (game.turnMode){\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  456  \t}\n  457  \telse if (e.originalEvent.button == 2){\n  458: \t\tif (game.deploying){\n  459  \t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\".selected\").each(function(){\n  460  \t\t\t\tif ($(this).data(\"id\") == game.deploying){\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2791  \tthis.selected = false;\n 2792  \tthis.setUnitGUI();\n 2793: \tif (game.deploying){game.disableDeployment();}\n 2794  \telse if (game.flightDeploy){game.flightDeploy = false;}\n 2795  \telse if (game.mission){this.disableMissionMode()}\n\n7 matches across 4 files\n\n\nSearching 73 files for \"if (game.deploying)\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  595  \t\t\t$(ele).find(\"span\").html(\"Deploy Flight\").end().find(\".img\").html(\"\");\n  596  \t\t}\n  597: \t\telse if (game.deploying){\n  598  \t\t\t//var img = new Image();\n  599  \t\t\t//\timg.className = \"img80\";\n  ...\n 1062  \n 1063  \tthis.resetHover = function(){\n 1064: \t\tif (game.deploying){\n 1065  \t\t\tgame.drawDeploymentZone();\n 1066  \t\t}\n ....\n 1182  \t\tif (game.flightDeploy){\n 1183  \t\t\tgame.flightDeploy.drawArc();\n 1184: \t\t} else if (game.deploying){\n 1185  \t\t\tgame.drawDeploymentZone();\n 1186  \t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  384  \t\t}\n  385  \t}\n  386: \telse if (game.deploying){\t\t\t\t\t\n  387  \t\tvar ele = $(\"#deployOverlay\");\n  388  \t\tvar w = $(ele).width()/2;\n  ...\n  409  \tvar ammo;\n  410  \tvar index;\n  411: \tif (game.deploying){\n  412  \t\tunit = game.getUnitById(game.deploying); // ship deploy\n  413  \t\tif (game.turnMode){\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  456  \t}\n  457  \telse if (e.originalEvent.button == 2){\n  458: \t\tif (game.deploying){\n  459  \t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\".selected\").each(function(){\n  460  \t\t\t\tif ($(this).data(\"id\") == game.deploying){\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2791  \tthis.selected = false;\n 2792  \tthis.setUnitGUI();\n 2793: \tif (game.deploying){game.disableDeployment();}\n 2794  \telse if (game.flightDeploy){game.flightDeploy = false;}\n 2795  \telse if (game.mission){this.disableMissionMode()}\n\n7 matches across 4 files\n\n\nSearching 73 files for \"if (game.deploying)\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  595  \t\t\t$(ele).find(\"span\").html(\"Deploy Flight\").end().find(\".img\").html(\"\");\n  596  \t\t}\n  597: \t\telse if (game.deploying){\n  598  \t\t\t//var img = new Image();\n  599  \t\t\t//\timg.className = \"img80\";\n  ...\n 1062  \n 1063  \tthis.resetHover = function(){\n 1064: \t\tif (game.deploying){\n 1065  \t\t\tgame.drawDeploymentZone();\n 1066  \t\t}\n ....\n 1182  \t\tif (game.flightDeploy){\n 1183  \t\t\tgame.flightDeploy.drawArc();\n 1184: \t\t} else if (game.deploying){\n 1185  \t\t\tgame.drawDeploymentZone();\n 1186  \t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  384  \t\t}\n  385  \t}\n  386: \telse if (game.deploying){\t\t\t\t\t\n  387  \t\tvar ele = $(\"#deployOverlay\");\n  388  \t\tvar w = $(ele).width()/2;\n  ...\n  409  \tvar ammo;\n  410  \tvar index;\n  411: \tif (game.deploying){\n  412  \t\tunit = game.getUnitById(game.deploying); // ship deploy\n  413  \t\tif (game.turnMode){\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  456  \t}\n  457  \telse if (e.originalEvent.button == 2){\n  458: \t\tif (game.deploying){\n  459  \t\t\t$(\"#deployWrapper\").find(\"#reinforceTable\").find(\".selected\").each(function(){\n  460  \t\t\t\tif ($(this).data(\"id\") == game.deploying){\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2791  \tthis.selected = false;\n 2792  \tthis.setUnitGUI();\n 2793: \tif (game.deploying){game.disableDeployment();}\n 2794  \telse if (game.flightDeploy){game.flightDeploy = false;}\n 2795  \telse if (game.mission){this.disableMissionMode()}\n\n7 matches across 4 files\n\n\nSearching 73 files for \"speedChange\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n 1496  \t\t\t\t\tvar action = this.ships[i].actions[j];\n 1497  \n 1498: \t\t\t\t\tif (action.type == \"speedChange\" || action.type == \"deploy\" || action.type == \"jump\"){\n 1499  \t\t\t\t\t\tthis.ships[i].actions[j].animated = 1;\n 1500  \t\t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  209  \t\tfor ($i = 0; $i < sizeof($this->actions); $i++){\n  210  \t\t\tif (!$this->actions[$i]->resolved){continue;}\n  211: \t\t\tif ($this->actions[$i]->type == \"speedChange\"){\n  212  \t\t\t\t//Debug::log(\"add: \".$$step*$this->actions[$i]->dist);\n  213  \t\t\t\t$impulse += $step*$this->actions[$i]->dist;\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  694  \t\t\n  695  \t\tfor (var i = 0; i < this.actions.length; i++){\n  696: \t\t\tif (this.actions[i].type == \"speedChange\"){\n  697  \t\t\t\tif (this.actions[i].dist == 1){\n  698  \t\t\t\t\tbase += change;\n  ...\n  714  \t\tvar amount = 0;\n  715  \t\tfor (var i = 0; i < this.actions.length; i++){\n  716: \t\t\tif (this.actions[i].type != \"speedChange\"){continue;}\n  717  \t\t\tamount += this.actions[i].dist;\n  718  \t\t}\n  ...\n  958  \t\t\t\treturn true;\n  959  \t\t\t}\n  960: \t\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n  961  \t\t\t\treturn true;\n  962  \t\t\t}\n  963  \t\t}\n  964: \t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n  965  \t\t\treturn true;\n  966  \t\t}\n  ...\n  975  \t\t\t\treturn true;\n  976  \t\t\t}\n  977: \t\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n  978  \t\t\t\treturn true;\n  979  \t\t\t}\n  980  \t\t}\n  981: \t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n  982  \t\t\treturn true;\n  983  \t\t}\n  ...\n 1105  \tthis.doIncreaseImpulse = function(){\n 1106  \t\tvar shipPos = this.getPlannedPosition();\n 1107: \t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n 1108  \t\t\tthis.actions.splice(this.actions.length-1, 1);\n 1109  \t\t}\n 1110  \t\telse {\n 1111: \t\t\tvar action = new Move(-1, \"speedChange\", 1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n 1112  \t\t\tthis.actions.push(action);\n 1113  \t\t}\n ....\n 1119  \tthis.doDecreaseImpulse = function(){\n 1120  \t\tvar shipPos = this.getPlannedPosition();\n 1121: \t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n 1122  \t\t\tthis.actions.splice(this.actions.length-1, 1);\n 1123  \t\t}\n 1124  \t\telse {\n 1125: \t\t\tvar action = new Move(-1, \"speedChange\", -1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n 1126  \t\t\tthis.actions.push(action);\n 1127  \t\t}\n ....\n 1487  \tthis.undoLastAction = function(pos){\n 1488  \t\tvar update = false;\n 1489: \t\tif (this.actions[this.actions.length-1].type == \"speedChange\"){\n 1490  \t\t\tthis.actions[this.actions.length-1].dist *= -1;\n 1491  \t\t\tthis.setCurrentImpulse();\n\n13 matches across 3 files\n\n\nSearching 73 files for \"\"speed\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n 1496  \t\t\t\t\tvar action = this.ships[i].actions[j];\n 1497  \n 1498: \t\t\t\t\tif (action.type == \"speed\" || action.type == \"deploy\" || action.type == \"jump\"){\n 1499  \t\t\t\t\t\tthis.ships[i].actions[j].animated = 1;\n 1500  \t\t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  209  \t\tfor ($i = 0; $i < sizeof($this->actions); $i++){\n  210  \t\t\tif (!$this->actions[$i]->resolved){continue;}\n  211: \t\t\tif ($this->actions[$i]->type == \"speed\"){\n  212  \t\t\t\t//Debug::log(\"add: \".$$step*$this->actions[$i]->dist);\n  213  \t\t\t\t$impulse += $step*$this->actions[$i]->dist;\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  694  \t\t\n  695  \t\tfor (var i = 0; i < this.actions.length; i++){\n  696: \t\t\tif (this.actions[i].type == \"speed\"){\n  697  \t\t\t\tif (this.actions[i].dist == 1){\n  698  \t\t\t\t\tbase += change;\n  ...\n  714  \t\tvar amount = 0;\n  715  \t\tfor (var i = 0; i < this.actions.length; i++){\n  716: \t\t\tif (this.actions[i].type != \"speed\"){continue;}\n  717  \t\t\tamount += this.actions[i].dist;\n  718  \t\t}\n  ...\n  958  \t\t\t\treturn true;\n  959  \t\t\t}\n  960: \t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n  961  \t\t\t\treturn true;\n  962  \t\t\t}\n  963  \t\t}\n  964: \t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n  965  \t\t\treturn true;\n  966  \t\t}\n  ...\n  975  \t\t\t\treturn true;\n  976  \t\t\t}\n  977: \t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n  978  \t\t\t\treturn true;\n  979  \t\t\t}\n  980  \t\t}\n  981: \t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n  982  \t\t\treturn true;\n  983  \t\t}\n  ...\n 1105  \tthis.doIncreaseImpulse = function(){\n 1106  \t\tvar shipPos = this.getPlannedPosition();\n 1107: \t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n 1108  \t\t\tthis.actions.splice(this.actions.length-1, 1);\n 1109  \t\t}\n 1110  \t\telse {\n 1111: \t\t\tvar action = new Move(-1, \"speed\", 1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n 1112  \t\t\tthis.actions.push(action);\n 1113  \t\t}\n ....\n 1119  \tthis.doDecreaseImpulse = function(){\n 1120  \t\tvar shipPos = this.getPlannedPosition();\n 1121: \t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n 1122  \t\t\tthis.actions.splice(this.actions.length-1, 1);\n 1123  \t\t}\n 1124  \t\telse {\n 1125: \t\t\tvar action = new Move(-1, \"speed\", -1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n 1126  \t\t\tthis.actions.push(action);\n 1127  \t\t}\n ....\n 1487  \tthis.undoLastAction = function(pos){\n 1488  \t\tvar update = false;\n 1489: \t\tif (this.actions[this.actions.length-1].type == \"speed\"){\n 1490  \t\t\tthis.actions[this.actions.length-1].dist *= -1;\n 1491  \t\t\tthis.setCurrentImpulse();\n\n13 matches across 3 files\n\n\nSearching 73 files for \"game.deploying = \"\n\n0 matches\n\nSearching 73 files for \"this.deploying = \"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   12  \tthis.fireOrders = []\n   13  \tthis.mode = false;\n   14: \tthis.deploying = false;\n   15  \tthis.flightDeploy = false;\n   16  \tthis.adjustMission = false;\n   ..\n  550  \t\tfor (var i = 0; i < this.ships.length; i++){\n  551  \t\t\tif (this.ships[i].id == id){\n  552: \t\t\t\tthis.deploying = id;\n  553  \t\t\t\t//if (this.ships[i].actions.length){this.ships[i].doSelect();}\n  554  \t\t\t\tthis.setupDeploymentDiv(this.ships[i])\n  ...\n  567  \t\tfor (var i = 0; i < this.reinforcements.length; i++){\n  568  \t\t\tif (this.reinforcements[i].id == id){\n  569: \t\t\t\tthis.deploying = id;\n  570  \t\t\t\tthis.setupDeploymentDiv(this.reinforcements[i])\n  571  \t\t\t//\tthis.setupDeploymentZone();\n  ...\n  577  \n  578  \tthis.disableDeployment = function(){\n  579: \t\tthis.deploying = false;\n  580  \t\tthis.deployArea = [];\n  581  \t\tthis.deployBlock = false;\n\n4 matches in 1 file\n\n\nSearching 73 files for \"enableDeployment\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  547  \t}\n  548  \n  549: \tthis.enableDeployment = function(id){\n  550  \t\tfor (var i = 0; i < this.ships.length; i++){\n  551  \t\t\tif (this.ships[i].id == id){\n  ...\n 2167  \t\t\t\t\t\t\t\telse if (!game.deploying && !game.aUnit && game.getUnitById($(this).data(\"shipid\")).canDeploy()){\n 2168  \t\t\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n 2169: \t\t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"shipid\"));\n 2170  \t\t\t\t\t\t\t\t}\n 2171  \t\t\t\t\t\t\t}\n ....\n 2225  \t\t\t\t\t\tif ($(this).hasClass(\"green\")){\n 2226  \t\t\t\t\t\t\t$(this).addClass(\"selected\");\n 2227: \t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"id\"));\n 2228  \t\t\t\t\t\t}\n 2229  \t\t\t\t\t\telse if (!game.deploying){\n 2230  \t\t\t\t\t\t\tif (!$(this).hasClass(\"green\") && Math.floor(game.reinforcePoints) >= $(this).data(\"cost\") + game.getCurrentReinforceCost()){\n 2231  \t\t\t\t\t\t\t\t$(this).addClass(\"selected\");\n 2232: \t\t\t\t\t\t\t\tgame.enableDeployment($(this).data(\"id\"));\n 2233  \t\t\t\t\t\t\t} else popup(\"You have insufficient Reinforce Points (\"+game.reinforcePoints+\") available.\");\n 2234  \t\t\t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  437  \t\t\t\tunit.select(e); \n  438  \t\t\t\tif (unit.canDeploy()){\n  439: \t\t\t\t\tgame.enableDeployment(unit.id);\n  440  \t\t\t\t}\n  441  \t\t\t}\n\n5 matches across 2 files\n\n\nSearching 73 files for \"hangarLoadoutDiv\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   95  \n   96  \tthis.enableFlightDeployment = function(){\n   97: \t\tthis.flightDeploy = this.getUnitById(aUnit).getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\"));\n   98  \t\tvar mission = this.getMissionTypeString(this.flightDeploy.mission);\n   99  \n\nC:\\xampp\\htdocs\\fire\\game.php:\n  442  \t\t\t</div>\n  443  \t\t\t<div id=\"vectorDiv\" class=\"disabled\"></div>\n  444: \t\t\t<div id=\"hangarLoadoutDiv\" class=\"disabled\">\n  445  \t\t\t<div class=\"header\">\n  446  \t\t\t\tAssemble and launch a flight\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  163  \t\t\t<canvas id=\"fxCanvas\" style='z-index: 1'></canvas>\n  164  \t\t</div>\n  165: \t\t<div id=\"hangarLoadoutDiv\" class=\"disabled\">\n  166  \t\t\t<div class=\"header\">\n  167  \t\t\t\tPick Strikecraft for the selected Hangar\n  ...\n  415  \t\twindow.ships[0] = JSON.parse(data);\n  416  \t\t$(\".shipDiv\").remove();\n  417: \t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n  418  \t\t$(\"#weaponLoadoutDiv\").addClass(\"disabled\");\n  419  \t\t$(\"#hangarTable\").html(\"\");\n  ...\n  488  \t\t\t\t$(\".shipDiv\").remove();\n  489  \t\t\t\t$(\"#game\").addClass(\"disabled\");\n  490: \t\t\t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n  491  \t\t\t\t$(\"#hangarTable\").html(\"\");\n  492  \t\t\t\tcanSubmit();\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  343          $(this).hide();\n  344  \t});\n  345:     $(\"#hangarLoadoutDiv\").drag()\n  346      $(\"#weaponLoadoutDiv\").drag()\n  347  });\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n 2794  \tthis.switchDiv();\n 2795  \tthis.unsetMoveMode();\n 2796: \t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n 2797  \t$(\"#popupWrapper\").hide()\n 2798  \t$(\"#instructWrapper\").hide()\n\nC:\\xampp\\htdocs\\fire\\style.css:\n  262  }\n  263  \n  264: #hangarLoadoutDiv, #weaponLoadoutDiv {\n  265  \tposition: absolute;\n  266  \twidth: 300px;\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2660  \telse {\n 2661  \t\tthis.selected = false;\n 2662: \t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n 2663  \t\tif (game.flightDeploy){\n 2664  \t\t\tgame.flightDeploy = false;\n ....\n 2734  \t\treturn false;\n 2735  \t}\n 2736: \tvar div = document.getElementById(\"hangarLoadoutDiv\");\n 2737  \t\t$(\"#launchRate\").html(this.getLaunchRate());\n 2738  \t\t$(\"#capacity\").html(this.output);\n ....\n 2798  \t}\n 2799  \tvar mission = this.getMission();\n 2800: \tvar element = $(\"#hangarLoadoutDiv\");\n 2801  \t\t$(element)\n 2802  \t\t\t.data(\"mission\", mission)\n ....\n 2806  \t\t\t\t\t$(this).off(\"click\");\n 2807  \t\t\t\t\t$(this).click(function(){\n 2808: \t\t\t\t\t\tgame.getUnitById(aUnit).getSystemById($(\"#game\").find(\"#hangarLoadoutDiv\").data(\"systemid\")).setMission(i);\n 2809  \t\t\t\t\t})\n 2810  \t\t\t\t})\n ....\n 2818  \tthis.mission = val;\n 2819  \n 2820: \t$(\"#game\").find(\"#hangarLoadoutDiv\").find(\"#missionType\").find(\"tr\").each(function(i){\n 2821  \t\t$(this).removeClass(\"selected\");\n 2822  \t\tif (val == i){\n ....\n 2826  \n 2827  \tif (this.canLaunchFlight()){\n 2828: \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2829  \t}\n 2830  \telse {\n 2831  \t\tgame.flightDeploy = 0;\n 2832: \t\t$(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2833  \t\t$(\"#deployOverlay\").hide();\n 2834  \t}\n ....\n 2905  \n 2906  \tif (this.canLaunchFlight()){\n 2907: \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2908  \t}\n 2909  \telse {\n 2910: \t\t$(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2911  \t}\n 2912  }\n ....\n 3002  \t\t\ttd.addEventListener(\"click\", function(e){\n 3003  \t\t\t\te.preventDefault(); e.stopPropagation();\n 3004: \t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).addFighter(this.parentNode, false);\n 3005  \t\t\t})\n 3006  \t\t\ttd.addEventListener(\"contextmenu\", function(e){\n 3007  \t\t\t\te.preventDefault(); e.stopPropagation();\n 3008: \t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).addFighter(this.parentNode, true);\n 3009  \t\t\t})\n 3010  \t\tvar td = document.createElement(\"td\");\n ....\n 3012  \t\t\ttd.addEventListener(\"click\", function(e){\n 3013  \t\t\t\te.preventDefault(); e.stopPropagation();\n 3014: \t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).removeFighter(this.parentNode, false);\n 3015  \t\t\t})\n 3016  \t\t\ttd.addEventListener(\"contextmenu\", function(e){\n 3017  \t\t\t\te.preventDefault(); e.stopPropagation();\n 3018: \t\t\t\twindow.game.ships[0].getSystemById($(\"#hangarLoadoutDiv\").data(\"systemid\")).removeFighter(this.parentNode, true);\n 3019  \t\t\t})\n 3020  \n ....\n 3039  \n 3040  Hangar.prototype.setupHangarLoadout = function(e){\n 3041: \tvar div = document.getElementById(\"hangarLoadoutDiv\");\n 3042  \tif ($(div).hasClass(\"disabled\")){\n 3043  \t\t$(div).find(\"#launchRate\").html(this.getOutput());\n\n22 matches across 7 files\n\n\nSearching 73 files for \"this.ballistics\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   24  \tthis.opacity = false;\n   25  \tthis.markers = [];\n   26: \tthis.ballistics = [];\n   27  \tthis.antiBallistics = [];\n   28  \tthis.shortInfo = false;\n   ..\n  809  \t\t}\n  810  \n  811: \t\tfor (var i = 0; i < this.ballistics.length; i++){\n  812: \t\t\tvar ele = $(this.ballistics[i].element);\n  813  \t\t\tvar h = $(ele).height();\n  814  \t\t\t/*\n  ...\n  974  \t\t}\n  975  \n  976: \t\tfor (var i = 0; i < this.ballistics.length; i++){\n  977: \t\t\tif (this.ballistics[i].mission.targetid = aUnit){\n  978: \t\t\t\tstack.push(this.ballistics[i]);\n  979  \t\t\t}\n  980  \t\t}\n  ...\n 1213  \n 1214  \tthis.getUnitById = function(id){\n 1215: \t\tfor (var i = 0; i < this.ballistics.length; i++){\n 1216: \t\t\tif (this.ballistics[i].id == id){\n 1217: \t\t\t\treturn this.ballistics[i];\n 1218  \t\t\t}\n 1219  \t\t}\n\n9 matches in 1 file\n\n\nSearching 73 files for \"systems.\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n   80  \tthis.hasWeaponsSelected = function(){\t\t\n   81  \t\tfor (var i = 0; i < this.structures.length; i++){\n   82: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n   83  \t\t\t\tif (this.structures[i].systems[j].weapon){\n   84  \t\t\t\t\tif (this.structures[i].systems[j].selected){\n   ..\n  297  \t\t\t\tvar s = 20;\n  298  \t\t\t\t// FIGHTER WEAPONS\n  299: \t\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  300  \t\t\t\t\tvar td = this.structures[i].systems[j].getTableData(true);\n  301  \t\t\t\t\t\t$(td.childNodes[0]).attr(\"width\", s).attr(\"height\", s);\n  ...\n  410  \n  411  \t\tfor (var i = 0; i < this.structures.length; i++){\n  412: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  413  \t\t\t\tif (! this.structures[i].systems[j].destroyed){\n  414  \t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  357  \t\t\tif (this.ships[i].userid == this.userid && this.ships[i].available <= game.turn){\n  358  \t\t\t\tif (this.ships[i].ship){\n  359: \t\t\t\t\tfor (var j = 0; j < this.ships[i].primary.systems.length; j++){\n  360  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Reactor\"){\n  361  \t\t\t\t\t\t\tif (this.ships[i].primary.systems[j].getOutput() < 0){\n  ...\n  378  \t\t\tif (this.ships[i].userid == this.userid && this.ships[i].available <= game.turn){\n  379  \t\t\t\tif (this.ships[i].ship){\n  380: \t\t\t\t\tfor (var j = 0; j < this.ships[i].primary.systems.length; j++){\n  381  \t\t\t\t\t\tif (this.ships[i].primary.systems[j].name == \"Sensor\" && !this.ships[i].primary.systems[j].disabled && !this.ships[i].primary.systems[j].destroyed){\n  382  \t\t\t\t\t\t\tif (!this.ships[i].primary.systems[j].used){\n  ...\n  444  \t\t\t\tcheck:\n  445  \t\t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n  446: \t\t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n  447  \t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].weapon){\n  448  \t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].isPowered() && this.ships[i].structures[j].systems[k].getLoadLevel() >= 1){\n  ...\n 1603  \t\tfor (var i = 0; i < this.ships.length; i++){\n 1604  \t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n 1605: \t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n 1606  \t\t\t\t\tif (!(this.ships[i].structures[j].systems[k] instanceof Launcher)){\n 1607  \t\t\t\t\t\tfor (var l = 0; l < this.ships[i].structures[j].systems[k].fireOrders.length; l++){\n\nC:\\xampp\\htdocs\\fire\\game.php:\n   74  \t<script src='salvo.js'></script>\n   75  \t<script src='flights.js'></script>\n   76: \t<script src='systems.js'></script>\n   77  \t<script src='graphics.js'></script>\n   78  \t<script src='cam.js'></script>\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  105  \t<script src='salvo.js'></script>\n  106  \t<script src='flights.js'></script>\n  107: \t<script src='systems.js'></script>\n  108  \t<script src='graphics.js'></script>\n  109  \t<script src='cam.js'></script>\n  ...\n  237  \n  238  \t\t\t\t\tfor (var i = 0; i < game.ships[0].structures.length; i++){\n  239: \t\t\t\t\t\tfor (var j = 0; j < game.ships[0].structures[i].systems.length; j++){\n  240  \t\t\t\t\t\t\tif (game.ships[0].structures[i].systems[j].totalCost > 0){\n  241  \t\t\t\t\t\t\t\tgame.ships[0].upgrades.push(game.ships[0].structures[i].systems[j].getUpgradeData());\n  ...\n  366  \tfunction confirmSystemLoadout(){\n  367  \t\tfor (var i = 0; i < game.ships[0].structures.length; i++){\n  368: \t\t\tfor (var j = 0; j < game.ships[0].structures[i].systems.length; j++){\n  369  \t\t\t\tif (game.ships[0].structures[i].systems[j].selected){\n  370  \t\t\t\t\tgame.ships[0].structures[i].systems[j].select();\n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  123  \t\tif (this.structures[i].destroyed){\n  124  \t\t\tthis.structures[i].draw = 0;\n  125: \t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n  126  \t\t\t\tthis.structures[i].systems[k].destroyed = true;\n  127  \t\t\t}\n  ...\n  129  \t\telse if (this.structures[i].disabled){\n  130  \t\t\tthis.structures[i].draw = 0;\n  131: \t\t\tfor (var k = 0; k < this.structures[i].systems.length; k++){\n  132  \t\t\t\tthis.structures[i].systems[k].disabled = true;\n  133  \t\t\t}\n  ...\n  240  Mixed.prototype.getWeaponPosition = function(){\n  241  \tfor (var i = 0; i < this.structures.length; i++){\n  242: \t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  243  \t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n  244  \t\t\t\treturn {x: this.layout[i].x, y: this.layout[i].y};\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  255  \tif (!drop){\t\n  256  \t\tfor (var i = 0; i < ship.structures.length; i++){\n  257: \t\t\tfor (var j = 0; j < ship.structures[i].systems.length; j++){\n  258  \t\t\t\tif (ship.structures[i].systems[j].weapon && ship.structures[i].systems[j].selected){\n  259  \t\t\t\t\tvar system = ship.structures[i].systems[j].getSystem();\n  ...\n  565  \t\t\t\tvar pos = vessel.getBaseOffsetPos();\n  566  \t\t\t\tfor (var i = 0; i < ship.structures.length; i++){\n  567: \t\t\t\t\tfor (var j = ship.structures[i].systems.length-1; j >= 0; j--){\n  568  \t\t\t\t\t\tif (ship.structures[i].systems[j].selected && ship.structures[i].systems[j].weapon){\n  569  \t\t\t\t\t\t\tif (ship.structures[i].systems[j].canFire()){\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  170  \t\tsalvo.structures.push(new Missile(data.structures[j]));\n  171  \n  172: \t\tfor (var k = 0; k < data.structures[j].systems.length; k++){\n  173: \t\t\tsalvo.structures[j].systems.push(new Warhead(data.structures[j].systems[k]));\n  174  \t\t}\n  175  \t\tfor (var k = 0; k < data.structures[j].crits.length; k++){\n  176: \t\t\tsalvo.structures[j].systems.push(new Crit(data.structures[j].crits[k]));\n  177  \t\t}\n  178  \t}\n  ...\n  190  \t\tflight.structures.push(new Fighter(data.structures[j]));\n  191  \n  192: \t\tfor (var k = 0; k < data.structures[j].systems.length; k++){\n  193  \t\t\tvar system = new window[data.structures[j].systems[k].type](data.structures[j].systems[k]);\n  194  \t\t\tfor (var l = 0; l < data.structures[j].systems[k].fireOrders.length; l++){\n  ...\n  196  \t\t\t}\n  197  \t\t\tsystem.setState();\n  198: \t\t\tflight.structures[j].systems.push(system);\n  199  \t\t}\n  200  \n  201  \t\tfor (var k = 0; k < data.structures[j].crits.length; k++){\n  202: \t\t\tflight.structures[j].systems.push(new Crit(data.structures[j].crits[k]));\n  203  \t\t}\n  204  \n  ...\n  213  \t\tship.hitTable = data.hitTable\n  214  \t\tship.primary = new Primary(data.primary);\n  215: \tfor (var j = 0; j < data.primary.systems.length; j++){\n  216  \t\tvar primSystem = new window[data.primary.systems[j].name](data.primary.systems[j]);\n  217  \n  ...\n  229  \n  230  \t\tprimSystem.setState();\n  231: \t\tship.primary.systems.push(primSystem);\n  232  \t}\n  233  \n  ...\n  240  \t\t}\t\t\n  241  \n  242: \t\tfor (var k = 0; k < data.structures[j].systems.length; k++){\n  243  \t\t\tvar system = new window[data.structures[j].systems[k].type](data.structures[j].systems[k]);\n  244  \t\t\tif (system){\n  ...\n  261  \t\t\t\t}\n  262  \t\t\t\tsystem.setState();\n  263: \t\t\t\tstruct.systems.push(system);\n  264  \t\t\t}\t\n  265  \t\t}\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.getWeaponPosition = function(fire){\n  412  \t\tfor (var i = 0; i < this.structures.length; i++){\n  413: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  414  \t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n  415  \t\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n  ...\n  422  \tthis.unpowerAllSystems = function(){\n  423  \t\tfor (var i = 0; i < this.structures.length; i++){\n  424: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  425  \t\t\t\tif (!this.structures[i].systems[j].destroyed){\n  426  \t\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n  ...\n  436  \t\tvar fraction = this.primary.remaining / this.primary.integrity;\n  437  \n  438: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n  439  \t\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n  440  \t\t\t\tthis.primary.systems[i].exposed = 1;\n  ...\n  461  \tthis.hasHangarSelected = function(){\t\t\n  462  \t\tfor (var i = 0; i < this.structures.length; i++){\n  463: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  464  \t\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n  465  \t\t\t\t\tif (this.structures[i].systems[j].selected){\n  ...\n  476  \tthis.hasSystemsSelected = function(){\t\t\n  477  \t\tfor (var i = 0; i < this.structures.length; i++){\n  478: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  479  \t\t\t\tif (this.structures[i].systems[j].selected){\n  480  \t\t\t\t\treturn true;\n  ...\n  488  \tthis.hasWeaponsSelected = function(){\t\t\n  489  \t\tfor (var i = 0; i < this.structures.length; i++){\n  490: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  491  \t\t\t\tif (this.structures[i].systems[j].weapon){\n  492  \t\t\t\t\tif (this.structures[i].systems[j].selected){\n  ...\n  550  \n  551  \tthis.hasSystemSelected = function(name){\t\n  552: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n  553  \t\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n  554  \t\t\t\treturn this.primary.systems[i];\n  ...\n  572  \t\t\t}\n  573  \n  574: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  575  \t\t\t\tif (this.structures[i].systems[j].id == id){\n  576  \t\t\t\t\treturn this.structures[i].systems[j];\n  ...\n  578  \t\t\t}\n  579  \t\t}\n  580: \t\tfor (var j = 0; j < this.primary.systems.length; j++){\n  581  \t\t\tif (this.primary.systems[j].id == id){\n  582  \t\t\t\treturn this.primary.systems[j];\n  ...\n  593  \t\tvar pos = this.getPlannedPosition();\n  594  \t\tfor (var i = 0; i < this.structures.length; i++){\n  595: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  596  \t\t\t\tif (this.structures[i].systems[j].weapon){\n  597  \t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n  ...\n  614  \n  615  \t\tfor (var i = 0; i < this.structures.length; i++){\n  616: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  617  \t\t\t\tif (this.structures[i].systems[j].weapon){\n  618  \t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n  ...\n  894  \t\tvar ep = 0;\n  895  \n  896: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n  897  \t\t\tif (this.primary.systems[i].name == \"Engine\"){\n  898  \t\t\t\tep += this.primary.systems[i].getOutput();\n  ...\n 1849  \t\tvar maxWidth = 0;\n 1850  \t\tif (this.structures.length <= 4){\n 1851: \t\t\tif (this.structures[1].systems.length > 4){\n 1852  \t\t\t\tmaxWidth = 320;\n 1853  \t\t\t} else maxWidth = 280;\n ....\n 1874  \t\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n 1875  \n 1876: \t\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n 1877  \t\t\t\tif (systems == 0){\n 1878  \t\t\t\t\tvar tr = document.createElement(\"tr\");\n ....\n 1900  \n 1901  \n 1902: \t\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n 1903  \t\t\t\t\tprimaryTable.appendChild(tr);\n 1904  \t\t\t\t\tsystems = 0;\n ....\n 1945  \t\t\tif (a == 0 || a == 180){ // front or aft\n 1946  \t\t\t\tif (a == 180){\n 1947: \t\t\t\t\tmax = Math.min(6, this.structures[i].systems.length);\n 1948  \t\t\t\t}\n 1949: \t\t\t\telse if (this.structures[i].systems.length % 4 == 0){\n 1950  \t\t\t\t\tmax = 4;\n 1951  \t\t\t\t}\n 1952: \t\t\t\telse if (this.structures[i].systems.length % 4 == 3){\n 1953  \t\t\t\t\tmax = 3;\n 1954  \t\t\t\t}\n 1955: \t\t\t\telse if (this.structures[i].systems.length % 3 == 0){\n 1956  \t\t\t\t\tmax = 6;\n 1957  \t\t\t\t}\n ....\n 1964  \t\t\t\t\tmax = 2;\n 1965  \t\t\t\t}\n 1966: \t\t\t\telse if (this.structures[i].systems.length <= 3){\n 1967  \t\t\t\t\tmax = 1;\n 1968  \t\t\t\t}\n 1969  \t\t\t\telse {\n 1970: \t\t\t\t\tif (this.structures[i].systems.length <= 4 && noFront){\n 1971  \t\t\t\t\t\tmax = 1;\n 1972  \t\t\t\t\t}\n ....\n 1979  \t\t\tvar fill = 0;\n 1980  \t\t\tif (a == 0 || a == 180){\n 1981: \t\t\t\tif (this.structures[i].systems.length == 1 || this.structures[i].systems.length == 2 && this.structures[i].systems[0].name != this.structures[i].systems[1].name){\n 1982  \t\t\t\t\tmax = 3;\n 1983  \t\t\t\t\tfill = 1;\n ....\n 1992  \t\t\t}\n 1993  \n 1994: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 1995  \t\t\t\tif (col == 0){\n 1996  \t\t\t\t\ttr = document.createElement(\"tr\");\n 1997: \t\t\t\t\tif (this.structures[i].systems.length - j != max){\n 1998: \t\t\t\t\t\tif ((this.structures[i].systems.length - j) *2 == max){\n 1999  \t\t\t\t\t\t\tcolWidth = 2;\n 2000  \t\t\t\t\t\t}\n ....\n 2044  \t\t\t\t\tcol = 0;\n 2045  \t\t\t\t}\n 2046: \t\t\t\tif (j == this.structures[i].systems.length-1){\n 2047  \t\t\t\t\tstructTable.appendChild(tr);\n 2048  \t\t\t\t\tif (maxRow < col){\n ....\n 2083  \n 2084  \t\t\tif (a == 0){\n 2085: \t\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n 2086  \t\t\t\t\toffsetY += 10;\n 2087  \t\t\t\t} else if (fill){\n ....\n 2165  \tthis.previewSetup = function(){\n 2166  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2167: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2168  \t\t\t\tif (this.structures[i].systems[j].loadout){\n 2169  \t\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n ....\n 2221  \n 2222  \tthis.getSystemByName = function(name){\n 2223: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n 2224  \t\t\tif (this.primary.systems[i].name == name){\n 2225  \t\t\t\treturn this.primary.systems[i];\n ....\n 2230  \n 2231  \tthis.getActiveSensor = function(){\n 2232: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n 2233  \t\t\tif (this.primary.systems[i].selected && this.primary.systems[i].name == \"Sensor\"){\n 2234  \t\t\t\treturn this.primary.systems[i];\n ....\n 2268  \n 2269  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2270: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2271  \t\t\t\tif (! this.structures[i].systems[j].destroyed){\n 2272  \t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n ....\n 2287  \n 2288  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2289: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2290  \t\t\t\tif (this.structures[i].systems[j].isPowered()){\n 2291  \t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n ....\n 2303  \n 2304  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2305: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2306  \t\t\t\tif (!this.structures[i].systems[j].isPowered()){\n 2307  \t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n ....\n 2318  \n 2319  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2320: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2321  \t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].locked){\n 2322  \t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n ....\n 2363  \n 2364  \tthis.getUnusedPower = function(){\n 2365: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n 2366  \t\t\tif (this.primary.systems[i] instanceof Reactor){\n 2367  \t\t\t\treturn this.primary.systems[i].getUnusedPower();\n ....\n 2530  \n 2531  \t\tfor (var i = 0; i < this.structures.length; i++){\n 2532: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2533  \t\t\t\tthis.structures[i].systems[j].highlight = false;\n 2534  \t\t\t\tthis.structures[i].systems[j].selected = false;\n ....\n 2538  \t\tif (this.flight || this.salvo){return;}\n 2539  \t\t\n 2540: \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n 2541  \t\t\tif (this.primary.systems[i].selected){\n 2542  \t\t\t\tthis.primary.systems[i].select();\n ....\n 2549  \tvar fires = [];\n 2550  \tfor (var i = 0; i < this.structures.length; i++){\n 2551: \t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2552  \t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n 2553  \t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n ....\n 2567  \tvar powers = [];\n 2568  \tfor (var i = 0; i < this.structures.length; i++){\n 2569: \t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2570  \t\t\tfor (var k = 0; k < this.structures[i].systems[j].powers.length; k++){\n 2571  \t\t\t\tif (this.structures[i].systems[j].powers[k].new){\n ....\n 2575  \t\t}\n 2576  \t}\n 2577: \tfor (var i = 0; i < this.primary.systems.length; i++){\n 2578  \t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n 2579  \t\t\tif (this.primary.systems[i].powers[j].new){\n ....\n 2973  \t}\n 2974  \n 2975: \tfor (var i = 0; i < this.primary.systems.length; i++){\n 2976  \t\tfor (var j = this.primary.systems[i].damages.length-1; j >= 0; j--){\n 2977  \t\t\tif (this.primary.systems[i].damages[j].fireid == fire.id){\n ....\n 2988  \n 2989  \tfor (var i = 0; i < this.structures.length; i++){\n 2990: \t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 2991  \t\t\tfor (var k = this.structures[i].systems[j].damages.length-1; k >= 0; k--){\n 2992  \t\t\t\tif (this.structures[i].systems[j].damages[k].fireid == fire.id){\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n  957  \tvar ship = game.getUnitById(this.parentId);\n  958  \tfor (var i = 0; i < ship.structures.length; i++){\n  959: \t\tfor (var j = 0; j < ship.structures[i].systems.length; j++){\n  960  \t\t\tif (ship.structures[i].systems[j].isPowered()){\n  961  \t\t\t\tuse += ship.structures[i].systems[j].getCurrentPowerUsage();\n  ...\n  963  \t\t}\n  964  \t}\n  965: \tfor (var i = 0; i < ship.primary.systems.length; i++){\n  966  \t\t//if (ship.primary.systems[i].isPowered()){\n  967  \t\t\tuse += ship.primary.systems[i].getCurrentPowerUsage();\n\n71 matches across 9 files\n\n\nSearching 73 files for \"new Missile\"\n\nC:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php:\n   26  \t\t$right->systems[] = new Dual($this->getId(), $this->id, 0, 180, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   27  \t\t$right->systems[] = new Dual($this->getId(), $this->id, 0, 180, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   28: \t\t$right->systems[] = new MissileLauncher($this->getId(), $this->id, 300, 120, array(array(\"Naga\", 9, 2), array(\"Cyclops\", 6, 2)));\n   29  \t\t$structs[] = $right;\n   30  \n   ..\n   32  \t\t$left->systems[] = new Dual($this->getId(), $this->id, 180, 360, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   33  \t\t$left->systems[] = new Dual($this->getId(), $this->id, 180, 360, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   34: \t\t$left->systems[] = new MissileLauncher($this->getId(), $this->id, 240, 60, array(array(\"Naga\", 9, 2), array(\"Cyclops\", 6, 2)));\n   35  \t\t$structs[] = $left;\n   36  \n\nC:\\xampp\\htdocs\\fire\\server\\ships\\demos.php:\n   19  \t\t$front = new Structure($this->getId(), $this->id, 300, 60, 400, 18);\n   20  \t\t$front->systems[] = new MediumPlasma($this->getId(), $this->id, 300, 60);\n   21: \t\t$front->systems[] = new MissileLauncher($this->getId(), $this->id, 330, 30,\tarray(array(\"Triarii\", 9, 3), array(\"Javelin\", 9, 3)));\n   22  \t\t$front->systems[] = new MediumPlasma($this->getId(), $this->id, 300, 60);\n   23  \t\t$structs[] = $front;\n\nC:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php:\n   19  \t\t$front = new Structure($this->getId(), $this->id, 330, 30, 375, 17);\n   20  \t\t$front->systems[] = new Dual($this->getId(), $this->id, 300, 60, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   21: \t\t$front->systems[] = new MissileLauncher($this->getId(), $this->id, 300, 60, array(array(\"Cyclops\", 40, 4), array(\"Titan\", 30, 3)));\n   22  \t\t$front->systems[] = new Dual($this->getId(), $this->id, 300, 60, 14, array(\"LightPulse\", \"LightParticleBeam\"));\n   23  \t\t$structs[] = $front;\n   24  \n   25  \t\t$right = new Structure($this->getId(), $this->id, 30, 150, 450, 17);\n   26: \t\t$right->systems[] = new MissileLauncher($this->getId(), $this->id, 0, 180, array(array(\"Naga\", 15, 3), array(\"Cyclops\", 12, 2)));\n   27: \t\t$right->systems[] = new MissileLauncher($this->getId(), $this->id, 0, 180, array(array(\"Naga\", 15, 3), array(\"Cyclops\", 12, 2)));\n   28  \t\t$structs[] = $right;\n   29  \n   ..\n   34  \n   35  \t\t$left = new Structure($this->getId(), $this->id, 210, 330, 450, 17);\n   36: \t\t$left->systems[] = new MissileLauncher($this->getId(), $this->id, 180, 360, array(array(\"Naga\", 15, 3), array(\"Cyclops\", 12, 2)));\n   37: \t\t$left->systems[] = new MissileLauncher($this->getId(), $this->id, 180, 360, array(array(\"Naga\", 15, 3), array(\"Cyclops\", 12, 2)));\n   38  \t\t$structs[] = $left;\n   39  \t\t\n\nC:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php:\n   19  \t\t$front = new Structure($this->getId(), $this->id, 300, 60, 225, 15);\n   20  \t\t$front->systems[] = new MediumSingleIon($this->getId(), $this->id, 300, 60);\n   21: \t\t$front->systems[] = new MissileLauncher($this->getId(), $this->id, 300, 60,\tarray(array(\"Hasta\", 8, 4), array(\"Vanguard\", 10, 5)));\n   22  \t\t$front->systems[] = new MediumSingleIon($this->getId(), $this->id, 300, 60);\n   23  \t\t$structs[] = $front;\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  168  \n  169  \tfor (var j = 0; j < data.structures.length; j++){\n  170: \t\tsalvo.structures.push(new Missile(data.structures[j]));\n  171  \n  172  \t\tfor (var k = 0; k < data.structures[j].systems.length; k++){\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2249  Launcher.prototype.create = function(loads){\n 2250  \tfor (var i = 0; i < loads.length; i++){\n 2251: \t\tthis.loads.push(new Missile(loads[i]));\n 2252  \t}\n 2253  \tif (game.phase == -2){\n\n11 matches across 6 files\n\n\nSearching 14 files for \"new Missile\"\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  168  \n  169  \tfor (var j = 0; j < data.structures.length; j++){\n  170: \t\tsalvo.structures.push(new Missile(data.structures[j]));\n  171  \n  172  \t\tfor (var k = 0; k < data.structures[j].systems.length; k++){\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2249  Launcher.prototype.create = function(loads){\n 2250  \tfor (var i = 0; i < loads.length; i++){\n 2251: \t\tthis.loads.push(new Missile(loads[i]));\n 2252  \t}\n 2253  \tif (game.phase == -2){\n\n2 matches across 2 files\n\n\nSearching 14 files for \"flightDiv\"\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n   94  \t\t}\n   95  \n   96: \t\t$(this.element).find(\".ccContainer\").find(\".flightDiv\").each(function(i){\n   97  \t\t\tif ($(this).data(\"id\") == id){\n   98  \t\t\t\t$(this).remove();\n\n1 match in 1 file\n\n\nSearching 14 files for \"fire id:\"\n\n0 matches\n\nSearching 73 files for \"fire id:\"\n\nC:\\xampp\\htdocs\\fire\\log.txt:\n   36  cleanFireOrders, fires: 8\n   37  DB updateFireOrders: 8\n   38: fire id: 22, resolved: 1\n   39: fire id: 24, resolved: 1\n   40: fire id: 25, resolved: 1\n   41: fire id: 26, resolved: 1\n   42: fire id: 27, resolved: 1\n   43: fire id: 28, resolved: 1\n   44: fire id: 23, resolved: 1\n   45: fire id: 29, resolved: 1\n   46  = testCriticals for Omega, #11, turn: 4\n   47  = testCriticals for Flight, #13, turn: 4\n\nC:\\xampp\\htdocs\\fire\\server\\dbManager.php:\n 1076  \n 1077  \t\t\tfor ($i = 0; $i < sizeof($fires); $i++){\n 1078: \t\t\t\t//Debug::log(\"fire id: \".$fires[$i]->id.\", resolved: \".$fires[$i]->resolved);\n 1079  \t\t\t\t$stmt->bindParam(\":shots\", $fires[$i]->shots);\n 1080  \t\t\t\t$stmt->bindParam(\":req\", $fires[$i]->req);\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n 1066  \t\t\t\t\t}\n 1067  \t\t\t\t\t$this->fires[$i]->target->resolveFireOrder($this->fires[$i]);\n 1068: \t\t\t\t\t//Debug::log(\"resolving fire id: \".$this->fires[$i]->id);\n 1069  \t\t\t\t\tif (sizeof($this->fires[$i]->damages)){\n 1070  \t\t\t\t\t\t$this->damages = array_merge($this->damages, $this->fires[$i]->damages);\n\n10 matches across 3 files\n\n\nSearching 73 files for \"testCriticals\"\n\nC:\\xampp\\htdocs\\fire\\log.txt:\n   44  fire id: 23, resolved: 1\n   45  fire id: 29, resolved: 1\n   46: = testCriticals for Omega, #11, turn: 4\n   47: = testCriticals for Flight, #13, turn: 4\n   48: = testCriticals for Artemis, #12, turn: 4\n   49: = testCriticals for Salvo, #14, turn: 4\n   50   => DB insertDamageEntries: 8\n   51   => DB insertCritEntries: 0\n   ..\n  207  cleanFireOrders, fires: 18\n  208  DB updateFireOrders: 18\n  209: = testCriticals for Artemis, #1, turn: 1\n  210: = testCriticals for Hyperion, #2, turn: 1\n  211: = testCriticals for Hyperion, #3, turn: 1\n  212: = testCriticals for Altarian, #4, turn: 1\n  213: = testCriticals for Altarian, #5, turn: 1\n  214: = testCriticals for Primus, #6, turn: 1\n  215: = testCriticals for Vorchan, #7, turn: 1\n  216   => DB insertDamageEntries: 23\n  217   => DB insertCritEntries: 1\n  ...\n  459  cleanFireOrders, fires: 32\n  460  DB updateFireOrders: 32\n  461: = testCriticals for Artemis, #1, turn: 2\n  462: = testCriticals for Flight, #9, turn: 2\n  463: = testCriticals for Flight, #8, turn: 2\n  464: = testCriticals for Salvo, #12, turn: 2\n  465: = testCriticals for Hyperion, #3, turn: 2\n  466: = testCriticals for Hyperion, #2, turn: 2\n  467: = testCriticals for Altarian, #5, turn: 2\n  468: = testCriticals for Primus, #6, turn: 2\n  469: = testCriticals for Altarian, #4, turn: 2\n  470: = testCriticals for Flight, #10, turn: 2\n  471: = testCriticals for Flight, #11, turn: 2\n  472: = testCriticals for Vorchan, #7, turn: 2\n  473   => DB insertDamageEntries: 25\n  474   => DB insertCritEntries: 3\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n 1137  \tpublic function testCrits(){\n 1138  \t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n 1139: \t\t\t$this->ships[$i]->testCriticals($this->turn);\n 1140  \t\t}\n 1141  \t\tfor ($i = 0; $i < sizeof($this->ballistics); $i++){\n 1142: \t\t\t$this->ballistics[$i]->testCriticals($this->turn);\n 1143  \t\t}\n 1144  \t}\n\nC:\\xampp\\htdocs\\fire\\server\\mixed.php:\n  219  \t}\n  220  \n  221: \tpublic function testCriticals($turn){\n  222: \t\tDebug::log(\"= testCriticals for \".get_class($this).\", #\".$this->id.\", turn: \".$turn);\n  223  \t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n  224  \t\t\t$this->structures[$i]->testCrit($turn);\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  792  \t}\n  793  \n  794: \tpublic function testCriticals($turn){\n  795: \t\tDebug::log(\"= testCriticals for \".$this->name.\", #\".$this->id.\", turn: \".$turn);\n  796  \t\tfor ($i = 0; $i < sizeof($this->structures); $i++){\n  797  \t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->systems); $j++){\n\n29 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 43646,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4486,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"file": "salvo.js",
			"settings":
			{
				"buffer_size": 9288,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 29278,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4111,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 86761,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8397,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1590,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 16111,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 6997,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\ninclude_once 'global.php';\n\nclass Manager {\n\tpublic $userid;\n\tpublic $gameid;\n\n\tpublic $name;\n\tpublic $status;\n\tpublic $turn;\n\tpublic $phase;\n\tpublic $pv;\n\tpublic $reinforce;\n\n\tpublic $index = 0;\n\tpublic $faction = \"\";\n\tpublic $value = 0;\n\n\tpublic $ships = array();\n\tpublic $ballistics = array();\n\tpublic $gd = array();\n\tpublic $fires = array();\n\tpublic $damages = array();\n\tpublic $crits = array();\n\tpublic $playerstatus = array();\n\tpublic $reinforcements = array();\n\tpublic $rdyReinforcements = array();\n\tpublic $deploys = array();\n\tpublic $incoming = array();\n\tpublic $userindex = 0;\n\tpublic $flights = array();\n\n\tpublic $flight = 0;\n\tpublic $salvo = 0;\n\n\tfunction __construct($userid = 0, $gameid = 0){\n\t\t//Debug::log(\"constructing manager \".$userid.\"/\".$gameid);\n\t\t//$this->getMemory();\n\t\t$this->userid = $userid;\n\t\t$this->gameid = $gameid;\n\n\t\tif ($this->gameid){\n\t\t\t$this->getGeneralData();\n\t\t\t$this->setUserIndex();\n\t\t}\n\t}\n\n\tpublic function test(){\n\t\t$db = DBManager::app();\n\n\t\t$query = array();\n\t\t$id = 3;\n\t\t$turn = 3;\n\n\t\t$query[] = \"update playerstatus set phase = 2, status = 'ready' where gameid = \".$id;\n\t\t\t$query[] = \"update games set phase = 2 where id = \".$id;\n\t\t\t$query[] = \"update fireorders set resolved = 0, hits = 0 where gameid = \".$id;\n\t\t\t$query[] = \"delete from damages where turn = \".$turn;\n\t\t\t$query[] = \"delete from systemcrits where turn = \".$turn;\n\n\t\t/*\t\n\n\t\t$query[] = \"update playerstatus set phase = 2, status = 'ready' where gameid = \".$id;\n\t\t\t$query[] = \"update games set phase = 2 where id = \".$id;\n\t\t\t$query[] = \"update fireorders set resolved = 0, hits = 0 where gameid = \".$id;\n\t\t\t$query[] = \"delete from damages where turn = \".$turn;\n\t\t\t$query[] = \"delete from systemcrits where turn = \".$turn;\n\t\t*/\n\t\tforeach ($query as $sql){\n\t\t\t$db->query($sql);\n\t\t}\n\t}\n\n\tpublic function getClientData(){\n\n\t\t//$this->handleFighterMovementPhaseNew(); return;\n\t\t//$this->test(); return;\n\t\t//$this->initiateDogfights();\n\t\t//$this->createDogfightFires();\n\n\t \t//var_dump($this->getUnitById(12)->getEndState(1));\n\n\t\t//$this->setShipLocks($this->getUnitById(2)); return;\n\n\t\t//$this->deploy();();\n\n\t\treturn array(\n\t\t\t\"id\" => $this->gameid,\n\t\t\t\"name\" => $this->name,\n\t\t\t\"status\" => $this->status,\n\t\t\t\"turn\" => $this->turn,\n\t\t\t\"phase\" => $this->phase,\n\t\t\t\"ships\" => $this->getShipData(),\n\t\t\t\"reinforcements\" => $this->rdyReinforcements,\n\t\t\t\"deploys\" => $this->deploys,\n\t\t\t\"incoming\" =>$this->incoming\n\t\t);\n\n\t}\n\n\tpublic function getMemory(){\n\t\t$size = memory_get_usage(true);\n\t    $unit=array('b','kb','mb','gb','tb','pb');\n\t    Debug::log(@round($size/pow(1024,($i=floor(log($size,1024)))),2).' '.$unit[$i]);\n\t}\n\t\n\tpublic function getUsername(){\n\t\t$name = DBManager::app()->getUsername($this->userid);\n\t\t\n\t\tif ($name){\n\t\t\treturn $name;\n\t\t}\n\t}\n\t\n\tpublic function getOpenGames(){\n\t\t$list = DBManager::app()->getOpenGames($this->userid);\n\t\tif ($list){\n\t\t\treturn $list;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic function getGeneralData(){\n\t\t//Debug::log(\"getGeneralData for game \".$this->gameid);\n\t\t$gd = DBManager::app()->getGameDetails($this->gameid);\n\n\t\t$this->name = $gd[\"name\"];\n\t\t$this->pv = $gd[\"pv\"];\n\t\t$this->reinforce = $gd[\"reinforce\"];\n\t\t$this->status = $gd[\"status\"];\n\t\t$this->turn = $gd[\"turn\"];\n\t\t$this->phase = $gd[\"phase\"];\n\t\t$this->playerstatus = DBManager::app()->getPlayerStatus($this->gameid);\n\t}\n\n\tpublic function validateFleetCost($ships){\n\t\t$used = 0;\n\n\t\tfor ($i = 0; $i < sizeof($ships); $i++){\n\t\t\t$used = $used + $ships[$i][\"value\"];\n\t\t}\n\n\t\t$avail = $this->pv;\n\n\t\tif ($used <= $avail){\n\t\t\treturn $avail - $used;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic function getGameData(){\n\t\t//Debug::log(\"getGameData\");\n\t\t$db = DBManager::app();\n\n\t\t$this->setReinforceStatus();\n\t\t$this->fires = $db->getAllFireOrders($this->gameid);\n\n\t\t$this->ships = $this->assembleUnits();\n\t\t//Debug::log(\"ships: \".sizeof($this->ships));\n\t\t//$this->ballistics = $this->assembleBallistics();\n\n\t\t$this->reinforcements = $db->getAllReinforcements($this->gameid, $this->userid);\n\t\t$this->rdyReinforcements = $this->readyReinforcements();\n\t\t$this->deploys = $db->getDeployArea($this->gameid, $this->turn);\n\t\t$this->incoming = $db->getIncomingShips($this->gameid, $this->turn);\n\t\t\n\t\t$this->deleteResolvedFireOrders();\n\n\t\t$this->damages = array();\n\t\t$this->crits = array();\n\t}\n\n\tpublic function setUserIndex(){\n\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\tif ($this->playerstatus[$i][\"userid\"] == $this->userid){\n\t\t\t\t$this->userindex = $i % 2;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getBaseFacing(){\n\t\treturn 0 + (180 * ($this->userindex % 2));\n\t}\n\n\tpublic function setReinforceStatus(){\n\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\tif ($this->playerstatus[$i][\"userid\"] == $this->userid){\n\t\t\t\t$this->faction = $this->playerstatus[$i][\"faction\"];\n\t\t\t\t$this->value = $this->playerstatus[$i][\"value\"];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getShipData(){\n\t\tfor ($i = sizeof($this->ships)-1; $i >= 0; $i--){\n\t\t\tif ($this->ships[$i]->userid != $this->userid){\n\t\t\t\tif ($this->ships[$i]->flight && $this->ships[$i]->available == $this->turn && !$this->ships[$i]->actions[0]->resolved){\n\t\t\t\t\tarray_splice($this->ships, $i, 1);\n\t\t\t\t}\n\t\t\t\telse if ($this->ships[$i]->ship && $this->phase == 0 || $this->ships[$i]->flight && $this->phase == 1){\n\t\t\t\t\t$this->ships[$i]->hideActions();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tswitch ($this->phase){\n\t\t\tcase -1: \n\t\t\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t\t\tif ($this->ships[$i]->userid != $this->userid){\n\t\t\t\t\t\t$this->ships[$i]->hidePowers($this->turn);\n\t\t\t\t\t\t$this->ships[$i]->hideFireOrders($this->turn);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\tcase 2:\n\t\t\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t\t\tif ($this->ships[$i]->userid != $this->userid){\n\t\t\t\t\t\t$this->ships[$i]->hideFireOrders($this->turn);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\tdefault: break;\n\t\t}\n\n\t\treturn $this->ships;\n\t}\n\n\tpublic function deleteResolvedFireOrders(){\n\t\tfor ($i = sizeof($this->fires)-1; $i >= 0; $i--){\n\t\t\tif ($this->fires[$i]->resolved == 1){\n\t\t\t\tarray_splice($this->fires, $i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function createGame($name){\n\t\tif (DBManager::app()->createGame($this->userid, $name)){\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function readyReinforcements(){\n\t\t//Debug::log(\"readyReinforcements s\".sizeof($this->reinforcements));\n\t\t$data = array();\n\n\t\tfor ($i = 0; $i < sizeof($this->reinforcements); $i++){\n\t\t\tif ($this->reinforcements[$i][\"userid\"] == $this->userid){\n\t\t\t\t$s = new $this->reinforcements[$i][\"name\"](-$this->reinforcements[$i][\"id\"], $this->userid, $this->turn + $this->reinforcements[$i][\"eta\"], \"available\", 0);\n\t\t\t\t$s->cost = $this->reinforcements[$i][\"cost\"];\n\t\t\t\t$s->currentImpulse = $s->baseImpulse;\n\n\t\t\t\tfor ($j = 0; $j < sizeof($s->structures); $j++){\n\t\t\t\t\t$s->structures[$j]->remainingNegation = $s->structures[$j]->negation;\n\t\t\t\t}\n\t\t\t\t$data[] = $s;\n\t\t\t}\n\t\t}\n\t\treturn $data;\n\t}\n\n\tpublic function assembleUnits(){\n\t\t//Debug::log(\"assembleUnits\");\n\t\t$db =  DBManager::app()->getActiveUnits($this->gameid, $this->turn); \n\t\t$units = array();\n\n\t\tfor ($i = 0; $i < sizeof($db); $i++){\n\t\t\t$unit = new $db[$i][\"name\"](\n\t\t\t\t$db[$i][\"id\"],\n\t\t\t\t$db[$i][\"userid\"],\n\t\t\t\t$db[$i][\"available\"],\n\t\t\t\t$db[$i][\"status\"],\n\t\t\t\t$db[$i][\"destroyed\"]\n\t\t\t);\n\n\t\t\t$unit->facing = $db[$i][\"angle\"];\n\t\t\t$unit->remainingDelay = $db[$i][\"delay\"];\n\t\t\t$unit->currentImpulse = $db[$i][\"thrust\"];\n\t\t\t$unit->x = $db[$i][\"x\"];\n\t\t\t$unit->y = $db[$i][\"y\"];\n\n\t\t\tif (!$unit->ship){\n\t\t\t\t$unit->addSubUnit($db[$i][\"subunits\"]);\n\t\t\t\t$unit->addMissionDB($db[$i][\"mission\"]);\n\t\t\t}\n\t\t\t$units[] = $unit;\n\t\t}\n\n\t\tDBManager::app()->getDamages($units);\n\t\tDBManager::app()->getPowers($units);\n\t\tDBManager::app()->getCrits($units);\n\t\tDBManager::app()->getFires($units);\n\t\tDBManager::app()->getActions($units, $this->turn);\n\t\tDBManager::app()->getEW($units, $this->turn);\n\t\tDBManager::app()->getShipLoad($units);\n\t\tDBManager::app()->getDogfights($units);\n\n\n\t\tif ($this->turn > 1){\n\t\t\tfor ($i = 0; $i < sizeof($units); $i++){\n\t\t\t\t$a = $units[$i]->getCurrentPosition();\n\t\t\t\tfor ($j = $i+1; $j < sizeof($units); $j++){\n\t\t\t\t\tif ($units[$i]->id != $units[$j]->id){\n\t\t\t\t\t\t$b = $units[$j]->getCurrentPosition();\n\t\t\t\t\t\tif ($a->x == $b->x && $a->y == $b->y){\n\t\t\t\t\t\t\t//Debug::log(\"valid: \".$units[$i]->id.\"/\".$units[$j]->id);\n\t\t\t\t\t\t\t$units[$i]->cc[] = $units[$j]->id;\n\t\t\t\t\t\t\t$units[$j]->cc[] = $units[$i]->id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ($i = 0; $i < sizeof($units); $i++){\n\t\t\t//$units[$i]->addFireDB($this->fires);\n\t\t\t$units[$i]->setState($this->turn); //check damage state after dmg is applied\n\t\t}\n\n\t\treturn $units;\n\t}\n\n\tpublic function canAdvance($gameid){\n\t\t//Debug::log(\"canAdvance?\");\n\t\t$this->playerstatus = DBManager::app()->getPlayerStatus($gameid);\n\t\tif ($this->status == \"open\"){\n\t\t\treturn false;\n\t\t}\n\t\telse if (sizeof($this->playerstatus) >= 2){\n\t\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\t\tif ($this->playerstatus[$i][\"status\"] == \"waiting\"){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic function prepareAdvance($gameid){\n\t\t//Debug::log(\"prepareAdvance + get data\");\n\t\t$this->gameid = $gameid;\n\t\t$this->getGeneralData();\n\t\t$this->getGameData();\n\t}\n\n\tpublic function doAdvance(){\n\t\tDebug::log(\"doAdvance for game\".$this->gameid.\" from phase \".$this->phase.\" to phase \".($this->phase+1));\n\t\t//return;\n\t\t$time = -microtime(true);\n\n\t\tswitch ($this->phase){\n\t\t\tcase -1; // from deploy to move\n\t\t\t\t$this->handleDeploymentPhase();\n\t\t\t\t$this->startMovementPhase();\n\t\t\t\tbreak;\n\t\t\tcase 0; // ship moves\n\t\t\t\t$this->handleMovementPhase();\n\t\t\t\t$this->startFiringPhase();\n\t\t\t//\t$this->startFighterMovementPhase();startFiringPhase\n\t\t\t\tbreak;\n\t\t\tcase 1; // fighters moves\n\t\t\t\t//$this->handleFighterMovementPhase();\n\t\t\t\t$this->startFiringPhase();\n\t\t\t\tbreak;\n\t\t\tcase 2; // from fire to resolve fire\n\t\t\t\tif ($this->handleFiringPhase()){\n\t\t\t\t\t$this->startDamageControlPhase();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3; // from damage control to NEW TURN - deploymnt\n\t\t\t\t$this->handleDamageControlPhase();\n\t\t\t\t$this->endTurn();\n\t\t\t\t$this->startNewTurn();\n\t\t\t\t$this->startDeploymentPhase();\n\t\t\t\t//$this->turn++;\n\t\t\t\t//$this->phase = 2;\n\t\t\t\t//DBManager::app()->setGameTurnPhase($this->gameid, $this->turn, $this->phase);\n\t\t\t\t//$this->updatePlayerStatus(\"waiting\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$time += microtime(true); \n\t\tDebug::log(\"advancing game state time: \".round($time, 3).\" seconds.\");\n\t\treturn true;\n\t}\n\n\tpublic function updatePlayerStatus($status){\n\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\tDBManager::app()->setPlayerstatus($this->playerstatus[$i][\"userid\"], $this->gameid, $this->turn, $this->phase, $status);\n\t\t}\n\t}\n\n\tpublic function pickReinforcements(){\n\t\tif ($this->turn < 2){return;}\n\n\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\t$avail = 0;\n\t\t\tfor ($j = 0; $j < sizeof($this->reinforcements); $j++){\n\t\t\t\tif ($this->reinforcements[$j][\"userid\"] == $this->playerstatus[$i][\"userid\"]){\n\t\t\t\t\t$avail++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($avail >= 4){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\n\t\t\t$picks = array();\n\t\t\t$now = 0;\n\t\t\t$max = 1;\n\t\t\tif (!$max){continue;}\n\t\t\t$validShips = $this->getReinforcementShips($this->playerstatus[$i][\"faction\"]);\n\t\t\t//$validShips = array_merge($validShips, $this->getFlights());\n\t\t\t//$validShips = $this->getFlights();\n\n\t\t\tfor ($j = 0; $j < $max; $j++){\n\t\t\t\t$pick = $validShips[mt_rand(0, sizeof($validShips)-1)];\n\t\t\t\t$roll = mt_rand(1, 10);\n\n\t\t\t\tif ($roll >= $pick[\"weight\"]){\n\t\t\t\t\t$now++;\n\t\t\t\t\t$pick[\"eta\"] += mt_rand(3, 4);\n\t\t\t\t\t$pick[\"eta\"] = max(2, $pick[\"eta\"]);\n\t\t\t\t\t$pick[\"value\"] = ceil($pick[\"value\"] * (mt_rand(8, 12))/10);\n\t\t\t\t\t$picks[] = $pick;\n\n\t\t\t\t\tif ($now == $max){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (sizeof($picks)){\n\t\t\t\tDBManager::app()->insertReinforcements($this->gameid, $this->playerstatus[$i][\"userid\"], $picks);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic function handleDeploymentPhase(){\n\t\t//Debug::log(\"handleDeploymentPhase\");\n\t\t$this->initBallistics();\n\t\t$this->handleDeploymentActions();\n\t\t$this->handleJumpActions();\n\t\t$this->assembleEndStates();\n\t\tDBManager::app()->deleteEmptyLoads($this->gameid);\n\t}\n\n\tpublic function initBallistics(){\n\t\tDebug::log(\"initBallistics\");\n\t\t$fires = DBManager::app()->getUnresolvedFireOrders($this->gameid, $this->turn);\n\t\tusort($fires, function($a, $b){\n\t\t\treturn $a->shooterid - $b->shooterid;\n\t\t});\n\n\t\t$adjust = array();\n\t\t$units = array();\n\t\tfor ($i = 0; $i < sizeof($fires); $i++){\n\t\t\t$skip = 0;\n\t\t\t$shooter = $this->getUnitById($fires[$i]->shooterid);\n\t\t\t$launcher = $shooter->getSystemById($fires[$i]->weaponid);\n\t\t\t$fires[$i]->shots = $launcher->getShots($this->turn);\n\t\t\tif (!($launcher instanceof Launcher)){\n\t\t\t\tDebug::log(\"FATAL ERROR, no launcher, fire: \".$fires[$i]->id);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$name = $launcher->getAmmo()->name;\n\t\t\t$adjust[] = array(\n\t\t\t\t\"launchData\" => array(\"shipid\" => $shooter->id, \"systemid\" => $launcher->id, \n\t\t\t\t\t\"loads\" => array(0 => array(\"name\" => $name, \"launch\" => $fires[$i]->shots)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tfor ($j = 0; $j < sizeof($units); $j++){\n\t\t\t\tif ($units[$j][\"userid\"] == $shooter->userid && $units[$j][\"mission\"][\"targetid\"] == $fires[$i]->targetid && $units[$j][\"launchData\"][\"loads\"][0][\"name\"] == $name){\n\t\t\t\t\t$units[$j][\"launchData\"][\"loads\"][0][\"launch\"] += $fires[$i]->shots;\n\t\t\t\t\t$skip = 1;\n\t\t\t\t\tDebug::log(\"merging\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($skip){continue;}\n\n\t\t\t$sPos = $shooter->getCurrentPosition();\n\t\t\t$tPos = $this->getUnitById($fires[$i]->targetid)->getCurrentPosition();\n\t\t\t$a = Math::getAngle($sPos->x, $sPos->y, $tPos->x, $tPos->y);\n\t\t\t$devi = Math::getPointInDirection($shooter->size/3, $a, $sPos->x + mt_rand(-10, 10), $sPos->y + mt_rand(-10, 10));\n\t\t\t$mission = array(\"type\" => 2, \"turn\" => $this->turn, \"targetid\" => $fires[$i]->targetid, \"x\" => $tPos->x, \"y\" => $tPos->y, \"arrived\" => 0);\n\t\t\t$move = array(\"turn\" => $this->turn, \"type\" => \"deploy\", \"dist\" => 0, \"x\" => $devi->x, \"y\" => $devi->y, \"a\" => $a, \"cost\" => 0, \"delay\" => 0, \"costmod\" => 0, \"resolved\" => 0);\n\t\t\t$launchData = array(\"shipid\" => $shooter->id, \"systemid\" => $launcher->id, \"loads\" => array(0 => array(\"launch\" => $fires[$i]->shots, \"name\" => $name)));\n\n\t\t\t$units[] = array(\"gameid\" => $this->gameid, \"userid\" => $shooter->userid, \"type\" => \"Salvo\", \"name\" => \"Salvo\", \"turn\" => $this->turn, \"eta\" => 0,\n\t\t\t\t\"mission\" => $mission, \"actions\" => array($move), \"launchData\" => $launchData);\n\n\n\t\t}\n\n\t\tif (sizeof($units)){\n\t\t\tDBManager::app()->insertUnits($this->userid, $this->gameid, $units);\n\t\t\tDBManager::app()->updateBallisticFireOrder($fires);\n\t\t\tDBManager::app()->updateSystemLoad($adjust);\n\t\t\tfor ($i = 0; $i < sizeof($units); $i++){\n\t\t\t\t$this->ships[] = new Salvo($units[$i][\"id\"], $units[$i][\"userid\"], $this->turn, \"deployed\", 0);\n\t\t\t\t$this->ships[sizeof($this->ships)-1]->actions[] = new Action(-1, $this->turn, \"deploy\", 0, $devi->x, $devi->y, $a, 0, 0, 0, 0);\n\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\tpublic function handleDeploymentActions(){\n\t\t$data = array();\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->ships[$i]->available == $this->turn){\n\t\t\t\tif (sizeof($this->ships[$i]->actions) == 1){\n\t\t\t\t\t$data[] = $this->ships[$i]->id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDBManager::app()->resolveDeployActions($data);\n\t}\n\n\tpublic function handleJumpActions(){\n\t\tDebug::log(\"handleJumpActions\");\n\t\t$updated = array();\n\n\t\t$mod = 1;\n\t\tif ($this->turn == 1){\n\t\t\t$mod = 0.33;\n\t\t}\n\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->ships[$i]->ship && $this->ships[$i]->available == $this->turn){\n\t\t\t\t$order = $this->ships[$i]->actions[0];\n\t\t\t\t$output = $this->ships[$i]->getSystemByName(\"Sensor\")->output;\n\t\t\t\t$shift = round($this->ships[$i]->size / $output*500*$mod, 2);\n\t\t\t\t$aShift = ceil($shift);\n\t\t\t\t$pShift = ceil($shift*2);\n\t\t\t\tDebug::log(\"jumpin: #\".$this->ships[$i]->id.\", class: \".$this->ships[$i]->name.\", size: \".$this->ships[$i]->size.\", sensor: \".$output.\", ordered to: \".$order->x.\"/\".$order->y.\", shiftPotential: \".$shift.\"%\");\n\t\t\t\tDebug::log($this->ships[$i]->name.\", aShift: \".$aShift.\"°, pShift: \".$pShift.\"px\");\n\n\t\t\t\t$aShift = mt_rand(-$aShift, $aShift);\n\t\t\t\t$xShift = mt_rand(-$pShift, $pShift);\n\t\t\t\t$yShift = mt_rand(-$pShift, $pShift);\n\t\t\t\t$dist = Math::getDist($order->x, $order->y, $order->x + $xShift, $order->y + $yShift);\n\n\t\t\t\tDebug::log(\"--> aShift: \".$aShift.\"°, psShift: \".$xShift.\"/\".$yShift.\" (\".$dist.\"px)\");\n\n\t\t\t\t$this->ships[$i]->actions[0]->resolved = 1;\n\t\t\t\t$this->ships[$i]->actions[] = new Action(-1, $this->turn, \"jump\", $dist, $order->x + $xShift, $order->y + $yShift, $aShift, 0, 0, 0, 0);\n\t\t\t\t$updated[] = $this->ships[$i];\n\t\t\t}\n\t\t}\n\n\t\tif (sizeof($updated)){\n\t\t\tDebug::log(\"action size: \".sizeof($updated[0]->actions));\n\t\t\tDBManager::app()->insertServerActions($updated);\n\t\t}\n\t}\n\n\tpublic function startMovementPhase(){\n\t\t//Debug::log(\"startShipMovementPhase\");\n\t\t$dbManager = DBManager::app();\n\t\t$this->phase = 0;\n\n\t\tif ($dbManager->setGameTurnPhase($this->gameid, $this->turn, $this->phase)){\n\t\t\t$this->updatePlayerStatus(\"waiting\");\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function startFighterMovementPhase(){\n\t\t//Debug::log(\"startFighterMovementPhase\");\n\t\t$dbManager = DBManager::app();\n\t\t$this->phase = 1;\n\n\t\tif ($dbManager->setGameTurnPhase($this->gameid, $this->turn, $this->phase)){\n\t\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\t\t$hasFlight = false;\n\t\t\t\tfor ($j = 0; $j < sizeof($this->ships); $j++){\n\t\t\t\t\tif ($this->ships[$j]->userid == $this->playerstatus[$i][\"userid\"] && $this->ships[$j]->flight){\n\t\t\t\t\t\t$hasFlight = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($hasFlight){\n\t\t\t\t\t$dbManager->setPlayerstatus($this->playerstatus[$i][\"userid\"], $this->gameid, $this->turn, $this->phase, \"waiting\");\n\t\t\t\t}\n\t\t\t\telse $dbManager->setPlayerstatus($this->playerstatus[$i][\"userid\"], $this->gameid, $this->turn, $this->phase, \"ready\");\n\t\t\t}\n\t\t}\n\n\t\tif ($this->canAdvance($this->gameid)){\n\t\t\t$this->doAdvance();\n\t\t}\n\t}\n\n\tpublic function handleMovementPhase(){\n\t\tDebug::log(\"handleShipMovementPhase\");\n\t\t$this->handleShipMovement();\n\t\t$this->flight = 1;\n\t\t$this->handleMixedMovement();\n\t\t$this->flight = 0;\n\t\t$this->salvo = 1;\n\t\t$this->handleMixedMovement();\n\t\t$this->salvo = 0;\n\t}\n\n\n\tpublic function handleShipMovement(){\n\t\tDebug::log(\"handleShipMovement\");\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->ships[$i]->ship){\n\t\t\t\tfor ($j = sizeof($this->ships[$i]->actions)-1; $j >= 0; $j--){\n\t\t\t\t\tif ($this->ships[$i]->actions[$j]->resolved == 0){\n\t\t\t\t\t\t$this->ships[$i]->actions[$j]->resolved = 1;\n\t\t\t\t\t} else break 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tDBManager::app()->resolveUnitMovementDB($this->ships);\n\t}\n\n\tpublic function handleMixedMovement(){\n\t\tDebug::log(\"handleMixedMovement\");\n\t\t$missions = array();\n\t\t$stack = array(array(), array(), array());\n\t\t$units = array();\n\n\t\t//resolve order\n\t\t//1. patrol\n\t\t//2. strike on ship\n\n\t\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->flight && !$this->ships[$i]->flight || $this->salvo && !$this->ships[$i]->salvo){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ($this->ships[$i]->mission->arrived){ // already at target location\n\t\t\t\tif ($this->ships[$i]->mission->type == 2){ // strike\n\t\t\t\t\t$t = $this->getUnitById($this->ships[$i]->mission->targetid);\n\t\t\t\t\t$tPos = $t->getCurrentPosition();\n\t\t\t\t\t$dist = Math::getDist2($this->ships[$i]->getCurrentPosition(), $tPos);\n\t\t\t\t\t$angle = Math::getAngle2($this->ships[$i]->getCurrentPosition(), $tPos);\n\t\t\t\t\t$move = new Action(-1, $this->turn,\t\"move\",\t$dist, $tPos->x, $tPos->y, $angle, 0, 0, 0, 0);\n\t\t\t\t\t$this->ships[$i]->actions[] = $move;\n\t\t\t\t\tDebug::log(\"STATIC STRIKE #\".$this->ships[$i]->id.\", adding move to: \".$move->x.\"/\".$move->y);\n\t\t\t\t\t$units[] = $this->ships[$i];\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\t$tPos = $this->ships[$i]->getCurrentPosition(); // Patrol\n\t\t\t\t\t$move = new Action(-1, $this->turn,\t\"move\",\t0, $tPos->x, $tPos->y, 0, 0, 0, 0, 0);\n\t\t\t\t\t$this->ships[$i]->actions[] = $move;\n\t\t\t\t\tDebug::log(\"STATIC PATROL #\".$this->ships[$i]->id.\", adding move to: \".$move->x.\"/\".$move->y);\n\t\t\t\t\t$units[] = $this->ships[$i];\n\t\t\t\t}\n\n\t\t\t\t$this->ships[$i]->mission->x = $tPos->x;\n\t\t\t\t$this->ships[$i]->mission->y = $tPos->y;\n\t\t\t\t$missions[] = $this->ships[$i]->mission;\n\t\t\t}\n\t\t\telse { // on way\n\t\t\t\tif ($this->ships[$i]->mission->type == 2){ // strike\n\t\t\t\t\t$target = $this->getUnitById($this->ships[$i]->mission->targetid);\n\t\t\t\t\tif ($target->ship){\n\t\t\t\t\t\t$stack[1][] = $this->ships[$i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse { // patrol\n\t\t\t\t\t$stack[0][] = $this->ships[$i];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sizeof($units)){\n\t\t\tDBManager::app()->insertServerActions($units);\n\t\t\t$units = array();\n\t\t}\n\n\t\tDebug::log(\"layer 0 -> patrol target, layer 1 => strike\");\n\t\tfor ($i = 0; $i < sizeof($stack); $i++){\n\t\t\tDebug::log(\"resolving layer #\".$i);\n\t\t\tfor ($j = 0; $j < sizeof($stack[$i]); $j++){\n\t\t\t\tDebug::log(\"resolving mixed #\".$stack[$i][$j]->id);\n\t\t\t\tDebug::log(\"_____________________\");\n\t\t\t\t$origin = $stack[$i][$j]->getCurrentPosition();\n\t\t\t\t$impulse = $stack[$i][$j]->getCurrentImpulse();\n\t\t\t\t$tPos;\n\t\t\t\t$dist;\n\t\t\t\t$angle;\n\t\t\t\tif ($stack[$i][$j]->mission->type == 1){\n\t\t\t\t\t$tPos = new Point($stack[$i][$j]->mission->x, $stack[$i][$j]->mission->y); // patrol\n\t\t\t\t}\n\t\t\t\telse $tPos = $this->getUnitById($stack[$i][$j]->mission->targetid)->getCurrentPosition(); // strike / int\n\n\t\t\t\t$stack[$i][$j]->mission->x = $tPos->x;\n\t\t\t\t$stack[$i][$j]->mission->y = $tPos->y;\n\t\t\t\t$dist = Math::getDist2($origin, $tPos);\n\t\t\t\t$angle = Math::getAngle2($origin, $tPos);\n\n\t\t\t\tDebug::log(\"Flight #\".$stack[$i][$j]->id.\", impulse: \".$impulse);\n\t\t\t\tDebug::log(\"From \".$origin->x.\"/\".$origin->y.\" to \".$tPos->x.\"/\".$tPos->y);\n\t\t\t\tDebug::log(\"Dist \".$dist.\", angle: \".$angle);\n\n\t\t\t\tif ($impulse <= $dist){\n\t\t\t\t\tDebug::log(\"close in\");\n\t\t\t\t\t$tPos = Math::getPointInDirection($impulse, $angle, $origin->x, $origin->y);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tDebug::log(\"arrival\");\n\t\t\t\t\t$stack[$i][$j]->mission->arrived = $this->turn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$missions[] = $stack[$i][$j]->mission;\n\t\t\t\t$stack[$i][$j]->facing = $angle;\n\t\t\t\t$move = new Action(-1, $this->turn,\t\"move\",\t$dist, $tPos->x, $tPos->y,\n\t\t\t\t$angle, 0, 0, 0, 0);\n\t\t\t\t$stack[$i][$j]->actions[] = $move;\n\n\t\t\t\tDebug::log(\"adding move to: \".$move->x.\"/\".$move->y);\n\n\t\t\t\t$units[] = $stack[$i][$j];\n\t\t\t}\n\t\t\tif (sizeof($units)){\n\t\t\t\tDBManager::app()->insertServerActions($units);\n\t\t\t\t$units = array();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (sizeof($missions)){\n\t\t\tDBManager::app()->updateMissionState($missions);\n\t\t}\n\t}\n\n\tpublic function assembleEndStates(){\n\t\tDebug::log(\"assembleEndStates\");\n\t\t$states = array();\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t$states[] = $this->ships[$i]->getEndState($this->turn, $this->phase);\n\t\t}\n\n\t\tif ($this->phase == 3){\n\t\t\tfor ($i = 0; $i < sizeof($this->incoming); $i++){\n\t\t\t\tif ($this->incoming[$i][\"available\"] == $this->turn+1){\n\t\t\t\t\t$states[] = array(\n\t\t\t\t\t\t\"id\" => $this->incoming[$i][\"id\"], \n\t\t\t\t\t\t\"x\" => $this->incoming[$i][\"x\"], \n\t\t\t\t\t\t\"y\" => $this->incoming[$i][\"y\"], \n\t\t\t\t\t\t\"delay\" => 0, \n\t\t\t\t\t\t\"angle\" => $this->incoming[$i][\"a\"], \n\t\t\t\t\t\t\"thrust\" => 0\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (sizeof($states)){DBManager::app()->updateUnitEndState($states, $this->turn, $this->phase);}\n\t}\n\n\tpublic function startFiringPhase(){\n\t//\tDebug::log(\"startFiringPhase\");\n\t\t$dbManager = DBManager::app();\n\t\t$this->phase = 2;\n\n\t\tif ($dbManager->setGameTurnPhase($this->gameid, $this->turn, $this->phase)){\n\t\t\t//$players = $dbManager->getPlayerStatus($this->gameid);\n\t\t\t$this->updatePlayerStatus(\"waiting\");\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function handleFiringPhase(){\n\t\t$time = -microtime(true);\n\n\t\t$this->setupShips();\n\t\t//return false;\n\n\t\t$this->setFireOrderDetails();\n\t\t$this->sortFireOrders();\n\t\t$this->resolveShipFireOrders();\n\t\t$this->resolveFighterFireOrders();\n\t\t$this->resolveBallisticFireOrders();\n\t\t$this->cleanFireOrders();\n\t\t$this->testCrits();\n\t\t$this->writeDamageEntries();\n\t\t$this->writeCritEntries();\n\t\t$this->setUnitStatus();\n\t\t$time += microtime(true); \n\t\tDebug::log(\"handleFiringPhase time: \".round($time, 3).\" seconds.\");\n\t\treturn true;\n\t}\n\t\n\tpublic function handleDamageControlPhase(){\n\t\t$this->assembleEndStates();\n\t\treturn true;\n\t}\n\n\n\tpublic function endTurn(){\n\t\tDebug::log(\"endTurn\");\n\t\t$this->alterReinforcementPoints();\n\n\t\t$data = array();\n\t\tfor ($i = 0; $i < sizeof($this->incoming); $i++){\n\t\t\tif ($this->incoming[$i][\"available\"] == $this->turn+1){\n\t\t\t\t$data[] = $this->incoming[$i][\"id\"];\n\t\t\t}\n\t\t}\n\t\tDBManager::app()->resolveDeployActions($data);\n\t\tDBManager::app()->destroyUnitsDB(array($this->ships, $this->ballistics));\n\t}\n\n\tpublic function alterReinforcementPoints(){\n\t\tfor ($i = 0; $i < sizeof($this->playerstatus); $i++){\n\t\t\tDBManager::app()->addReinforceValue($this->playerstatus[$i][\"userid\"], $this->gameid, $this->reinforce);\n\t\t};\n\t}\n\n\tpublic function startNewTurn(){\n\t\t//Debug::log(\"startNewTurn\");\n\t\t$this->turn = $this->turn+1;\n\t\t$this->phase = -1;\n\t\tDBManager::app()->setGameTurnPhase($this->gameid, $this->turn, $this->phase);\n\t}\n\n\tpublic function startDeploymentPhase(){\n\t\t//Debug::log(\"startDeploymentPhase\");\n\t\t$this->pickReinforcements();\n\t\t$this->updatePlayerStatus(\"waiting\");\n\t\treturn;\n\t}\n\n\tpublic function setupShips(){\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t$this->ships[$i]->setFacing();\n\t\t\t$this->ships[$i]->setPosition();\n\t\t\t$this->ships[$i]->setupForDamage();\n\t\t\t$this->setShipLocks($this->ships[$i]);\n\t}\n\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t$aPos = $this->ships[$i]->getCurrentPosition();\n\t\t\tfor ($j = $i+1; $j < sizeof($this->ships); $j++){\n\t\t\t\tif ($this->ships[$i]->userid == $this->ships[$j]->userid){continue;}\n\t\t\t\t$bPos = $this->ships[$j]->getCurrentPosition();\n\t\t\t\t$dist = Math::getDist2($aPos, $bPos);\n\t\t\t\t$this->ships[$i]->distances[] = array($this->ships[$j]->id, $dist);\n\t\t\t\t$this->ships[$j]->distances[] = array($this->ships[$i]->id, $dist);\n\n\t\t\t\t//$this->ships[$i]->angles[] = array($this->ships[$j]->id, round(Math::addAngle($this->ships[$i]->getFacing(), Math::getAngle2($aPos, $bPos))));\n\t\t\t\t//$this->ships[$j]->angles[] = array($this->ships[$i]->id, round(Math::addAngle($this->ships[$j]->getFacing(), Math::getAngle2($bPos, $aPos))));\n\n\t\t\t\t$this->ships[$i]->angles[] = array($this->ships[$j]->id, round(Math::getAngle2($aPos, $bPos)));\n\t\t\t\t$this->ships[$j]->angles[] = array($this->ships[$i]->id, round(Math::getAngle2($bPos, $aPos)));\n\t\t\t}\n\t\t}\n\t\treturn;\n\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t\tDebug::log(\"FROM: #\".$this->ships[$i]->id);\n\t\t\tforeach ($this->ships[$i]->angles as $val){\n\t\t\t\tDebug::log(\"--> ANGLE TO: #\".$val[0].\": \".$val[1]);\n\t\t\t}\n\t\t\tforeach ($this->ships[$i]->distances as $val){\n\t\t\t\tDebug::log(\"-->  DIST TO: #\".$val[0].\": \".$val[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function setShipLocks($ship){\n\t\tif (!$ship->ship){return;}\n\t\tDebug::log(\"ew for #\".$ship->id);\n\t\t$origin = $ship->getCurrentPosition();\n\t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n\t\t$ew = $sensor->getEW($this->turn);\n\t\tif ($sensor->destroyed || $sensor->disabled  || !$ew){\n\t\t\treturn;\n\t\t}\n\t\telse if ($ew->type == 2 || $ew->type == 3){\n\t\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t\tif ($this->ships[$i]->id == $ship->id || $ship->userid == $this->ships[$i]->userid){continue;}\n\t\t\t\tswitch ($ew->type){\n\t\t\t\t\tcase 2: $ship->locks[] = array($this->ships[$i]->id, 0.2); break;\n\t\t\t\t\tcase 3: $ship->masks[] = array($this->ships[$i]->id, 0.2); break;\n\t\t\t\t}\n\t\t\t}\t\n\n\t\t\tfor ($i = 0; $i < sizeof($this->ballistics); $i++){\n\t\t\t\tif ($this->ballistics[$i]->id == $ship->id || $ship->userid == $this->ballistics[$i]->userid){continue;}\n\t\t\t\tswitch ($ew->type){\n\t\t\t\t\tcase 2: $ship->locks[] = array($this->ballistics[$i]->id, 0.2); break;\n\t\t\t\t\tcase 3: $ship->masks[] = array($this->ballistics[$i]->id, 0.2); break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$str = $sensor->getOutput($this->turn);\n\t\t\t$len = 20;\n\t\t\t$p = 1.5;\n\t\t\t$w = min(180, $len * pow($str/$ew->dist, $p));\n\t\t\t$start = Math::addAngle(0 + $w-$ship->getFacing(), $ew->angle);\n\t\t\t$end = Math::addAngle(360 - $w-$ship->getFacing(), $ew->angle);\n\n\t\t\tDebug::log(\"specific EW for ship #\".$ship->id.\", EW from \".$start.\" to \".$end.\", dist: \".$ew->dist);\n\t\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t\t$skip = 0;\n\t\t\t\tif ($this->ships[$i]->id == $ship->id || $ship->userid == $this->ships[$i]->userid){continue;}\n\n\t\t\t\tif ($ew->type == 0 && sizeof($ship->cc)){\n\t\t\t\t\tfor ($j = 0; $j < sizeof($ship->cc); $j++){\n\t\t\t\t\t\tif ($ship->cc[$j] == $this->ships[$i]->id){\n\t\t\t\t\t\t\tif ($this->ships[$i]->flight){\n\t\t\t\t\t\t\t\t$ship->locks[] = array($this->ships[$i]->id, round((0.5 / 180 * $w)*10)/10);\n\t\t\t\t\t\t\t\t$skip = 1; break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($this->ships[$i]->salvo){\n\t\t\t\t\t\t\t\t$angle = Math::getAngle2($origin, $this->ships[$i]->getTrajectoryStart());\n\t\t\t\t\t\t\t\tif (Math::isInArc($a, $start, $end)){\n\t\t\t\t\t\t\t\t\t$ship->locks[] = array($this->ships[$i]->id, 0.5);\n\t\t\t\t\t\t\t\t\t$skip = 1; break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($skip){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$dest = $this->ships[$i]->getCurrentPosition();\n\t\t\t\tif (Math::getDist2($origin, $dest) <= $ew->dist){\n\t\t\t\t\t$a = Math::getAngle2($origin, $dest);\n\t\t\t\t\t//Debug::log(\"versus #\".$this->ships[$i]->id.\", a: \".$a);\n\t\t\t\t\tif (Math::isInArc($a, $start, $end)){\n\t\t\t\t\t\tif ($ew->type == 0){ // LOCK\n\t\t\t\t\t\t\t//Debug::log(\"locking onto: #\".$this->ships[$i]->id);\n\t\t\t\t\t\t\t$ship->locks[] = array($this->ships[$i]->id, 0.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($ew->type == 1){ // MASK\n\t\t\t\t\t\t\tif (!$this->ships[$i]->flight){\n\t\t\t\t\t\t\t\t//Debug::log(\"masking from #\".$this->ships[$i]->id);\n\t\t\t\t\t\t\t\t$ship->masks[] = array($this->ships[$i]->id, 0.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}// else Debug::log(\"out of arc\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tforeach ($ship->locks as $entry){\n\t\t\tDebug::log(\"lock vs #\".$entry[0].\" with val: \".$entry[1]);\n\t\t}\n\t}\n\n\tpublic function setFireOrderDetails(){\n\t\tfor ($i = sizeof($this->fires)-1; $i >= 0; $i--){\n\t\t\t//echo \"fire: \".$this->fires[$i]->id; echo \"</br></br>\";\n\t\t\t//var_export($this->fires[$i]); echo \"</br></br>\";\n\t\t\t$this->fires[$i]->shooter = $this->getUnitById($this->fires[$i]->shooterid);\n\t\t\t$this->fires[$i]->weapon = $this->fires[$i]->shooter->getSystemById($this->fires[$i]->weaponid);\n\t\t\t//$this->fires[$i]->shots = $this->fires[$i]->weapon->getShots($this->turn);\n\t\t\t$this->fires[$i]->shots = 1;\n\t\t\t$this->fires[$i]->target = $this->getUnitById($this->fires[$i]->targetid);\n\t\t\t//var_export($this->fires[$i]->weapon); echo \"</br></br>\";\n\t\t\t//var_export($this->fires[$i]->weapon->getBoostLevel($this->turn)); echo \"</br></br>\";\n\t\t}\n\t}\n\n\tpublic function sortFireOrders(){\n\t//order target id ASC, weapon priority ASC, shooterider id ASC\n\n\t\tusort($this->fires, function($a, $b){\n\t\t\tif ($a->targetid != $b->targetid){\n\t\t\t\treturn $a->targetid - $b->targetid;\n\t\t\t}\n\t\t\telse if ($a->weapon->priority != $b->weapon->priority){\n\t\t\t\treturn $a->weapon->priority - $b->weapon->priority;\n\t\t\t}\n\t\t\telse if ($a->shooterid != $b->shooterid){\n\t\t\t\treturn $a->shooterid - $b->shooterid;\n\t\t\t}\n\t\t\telse return $a->id - $b->id;\n\t\t});\n\t}\n\n\tpublic function resolveShipFireOrders(){\n\t\t// resolve ship vs ship / fighter\n\t\tfor ($i = 0; $i < sizeof($this->fires); $i++){\n\t\t\t//Debug::log(\"fire [\".$i.\"]\");\n\t\t\tif (!$this->fires[$i]->resolved){\n\t\t\t\t//Debug::log(\"HANDLING\");\n\t\t\t\tif ($this->fires[$i]->shooter->flight == false){\n\t\t\t\t\t//var_export($this->fires[$i]->id);\n\t\t\t\t\t$this->fires[$i]->target->resolveFireOrder($this->fires[$i]);\n\t\t\t\t\tif (sizeof($this->fires[$i]->damages)){\n\t\t\t\t\t\t$this->damages = array_merge($this->damages, $this->fires[$i]->damages);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//var_export($this->damages);\n\t}\n\n\tpublic function resolveFighterFireOrders(){\n\t\t// splice and delete fireorders from destroyed fighters\n\t\t$toDelete = array();\n\n\t\tfor ($i = sizeof($this->fires)-1; $i >= 0; $i--){\n\t\t\tif (!$this->fires[$i]->resolved){\n\t\t\t\tif ($this->fires[$i]->shooter->flight){\n\t\t\t\t\tif ($this->fires[$i]->shooter->getStructureById($this->fires[$i]->weapon->fighterId)->destroyed){\n\t\t\t\t\t\t$this->fires[$i]->resolved = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t/*\tfor ($i = 0; $i < sizeof($this->fires); $i++){\n\t\t\tif ($this->fires[$i]->resolved || !$this->fires[$i]->shooter->flight){continue;}\n\t\t\t//Debug::log(\"comparing :\".$this->fires[$i]->id);\n\t\t\tfor ($j = $i+1; $j < sizeof($this->fires); $j++){\n\t\t\t\tif ($this->fires[$j]->resolved || !$this->fires[$j]->shooter->flight){continue;}\n\t\t\t\t//Debug::log(\"to :\".$this->fires[$j]->id);\n\t\t\t\tif ($this->fires[$j]->shooterid == $this->fires[$i]->shooterid){\n\t\t\t\t\tif ($this->fires[$j]->targetid == $this->fires[$i]->targetid){\n\t\t\t\t\t\tif ($this->fires[$j]->weapon->name == $this->fires[$i]->weapon->name){\n\t\t\t\t\t\t\t//Debug::log(\"could add fire: \".$this->fires[$j]->id.\" to fire \".$this->fires[$i]->id);\n\t\t\t\t\t\t\t$this->fires[$i]->shots++;\n\t\t\t\t\t\t\t$this->fires[$j]->shots--;\n\t\t\t\t\t\t\t$this->fires[$j]->resolved = 1;\n\t\t\t\t\t\t\t//$this->fires[$j]->notes = \"+\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t*/\n\n\t\t// fighter vs fighter\n\n\t\tfor ($i = 0; $i < sizeof($this->fires); $i++){ // non-dogfights\n\t\t\tif (!$this->fires[$i]->resolved){\n\t\t\t\tif ($this->fires[$i]->shooter->flight && $this->fires[$i]->target->flight){\n\t\t\t\t\t$this->fires[$i]->target->resolveFireOrder($this->fires[$i]);\n\t\t\t\t\tif (sizeof($this->fires[$i]->damages)){\n\t\t\t\t\t\t$this->damages = array_merge($this->damages, $this->fires[$i]->damages);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// fighter vs non fighter (ball, ship);\n\t\tfor ($i = 0; $i < sizeof($this->fires); $i++){\n\t\t\tif (!$this->fires[$i]->resolved){\n\t\t\t\tif ($this->fires[$i]->shooter->flight == true && $this->fires[$i]->target->flight == false){\n\t\t\t\t\tif ($this->fires[$i]->shooter->getStructureById($this->fires[$i]->weapon->fighterId)->destroyed){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$this->fires[$i]->target->resolveFireOrder($this->fires[$i]);\n\t\t\t\t\t//Debug::log(\"resolving fire id: \".$this->fires[$i]->id);\n\t\t\t\t\tif (sizeof($this->fires[$i]->damages)){\n\t\t\t\t\t\t$this->damages = array_merge($this->damages, $this->fires[$i]->damages);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$index = 0;\n\t\tfor ($i = $index; $i < sizeof($this->fires); $i++){\n\t\t\tif ($this->fires[$i]->shooter->flight){\n\t\t\t\tif ($this->fires[$i]->shots >= 2){\n\t\t\t\t\tfor ($j = $i+1; $j < sizeof($this->fires); $j++){\n\t\t\t\t\t\tif ($this->fires[$i]->shooter->flight && $this->fires[$j]->shots == 0){\n\t\t\t\t\t\t\tif ($this->fires[$i]->targetid == $this->fires[$j]->targetid){\n\t\t\t\t\t\t\t\t$this->fires[$j]->req = $this->fires[$i]->req;\n\t\t\t\t\t\t\t/*\t$this->fires[$i]->shots--;\n\t\t\t\t\t\t\t\t$this->fires[$j]->shots++;\n\n\t\t\t\t\t\t\t\tif ($this->fires[$i]->hits > 1){\n\t\t\t\t\t\t\t\t\t$this->fires[$i]->hits--;\n\t\t\t\t\t\t\t\t\t$this->fires[$j]->hits++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($this->fires[$i]->shots == 1){\n\t\t\t\t\t\t\t\t\t$index = $j+1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function resolveBallisticFireOrders(){\n\t\tDebug::log(\"resolveBallisticFireOrders\");\n\t\t$fires = array();\n\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->ships[$i]->salvo && !$this->ships[$i]->isDestroyed()){\n\t\t\t\tif ($this->ships[$i]->mission->arrived){\n\t\t\t\t\t$target = $this->getUnitById($this->ships[$i]->mission->targetid);\n\t\t\t\t\t$fire = $this->ships[$i]->getFireOrder($this->gameid, $this->turn, $target);\n\t\t\t\t\t//Debug::log(\"Salvo #\".$this->ships[$i]->id.\" attacking: \".$fire->target->name.\" #\".$fire->target->id.\" with \".$fire->shooter->getShots($this->turn).\"x \".$fire->weapon->name);\n\t\t\t\t\t$fires[] = $fire;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sizeof($fires)){\n\t\t\tDBManager::app()->insertServerFireOrder($fires);\n\n\t\t\tfor ($i = 0; $i < sizeof($fires); $i++){\n\t\t\t\t$fires[$i]->target->resolveFireOrder($fires[$i]);\n\t\t\t\tif (sizeof($fires[$i]->damages)){\n\t\t\t\t\t$this->damages = array_merge($this->damages, $fires[$i]->damages);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$this->fires = array_merge($this->fires, $fires);\n\t\t}\n\t}\n\n\tpublic function cleanFireOrders(){\n\t\tDebug::log(\"cleanFireOrders, fires: \".sizeof($this->fires));\n\t\tDBManager::app()->updateFireOrders($this->fires);\n\t\tDBManager::app()->deleteUnresolvedFireOrders($this->gameid);\n\t}\n\n\tpublic function testCrits(){\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t$this->ships[$i]->testCriticals($this->turn);\n\t\t}\n\t}\n\n\tpublic function writeDamageEntries(){\n\t\tif (sizeof($this->damages)){\n\t\t\tDBManager::app()->insertDamageEntries($this->damages);\n\t\t}\n\t}\n\n\tpublic function writeCritEntries(){\n\t\t//Debug::log(\"writeCritEntries\");\n\t\t$all = array();\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\t$all = array_merge($all, $this->ships[$i]->getNewCrits($this->turn));\n\t\t}\n\t\tDBManager::app()->insertCritEntries($all, $this->gameid);\n\t}\n\n\tpublic function setUnitStatus(){\n\t\tDBManager::app()->setUnitStatusDB($this->ships);\n\t}\n\n\tpublic function startDamageControlPhase(){\n\t\t//Debug::log(\"startDamageControlPhase\");\n\n\t\t$dbManager = DBManager::app();\n\t\t$this->phase = 3;\n\n\t\tif ($dbManager->setGameTurnPhase($this->gameid, $this->turn, $this->phase)){\n\t\t\t$this->updatePlayerStatus(\"waiting\");\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function finishTurn(){\n\t\t//Debug::log(\"finishTurn\");\n\t}\n\n\tpublic function getId(){\n\t\treturn 1 + sizeof($this->ships);\n\t}\n\n\tpublic function getUnitById($id){\n\t\t//Debug::log(\"looking for unit :\".$unitid);\n\t\tfor ($i = 0; $i < sizeof($this->ships); $i++){\n\t\t\tif ($this->ships[$i]->id == $id){\n\t\t\t\treturn $this->ships[$i];\n\t\t\t}\n\t\t}\n\t\tfor ($i = 0; $i < sizeof($this->ballistics); $i++){\n\t\t\tif ($this->ballistics[$i]->id == $id){\n\t\t\t\treturn $this->ballistics[$i];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getFactions(){\n\t\treturn array(\"Earth Alliance\", \"Centauri Republic\", \"Minbari Federation\", \"Narn Regime\");\n\t}\n\n\tpublic function getFightersForFaction($faction){\n\t\t//Debug::log(\"getFightersForFaction\");\n\t}\n\n\tpublic function getFlights(){\n\t\treturn array(array(\n\t\t\t\"name\" => \"Flight\",\n\t\t\t\"value\" => 500,\n\t\t\t\"eta\" => 2\n\t\t));\n\t}\n\n\tpublic function getReinforcementShips($faction){\n\t\t//Debug::log(\"getShipsForFaction\");\n\t\t$ships = array();\n\t\t$data = array();\n\n\t\tswitch ($faction){\n\t\t\tcase \"Earth Alliance\";\n\t\t\t\t$ships = array(\n\t\t\t\t\tarray(\"Omega\", 8, 2),\n\t\t\t\t\tarray(\"Hyperion\", 6, 1),\n\t\t\t\t\tarray(\"Artemis\", 5, 0),\n\t\t\t\t\tarray(\"Tethys\", 4, -1)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Centauri Republic\";\n\t\t\t\t$ships = array(\n\t\t\t\t\tarray(\"Primus\", 8, 2),\n\t\t\t\t\tarray(\"Altarian\", 5, 0),\n\t\t\t\t\tarray(\"Darkner\", 4, 0),\n\t\t\t\t\tarray(\"Demos\", 5, 0),\n\t\t\t\t\tarray(\"Vorchan\", 3, -1),\n\t\t\t\t\tarray(\"Haven\", 3, -1),\n\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Minbari Federation\";\n\t\t\t\t$ships = array(\n\t\t\t\t\tarray(\"Sharlin\", 8, 1),\n\t\t\t\t\tarray(\"Tinashi\", 4, 0),\n\t\t\t\t\tarray(\"WhiteStar\", 5, -2),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Narn Regime\";\n\t\t\t\t$ships = array(\n\t\t\t\t\tarray(\"GQuan\", 6, 0)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$ship;\n\n\t\tfor ($i = 0; $i < sizeof($ships); $i++){\n\t\t\t$name = $ships[$i][0];\n\t\t\t$ship = array(\n\t\t\t\t\"name\" => $ships[$i][0],\n\t\t\t\t\"value\" => $name::$value,\n\t\t\t\t\"weight\" => $ships[$i][1],\n\t\t\t\t\"eta\" => $ships[$i][2]\n\t\t\t);\n\t\t\t$data[] = $ship;\n\t\t}\n\n\t\treturn $data;\n\n\t}\n\n\tpublic function getShipsForFaction($faction){\n\t\t//Debug::log(\"getShipsForFaction\");\n\t\t$ships = array();\n\t\t$data = array();\n\n\t\tswitch ($faction){\n\t\t\tcase \"Earth Alliance\";\n\t\t\t\t$ships = array(\n\t\t\t\t\t\"Omega\",\n\t\t\t\t\t\"Avenger\",\n\t\t\t\t\t\"Hyperion\",\n\t\t\t\t\t\"Saggitarius\",\n\t\t\t\t\t\"Artemis\",\n\t\t\t\t\t\"Tethys\"\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Centauri Republic\";\n\t\t\t\t$ships = array(\n\t\t\t\t\t\"Primus\",\n\t\t\t\t\t\"Altarian\",\n\t\t\t\t\t\"Darkner\",\n\t\t\t\t\t\"Demos\",\n\t\t\t\t\t\"Vorchan\",\n\t\t\t\t\t\"Haven\"\n\t\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Minbari Federation\";\n\t\t\t\t$ships = array(\n\t\t\t\t\t\"Sharlin\",\n\t\t\t\t\t\"Tinashi\",\n\t\t\t\t\t\"WhiteStar\",\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"Narn Regime\";\n\t\t\t\t$ships = array(\n\t\t\t\t\t\"GQuan\"\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$ship;\n\n\t\tfor ($i = 0; $i < sizeof($ships); $i++){\n\t\t\t$name = $ships[$i];\n\t\t\t$ship = array(\n\t\t\t\t\"name\" => $ships[$i],\n\t\t\t\t\"value\" => $name::$value,\n\t\t\t\t\"eta\" => 0\n\t\t\t);\n\t\t\t$data[] = $ship;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\tpublic function getPreviewData($name){\n\t\t//Debug::log(\"asking for preview of: \".$name);\n\t\t$ship = new $name(1, 1, 0, \"\", 0);\n\t\t$ship->setState(0);\n\t\treturn $ship;\n\t}\n\n\tpublic function logSystemsByClass($array){\n\t\t$systems = array();\n\n\t\tfor ($i = 0; $i < sizeof($array); $i++){\n\t\t\tswitch ($array[$i]){\n\t\t\t\tcase \"Ion\":\n\t\t\t\t\t$systems[] = array(\"LightIon\", \"MediumTwinIon\", \"HeavyIon\"); break;\n\t\t\t\tcase \"Pulse\":\n\t\t\t\t\t$systems[] = array(\"LightPulse\", \"MediumPulse\"); break;\n\t\t\t\tcase \"Laser\":\n\t\t\t\t\t$systems[] = array(\"LightLaser\", \"MediumLaser\", \"HeavyLaser\"); break;\n\t\t\t\tcase \"Matter\":\n\t\t\t\t\t$systems[] = array(\"MediumRailGun\", \"HeavyRailGun\"); break;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t}\n\n\t\t$return = array();\n\n\t\tfor ($i = 0; $i < sizeof($systems); $i++){\n\t\t\tfor ($j = 0; $j < sizeof($systems[$i]); $j++){\n\t\t\t\t$return[] = new $systems[$i][$j](0, 0, 0, 0);\n\t\t\t}\n\t\t}\n\t\treturn $return;\n\t}\n\n\tpublic function compareSystems($array){\n\t\t$systems = array();\n\n\t\tfor ($i = 0; $i < sizeof($array); $i++){\n\t\t\t$systems[$i] = new $array[$i](0, 0, 0, 0);\n\t\t}\n\t\treturn $systems;\n\t}\n\n\tpublic function logShips($elements){\n\t\t$data = func_get_args();\n\t\tif ($data[0] == \"all\"){\n\t\t\treturn $this->logAllShips();\n\t\t}\n\t\telse {\n\t\t\t$ships = array();\n\t\t\tfor ($i = 0; $i < sizeof($data); $i++){\n\t\t\t\t$ships[] = new $data[$i](0,0,0,0,0,0);\n\t\t\t\t$ships[sizeof($ships)-1]->setProps(0);\n\t\t\t}\n\t\t\treturn $ships;\n\t\t}\n\t}\n\n\tpublic function logAllShips(){\n\t\t$allShips = array();\n\n\t\t$factions = $this->getFactions();\n\t\tforeach ($factions as $faction){\n\t\t\t$ships = $this->getShipsForFaction($faction);\n\t\t\tforeach ($ships as $ship){\n\t\t\t\t$allShips[] = $ship;\n\t\t\t}\n\t\t}\n\n\t\tfor ($i = 0; $i < sizeof($allShips); $i++){\n\t\t\t$name = $allShips[$i][\"name\"];\n\t\t\t$ship = new $name(0, 0, 0, 0, 0, 0);\n\t\t\t$ship->setProps(1);\n\t\t\t$allShips[$i] = $ship;\n\t\t\tcontinue;\n\t\t}\n\n\treturn $allShips;\n\t}\n\n\tpublic function reset(){\n\t\tif (DBManager::app()->reset()){return true;}\n\t}\n\n\tstatic function convertToFireOrder($data){\n\t\treturn new FireOrder(\n\t\t\t$data[\"id\"],\n\t\t\t$data[\"gameid\"],\n\t\t\t$data[\"turn\"],\n\t\t\t$data[\"shooterid\"],\n\t\t\t$data[\"targetid\"],\n\t\t\t$data[\"weaponid\"],\n\t\t\t$data[\"shots\"],\n\t\t\t$data[\"req\"],\n\t\t\t$data[\"notes\"],\n\t\t\t$data[\"hits\"],\n\t\t\t$data[\"resolved\"]\n\t\t);\n\t}\n}\n?>\n",
			"file": "server/manager.php",
			"file_size": 43155,
			"file_write_time": 131488591925707974,
			"settings":
			{
				"buffer_size": 41388,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 50733,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 60983,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 12590,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 184,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 16970,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 3681,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 23939,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7236,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17080,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2738,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1992,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2303,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2682,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2261,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/wing.php",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.js",
			"",
			"*.php",
			"",
			"setPureImage",
			"",
			"flights.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.pphp",
			"",
			"*.js",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"style.css",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"this.turnAngles = {}",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"testCriticals",
			"fire id:",
			"getResolvingFireOrders",
			"weaponaime",
			"flightDiv",
			"new Missile",
			"systems.",
			"gettabled",
			"settimeloaded",
			"setstate",
			"getLoadLevel",
			"setTimeLoaded",
			"doboost = fu",
			"doboost()",
			"doboost ",
			"doboost",
			"getloadlevel",
			"settimeloaded()",
			"settimeloaded",
			"copyPowers",
			"setState",
			"\n\tif (this.id == 14 && this.parentId == 6){\n\t\tconsole.log(\"ding\");\n\t}",
			"copy",
			"TimeLoad",
			"settimel",
			"this.ball",
			"this.ballistics",
			"dodeployfl",
			"rototype.select =",
			"hangarLoadoutDiv",
			"disableMissionMode",
			"enableDeployment",
			"this.deploying = ",
			"game.deploying = ",
			"this.drawImg ",
			"setTimeLoaded",
			"if (game.getUnitById(aUnit).available < game.turn){",
			"\"speed\"",
			"speedChange",
			"baseturncost",
			"drawallp",
			"if (game.deploying)",
			"if (game.deployin",
			"drawCtx",
			"baseimpulse ",
			"basei",
			"c='varIcons/plus.p",
			"size16",
			"size15",
			"size",
			"plus.png",
			"script",
			"single.js",
			"setShipLocks",
			"setPosition",
			"Trajectory =",
			"trajectory ",
			"traje",
			"trajectory",
			"trajectory ",
			"trajectory",
			"animatef",
			"\"ding",
			"\"damages: ",
			"\"dama",
			"animateShipExplosions",
			"animateBallistics",
			"explo\"",
			"getResolvingFireOrders",
			"details",
			"animateFir",
			"animatefir",
			"shipexp",
			"from fireo",
			"resolveFireOrder",
			"sortfire",
			"getDogfights",
			"assembleUnits",
			"setFireOrderDetails",
			"handlefiringp",
			"updateFireOrders",
			"resolvebal",
			"handleFir",
			"deleteem",
			"resolveBallistics",
			"resolveb",
			"deleteFireOrders",
			"updateFireOrders",
			"handleba",
			"updateFireOrders",
			"$this->updateFireOrders",
			"getBaseSy",
			"assembleu",
			"resolveb",
			"intercepts",
			"resolveballist",
			"highlightFireOrder",
			"getHitSection",
			"calc",
			"getstr",
			"242",
			"rollToHit",
			"getHitSystem",
			"getImpactAngle",
			"handleFiringPhase",
			"handlefiring",
			"handleFiringPhase",
			"handlefiring",
			"angle = ",
			"angle: ",
			"adjusted ",
			"setpos",
			"getImpactAngle",
			"setposition",
			"setshiplocks",
			"lock",
			"setPosition",
			"getImpactAngle",
			"getAngle",
			"getImpactAngle",
			"resolveFireOrder",
			"fire angle: ",
			"adjust f",
			"hitse",
			"FireAngle",
			"while",
			"gethitsection",
			"calculateToHit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"speed",
			"font16",
			"font15",
			"DBManager::app()->updateFireOrders",
			"getFireAngle",
			"getImpactAngle",
			"insertClientFireOrder",
			"getAngledHitSection",
			"getAngledHitChance",
			"getAnglesHitChance",
			"target.",
			"setRawImage",
			"setPureImage",
			"",
			"Local Units",
			"shipImages",
			"game.getUnitByClick",
			"getUnitById",
			"resolveFlightMovement",
			"isCloseCombat($id)",
			"getHitSection",
			"s",
			"pSize",
			"isCloseCombat",
			"setPostMoveFacing",
			"updateIntercepts",
			"[$j]",
			"$stack[$i][j]",
			"planCtx",
			"inRange",
			"updateTargets",
			"resolveUnitMovement",
			"animateUnitMovement",
			"getIncomingUnits",
			"drawMovePlan",
			"launchData",
			"$",
			"$unit",
			"\"<td>\"",
			"\"<tr>\"",
			", ",
			");",
			"draw",
			"isExposed",
			"MediumTwinIon",
			"#27e627",
			"#24de24",
			"lime",
			"lime;",
			"getCurrentImpulse();",
			"getCurrentImplse();",
			"x.drawX",
			"shooter.drawX",
			"setDrawData",
			"setDrawData()",
			"getPlannedPosition",
			"remainingDelay",
			"delay",
			"getPlannedFacing()",
			"salvo",
			".getCurrentImpulse()",
			"this.getCurrentImpulse",
			"this.getCurrentImPulse",
			"new Action(-1, ",
			"unitGUI",
			"getDmgRangeMod($fire)",
			"\"Thrust",
			"getDmgString",
			"Damage loss",
			".getRangeDmgMod",
			"getDmgRangeMod",
			"getDmgRangePenalty",
			"dmgLoss",
			"mouse",
			"salvo",
			"mouseCtx",
			"system",
			"this.turnAngles = {}",
			"IsOnMovementArc",
			"getTurnStep",
			"$this->updatePlayerStatus",
			"\"Disabled\"",
			"doOverkill",
			"applyOverkill",
			"new",
			"$this->boostEffect[] = new",
			"$manager->incoming[$i]",
			"$units",
			"insertServerActions",
			"$units[$i][\"actions\"][$j]",
			"insertClientActions",
			"drawMovePlan",
			"element",
			"",
			"getRemainingIntegrity",
			"getImpulseProfileMod",
			"getShots($this->turn)",
			"public function getShots($turn){",
			"getEWSettings",
			"ctx",
			"</span>",
			"<span class='red'",
			"<span",
			"ballistics",
			"if (this.destroyed || this.disabled || this.locked){",
			"$this",
			"doDamage($fire, $roll, $system)",
			"rollToHit",
			"getSection",
			"angle",
			"section",
			"$negation = $fire->target->getArmourValue($fire, $hitSystem);",
			"$negation = $fire->target->getArmourElement($fire) * $hitSystem->getArmourMod();",
			"salvo",
			"move",
			"moveAngles",
			"getPlannedFacing",
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data.",
			"getTraverseMod"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 25,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2006.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5231,
						"regions":
						{
						},
						"selection":
						[
							[
								3168,
								3137
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 657.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15560,
						"regions":
						{
						},
						"selection":
						[
							[
								6994,
								6994
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4862.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20085,
						"regions":
						{
						},
						"selection":
						[
							[
								13530,
								13530
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 17462.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12624,
						"regions":
						{
						},
						"selection":
						[
							[
								1026,
								1026
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 254.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84049,
						"regions":
						{
						},
						"selection":
						[
							[
								2362,
								2362
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1181.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6014,
						"regions":
						{
						},
						"selection":
						[
							[
								944,
								944
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 116.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								571,
								571
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								2240,
								2240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								1894,
								1894
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 829.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18270,
						"regions":
						{
						},
						"selection":
						[
							[
								1491,
								1491
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 254.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1070,
						"regions":
						{
						},
						"selection":
						[
							[
								1016,
								1016
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 278.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								452,
								452
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3748,
						"regions":
						{
						},
						"selection":
						[
							[
								402,
								402
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2775,
						"regions":
						{
						},
						"selection":
						[
							[
								1349,
								1349
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2568,
						"regions":
						{
						},
						"selection":
						[
							[
								2366,
								2366
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 133.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								1130,
								1130
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 27.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1611,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4540,
						"regions":
						{
						},
						"selection":
						[
							[
								882,
								882
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5248,
						"regions":
						{
						},
						"selection":
						[
							[
								3209,
								3224
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2355.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1991,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4867,
						"regions":
						{
						},
						"selection":
						[
							[
								4155,
								4155
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2865.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4724,
						"regions":
						{
						},
						"selection":
						[
							[
								110,
								110
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5055,
						"regions":
						{
						},
						"selection":
						[
							[
								4557,
								4557
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 245.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								4013,
								4013
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1140
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 203.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1492,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 421.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6073,
						"regions":
						{
						},
						"selection":
						[
							[
								2809,
								2809
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 218.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43646,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										182,
										201
									],
									[
										337,
										356
									],
									[
										500,
										519
									],
									[
										636,
										655
									],
									[
										788,
										807
									],
									[
										1002,
										1021
									],
									[
										1270,
										1289
									],
									[
										1649,
										1668
									],
									[
										1804,
										1823
									],
									[
										1967,
										1986
									],
									[
										2103,
										2122
									],
									[
										2255,
										2274
									],
									[
										2469,
										2488
									],
									[
										2737,
										2756
									],
									[
										3116,
										3135
									],
									[
										3271,
										3290
									],
									[
										3434,
										3453
									],
									[
										3570,
										3589
									],
									[
										3722,
										3741
									],
									[
										3936,
										3955
									],
									[
										4204,
										4223
									],
									[
										4560,
										4571
									],
									[
										4889,
										4900
									],
									[
										5168,
										5179
									],
									[
										5380,
										5391
									],
									[
										5564,
										5575
									],
									[
										5761,
										5772
									],
									[
										5966,
										5977
									],
									[
										6164,
										6175
									],
									[
										6444,
										6455
									],
									[
										6630,
										6641
									],
									[
										6939,
										6950
									],
									[
										7124,
										7135
									],
									[
										7390,
										7401
									],
									[
										7682,
										7689
									],
									[
										8005,
										8012
									],
									[
										8278,
										8285
									],
									[
										8484,
										8491
									],
									[
										8662,
										8669
									],
									[
										8853,
										8860
									],
									[
										9052,
										9059
									],
									[
										9244,
										9251
									],
									[
										9518,
										9525
									],
									[
										9698,
										9705
									],
									[
										10001,
										10008
									],
									[
										10180,
										10187
									],
									[
										10440,
										10447
									],
									[
										10766,
										10783
									],
									[
										10971,
										10988
									],
									[
										11244,
										11261
									],
									[
										11433,
										11450
									],
									[
										11650,
										11666
									],
									[
										11962,
										11978
									],
									[
										12151,
										12167
									],
									[
										12449,
										12465
									],
									[
										12722,
										12738
									],
									[
										13004,
										13020
									],
									[
										13249,
										13265
									],
									[
										13488,
										13504
									],
									[
										13704,
										13720
									],
									[
										13936,
										13952
									],
									[
										14131,
										14147
									],
									[
										14315,
										14331
									],
									[
										14485,
										14501
									],
									[
										14667,
										14683
									],
									[
										14860,
										14876
									],
									[
										15060,
										15076
									],
									[
										15283,
										15299
									],
									[
										15432,
										15448
									],
									[
										15631,
										15647
									],
									[
										15759,
										15775
									],
									[
										15925,
										15941
									],
									[
										16021,
										16037
									],
									[
										16255,
										16271
									],
									[
										16501,
										16517
									],
									[
										16794,
										16810
									],
									[
										17043,
										17059
									],
									[
										17254,
										17270
									],
									[
										17542,
										17557
									],
									[
										17684,
										17699
									],
									[
										17736,
										17751
									],
									[
										17867,
										17882
									],
									[
										17911,
										17926
									],
									[
										17979,
										17994
									],
									[
										18107,
										18122
									],
									[
										18151,
										18166
									],
									[
										18199,
										18214
									],
									[
										18489,
										18497
									],
									[
										18731,
										18739
									],
									[
										19015,
										19023
									],
									[
										19388,
										19396
									],
									[
										19737,
										19745
									],
									[
										20134,
										20142
									],
									[
										20542,
										20550
									],
									[
										20878,
										20886
									],
									[
										21125,
										21133
									],
									[
										21376,
										21384
									],
									[
										21745,
										21753
									],
									[
										22057,
										22065
									],
									[
										22292,
										22300
									],
									[
										22551,
										22559
									],
									[
										22863,
										22871
									],
									[
										23208,
										23216
									],
									[
										23552,
										23560
									],
									[
										23604,
										23612
									],
									[
										23771,
										23779
									],
									[
										23973,
										23981
									],
									[
										24260,
										24268
									],
									[
										24400,
										24408
									],
									[
										24609,
										24617
									],
									[
										24800,
										24808
									],
									[
										24919,
										24927
									],
									[
										25133,
										25141
									],
									[
										25374,
										25382
									],
									[
										25699,
										25707
									],
									[
										25964,
										25972
									],
									[
										26267,
										26275
									],
									[
										26575,
										26583
									],
									[
										26840,
										26848
									],
									[
										27079,
										27087
									],
									[
										27308,
										27316
									],
									[
										27507,
										27515
									],
									[
										27781,
										27789
									],
									[
										28079,
										28087
									],
									[
										28332,
										28340
									],
									[
										28574,
										28582
									],
									[
										28778,
										28786
									],
									[
										28954,
										28962
									],
									[
										29173,
										29181
									],
									[
										29242,
										29250
									],
									[
										29341,
										29349
									],
									[
										29440,
										29448
									],
									[
										29579,
										29587
									],
									[
										29688,
										29696
									],
									[
										29856,
										29864
									],
									[
										29898,
										29906
									],
									[
										30114,
										30122
									],
									[
										30244,
										30252
									],
									[
										30309,
										30317
									],
									[
										30463,
										30471
									],
									[
										30635,
										30643
									],
									[
										30867,
										30875
									],
									[
										31122,
										31130
									],
									[
										31339,
										31347
									],
									[
										31619,
										31627
									],
									[
										31901,
										31909
									],
									[
										32183,
										32191
									],
									[
										32466,
										32474
									],
									[
										32758,
										32766
									],
									[
										33021,
										33029
									],
									[
										33269,
										33277
									],
									[
										33521,
										33529
									],
									[
										33837,
										33845
									],
									[
										34069,
										34077
									],
									[
										34284,
										34292
									],
									[
										34573,
										34581
									],
									[
										34948,
										34956
									],
									[
										35168,
										35176
									],
									[
										35691,
										35702
									],
									[
										36115,
										36126
									],
									[
										36497,
										36508
									],
									[
										37002,
										37013
									],
									[
										37380,
										37391
									],
									[
										37519,
										37530
									],
									[
										37787,
										37798
									],
									[
										37927,
										37938
									],
									[
										38319,
										38330
									],
									[
										38677,
										38688
									],
									[
										38948,
										38959
									],
									[
										39209,
										39220
									],
									[
										39480,
										39491
									],
									[
										39718,
										39727
									],
									[
										40020,
										40028
									],
									[
										40052,
										40060
									],
									[
										40084,
										40092
									],
									[
										40116,
										40124
									],
									[
										40148,
										40156
									],
									[
										40180,
										40188
									],
									[
										40212,
										40220
									],
									[
										40244,
										40252
									],
									[
										40492,
										40500
									],
									[
										40834,
										40842
									],
									[
										41178,
										41191
									],
									[
										41225,
										41238
									],
									[
										41273,
										41286
									],
									[
										41322,
										41335
									],
									[
										41512,
										41525
									],
									[
										41560,
										41573
									],
									[
										41609,
										41622
									],
									[
										41658,
										41671
									],
									[
										41707,
										41720
									],
									[
										41756,
										41769
									],
									[
										41803,
										41816
									],
									[
										41995,
										42008
									],
									[
										42043,
										42056
									],
									[
										42090,
										42103
									],
									[
										42137,
										42150
									],
									[
										42184,
										42197
									],
									[
										42233,
										42246
									],
									[
										42282,
										42295
									],
									[
										42331,
										42344
									],
									[
										42378,
										42391
									],
									[
										42427,
										42440
									],
									[
										42475,
										42488
									],
									[
										42523,
										42536
									],
									[
										42798,
										42811
									],
									[
										42931,
										42944
									],
									[
										43062,
										43075
									],
									[
										43107,
										43120
									],
									[
										43371,
										43384
									],
									[
										43416,
										43429
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								42803,
								42803
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 17,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 21726.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4486,
						"regions":
						{
						},
						"selection":
						[
							[
								549,
								549
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 169.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9288,
						"regions":
						{
						},
						"selection":
						[
							[
								4613,
								4613
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2242.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29278,
						"regions":
						{
						},
						"selection":
						[
							[
								22008,
								22008
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14619.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								1944,
								1944
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86761,
						"regions":
						{
						},
						"selection":
						[
							[
								382,
								382
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								7375,
								7375
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4063.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1590,
						"regions":
						{
						},
						"selection":
						[
							[
								811,
								811
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16111,
						"regions":
						{
						},
						"selection":
						[
							[
								15099,
								15099
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9964.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6997,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								6997
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 290.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41388,
						"regions":
						{
						},
						"selection":
						[
							[
								36488,
								36488
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 22143.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50733,
						"regions":
						{
						},
						"selection":
						[
							[
								29081,
								29081
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19425.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60983,
						"regions":
						{
						},
						"selection":
						[
							[
								5262,
								5266
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3340.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12590,
						"regions":
						{
						},
						"selection":
						[
							[
								3729,
								3729
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 2513.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								2520,
								2520
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1188.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16970,
						"regions":
						{
						},
						"selection":
						[
							[
								14007,
								14025
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8237.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								516,
								516
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				}
			]
		},
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 51,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1492,
						"regions":
						{
						},
						"selection":
						[
							[
								793,
								793
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3474,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 197.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29278,
						"regions":
						{
						},
						"selection":
						[
							[
								19709,
								19709
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12412.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23939,
						"regions":
						{
						},
						"selection":
						[
							[
								23306,
								23306
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 7626.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4724,
						"regions":
						{
						},
						"selection":
						[
							[
								791,
								791
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7236,
						"regions":
						{
						},
						"selection":
						[
							[
								664,
								664
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								2424,
								2424
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4867,
						"regions":
						{
						},
						"selection":
						[
							[
								428,
								428
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84049,
						"regions":
						{
						},
						"selection":
						[
							[
								49602,
								49602
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30508.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86761,
						"regions":
						{
						},
						"selection":
						[
							[
								42845,
								42845
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 27389.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6014,
						"regions":
						{
						},
						"selection":
						[
							[
								2586,
								2586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1575.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50733,
						"regions":
						{
						},
						"selection":
						[
							[
								29087,
								29087
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18938.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8397,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15560,
						"regions":
						{
						},
						"selection":
						[
							[
								4622,
								4622
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3537.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50733,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1991,
						"regions":
						{
						},
						"selection":
						[
							[
								1455,
								1455
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1134.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60983,
						"regions":
						{
						},
						"selection":
						[
							[
								41976,
								41976
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 28396.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12590,
						"regions":
						{
						},
						"selection":
						[
							[
								5271,
								5271
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3635.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5058.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17080,
						"regions":
						{
						},
						"selection":
						[
							[
								2548,
								2548
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1316.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12624,
						"regions":
						{
						},
						"selection":
						[
							[
								7578,
								7578
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4979.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								1627,
								1627
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3651,
						"regions":
						{
						},
						"selection":
						[
							[
								421,
								421
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 160.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								390,
								390
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 69.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5231,
						"regions":
						{
						},
						"selection":
						[
							[
								3774,
								3782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3084.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2738,
						"regions":
						{
						},
						"selection":
						[
							[
								1345,
								1345
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								813,
								813
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								409
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								446,
								446
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3139,
						"regions":
						{
						},
						"selection":
						[
							[
								596,
								596
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16970,
						"regions":
						{
						},
						"selection":
						[
							[
								13730,
								13730
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9288,
						"regions":
						{
						},
						"selection":
						[
							[
								7441,
								7441
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3920.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1070,
						"regions":
						{
						},
						"selection":
						[
							[
								182,
								182
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								627,
								627
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3187.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5248,
						"regions":
						{
						},
						"selection":
						[
							[
								2615,
								2615
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1639.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4486,
						"regions":
						{
						},
						"selection":
						[
							[
								858,
								858
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 61.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41388,
						"regions":
						{
						},
						"selection":
						[
							[
								27682,
								27682
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16569.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6815,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								1064,
								1064
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2682,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1860,
								1860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 618.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6634,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6073,
						"regions":
						{
						},
						"selection":
						[
							[
								3606,
								3606
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2148.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								1944,
								1944
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 686.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								1651,
								1653
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								857,
								857
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 325.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.439009102151,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"gamej.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\server\\mixed.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"m",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"mx",
				"C:\\xampp\\htdocs\\fire\\server\\mixed.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sj",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"gamejs",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"iam",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"l",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"p",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"stly",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"mag",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cr",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"os",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sa",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sjh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"lgo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"gamj",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"al",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"omg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"fgl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"salv",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"c",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"wi",
				"C:\\xampp\\htdocs\\fire\\server\\wing.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"lase",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"tina",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"dar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"dark",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"plasm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"stl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"mn",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"game.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sscr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"are",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\area.php"
			],
			[
				"area",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\area.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"du",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"hv",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 89.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
