{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getOut",
				"getOutputMods"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"getImp",
				"getTotalImpulse"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"getRem",
				"getRemainingAmmo"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"back",
				"background-color"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"getU",
				"getUnitById"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"getRe",
				"getRelevantBallistics"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"getHit",
				"getHitChance"
			],
			[
				"fire",
				"fireOrders"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"draw",
				"drawExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"rema",
				"getRemainingDelay"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"getBas",
				"getBaseHitChance"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"getRema",
				"getRemainingIntegrity"
			],
			[
				"clasname",
				"classname"
			],
			[
				"font",
				"font-size"
			],
			[
				"target",
				"targetInfo"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"stru",
				"structures"
			],
			[
				"getRemaining",
				"getRemainingIntegrity"
			],
			[
				"prima",
				"primaryContainer"
			],
			[
				"is",
				"isInArc"
			],
			[
				"db",
				"dbManager"
			],
			[
				"hangar",
				"hangarLoadoutDiv"
			],
			[
				"getE",
				"getElementById"
			],
			[
				"flight",
				"flightSelection"
			],
			[
				"create",
				"createLogEntry"
			],
			[
				"explo",
				"exploAnimated"
			],
			[
				"struc",
				"structureid"
			],
			[
				"addDama",
				"addDamagesToShip"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"resolve",
				"resolveBallisticMovement"
			],
			[
				"getR",
				"getRemainingIntegrity"
			],
			[
				"reSolve",
				"resolveFireOrder"
			],
			[
				"animateShV",
				"animateShipVsBallisticsFire"
			],
			[
				"getShipV",
				"getShipVsBallisticsAnimationDetails"
			],
			[
				"arm",
				"armourDmg"
			],
			[
				"insertBs",
				"insertBallisticActions"
			],
			[
				"Struct",
				"structDiv"
			],
			[
				"vecto",
				"vectorDiv"
			],
			[
				"int",
				"integrity"
			],
			[
				"getRemain",
				"getRemainingImpulse"
			],
			[
				"getF",
				"getPlannedFacingToMove"
			],
			[
				"getRemai",
				"getRemainingDelay"
			],
			[
				"vector",
				"drawVectorIndicator"
			],
			[
				"getIm",
				"getImpulseChangeCost"
			],
			[
				"undo",
				"undoLastAction"
			],
			[
				"drawmov",
				"drawMovementUI"
			],
			[
				"impu",
				"impulseGUI"
			],
			[
				"disable",
				"disableDeployment"
			],
			[
				"beam",
				"beamWidth"
			],
			[
				"disa",
				"disableDeployment"
			],
			[
				"deploy",
				"deployWrapper"
			],
			[
				"selee",
				"canSelectReinforcement"
			],
			[
				"text-",
				"text-align"
			],
			[
				"shipc",
				"shipClass"
			],
			[
				"getFact",
				"getShipsForFaction"
			],
			[
				"proto",
				"prototype"
			],
			[
				"re",
				"reinforcementsTD"
			],
			[
				"mem",
				"memory_get_usage"
			],
			[
				"json_",
				"json_encode"
			],
			[
				"calcu",
				"calculateHitChance"
			],
			[
				"getD",
				"getDmgLoss"
			],
			[
				"rollf",
				"rollForDamage"
			],
			[
				"jsco",
				"json_encode"
			],
			[
				"jso",
				"JSON"
			],
			[
				"gets",
				"getShipsForFaction"
			],
			[
				"showSHi",
				"showShipList"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"spee",
				"speedChange"
			],
			[
				"background",
				"background-color"
			],
			[
				"JS",
				"json_decode"
			],
			[
				"drawSh",
				"drawShipForPreview"
			],
			[
				"elint",
				"elintResult"
			],
			[
				"json",
				"json_encode"
			],
			[
				"addTa",
				"addTableRedBackground"
			],
			[
				"currentS",
				"currentSubTick"
			],
			[
				"current",
				"currentSubStick"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5668,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 4575,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 29119,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 16425,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2954,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Ship(data){\n\t//id, name, shipType, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.shipType = data.shipType;\n\tthis.x = data.x || 0;\n\tthis.y = data.y || 0;\n\tthis.facing = data.facing || 0;\n\tthis.faction = data.faction;\n\tthis.mass = data.mass;\n\tthis.cost = data.cost;\n\tthis.profile = data.profile;\n\tthis.size = data.size;\n\tthis.userid = data.userid;\n\tthis.shipType = data.shipType;\n\tthis.available = data.available;\n\tthis.baseHitChance = data.baseHitChance;\n\tthis.baseImpulse = data.baseImpulse;\n\tthis.traverse = data.traverse\n\n\tthis.ship = data.ship;\n\tthis.flight = data.flight;\n\tthis.salvo = data.salvo;\n\n\tthis.friendly;\n\tthis.deployed;\n\n\tthis.primary;\n\n\tthis.highlight = false;\n\tthis.destroyed = false;\n\tthis.element;\n\n\tthis.hitTable;\n\tthis.img;\n\tthis.turns = [];\n\tthis.actions = [];\n\tthis.validMoveArcs = [];\n\tthis.structures = [];\n\n\tthis.getDamageEntriesByFireId = function(fireid){\n\t\tvar ret = [];\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].damages.length; j++){\n\t\t\t\tif (this.structures[i].damages[j].fireid == fireid){\n\t\t\t\t\tret.push(this.structures[i].damages[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tthis.draw = function(){\n\t\tif (this.deployed){\n\t\t\tthis.drawIndicator();\n\t\t\tthis.drawSelf();\n\t\t\t//this.drawCenterPoint();\n\t\t}\n\t}\n\n\tthis.drawSelf = function(){\n\t\tctx.save();\n\t\tctx.translate(this.x, this.y)\n\t\tctx.rotate(this.facing * Math.PI/180);\n\t\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\t\tctx.restore();\n\t}\n\n\tthis.drawIndicator = function(){\n\t\tctx.beginPath();\n\t\tctx.arc(this.x, this.y, this.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\n\t\tctx.lineWidth = 2;\n\t\tctx.globalAlpha = 0.8;\n\t\tif (this.friendly){ctx.strokeStyle = \"green\";}\n\t\telse {ctx.strokeStyle = \"red\";}\n\t\tctx.stroke();\n\t\tctx.lineWidth = 1;\n\t\tctx.globalAlpha = 1;\n\t\tctx.strokeStyle = \"black\";\n\t}\n\n\tthis.drawCenterPoint = function(){\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, 2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.fillStyle = \"red\";\n\t\tctx.fill();\n\t}\n\n\tthis.animationSetup = function(){\n\t\tvar start = this.getTurnStartPosition();\n\t\tthis.facing = this.getTurnStartFacing();\n\n\t\tthis.x = start.x;\n\t\tthis.y = start.y;\n\t}\n\n\tthis.getFiringPosition = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n\t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n\t\t)\n\t}\n\n\tthis.getTargettingPos = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(this.size * 0.3 * -1, this.size * 0.3),\n\t\t\tthis.y + range(this.size * 0.3 * -1, this.size * 0.3)\n\t\t)\t\t\n\t}\n\n\tthis.getTurnStartPosition = function(){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].turn < game.turn){\n\t\t\t\treturn this.actions[i];\n\t\t\t}\n\t\t}\n\t\treturn this.actions[0];\n\t}\n\n\tthis.getTurnEndPosition = function(){\n\t\treturn this.actions[this.actions.length-1];\n\t}\n\n\n\tthis.getTurnStartFacing = function(){\n\t\tvar angle = 0;\n\t\tvar index = 0;\n\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"deploy\"){\n\t\t\t\tangle += this.actions[i].a;\n\t\t\t}\n\t\t\telse if (this.actions[i].turn >= game.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tangle += this.actions[i].a;\n\t\t\t}\n\t\t}\n\n\t\treturn angle;\n\t}\n\n\tthis.getFacing = function(){\n\t\tvar angle = 0;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\tangle += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t\treturn angle;\n\t}\n\n\tthis.getControlArea = function(){\n\t\tif (this.actions.length){\n\t\t\tvar pos = this.getBaseOffsetPos();\n\t\t\treturn {pos: pos, s: this.size*1};\n\t\t}\n\t\telse return false;\n\t}\n\n\tthis.canDeployHere = function(pos){\n\t\t//console.log(pos);\n\t\tvar valid = false;\n\t\tfor (var i = 0; i < game.deployArea.length; i++){\n\t\t\tif (game.deployArea[i].id != game.userid){continue;}\n\t\t\tif (game.deployArea[i].x > 0){\n\t\t\t\tif (pos.x >= game.deployArea[i].x && pos.x <= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x <= game.deployArea[i].x && pos.x >= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x > game.deployArea[i].x && pos.x < game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y > game.deployArea[i].y && pos.y < game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (valid){\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].id != this.id){\n\t\t\t\t\tvar area = game.ships[i].getControlArea();\n\t\t\t\t\tif (area){\n\t\t\t\t\t\tvar dist = getDistance(pos, area.pos);\n\t\t\t\t\t\tif (dist <= area.s + this.size*1){\n\t\t\t\t\t\t\tpopup(\"The selected entry point is subject to gravitic distortions and cant be chosen\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse popup(\"Please deploy inside the green colored area.\");\n\n\t\treturn false;\n\t}\n\n\tthis.doDeploy = function(pos){\n\t\tif (this.actions.length){\n\t\t\tthis.actions[0].x = pos.x;\n\t\t\tthis.actions[0].y = pos.y;\n\t\t\tthis.select();\n\t\t}\n\t\telse {\n\t\t\tvar facing = 0;\n\t\t\tif (game.playerindex % 2 == 0){facing = 180;}\n\t\t\tthis.actions.push(new Move(\"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n\t\t\tthis.deployed = true;\n\n\t\t\tvar shipId = this.id;\n\t\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n\t\t\t\tif ($(this).data(\"shipid\") == shipId){\n\t\t\t\t\t$(this).remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tthis.setPosition();\n\t\tthis.setFacing();\n\t\tgame.disableDeployment();\n\t\tthis.select();\n\t\tgame.enableDeployment(this.id);\n\t\tgame.draw();\n\t}\n\n\tthis.canDeployFlightHere = function(pos){\n\t\tvar dist = getDistance({x: this.x, y: this.y}, {x: pos.x, y: pos.y})\n\t\tif (dist <= game.flightDeploy.range){\n\t\t\tvar a = getAngleFromTo( {x: this.x, y: this.y}, {x: pos.x, y: pos.y} );\n\t\t\t\ta = addAngle(this.facing, a);\n\t\t\tif (isInArc(a, game.flightDeploy.start, game.flightDeploy.end)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.getBaseOffsetPos = function(){\n\t\tif (this.actions.length == 1){\n\t\t\treturn {x: this.actions[0].x, y: this.actions[0].y};\n\t\t}\n\t\telse {\n\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\t\treturn {x: this.actions[i].x, y: this.actions[i].y};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.getOffsetPos = function(){\n\t\treturn {x: this.actions[this.actions.length-1].x, y: this.actions[this.actions.length-1].y};\n\t}\n\t\n\tthis.getOnsetPos = function(){\n\t\treturn {x: this.actions[this.actions.length-1].x, y: this.actions[this.actions.length-1].y};\n\t}\n\n\tthis.setPosition = function(){\n\t\tif (this.deployed){\n\t\t\tif (this.actions.length == 1){\n\t\t\t\tthis.x = this.actions[0].x;\n\t\t\t\tthis.y = this.actions[0].y;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\tif (this.actions[i].resolved){\n\t\t\t\t\tthis.x = this.actions[i].x;\n\t\t\t\t\tthis.y = this.actions[i].y;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setFacing = function(){\n\t\tvar facing = 0;\n\t\tif (this.deployed){\n\t\t\tif (this.actions.length == 1){\n\t\t\t\tthis.facing = this.actions[0].a;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\t\tif (this.actions[i].resolved){\n\t\t\t\t\tfacing += this.actions[i].a;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\n\t\tthis.facing = facing;\n\t}\n\n\tthis.getWeaponPosition = function(fire){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n\t\t\t\t\treturn getPointInDirection(range(0, this.size / 4), a, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.create = function(){\n\t\tthis.img = window.shipImages[this.name.toLowerCase()];\n\t\tthis.setPosition();\n\t\tthis.setFacing();\n\t\tthis.setHitTable();\n\t\tthis.setInternals();\n\t}\n\n\tthis.setInternals = function(){\n\t/*\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\tif (this.primary.systems[i].disabled || this.primary.systems[i].destroyed){\n\t\t\t\t\tthis.unpowerAllSystems();\n\t\t\t\t}\n\t\t\t}\n\t\t}*/\n\t}\n\n\n\tthis.unpowerAllSystems = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].destroyed){\n\t\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n\t\t\t\t\tthis.structures[i].systems[j].setTableRow();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setHitTable = function(){\n\t\t//console.log(\"id: \" + this.id);\n\t\tthis.primary.setRemainingIntegrity();\n\t\tvar fraction = this.primary.remaining / this.primary.integrity;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n\t\t\t\tthis.primary.systems[i].exposed = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.isDestroyed = function(){\n\t\tif (this.primary.destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isDestroyedThisTurn = function(){\n\t\tif (this.primary.destroyed && this.primary.damages[this.primary.damages.length-1].turn == game.turn){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasHangarSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tthis.hasSystemsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.hasWeaponsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.checkSensorHighlight = function(){\n\t\tif (this.flight || this.salvo){return;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n\t}\n\n\tthis.hasSystemSelected = function(name){\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.getStructureById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getSystemById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.primary.systems.length; j++){\n\t\t\tif (this.primary.systems[j].id == id){\n\t\t\t\treturn this.primary.systems[j];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getPrimarySection = function(){\n\t\treturn this.primary;\n\t}\n\n\tthis.highlightSingleSystem = function(system){\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar pos = this.getOffsetPos();\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.highlightAllSelectedWeapons = function(){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t$(fxCanvas).css(\"opacity\", 0.3);\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar pos = this.getOffsetPos();\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.drawSystemAxis = function(system){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t$(fxCanvas).css(\"opacity\", 1)\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar pos = this.getOffsetPos();\n\t\tvar p1 = getPointInDirection(system.range || res.x, system.start + angle, pos.x, pos.y);\n\t\tvar p2 = getPointInDirection(system.range || res.y, system.end + angle, pos.x, pos.y)\n\t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n\t\tvar rad1 = degreeToRadian(system.start + angle);\n\t\tvar rad2 = degreeToRadian(system.end + angle);\n\t\t\n\t\tfxCtx.beginPath();\t\t\t\n\t\tfxCtx.moveTo(pos.x, pos.y);\n\t\tfxCtx.arc(pos.x, pos.y, dist, rad1, rad2, false);\n\t\tfxCtx.closePath();\n\t\tfxCtx.globalAlpha = 0.5;\t\t\t\n\t\tfxCtx.fillStyle = \"blue\";\n\t\tfxCtx.fill();\n\t\tfxCtx.globalAlpha = 1;\n\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\t\n\tthis.weaponHighlight = function(weapon){\n\t\tif (weapon.highlight){\n\t\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n\t\t\tweapon.highlight = false;\n\t\t}\n\t\telse {\n\t\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n\t\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\t\tvar shipPos = this.getOffsetPos();\n\t\t\tweapon.highlight = true;\t\t\n\t\t\tweapon.drawArc(angle, shipPos);\n\t\t}\n\t}\n\n\tthis.getRemainingImpulse = function(){\t\n\t\tvar impulse = this.getTotalImpulse();\n\n\t\tif (game.phase > 1){\n\t\t\treturn impulse;\n\t\t}\n\t\telse if (this.flight && this.dogfights.length){\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\t\tif (this.actions[i].type == \"move\"){\n\t\t\t\t\t\timpulse -= this.actions[i].dist;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn impulse;\n\t\t}\n\t}\n\t\n\tthis.getImpulseChangeCost = function(){\n\t\tvar cost = Math.ceil((Math.pow(this.mass, 1.20))*this.getImpulseMod() / 500);\t\n\t\treturn cost;\n\t}\n\n\tthis.getBaseImpulse = function(){\n\t\treturn this.baseImpulse;\n\t}\n\n\tthis.getTotalImpulse = function(){\t\n\t\tvar base = this.getBaseImpulse();\n\t\tvar change = this.getImpulseStep();\n\t\t\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"speedChange\"){\n\t\t\t\tif (this.actions[i].dist == 1){\n\t\t\t\t\tbase += change;\n\t\t\t\t}\n\t\t\t\telse if (this.actions[i].dist == -1){\n\t\t\t\t\tbase -= change;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn base;\n\t}\n\n\tthis.getImpulseStep = function(){\n\t\t//return 15;\n\t\treturn Math.floor(this.getBaseImpulse() / 10);\n\t}\n\t\n\tthis.getImpulseMod = function(){\n\t\treturn this.getTotalImpulse() / this.getBaseImpulse();\n\t}\n\t\n\tthis.getTurnCost = function(){\n\t\tif (this.actions.length && (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0)){\n\t\t\treturn 0;\n\t\t}\n\t\telse return Math.ceil((Math.pow(this.mass, 1.56) / 10000) *  this.getImpulseMod());\n\t}\n\t\n\tthis.getBaseTurnDelay = function(){\n\t\treturn Math.pow(this.mass, 0.55);\n\t}\n\t\n\tthis.getTurnDelay = function(){\n\t\tif (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\treturn 0;\n\t\t}\n\t\telse return Math.ceil(this.getBaseTurnDelay() * this.getImpulseMod());\n\t}\n\n\tthis.drawArcIndicator = function(){\n\t\treturn;\n\t\tvar shipPos = this.getBaseOffsetPos();\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\n\t\tvar p1 = getPointInDirection(80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p2 = getPointInDirection(-80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p3 = getPointInDirection(80, 180+angle, shipPos.x, shipPos.y);\n\t\tvar p4 = getPointInDirection(-80, 180+angle, shipPos.x, shipPos.y);\n\n\t\tmoveCtx.beginPath();\n\t\tmoveCtx.moveTo(p1.x, p1.y);\n\t\tmoveCtx.lineTo(p2.x, p2.y);\n\t\tmoveCtx.moveTo(p3.x, p3.y);\n\t\tmoveCtx.lineTo(p4.x, p4.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.stroke();\n\n\t}\n\n\tthis.getSlipAngle = function(){\n\t\treturn this.getTurnAngle();\n\t}\n\t\n\tthis.drawMoveRange = function(){\n\t\tvar center = new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\t\t\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar slipAngle = this.getSlipAngle();\n\t\tvar start = addAngle(0 + slipAngle, angle);\n\t\tvar end = addAngle(360 - slipAngle, angle);\n\t\t\n\t\tthis.validMoveArcs = {start: 360 - slipAngle, end: 0 + slipAngle};\n\n\t\tvar p1 = getPointInDirection(rem, start, center.x, center.y);\n\t\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\t\tvar rad1 = degreeToRadian(start);\n\t\tvar rad2 = degreeToRadian(end);\n\t\t\n\t\tvar delay = this.getRemainingDelay();\n\t\t\n\t\tif (delay > 0){\n\t\t\tvar delayRad1 = degreeToRadian(start-45);\n\t\t\tvar delayRad2 = degreeToRadian(end+45);\n\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"white\";\n\t\t\tmoveCtx.lineWidth = 2\n\t\t\tmoveCtx.stroke();\n\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmoveCtx.fill();\n\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\t\t}\n\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p1.x, p1.y); \n\t\tmoveCtx.arc(center.x, center.y, dist, rad1, rad2, false);\n\t\tmoveCtx.closePath();\n\t\tif (game.phase == 2){\n\t\t\tmoveCtx.globalAlpha = 0.2;\n\t\t}\n\t\telse {\n\t\t\tmoveCtx.globalAlpha = 0.35;\n\t\t}\n\t\tmoveCtx.fillStyle = \"white\";\n\t\tmoveCtx.fill();\n\t\tmoveCtx.globalAlpha = 1;\n\n\t}\n\n\tthis.getEP = function(){\n\t\tvar ep = 0;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == \"Engine\"){\n\t\t\t\tep += this.primary.systems[i].getOutput();\n\t\t\t}\n\t\t}\n\n\t\treturn ep;\n\t}\n\t\n\tthis.getRemainingEP = function(){\n\t\tvar ep = this.getEP();\n\t\t\n\t\tfor (var i = 1; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == window.gd.turn){\n\t\t\t\tif (this.actions[i].cost != 0){\n\t\t\t\t\tep -= this.actions[i].cost * this.actions[i].costmod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn Math.floor(ep);\n\t}\n\t\n\tthis.getRemainingDelay = function(){\n\t\tvar delay = 0;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\tdelay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n\t\t\t}\n\t\t\telse if (this.actions[i].type == \"move\"){\n\t\t\t\tif (delay > 0){ delay -= this.actions[i].dist;}\n\t\t\t\tif (delay < 0){ delay = 0;}\n\t\t\t}\n\t\t}\n\t\treturn Math.floor(delay);\n\t}\n\n\tthis.getPlannedPosition = function(){\n\t\tif (this.actions.length){\n\t\t\treturn new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t\t}\n\t\telse {\n\t\t\treturn new Point(this.x, this.y);\n\t\t}\n\t}\n\t\t\n\tthis.getPlannedFacingToMove = function(end){\n\t\tif (end == undefined){\n\t\t\tend = this.actions.length-1;\n\t\t}\n\n\t\tvar angle = 0;\n\t\t\n\t\tfor (var i = 0; i <= end; i++){\n\t\t\tif (this.actions[i].type == \"deploy\" || this.actions[i].type == \"turn\"){\n\t\t\t\tangle += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t\treturn angle;\n\t}\n\t\t\n\tthis.canIncreaseImpulse = function(){\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (this.actions.length == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].turn < game.turn){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tthis.canDecreaseImpulse = function(){\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (this.actions.length == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].turn < game.turn){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\tthis.getShortenTurnCost = function(){\n\t\tif (this.turns.length){\n\t\t\treturn Math.ceil(this.turns[0].cost * (this.turns[0].costmod + 0.2));\n\t\t}\n\t\telse {\n\t\t\treturn Math.ceil(this.getTurnCost() * 1.2);\n\t\t}\n\t}\n\t\n\tthis.canShortenTurn = function(){\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (this.getRemainingEP() >= this.getShortenTurnCost()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoShortenTurn = function(){\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (this.turns.length){\n\t\t\t\tif (this.turns[0].costmod > 1){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.doShortenTurn = function(max){\n\t\tif (max && !this.canDoAnotherTurn()){\n\t\t\twhile (this.canShortenTurn()){\n\t\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\t\tthis.turns[i].costmod += 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (max){\n\t\t\twhile (this.canDoAnotherTurn()){\n\t\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\t\tthis.turns[i].costmod += 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\tthis.turns[i].costmod += 0.2;\n\t\t\t}\n\t\t}\n\t\tthis.drawDelayEstimator();\n\t\tthis.updateTurnElements();\n\t}\n\t\n\tthis.doUndoShortenTurn = function(max){\n\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\tif (this.turns[i].costmod > 1){\n\t\t\t\tthis.turns[i].costmod -= 0.2;\n\t\t\t}\n\t\t}\n\t\tthis.drawDelayEstimator();\n\t\tthis.updateTurnElements();\n\t}\n\n\tthis.updateTurnElements = function(){\n\t\tvar canShorten = this.canShortenTurn();\n\t\tvar canUndoShorten = this.canUndoShortenTurn();\n\t\tvar canDoAnotherTurn = this.canDoAnotherTurn();\n\t\tvar cost = Math.floor(this.turns[0].cost * this.turns[0].costmod);\n\t\tvar delay = Math.floor(this.turns[0].delay / this.turns[0].costmod);\n\n\t\t$(\".turnEle\").each(function(i){\n\t\t\t$(this).find(\"#epCost\").html(cost +  \" EP\");\n\t\t\t$(this).find(\"#turnDelay\").html(delay + \"px\");\n\n\t\t\tif (canDoAnotherTurn){\n\t\t\t\t$(this).find(\"#epCost\").removeClass(\"red\").addClass(\"green\");\n\t\t\t} else $(this).find(\"#epCost\").removeClass(\"green\").addClass(\"red\");\n\n\t\t\tif (!canShorten && !canUndoShorten){\n\t\t\t\t$(this).find(\".shortenTurn\").hide(); return;\n\t\t\t} else {\n\t\t\t\t$(this).find(\".shortenTurn\").show();\n\t\t\t}\n\t\t\tif (canShorten){\n\t\t\t\t$(this).find(\".doShortenTurn\").find(\"img\").show();\n\t\t\t} else $(this).find(\".doShortenTurn\").find(\"img\").hide();\n\t\t\tif (canUndoShorten){\n\t\t\t\t$(this).find(\".doUndoShortenTurn\").find(\"img\").show();\n\t\t\t} else $(this).find(\".doUndoShortenTurn\").find(\"img\").hide();\n\t\t})\n\t}\n\n\tthis.canDoAnotherTurn = function(){\n\t\tvar i = 0;\n\t\tif (this.turns[i].cost * (this.turns[i].costmod + 0.2) + this.getTurnCost() < this.getRemainingEP()){\n\t\t\treturn true;\n\t\t}\n\t\telse return false;\n\t}\n\n\tthis.doIncreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(\"speedChange\", 1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t}\n\n\tthis.doDecreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(\"speedChange\", -1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t}\n\t\n\tthis.drawMovementPlan = function(){\n\t\tplanCtx.strokeStyle = \"#00ea00\";\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tvar action = this.actions[i];\n\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\n\t\t\t\tif (i == 0){\n\t\t\t\t\tvar p = this.getBaseOffsetPos();\n\t\t\t\t\tplanCtx.moveTo(p.x, p.y);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplanCtx.moveTo(this.actions[i-1].x, this.actions[i-1].y);\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\tplanCtx.lineTo(action.x, action.y);\n\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\tvar angle = this.getPlannedFacingToMove(i);\n\t\t\t\t\t\n\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\tplanCtx.arc(action.x, action.y, 5, 0, 2*Math.PI, false);\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tplanCtx.closePath();\n\t\t\t}\n\t\t}\t\t\n\t\tplanCtx.strokeStyle = \"black\";\t\t\t\n\t}\n\n\tthis.drawMovementUI = function(){\n\t\tthis.drawImpulseUI();\n\t\tthis.drawVectorMovementUI();\n\n\t\tif (this.canTurn()){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.updateDiv();\n\t\t}\n\t}\n\n\tthis.drawVectorMovementUI = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar ele;\n\n\t\tif (rem > 0){\n\t\t\tele = document.getElementById(\"maxVector\");\n\t\t\tvar p = getPointInDirection(rem + 80, angle, center.x, center.y);\n\t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t$(ele)\n\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t.html(\"<div style='margin-left: 4px; margin-top: 7px'>\"+rem+\"<div>\")\n\t\t\t\t.css(\"left\", left)\n\t\t\t\t.css(\"top\", top)\n\t\t\t\t.removeClass(\"disabled\")\n\t\t}\n\t\tif (delay > 0){\n\t\t\tif (rem >= delay){\n\t\t\t\tele = document.getElementById(\"maxTurnVector\");\n\t\t\t\tvar p = getPointInDirection(rem + 40, angle, center.x, center.y);\n\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t$(ele)\n\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t.html(\"<div style='margin-left: 4px; margin-top: 7px'>\"+delay+\"<div>\")\n\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t.removeClass(\"disabled\")\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawVectorIndicator = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar p = getPointInDirection(200, angle, center.x, center.y);\n\t\t\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.lineWidth = 1;\n\t\tmoveCtx.strokeStyle = \"white\";\n\t\tmoveCtx.globalAlpha = 0.5;\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.globalAlpha = 1;\n\t\tmoveCtx.strokeStyle = \"black\";\n\t}\n\n\tthis.getTurnAngle = function(){\n\t\treturn 25;\n\t}\n\n\tthis.getTurnWidth = function(){\n\t\treturn 1;\n\t}\n\n\tthis.drawTurnUI = function(){\n\t\tvar center;\n\t\tvar plannedAngle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\tvar cost = this.getTurnCost();\n\t\tvar delay = this.getTurnDelay();\n\t\tvar a = this.getTurnAngle();\n\t\tvar w = this.getTurnWidth();\n\t\t\n\t\tif (this.actions.length){\n\t\t\tcenter = new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t\t}\n\t\telse center = this.getBaseOffsetPos();\n\t\t\n\t\tfor (var j = 1; j >= -1; j = j-2){\n\t\t\tfor (var i = 1; i <= w; i++){\n\t\t\t\n\t\t\t\tvar modAngle = a * i * j;\n\t\t\t\tvar newAngle = addToDirection(plannedAngle, modAngle);\n\n\t\t\t\tvar turn = {\n\t\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\t\ty: center.y, \n\t\t\t\t\t\t\ta: modAngle,\n\t\t\t\t\t\t\tcost: cost,\n\t\t\t\t\t\t\tdelay: delay,\n\t\t\t\t\t\t\tthrustUp: false,\n\t\t\t\t\t\t\tcostmod: 1\n\t\t\t\t\t\t\t}\n\t\t\t\tthis.turns.push(turn)\n\n\t\t\t\tvar p = getPointInDirection(this.size*1.5*cam.z, newAngle, center.x, center.y);\n\n\t\t\t\tmoveCtx.beginPath();\n\t\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\t\tmoveCtx.closePath();\n\t\t\t\tmoveCtx.strokeStyle = \"white\";\n\t\t\t\tmoveCtx.stroke();\n\n\t\t\t\tvar turnEle;\n\n\t\t\t\tif (modAngle < 0){turnEle = document.getElementById(\"turnLeft\")}\n\t\t\t\telse {turnEle = document.getElementById(\"turnRight\")}\n\n\t\t\t\t$(turnEle).find(\"#epCost\").html(Math.floor(cost * turn.costmod) + \" EP\");\n\t\t\t\t$(turnEle).find(\"#turnDelay\").html(Math.floor(delay / turn.costmod) + \"px\");\n\n\t\t\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(newAngle, modAngle), center.x, center.y);\n\t\t\t\t\n\t\t\t\t//\treturn { x: (this.x - cam.o.x) / cam.z, y: (this.y - cam.o.y) / cam.z}\n\n\t\t\t\tvar left = p1.x * cam.z + cam.o.x - $(turnEle).width()/2;\n\t\t\t\tvar top = p1.y * cam.z + cam.o.y - $(turnEle).height()/2;\n\n\t\t\t\t$(turnEle).find(\".doTurn\")\n\t\t\t\t\t.data(\"a\", modAngle)\n\t\t\t\t\t.data(\"shipid\", this.id)\n\n\t\t\t\t$(turnEle)\n\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t.removeClass(\"disabled\")\n\t\t\t}\n\t\t}\n\t\n\t\tthis.drawDelayEstimator();\n\t\tthis.updateTurnElements();\n\n\t}\n\n\tthis.drawDelayEstimator = function(){\n\t\tvar delay = this.turns[0].delay / this.turns[0].costmod;\n\t\tif (delay){\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\t\tmouseCtx.scale(cam.z, cam.z);\n\t\t\tvar center;\n\t\t\tvar plannedAngle = this.getPlannedFacingToMove(this.actions.length-1);\n\t\t\tif (this.actions.length){\n\t\t\t\tcenter = new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t\t\t}\n\t\t\telse center = this.getBaseOffsetPos();\n\n\t\t\tvar delayRad1 = degreeToRadian(plannedAngle-45);\n\t\t\tvar delayRad2 = degreeToRadian(plannedAngle+45);\n\t\t\tmouseCtx.beginPath();\t\t\t\n\t\t\tmouseCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmouseCtx.closePath();\n\t\t\tmouseCtx.strokeStyle = \"red\";\n\t\t\tmouseCtx.lineWidth = 2\n\t\t\tmouseCtx.stroke();\n\t\t\tmouseCtx.strokeStyle = \"black\";\t\n\t\t\tmouseCtx.arc(center.x, center.y, delay, 0, 2*Math.PI, false);\n\t\t\tmouseCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmouseCtx.fill();\n\t\t\tmouseCtx.globalCompositeOperation = \"source-over\";\n\t\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\n\tthis.drawImpulseUI = function(){\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar gui = $(\"#impulseGUI\");\n\t\tvar w = gui.width();\n\t\tvar h = gui.height();\n\t\tvar p = getPointInDirection((this.size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n\n\t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n\t\tgui.find(\"#enginePower\").html(this.getRemainingEP() + \" / \" + this.getEP());\n\t\tgui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getTotalImpulse());\n\t\tgui.find(\"#remTurnDelay\").html(this.getRemainingDelay());\n\t\tgui.find(\"#nextTurnDelay\").html(this.getTurnDelay());\n\t\tgui.find(\"#impulseChange\").html(this.getImpulseChangeCost() + \" EP\");\n\t\tgui.find(\"#turnCost\").html(\"<span>\" + this.getTurnCost() + \" EP</span>\");\n\n\t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.facing + 180, center.x, center.y);\n\n\t\tif (this.canIncreaseImpulse()){\n\t\t\tvar pPlus = getPointInDirection(50, this.facing +90, p1.x, p1.y);\n\t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n\n\t\tif (this.canDecreaseImpulse()){\n\t\t\tvar mMinus = getPointInDirection(50, this.facing -90, p1.x, p1.y);\n\t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n\n\t\tif (this.canUndoLastAction()){\n\t\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#undoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#undoLastAction\").addClass(\"disabled\");\n\t}\n\n\t\n\tthis.issueMove = function(pos, dist){\n\t\tif (this.actions[this.actions.length-1].type == \"move\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\tthis.actions[this.actions.length-1].dist+= dist;\t\n\t\t\tthis.actions[this.actions.length-1].x = pos.x;\n\t\t\tthis.actions[this.actions.length-1].y = pos.y;\n\t\t}\n\t\telse {\n\t\t\tthis.actions.push(new Move(\"move\", dist, pos.x, pos.y, 0, 0));\t\n\t\t}\n\t\tthis.turns = [];\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t}\n\t\n\tthis.canUndoLastAction = function(){\n\t\tif (this.actions.length){\n\t\t\tif (this.actions[this.actions.length-1].resolved == 0){\n\t\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.undoOrderButton = false;\n\t\treturn false;\n\t}\n\t\n\tthis.undoLastAction = function(pos){\t\t\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\tthis.turns = [];\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t}\n\n\n\t\n\t//function Move(type, dist, x, y, a, delay, cost, costmod){\n\t//this.issueMove = function(pos, dist){\t\n\n\tthis.moveToMaxVector = function(){\n\t\tvar pos = this.getOffsetPos();\n\t\tvar dist = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacingToMove(this.actions.length-1), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.moveToMaxTurnVector = function(){\n\t\tvar pos = this.getOffsetPos();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacingToMove(this.actions.length-1), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.canTurn = function(){\n\t\tif (this.getRemainingDelay() == 0){\n\t\t\tvar have = this.getRemainingEP();\n\t\t\tvar need = this.getTurnCost();\n\t\t\tif (have >= need){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.flight){\n\t\t\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\t\tif (this.getRemainingDelay() != 0){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar turns = 0;\n\t\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\t\tif (this.actions[i].turn != game.turn){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.actions[i].type == \"turn\"){\n\t\t\t\t\t\tvar a = Math.abs(this.actions[i].a);\n\t\t\t\t\t\twhile (a > 0){\n\t\t\t\t\t\t\ta -= this.getTurnAngle();\n\t\t\t\t\t\t\tturns++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (turns < this.maxTurns){\n\t\t\t\t\tvar have = this.getRemainingEP();\n\t\t\t\t\tvar need = this.getTurnCost();\n\t\t\t\t\tif (have >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.issueTurn = function(a){\n\t\tif (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += a;\n\t\t\tthis.facing += a;\n\t\t\tgame.draw();\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\tif (this.turns[i].a == a){\n\t\t\t\t\tif (this.flight){\n\t\t\t\t\t\tif (this.actions[this.actions.length-1].type == \"turn\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].a += this.turns[i].a;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].delay += this.turns[i].delay;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].cost += this.turns[i].cost;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actions.push(\n\t\t\t\t\t\tnew Move(\n\t\t\t\t\t\t\t\"turn\", 0, this.turns[i].x, this.turns[i].y, \n\t\t\t\t\t\t\tthis.turns[i].a, this.turns[i].delay, this.turns[i].cost, this.turns[i].costmod\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t}\n\n\tthis.getBaseHitChance = function(){\n\t\treturn this.baseHitChance;\n\t}\n\n\tthis.getHitSectionFromAngle = function(a){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getHitChanceFromAngle = function(angle){\n\t\tvar a, b, c, base;\n\t\t\n\t\twhile (angle > 90){\n\t\t\tangle -= 180;\n\t\t}\n\t\tif (angle < 0){\n\t\t\tangle *= -1;\n\t\t}\n\n\t\tbase = this.getBaseHitChance() / 100 * this.getProfileMod();\n\t\ta = base * this.profile[0];\n\t\tb = base * this.profile[1];\n\t\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n\t\tsub /= (90 - 0);\n\t\treturn Math.ceil(sub);\n\t}\n\t\n\tthis.createBaseDiv = function(){\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.className = \"shipDiv\";\n\t\t\t$(div).data(\"shipId\", this.id);\n\n\t\tvar subDiv = document.createElement(\"div\");\n\t\t\tsubDiv.className = \"header\";\n\t\t\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.className = \"general\";\n\n\t\t\t$(table)\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colspan\", 2).css(\"textAlign\", \"center\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Classification:\"))\n\t\t\t\t\t.append($(\"<td>\").html(game.getUnitType(this.traverse))))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Impulse:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingImpulse() + \" / \" + this.getTotalImpulse()).addClass(\"impulse\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Active Turn Delay:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingDelay()).addClass(\"delay\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Engine Power:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"ep\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Impulse Change:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Turning:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getTurnCost() + \" EP\").addClass(\"turn\")))\n\t\t\t\t\n\t\tsubDiv.appendChild(table);\n\t\tdiv.appendChild(subDiv);\n\n\t\t$(this.expandDiv(div))\n\t\t\t.addClass(\"disabled\")\n\t\t\t.drag()\n\t\t\t.find($(\".structContainer\")\n\t\t\t\t.contextmenu(function(e){e.stopPropagation;})\n\t\t\t\t.addClass(\"disabled\")\n\t\t\t)\n\t\t\t.find($(\".header\")\n\t\t\t\t.contextmenu(\n\t\t\t\t\tfunction(e){\n\t\t\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\n\t\tif (game.phase == 2){\n\t\t\t$(div).find(\".structContainer\").show();\n\t\t}\n\n\t\tthis.element = div;\n\t}\n\n\tthis.expandDiv = function(div){\n\t\tvar iconContainer = document.createElement(\"div\");\n\t\t\ticonContainer.className = \"iconContainer\";\n\t\tvar img =  window.shipImages[this.name.toLowerCase()].cloneNode(true); img.className = \"rotate270size90\";\n\t\t\ticonContainer.appendChild(img);\n\t\tdiv.appendChild(iconContainer);\n\t\t\t\n\t\t//document.getElementById(\"game\").appendChild(div);\n\t\tdocument.body.appendChild(div);\n\n\t\tstructContainer = document.createElement(\"div\");\n\t\tstructContainer.className = \"structContainer\";\n\t\tdiv.appendChild(structContainer);\n\n\n\t\tvar noFront = true;\n\t\tvar noAft = true;\n\t\tvar sides = 0;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tthis.structures[i].direction = this.structures[i].getDirection();\n\t\t\tif (this.structures[i].direction == 0 || this.structures[i].direction == 360){\n\t\t\t\tnoFront = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction == 180){\n\t\t\t\tnoAft = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction > 0 && this.structures[i].direction < 180 || this.structures[i].direction > 180 && this.structures[i].direction < 360){\n\t\t\t\tsides++;\n\t\t\t}\n\t\t}\n\t\tsides /= 2;\n\n\t\tvar maxWidth = 0;\n\t\tif (this.structures.length <= 4){\n\t\t\tmaxWidth = 320;\n\t\t}\n\t\telse {\n\t\t\tmaxWidth = 360;\n\t\t}\n\n\t\t$(div).css(\"width\", maxWidth);\n\n\n\t\tvar conWidth = $(structContainer).width();\n\t\tvar conHeight = $(structContainer).height();\n\n\t\t// PRIMARY\n\t\tvar primaryDiv = document.createElement(\"div\");\n\t\t\tprimaryDiv.className = \"primaryDiv\";\n\t\tvar primaryTable = document.createElement(\"table\");\n\t\t\tprimaryTable.className = \"PrimaryTable\";\n\t\t\tprimaryTable.appendChild(this.primary.getTableRow());\n\n\t\t\tvar systems = 0;\n\t\t\tvar max = 3;\n\t\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n\n\t\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\t\tif (systems == 0){\n\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\t}\n\n\t\t\t\tvar td = this.primary.systems[i].getTableData(false);\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tvar boostDiv = this.primary.systems[i].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\tvar powerDiv = this.primary.systems[i].getPowerDiv();\n\t\t\t\tif (powerDiv){\n\t\t\t\t\tpowerDiv.style.left = 31 + \"px\"\n\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t}\n\n\t\t\t\tsystems++;\n\t\t\t\ttr.appendChild(td);\n\n\n\t\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n\t\t\t\t\tprimaryTable.appendChild(tr);\n\t\t\t\t\tsystems = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\tvar offsetX = 0;\n\t\tvar offsetY = 0;\n\t\tif (noFront){\n\t\t\toffsetY -= 70;\n\t\t}\n\t\telse if (noAft){\n\t\t\toffsetY -= 40;\n\t\t}\n\n\t\tprimaryDiv.appendChild(primaryTable);\n\t\tstructContainer.appendChild(primaryDiv);\n\t\tvar w = $(primaryDiv).width();\n\t\tvar h = $(primaryDiv).height();\n\t\t$(primaryDiv)\n\t\t\t.css(\"left\", conWidth/2 - w/2)\n\t\t\t.css(\"top\", conHeight/2 - h/2 + offsetY)\n\n\t\t// OUTER STRUCTS\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\n\t\t\tvar structDiv = document.createElement(\"div\");\n\t\t\t\tstructDiv.className = \"structDiv\";\n\t\t\t\t\n\t\t\tvar structTable = document.createElement(\"table\");\n\t\t\t\tstructTable.className = \"structTable\";\n\n\t\t\tstructTable.appendChild(this.structures[i].getTableRow());\n\n\t\t\tvar col = 0;\n\t\t\tvar colWidth = 1;\n\t\t\tvar max;\n\t\t\tvar a = this.structures[i].direction;\n\t\t\tvar w;\n\t\t\tvar maxRow = 0;\n\n\t\t\tif (a == 0 || a == 180 || a == 360){ // front or aft\n\t\t\t\tif (a == 180){\n\t\t\t\t\tmax = Math.min(6, this.structures[i].systems.length);\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 0){\n\t\t\t\t\tmax = 4;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 3){\n\t\t\t\t\tmax = 3;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 3 == 0){\n\t\t\t\t\tmax = 6;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmax = 5;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // sides\n\t\t\t\tif (sides > 1){\n\t\t\t\t\tmax = 2;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length <= 3){\n\t\t\t\t\tmax = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.structures[i].systems.length <= 4 && noFront){\n\t\t\t\t\t\tmax = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmax = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (max == 1){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"62px\";\n\t\t\t}\n\t\t\telse if (max == 2){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"42px\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"23px\";\n\t\t\t}\n\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (col == 0){\n\t\t\t\t\ttr = document.createElement(\"tr\");\n\t\t\t\t\tif (this.structures[i].systems.length - j != max){\n\t\t\t\t\t\tif ((this.structures[i].systems.length - j) *2 == max){\n\t\t\t\t\t\t\tcolWidth = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar td = this.structures[i].systems[j].getTableData(false);\n\t\t\t\t\ttd.colSpan = colWidth;\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n\t\t\t\tif (powerDiv){\n\t\t\t\t\tpowerDiv.style.left = colWidth * 31 + \"px\";\n\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t}\n\n\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\tif (modeDiv){\n\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t}\n\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t\t}\n\n\t\t\t\tcol++;\n\t\t\t\ttr.appendChild(td);\n\n\n\t\t\t\tif (col == max){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t}\n\t\t\t\tif (j == this.structures[i].systems.length-1){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t\t$(structTable).find(\".struct\").attr(\"colSpan\", maxRow);\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstructDiv.appendChild(structTable);\n\t\t\tstructContainer.appendChild(structDiv);\n\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = -10;\n\n\n\t\t\tif (a == 90 || a == 270){\n\t\t\t\tif (max == 2){\n\t\t\t\t\toffsetX += 25;\n\t\t\t\t}\n\t\t\t\telse if (max == 1){\n\t\t\t\t\toffsetX += 30;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (a == 60 || a == 300){\n\t\t\t\t\toffsetX += 10;\n\t\t\t}\n\t\t\t\n\t\t\tvar pos = getPointInDirection(135 - offsetX, a-90, conWidth/2, conHeight/2-40);\n\t\t\tvar w = $(structDiv).width();\n\t\t\tvar h = $(structDiv).height();\n\n\t\t\tif (noFront){\n\t\t\t\toffsetY -= 60;\n\t\t\t}\n\n\t\t\tif (a == 0 || a == 360){\n\t\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n\t\t\t\t\toffsetY += 30;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (noAft){\n\t\t\t\toffsetY -= 60 + this.structures.length*12;\n\t\t\t}\n\t\t\telse if (a == 180){\n\t\t\t\toffsetY += 40;\n\t\t\t}\n\t\t\telse if (sides >= 2 && a-90 != 0 && a-90 != 180){\n\t\t\t\toffsetY += 40;\n\t\t\t}\n\t\t\telse if (!noFront && !noAft){\n\t\t\t\toffsetY -= 30;\n\t\t\t}\n\t\t\t\n\t\t\t$(structDiv)\n\t\t\t\t.data(\"id\", this.structures[i].id)\n\t\t\t\t.css(\"left\", pos.x + -w/2)\n\t\t\t\t.css(\"top\", pos.y + offsetY)\n\t\t}\n\n\t\tvar width = 0;\n\t\tvar height = 0;\n\t\t$(div).find(\".structDiv\").each(function(){\n\t\t\tvar x = $(this).position().left + $(this).width();\n\t\t\tif (x > width){\n\t\t\t\twidth = x;\n\t\t\t}\n\t\t\tvar y = $(this).position().top + $(this).height();\n\t\t\tif (y > height){\n\t\t\t\theight = y;\n\t\t\t}\n\t\t})\n\n\t\t$(structContainer).css(\"height\", height + 20);\n\n/*\t\tvar w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\t\tleft = res.x - w - 50;\n\t\t}\n\t\tvar x = this.x +cam.o.x - w/2;\n\t\tvar y = this.y +cam.o.y + 150;\n\n\t\t$(div).css(\"left\", x).css(\"top\", y);\n*/\t\treturn div;\n\t}\n\n\tthis.previewSetup = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.updateDiv = function(){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t$(divs)\n\t\t\t.find(\".pos\").html(this.x + \" / \" + this.y).end()\n\t\t\t.find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end()\n\t\t\t.find(\".impulse\").html(this.getRemainingImpulse() + \" / \" + this.getTotalImpulse()).end()\n\t\t\t.find(\".delay\").html(this.getRemainingDelay())\t\t\n\t\t\t.find(\".change\").html(this.getImpulseChangeCost() + \" EP\").end()\t\t\t\n\t\t\t.find(\".turn\").html(this.getImpulseChangeCost() + \" EP\").end()\n\t}\n\n\tthis.updateDivPower = function(system){\n\t\tvar reactor = this.getSystemByName(\"Reactor\");\n\t\tvar s = reactor.getOutput();\n\t\t$(this.getSystemByName(\"Reactor\").element).find(\".outputMask\").html(reactor.getOutput());\n\n\t\t$(system.element).find(\".outputMask\").html(system.getOutput());\n\t\tsystem.update();\n\t}\n\n\tthis.updateNonPowerOutput = function(system){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(divs).find(\".system\").each(\n\t\t\tfunction(){\n\t\t\t\tif ($(this).data(\"systemId\") == system.id){\n\t\t\t\t\t$(this).find(\".outputMask\").html(system.getOutput());\n\t\t\t\t\tsystem.update();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tthis.getSystemByName = function(name){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tthis.attachEvent = function(td){\n\t\t$(td).data(\"shipId\", this.id);\n\t\t$(td).hover(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).hover(e);\n\t\t\t}\n\t\t).click(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).select(e);\n\t\t\t}\n\t\t).\n\t\tcontextmenu(\n\t\t\tfunction(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));\n\t\t\t}\n\t\t);\n\t\treturn td;\n\t}\n\n\tthis.selectAll = function(e, id){\n\t\tvar name = this.getSystemById(id).name;\n\t\tif (name == \"Hangar\"){return;}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].name == name){\n\t\t\t\t\tif (! this.structures[i].systems[j].destroyed){\n\t\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tthis.doUnpowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".unpower\").hide().end().find(\".power\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doUnpower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.doPowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".power\").hide().end().find(\".unpower\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doPower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchModeAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].locked){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].switchMode();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchMode = function(){\n\t\tthis.resetPowers();\n\t\tthis.cycleActiveWeapon();\n\t\tthis.copyProps();\n\t\tthis.setSystemImage()\n\t\tthis.setSystemWindow();\n\t\tthis.resetDetailsDiv();\n\t\tgame.getUnitById(this.parentId).updateDivPower(this);\n\t}\n\n\tthis.getShortInfo = function(){\n\t\tvar ele = $(\"#shortInfo\");\n\t\tif (this.userid == game.userid){\n\t\t\t$(ele).attr(\"class\", \"friendly\");\n\t\t} else $(ele).attr(\"class\", \"hostile\");\n\n\t\tvar baseHit = this.getBaseHitChance();\n\t\tvar impulse = this.getTotalImpulse();\n\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.name + \" #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Impulse: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n\t\t\ttable.insertRow(-1).insertCell(-1).innerHTML = \"Base Hit: \" + Math.floor(this.profile[0] * baseHit) + \"% - \" + Math.floor(this.profile[1] * baseHit) + \"%\";\n\t\treturn table;\n\t}\n\n\tthis.getProfileMod = function(){\n\t\treturn Math.floor((1+((((this.getBaseImpulse() / this.getTotalImpulse())-1)/2)))*1000)/10;\n\t}\n\n\tthis.getIncomingBallistics = function(){\n\t\tvar inc = [];\n\t\tfor (var i = 0; i < game.ballistics.length; i++){\n\t\t\tif (game.ballistics[i].targetid == this.id){\n\t\t\t\tinc.push(game.ballistics[i])\n\t\t\t}\n\t\t}\n\t\treturn inc;\n\t}\n\n\tthis.switchDiv = function(){\n\t\tif ($(this.element).hasClass(\"disabled\")){\n\t\t\t$(this.element)\n\t\t\t.removeClass(\"disabled\")\n\t\t}\n\t\telse {\n\t\t\t$(this.element).addClass(\"disabled\");\n\t\t}\n\t\treturn;\n\t}\n\n\tthis.canBoost = function(system){\n\t\t/*if (system instanceof Dual){\n\t\t\tconsole.log(\"cost: \"+system.getActiveWeapon().effiency);\n\t\t\tconsole.log(\"max: \"+system.getActiveWeapon().maxBoost);\n\t\t\tconsole.log(system.getActiveWeapon().boostEffect);\n\t\t}*/\n\n\t\tif (system.disabled || system.destroyed){\n\t\t\treturn false;\n\t\t}\n\t\telse if (system instanceof Weapon && !system.disabled && !system.destroyed && system.getLoadLevel() >= 1){\n\t\t\tif (system instanceof Launcher){\n\t\t\t\tif (system.getOutput() < system.getEffiency()){\n\t\t\t\t\tif (system.getRemainingAmmo() > system.getOutput()){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"There is not enough ammunition left\");\n\t\t\t\t} else popup(\"The launcher is already at maximum capacity\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (system.getBoostLevel() < system.maxBoost){\n\t\t\t\t\tvar avail = this.getUnusedPower();\n\t\t\t\t\tvar need = system.getEffiency();\n\t\t\t\t\tif (avail >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t\t\t} else popup(\"The selected system cant be boosted further.\");\n\t\t\t}\n\t\t}\n\t\telse if (!(system instanceof Weapon)){\n\t\t\tif (this.getUnusedPower() >= system.getEffiency()){\n\t\t\t\treturn true;\n\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnusedPower = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\treturn this.primary.systems[i].getUnusedPower();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.setMoveMode = function(){\n\n\t\tgame.mode = 1;\n\t\tthis.turns = [];\n\t\tthis.setTranslation();\n\t\tthis.drawMoveRange();\n\t\tthis.drawVectorIndicator();\n\n\t\tif (game.phase == -1){ // DEPLOYMENT\n\t\t\tif (this.actions[0].type == \"deploy\"  && this.actions[0].turn == game.turn && ! this.flight){\n\t\t\t\tthis.drawTurnUI();\n\t\t\t}\n\t\t}\n\t\telse if (game.phase == 0){\n\t\t\tif (!this.flight){\n\t\t\t\tthis.drawMovementUI();\n\t\t\t\tthis.drawMovementPlan();\n\t\t\t}\n\t\t}\n\t\telse if (game.phase == 1){\n\t\t\tif (this.flight){\n\t\t\t\tif (! this.dogfights.length){\n\t\t\t\t\tthis.drawMovementUI();\n\t\t\t\t\tthis.drawMovementPlan();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (game.phase == 2){ // FIRE\n\t\t}\n\t\telse if (game.phase == 3){ // Dmg control\n\t\t}\n\n\t\tthis.resetTranslation();\n\t\tthis.checkSensorHighlight();\n\t\tthis.updateDiv();\n\t}\n\n\tthis.setTranslation = function(){\n\t\tmoveCtx.translate(cam.o.x, cam.o.y);\n\t\tmoveCtx.scale(cam.z, cam.z);\n\t\tplanCtx.translate(cam.o.x, cam.o.y);\n\t\tplanCtx.scale(cam.z, cam.z);\n\t}\n\n\tthis.resetTranslation = function(){\n\t\tmoveCtx.setTransform(1,0,0,1,0,0);\n\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.unsetMoveMode = function(){\n\t\tgame.mode = false;\n\t\t$(\"#vectorDiv\").addClass(\"disabled\");\n\t\t$(\"#impulseGUI\").addClass(\"disabled\");\n\t\t$(\".turnEle\").addClass(\"disabled\");\n\t\t$(\"#maxVector\").addClass(\"disabled\");\n\t\t$(\"#maxTurnVector\").addClass(\"disabled\");\n\t\t$(\"#plusImpulse\").addClass(\"disabled\");\n\t\t$(\"#minusImpulse\").addClass(\"disabled\");\n\t\t$(\"#undoLastAction\").addClass(\"disabled\");\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\t\n\tthis.select = function(){\n\t\tif (this.selected){\n\t\t\tthis.doUnselect();\n\t\t}\n\t\telse {\n\t\t\tthis.doSelect();\n\t\t}\n\t}\n\n\tthis.doSelect = function(){\n\t\tconsole.log(this);\n\t\taUnit = this.id;\n\t\tthis.selected = true;\n\t\tthis.switchDiv();\n\t\tthis.setMoveMode();\n\t}\n\t\n\tthis.doUnselect = function(){\n\t\taUnit = false;\n\t\tthis.selected = false;\n\t\tif (game.deploying){game.disableDeployment()}\n\t\telse if (game.flightDeploy){game.flightDeploy = false;}\n\t\tthis.turns = [];\n\t\tthis.unselectSystems();\n\t\tthis.switchDiv();\n\t\tthis.unsetMoveMode();\n\t\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n\t\t$(\"#popupWrapper\").hide()\n\t\t$(\"#instructWrapper\").hide()\n\t\t$(\"#systemDetailsDiv\").remove();\n\t\t$(fxCanvas).css(\"opacity\", 1);\n\t}\n\n\tthis.doHighlight = function(){\n\t\tif (this.highlight){\n\t\t\tthis.highlight = false;\n\t\t\tgame.draw();\n\t\t}\t\n\t\telse {\n\t\t\tthis.highlight = true;\n\t\t\tctx.translate(cam.o.x, cam.o.y);\n\t\t\tctx.scale(cam.z, cam.z);\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(this.x, this.y, this.size/2, 0, 2*Math.PI, false);\n\t\t\tctx.closePath();\n\t\t\tctx.lineWidth = 5;\n\t\t\tctx.globalAlpha = 1;\n\t\t\tif (this.friendly){ctx.strokeStyle = \"green\";}\n\t\t\telse {ctx.strokeStyle = \"red\";}\n\t\t\tctx.stroke();\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\n\t//\treturn isInArc(getCompassHeadingOfPoint(loc, pos, facing), start, end);\n\n\tthis.hasLockOnUnit = function(target){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tvar ew = sensor.ew[sensor.ew.length-1];\n\t\tvar origin = this.getBaseOffsetPos();\n\t\tvar d = getDistance(origin, target.getBaseOffsetPos());\n\t\tif (d <= ew.dist){\n\t\t\tvar str = sensor.getOutput();\n\t\t\tvar len = 20;\n\t\t\tvar p = 1.5;\n\t\t\tvar\tw = Math.min(180, len * Math.pow(str/ew.dist, p));\n\t\t\tvar start = addAngle(0 + w, ew.angle);\n\t\t\tvar end = addAngle(360 - w, ew.angle);\n\n\t\t\treturn isInArc(getCompassHeadingOfPoint(origin,  target.getBaseOffsetPos(), this.facing), start, end);\n\t\t}\n\t\treturn 0;\n\n\t}\n\n\tthis.getLockString = function(lock){\n\t\tif (lock){\n\t\t\treturn \"<span class='green'>Active Lock</span>\";\n\t\t}\n\t\treturn \"<span class='red'>No Sensor Lock</span>\";\n\t}\n\n\tthis.canSetSensor = function(){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tif (sensor.selected && !sensor.locked){\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\t\n\tthis.unselectSystems = function(){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\tvar buttons = $(this.element).find(\".system.selected\").each(function(){\n\t\t\t$(this).removeClass(\"selected\");\n\t\t});\t\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tthis.structures[i].systems[j].highlight = false;\n\t\t\t\tthis.structures[i].systems[j].selected = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.flight || this.salvo){return;}\n\t\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected){\n\t\t\t\tthis.primary.systems[i].select();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getFireOrders = function(){\n\t\tvar fires = [];\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n\t\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n\t\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n\t\t\t\t\t} else break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn fires;\n\t}\n\n\tthis.getSensorSettings = function(){\n\t\treturn this.getSystemByName(\"Sensor\").getEW();\n\t}\n\n\tthis.getPowerOrders = function(){\n\t\tvar powers = [];\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tfor (var k = 0; k < this.structures[i].systems[j].powers.length; k++){\n\t\t\t\t\tif (this.structures[i].systems[j].powers[k].new){\n\t\t\t\t\t\tpowers.push(this.structures[i].systems[j].powers[k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n\t\t\t\tif (this.primary.systems[i].powers[j].new){\n\t\t\t\t\tpowers.push(this.primary.systems[i].powers[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn powers;\n\t}\n}",
			"file": "shipclasses.js",
			"file_size": 59480,
			"file_write_time": 131382923610324043,
			"settings":
			{
				"buffer_size": 57298,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 5968,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 455,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3682,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 15037,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 61 files for \"launch selected\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  412  \t\t\t</table>\n  413  \t\t\t<div class=\"header\">\n  414: \t\t\t\t<input type=\"button\" class=\"disabled\" value=\"Launch selected strikecraft as mixed flight\">\n  415  \t\t\t</div>\n  416  \t\t</div>\n\n1 match in 1 file\n\n\nSearching 61 files for \"launchFlight\"\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  328  }\n  329  \n  330: function launchFlight(e){\n  331: \tgame.getUnitById(aUnit).getSystemById(e.data.systemid).launchFlight();\n  332  }\n  333  \n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2462  \t}\n 2463  \n 2464: \tvar button = $(\"#hangarLoadoutDiv\").find(\"input\").on(\"click\", {systemid: id}, launchFlight)\n 2465  \tconsole.log(button);\n 2466  \n 2467: \tif (this.canLaunchFlight()){\n 2468  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2469  \t} else $(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2470  }\n 2471  \n 2472: Hangar.prototype.launchFlight = function(){\n 2473  \tfor (var i = game.ships.length-1; i >= 0; i--){\n 2474  \t\tif (game.ships[i].userid == game.userid){\n ....\n 2535  \t}\n 2536  \n 2537: \tif (this.canLaunchFlight()){\n 2538  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2539  \t}\n ....\n 2543  }\n 2544  \n 2545: Hangar.prototype.canLaunchFlight = function(){\n 2546  \tif (this.canFire()){\n 2547  \t\tfor (var i = 0; i < this.loads.length; i++){\n\n7 matches across 2 files\n\n\nSearching 61 files for \"launchFlight\n\"\n\n0 matches\n\nSearching 61 files for \"launchFLight\"\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  328  }\n  329  \n  330: function launchFlight(e){\n  331: \tgame.getUnitById(aUnit).getSystemById(e.data.systemid).launchFlight();\n  332  }\n  333  \n\nC:\\xampp\\htdocs\\fire\\systems.js:\n 2462  \t}\n 2463  \n 2464: \tvar button = $(\"#hangarLoadoutDiv\").find(\"input\").on(\"click\", {systemid: id}, launchFlight)\n 2465  \tconsole.log(button);\n 2466  \n 2467: \tif (this.canLaunchFlight()){\n 2468  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2469  \t} else $(\"#hangarLoadoutDiv\").find(\"input\").addClass(\"disabled\");\n 2470  }\n 2471  \n 2472: Hangar.prototype.launchFlight = function(){\n 2473  \tfor (var i = game.ships.length-1; i >= 0; i--){\n 2474  \t\tif (game.ships[i].userid == game.userid){\n ....\n 2535  \t}\n 2536  \n 2537: \tif (this.canLaunchFlight()){\n 2538  \t\t$(\"#hangarLoadoutDiv\").find(\"input\").removeClass(\"disabled\");\n 2539  \t}\n ....\n 2543  }\n 2544  \n 2545: Hangar.prototype.canLaunchFlight = function(){\n 2546  \tif (this.canFire()){\n 2547  \t\tfor (var i = 0; i < this.loads.length; i++){\n\n7 matches across 2 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   85  \n   86  \tthis.canSetSensor = function(){\n   87: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   88  \t\tif (sensor.locked){\n   89  \t\t\treturn false;\n   ..\n  568  \n  569  \t\t\t\tif (elements[i].ship){\n  570: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  571  \t\t\t\t}\n  572  \t\t\t}\n  ...\n  707  \t\t\t\t\tunit.unsetMoveMode();\n  708  \t\t\t\t\tunit.setMoveMode();\n  709: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  710  \t\t\t\t}\n  711  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2037  \tthis.hasLockOnUnit = function(target){\n 2038  \t\tif (target.flight || target.salvo){return false;}\n 2039: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2040  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2041  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2064  \tthis.canSetSensor = function(){\n 2065  \t\tif (this.flight || this.salvo){return false;}\n 2066: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2067  \t\tif (sensor.selected && !sensor.locked){\n 2068  \t\t\treturn true;\n ....\n 2108  \n 2109  \tthis.getSensorSettings = function(){\n 2110: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2111  \t}\n 2112  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n  ...\n  708  \t\t\t\t\tunit.unsetMoveMode();\n  709  \t\t\t\t\tunit.setMoveMode();\n  710: \t\t\t\t\t//unit.getSystemByName(\"Sensor\").drawEW();\n  711  \t\t\t\t}\n  712  \t\t\t\tif (game.flightDeploy){\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n20 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n\n\nSearching 61 files for \"\"Sensor\"\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   86  \tthis.canSetSensor = function(){\n   87  \t\tif (this.flight || this.salvo){return false;}\n   88: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n   89  \t\tif (sensor.locked){\n   90  \t\t\treturn false;\n   ..\n  569  \n  570  \t\t\t\tif (elements[i].ship){\n  571: \t\t\t\t\telements[i].getSystemByName(\"Sensor\").drawEW();\n  572  \t\t\t\t}\n  573  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n  638  \tpublic function setShipLocks($ship){\n  639  \t\t$origin = $ship->getCurrentPosition();\n  640: \t\t$sensor =  $ship->getSystemByName(\"Sensor\");\n  641  \t\t$ew = $sensor->getEW($this->turn);\n  642  \t\tif (!$ew){\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  597  \n  598  \tpublic function getActiveLocks($turn){\n  599: \t\t$sensor = $this->getSystemByName(\"Sensor\");\n  600  \t\t$str = $sensor->getOutput($turn);\n  601  \t\t$ew = $sensor->ew[sizeof($sensor->ew)-1];\n  ...\n  643  \t\t\t\"Engine\" => 0.4,\n  644  \t\t\t\"LifeSupport\" => 0.6,\n  645: \t\t\t\"Sensor\" => 0.7,\n  646  \t\t\t\"Reactor\" => 0.6\n  647  \t\t);\n  ...\n  659  \t\t\t\"Engine\" => 0.5,\n  660  \t\t\t\"LifeSupport\" => 0.6,\n  661: \t\t\t\"Sensor\" => 0.75,\n  662  \t\t\t\"Reactor\" => 0.7\n  663  \t\t);\n  ...\n  675  \t\t\t\"Engine\" => 0.6,\n  676  \t\t\t\"LifeSupport\" => 0.7,\n  677: \t\t\t\"Sensor\" => 0.85,\n  678  \t\t\t\"Reactor\" => 0.7\n  679  \t\t);\n  ...\n  691  \t\t\t\"Engine\" => 0.6,\n  692  \t\t\t\"LifeSupport\" => 0.8,\n  693: \t\t\t\"Sensor\" => 0.9,\n  694  \t\t\t\"Reactor\" => 0.7\n  695  \t\t);\n  ...\n  707  \t\t\t\"Engine\" => 0.7,\n  708  \t\t\t\"LifeSupport\" => 1,\n  709: \t\t\t\"Sensor\" => 1,\n  710  \t\t\t\"Reactor\" => 0.8\n  711  \t\t);\n  ...\n  723  \t\t\t\"Engine\" => 1,\n  724  \t\t\t\"LifeSupport\" => 1,\n  725: \t\t\t\"Sensor\" => 1,\n  726  \t\t\t\"Reactor\" => 0.9\n  727  \t\t);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  321  \n  322  class Sensor extends PrimarySystem {\n  323: \tpublic $name = \"Sensor\";\n  324: \tpublic $display = \"Sensor\";\n  325  \tpublic $ew = array();\n  326  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  513  \tmouseCtx.translate(cam.o.x, cam.o.y);\n  514  \tmouseCtx.scale(cam.z, cam.z);\n  515: \tvar sensor = ship.getSystemByName(\"Sensor\");\n  516  \tvar str = sensor.getOutput();\n  517  \t\td = Math.min(str, d);\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  411  \tthis.checkSensorHighlight = function(){\n  412  \t\tif (this.flight || this.salvo){return;}\n  413: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n  414  \t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n  415  \t}\n  ...\n 2038  \tthis.hasLockOnUnit = function(target){\n 2039  \t\tif (target.flight || target.salvo){return false;}\n 2040: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2041  \t\tvar ew = sensor.ew[sensor.ew.length-1];\n 2042  \t\tvar origin = this.getBaseOffsetPos();\n ....\n 2065  \tthis.canSetSensor = function(){\n 2066  \t\tif (this.flight || this.salvo){return false;}\n 2067: \t\tvar sensor = this.getSystemByName(\"Sensor\");\n 2068  \t\tif (sensor.selected && !sensor.locked){\n 2069  \t\t\treturn true;\n ....\n 2109  \n 2110  \tthis.getSensorSettings = function(){\n 2111: \t\treturn this.getSystemByName(\"Sensor\").getEW();\n 2112  \t}\n 2113  \n\n19 matches across 7 files\n\n\nSearching 61 files for \"hasSystemSelected\"\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  322  \t\t\t}\n  323  \t\t}\n  324: \t\tif (game.ships[index].hasSystemSelected(\"Sensor\")){\n  325  \t\t\tsensorize(game.ships[index], pos);\n  326  \t\t\treturn;\n  ...\n  341  \telse if (!game.deploying){\n  342  \t\tif (aUnit){\n  343: \t\t\tif (game.getUnitById(aUnit).hasSystemSelected(\"Sensor\")){\n  344  \t\t\t\tsensorize(game.getUnitById(aUnit), pos);\n  345  \t\t\t\treturn;\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  415  \t}\n  416  \n  417: \tthis.hasSystemSelected = function(name){\t\n  418  \t\tif (this.flight || this.salvo){return false;}\t\n  419  \t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\n3 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 27764,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 35591,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 40399,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 187,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3641,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2684,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2478,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2253,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1713,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 3697,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 2837,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 3106,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3665,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 8585,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 579,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 14967,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 75820,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 6434,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3512,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1839,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 15433,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 5592,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 48549,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 14879,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 19109,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3806,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 91,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 6157,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2943,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 13240,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17304,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2260,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3667,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2723,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1889,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1746,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1627,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 1664,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 8524,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 4239,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 3880,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3555,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 7109,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 3412,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 1786,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/test.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/04_StaticScene.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/30_LightAnimation.as"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"#",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"*p.hp",
			"*php",
			"",
			"salvo.php",
			"*.php",
			"salvo.php",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"getActiveUnits",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"*",
			"",
			"*.js",
			".js",
			"",
			"*.js",
			"",
			"*.php",
			"*.*",
			"",
			"manager.php",
			"*.php",
			"*.js",
			"*.php",
			"php",
			"",
			"*.php",
			"",
			"classname",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"this.getEP()",
			"",
			"*.php",
			"",
			"*.php",
			".php",
			"php"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"hasSystemSelected",
			"setpr",
			"createStandardBallisticAction",
			"getSystemByName",
			"\"Sensor\"",
			"unselectSystems",
			"this.dounselect",
			"checksensorhig",
			"launchFLight",
			"launchFlight\n",
			"launchFlight",
			"this.size",
			"this.size ",
			"launch selected",
			"launched Flight",
			"launch selected fl",
			"confirm and l",
			"game.mode = ",
			"this.mode = ",
			"checkSensorHighlight",
			"powerdiv",
			"canPower",
			"canpower\ncanPower",
			"switchModeAll",
			"Launcher",
			"prototype.select",
			"select()",
			".bind",
			"sharedLaunchFlight",
			"unbind",
			"bind",
			".bind",
			"getanim",
			"this.explos",
			"setanimation",
			"this.exploSize =",
			"this.exploSize = ",
			"this.explosize = ",
			"drawExplosion",
			"sensori",
			"animatefireor",
			"hit\"",
			"setupsh",
			"handlenormalfireo",
			"handlefiringphase",
			"this->facing",
			"sensor(",
			"getoutput ",
			"\treturn $this->primary;",
			"getSystemById",
			"json",
			"assembleUnits",
			"isInArc",
			"\t\tmouseCtx.moveTo(loc.x, loc.y);\ngetFacing",
			"getFacing",
			"drawSensorArc",
			"deploying = ",
			"deployMode = ",
			"deployBlock",
			"candeployhere",
			"\"red\"",
			"setstate ",
			"setstate",
			"set se",
			"moveCtx",
			"moveCtx.clearRect",
			"mousemove",
			"drawDeploymentZone",
			"fxCtx",
			"deployarea",
			"canDeployHere",
			"please deploy i",
			"getOutput ",
			"drawSensorArc",
			"getUnusedPower ",
			"getUnusedPower",
			"getOutput ",
			"reactor.",
			"getUsedPower",
			".call",
			"debug::",
			"debug",
			"getShipsForFaction",
			"echo",
			"redraw",
			"textContent",
			"innerText",
			"innerText ",
			"basediv",
			"\"#game",
			"createbasediv",
			"hasShipOnPos",
			"hasshiponpos",
			"unitHover",
			"getShortInfo",
			"shortInfo",
			"checkSensorHighlight",
			"drawImpulseUI",
			"drawmovementui",
			"canvasMouseClick",
			"movePhase",
			"canadvance",
			"drawSensorRadius",
			"\"Sensor",
			"sensor",
			"getpointinD",
			"salvo",
			"drawSensorRadius",
			"setstate",
			"getPowers",
			"insertsensor",
			"insertsensorse",
			"getGameData",
			"insertSensorSettings",
			"getSystemByName(",
			"getSystemByName ",
			"getSystemByName",
			"confirmdeployment",
			"primarysystem = ",
			"primarysy",
			"sensorEvent",
			"sensorev",
			"this.drawmoverange ",
			"this.drawmoverange()",
			"drawMovementUI",
			"setMoveMode",
			"this.setMoveMode",
			"setMoveMode"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data.",
			"getTraverseMod",
			"ding",
			"getCritMod",
			"= data.",
			", \"LightParticleBeam\"",
			"deployArea[i].",
			"deployArea[i]",
			"MediumPlasma",
			"Dual",
			"getActiveSystem",
			"setState = function($turn)",
			"setState($turn)",
			"setSystemBorder",
			"gui",
			"ele",
			"boostable",
			"MediumPulse",
			"LightPulse",
			"getImpulse",
			"system",
			"= data.",
			"",
			"getTotalImpulse",
			"getRemainingImpulse()",
			"structContainer",
			"ele",
			" = data.",
			"hit",
			"system",
			"fire.explo.t",
			"end",
			"fire.",
			", maxBoost, boostEffect);",
			", maxBoost, boostEffect){",
			"maxBoost, boostEffect, ",
			"__construct($id, $userid, $available, $status, $destroyed){",
			"construct($id, $userid, $available, $status, $destroyed);",
			"[k]",
			"ele.anim[0].",
			"ele.anim[k].",
			"animate",
			"window.animation.ballAnims[i]",
			"game.ballistics",
			"ballAnims",
			"window.animate.ballAnims",
			"",
			"getPosition",
			"",
			"finalStep",
			"finalPos",
			"setFinalStep",
			"setFinalDestination",
			"setFinalPosition",
			"",
			"hasUnresolvedFireOrder",
			"data",
			"$ballistic",
			"FusionCannon",
			"HeavyIon",
			"MediumIon",
			"LightIon",
			"expandDiv",
			"fire",
			"this",
			"fire",
			"ongoing",
			"canAdvance",
			"canAdvanceGamestate(",
			"public $name",
			"removeFighter",
			"addFighter",
			"loads[l]",
			"isDestroyedThisTurn",
			"Armor",
			"MissileLauncher",
			"select()",
			"getUnitById",
			"aUnit",
			"",
			"aShip",
			"sizeof($this->fires)",
			"$this->fires[$i]",
			"IonCannon",
			"IonProjector",
			"IonBolter",
			"game.ships",
			"drawMovementPlan",
			"div",
			"didiv",
			"div",
			"getOutputMods()",
			"$i",
			"$this->",
			"$this->primary->systems[] = ",
			"$this->primary = new P",
			"    }",
			"",
			"$this->primary->systems[] = new",
			"return (",
			"$structs = array()",
			"powerReq",
			"mouseCtx",
			"moveCtx.",
			"attachEvent",
			"getRemainingNegation($fire)",
			"targetid",
			"weaponid",
			"shooterid",
			"->dogfights",
			"this->ships",
			"insertFireOrders",
			"fxCtx.",
			"moveCtx.",
			"shipHover",
			"window.ballImages.",
			"->hitSystem",
			"->hitSection",
			"damages[l]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 11,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5668,
						"regions":
						{
						},
						"selection":
						[
							[
								5366,
								5366
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4112.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4575,
						"regions":
						{
						},
						"selection":
						[
							[
								1133,
								1133
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 923.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29119,
						"regions":
						{
						},
						"selection":
						[
							[
								5107,
								5107
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 4460.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16425,
						"regions":
						{
						},
						"selection":
						[
							[
								11801,
								11801
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15007.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2954,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57298,
						"regions":
						{
						},
						"selection":
						[
							[
								10246,
								10246
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7125.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5968,
						"regions":
						{
						},
						"selection":
						[
							[
								1719,
								1719
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1367.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 455,
						"regions":
						{
						},
						"selection":
						[
							[
								65,
								65
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3682,
						"regions":
						{
						},
						"selection":
						[
							[
								1395,
								1395
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15037,
						"regions":
						{
						},
						"selection":
						[
							[
								9851,
								9851
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6980.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27764,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										179,
										194
									],
									[
										383,
										395
									],
									[
										463,
										475
									],
									[
										634,
										646
									],
									[
										705,
										717
									],
									[
										908,
										920
									],
									[
										1086,
										1098
									],
									[
										1234,
										1246
									],
									[
										1527,
										1539
									],
									[
										1607,
										1619
									],
									[
										1778,
										1790
									],
									[
										1849,
										1861
									],
									[
										2052,
										2064
									],
									[
										2230,
										2242
									],
									[
										2378,
										2390
									],
									[
										2672,
										2680
									],
									[
										2824,
										2832
									],
									[
										2976,
										2984
									],
									[
										3149,
										3157
									],
									[
										3342,
										3350
									],
									[
										3603,
										3611
									],
									[
										3814,
										3822
									],
									[
										3994,
										4002
									],
									[
										4125,
										4133
									],
									[
										4257,
										4265
									],
									[
										4389,
										4397
									],
									[
										4518,
										4526
									],
									[
										4643,
										4651
									],
									[
										4821,
										4829
									],
									[
										4857,
										4865
									],
									[
										5064,
										5072
									],
									[
										5322,
										5330
									],
									[
										5565,
										5573
									],
									[
										5816,
										5824
									],
									[
										5995,
										6003
									],
									[
										6264,
										6272
									],
									[
										6416,
										6424
									],
									[
										6568,
										6576
									],
									[
										6741,
										6749
									],
									[
										6934,
										6942
									],
									[
										7195,
										7203
									],
									[
										7406,
										7414
									],
									[
										7586,
										7594
									],
									[
										7717,
										7725
									],
									[
										7849,
										7857
									],
									[
										7981,
										7989
									],
									[
										8110,
										8118
									],
									[
										8235,
										8243
									],
									[
										8413,
										8421
									],
									[
										8449,
										8457
									],
									[
										8656,
										8664
									],
									[
										8914,
										8922
									],
									[
										9157,
										9165
									],
									[
										9408,
										9416
									],
									[
										9587,
										9595
									],
									[
										9856,
										9864
									],
									[
										10008,
										10016
									],
									[
										10160,
										10168
									],
									[
										10333,
										10341
									],
									[
										10526,
										10534
									],
									[
										10787,
										10795
									],
									[
										10998,
										11006
									],
									[
										11178,
										11186
									],
									[
										11309,
										11317
									],
									[
										11441,
										11449
									],
									[
										11573,
										11581
									],
									[
										11702,
										11710
									],
									[
										11827,
										11835
									],
									[
										12005,
										12013
									],
									[
										12041,
										12049
									],
									[
										12248,
										12256
									],
									[
										12506,
										12514
									],
									[
										12749,
										12757
									],
									[
										13000,
										13008
									],
									[
										13179,
										13187
									],
									[
										13448,
										13456
									],
									[
										13600,
										13608
									],
									[
										13752,
										13760
									],
									[
										13925,
										13933
									],
									[
										14118,
										14126
									],
									[
										14379,
										14387
									],
									[
										14590,
										14598
									],
									[
										14770,
										14778
									],
									[
										14901,
										14909
									],
									[
										15033,
										15041
									],
									[
										15165,
										15173
									],
									[
										15294,
										15302
									],
									[
										15419,
										15427
									],
									[
										15597,
										15605
									],
									[
										15633,
										15641
									],
									[
										15840,
										15848
									],
									[
										16098,
										16106
									],
									[
										16341,
										16349
									],
									[
										16592,
										16600
									],
									[
										16771,
										16779
									],
									[
										17040,
										17048
									],
									[
										17192,
										17200
									],
									[
										17342,
										17350
									],
									[
										17535,
										17543
									],
									[
										17796,
										17804
									],
									[
										18007,
										18015
									],
									[
										18187,
										18195
									],
									[
										18318,
										18326
									],
									[
										18450,
										18458
									],
									[
										18582,
										18590
									],
									[
										18711,
										18719
									],
									[
										18836,
										18844
									],
									[
										19014,
										19022
									],
									[
										19050,
										19058
									],
									[
										19257,
										19265
									],
									[
										19515,
										19523
									],
									[
										19758,
										19766
									],
									[
										20009,
										20017
									],
									[
										20188,
										20196
									],
									[
										20457,
										20465
									],
									[
										20609,
										20617
									],
									[
										20759,
										20767
									],
									[
										20952,
										20960
									],
									[
										21213,
										21221
									],
									[
										21424,
										21432
									],
									[
										21604,
										21612
									],
									[
										21735,
										21743
									],
									[
										21867,
										21875
									],
									[
										21999,
										22007
									],
									[
										22128,
										22136
									],
									[
										22253,
										22261
									],
									[
										22431,
										22439
									],
									[
										22467,
										22475
									],
									[
										22674,
										22682
									],
									[
										22932,
										22940
									],
									[
										23175,
										23183
									],
									[
										23426,
										23434
									],
									[
										23605,
										23613
									],
									[
										23874,
										23882
									],
									[
										24026,
										24034
									],
									[
										24176,
										24184
									],
									[
										24369,
										24377
									],
									[
										24630,
										24638
									],
									[
										24841,
										24849
									],
									[
										25021,
										25029
									],
									[
										25152,
										25160
									],
									[
										25284,
										25292
									],
									[
										25416,
										25424
									],
									[
										25545,
										25553
									],
									[
										25670,
										25678
									],
									[
										25848,
										25856
									],
									[
										25884,
										25892
									],
									[
										26091,
										26099
									],
									[
										26349,
										26357
									],
									[
										26592,
										26600
									],
									[
										26843,
										26851
									],
									[
										27022,
										27030
									],
									[
										27218,
										27235
									],
									[
										27411,
										27428
									],
									[
										27581,
										27598
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								27415,
								27415
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 12,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 17424.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35591,
						"regions":
						{
						},
						"selection":
						[
							[
								24248,
								24248
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14598.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40399,
						"regions":
						{
						},
						"selection":
						[
							[
								1116,
								1116
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3641,
						"regions":
						{
						},
						"selection":
						[
							[
								1660,
								1660
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2684,
						"regions":
						{
						},
						"selection":
						[
							[
								1697,
								1697
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2478,
						"regions":
						{
						},
						"selection":
						[
							[
								971,
								971
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2253,
						"regions":
						{
						},
						"selection":
						[
							[
								449,
								449
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1713,
						"regions":
						{
						},
						"selection":
						[
							[
								1103,
								1103
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3697,
						"regions":
						{
						},
						"selection":
						[
							[
								559,
								559
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1706,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								686,
								686
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 115.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3106,
						"regions":
						{
						},
						"selection":
						[
							[
								400,
								400
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								584,
								584
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3665,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8585,
						"regions":
						{
						},
						"selection":
						[
							[
								5113,
								5113
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3624.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14967,
						"regions":
						{
						},
						"selection":
						[
							[
								824,
								827
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75820,
						"regions":
						{
						},
						"selection":
						[
							[
								68066,
								68066
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 44205.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								672,
								672
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3512,
						"regions":
						{
						},
						"selection":
						[
							[
								314,
								314
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1839,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15433,
						"regions":
						{
						},
						"selection":
						[
							[
								9448,
								9448
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5793.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5592,
						"regions":
						{
						},
						"selection":
						[
							[
								4153,
								4156
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 152.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48549,
						"regions":
						{
						},
						"selection":
						[
							[
								14260,
								14260
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9826.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14879,
						"regions":
						{
						},
						"selection":
						[
							[
								13398,
								13398
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8667.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19109,
						"regions":
						{
						},
						"selection":
						[
							[
								11189,
								11189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 63.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				}
			]
		},
		{
			"selected": 43,
			"sheets":
			[
				{
					"buffer": 38,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3806,
						"regions":
						{
						},
						"selection":
						[
							[
								29,
								34
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								2089,
								2089
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19109,
						"regions":
						{
						},
						"selection":
						[
							[
								11668,
								11668
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 890.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 91,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8585,
						"regions":
						{
						},
						"selection":
						[
							[
								5426,
								5426
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 965.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6157,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								2149,
								2149
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1196.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2943,
						"regions":
						{
						},
						"selection":
						[
							[
								126,
								126
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 43.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14967,
						"regions":
						{
						},
						"selection":
						[
							[
								4719,
								4719
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3320.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57298,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36124.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75820,
						"regions":
						{
						},
						"selection":
						[
							[
								11422,
								11422
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7015.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5968,
						"regions":
						{
						},
						"selection":
						[
							[
								643,
								643
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40399,
						"regions":
						{
						},
						"selection":
						[
							[
								471,
								471
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6434,
						"regions":
						{
						},
						"selection":
						[
							[
								533,
								533
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29119,
						"regions":
						{
						},
						"selection":
						[
							[
								17370,
								17382
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12905.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48549,
						"regions":
						{
						},
						"selection":
						[
							[
								17579,
								17579
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12154.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13240,
						"regions":
						{
						},
						"selection":
						[
							[
								8011,
								8011
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5332.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17304,
						"regions":
						{
						},
						"selection":
						[
							[
								11713,
								11713
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6607.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2260,
						"regions":
						{
						},
						"selection":
						[
							[
								453,
								453
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3667,
						"regions":
						{
						},
						"selection":
						[
							[
								2299,
								2299
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 131.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1775,
						"regions":
						{
						},
						"selection":
						[
							[
								716,
								728
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3682,
						"regions":
						{
						},
						"selection":
						[
							[
								897,
								897
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4575,
						"regions":
						{
						},
						"selection":
						[
							[
								3877,
								3877
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2723,
						"regions":
						{
						},
						"selection":
						[
							[
								1214,
								1214
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1889,
						"regions":
						{
						},
						"selection":
						[
							[
								1780,
								1780
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1746,
						"regions":
						{
						},
						"selection":
						[
							[
								1136,
								1136
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1627,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1664,
						"regions":
						{
						},
						"selection":
						[
							[
								693,
								694
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14879,
						"regions":
						{
						},
						"selection":
						[
							[
								417,
								417
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8524,
						"regions":
						{
						},
						"selection":
						[
							[
								690,
								690
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5668,
						"regions":
						{
						},
						"selection":
						[
							[
								5286,
								5277
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3907.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8585,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3496.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								760,
								760
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35591,
						"regions":
						{
						},
						"selection":
						[
							[
								32690,
								32690
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2025.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4239,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3880,
						"regions":
						{
						},
						"selection":
						[
							[
								1715,
								1715
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 972.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								282,
								282
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3555,
						"regions":
						{
						},
						"selection":
						[
							[
								1072,
								1072
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3512,
						"regions":
						{
						},
						"selection":
						[
							[
								1493,
								1493
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 530.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7109,
						"regions":
						{
						},
						"selection":
						[
							[
								805,
								805
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 63.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3412,
						"regions":
						{
						},
						"selection":
						[
							[
								2619,
								2619
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1404.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3665,
						"regions":
						{
						},
						"selection":
						[
							[
								519,
								519
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1786,
						"regions":
						{
						},
						"selection":
						[
							[
								119,
								119
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.610570609867,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"shipc",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"om",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"getg",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"cl",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"ash",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"pl",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"laun",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"ys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"hyop",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"tin",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"ssh",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"game.p",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"sagg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"dua",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"du",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"matt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"pa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"ion",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"wh",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"la",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"ha",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"ave",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"whi",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\whitestar.php"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"fb",
				"C:\\xampp\\htdocs\\fire\\balltest.php"
			],
			[
				"plasa",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"aven",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sasl",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"auo",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"av",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"link",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"lasr",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"mna",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"xlas",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"find",
				"Find Results"
			],
			[
				"shr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"a",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\avenger.php"
			],
			[
				"scri",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"share",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"ckass",
				"Package Control Messages"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"uls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 151.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
