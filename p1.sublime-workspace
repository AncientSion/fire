{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"el",
				"elapsed"
			],
			[
				"dr",
				"drawTrajectory"
			],
			[
				"assemble",
				"assembleBallistics"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getHit",
				"getHitSection"
			],
			[
				"getMis",
				"getMissionTypeString"
			],
			[
				"setPostMo",
				"setPostMoveImage"
			],
			[
				"geu",
				"getUnitById"
			],
			[
				"getUnt",
				"getUnitById"
			],
			[
				"order",
				"ordered"
			],
			[
				"target",
				"targetid"
			],
			[
				"dodepl",
				"doDeployFlight"
			],
			[
				"reset",
				"resetHover"
			],
			[
				"getU",
				"getUnitByClick"
			],
			[
				"hasInvali",
				"hasInvalidPower"
			],
			[
				"confirm",
				"confirmFiringOrders"
			],
			[
				"unit",
				"unitSize"
			],
			[
				"getPo",
				"getPowerReq"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"getRema",
				"getRemainingDelay"
			],
			[
				"getRem",
				"getCurrentImpulse"
			],
			[
				"getRemain",
				"getRemainingEP"
			],
			[
				"add",
				"addClass"
			],
			[
				"getRe",
				"getReinforcements"
			],
			[
				"getAmg",
				"getAngleFromTo"
			],
			[
				"getPositi",
				"getCurrentPosition"
			],
			[
				"col",
				"colspan"
			],
			[
				"gethit",
				"getHitSystem"
			],
			[
				"fire",
				"handleFireClick"
			],
			[
				"getpla",
				"getPlannedPosition"
			],
			[
				"getBase",
				"getBaseOffsetPos"
			],
			[
				"play",
				"playerName"
			],
			[
				"getbase",
				"getBaseOffsetPos"
			],
			[
				"setPre",
				"setPreMovePosition"
			],
			[
				"bac",
				"background-color"
			],
			[
				"getImp",
				"getImpulseStep"
			],
			[
				"ren",
				"reinforce"
			],
			[
				"setRemain",
				"setRemainingDelay"
			],
			[
				"remai",
				"remainingDelay"
			],
			[
				"rema",
				"remainingImpulse"
			],
			[
				"remaining",
				"remainingImpulse"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"getRei",
				"getReinforcementShips"
			],
			[
				"draw",
				"drawSystemAxis"
			],
			[
				"font-",
				"font-size"
			],
			[
				"se",
				"select"
			],
			[
				"roate",
				"rotate270size90"
			],
			[
				"getre",
				"getRemainingImpulse"
			],
			[
				"getImpu",
				"getImpulseChangeCost"
			],
			[
				"getTurn",
				"getMaxTurnAngle"
			],
			[
				"turn",
				"turnAngle"
			],
			[
				"baseI",
				"baseImpulseCost"
			],
			[
				"getPlann",
				"getPlannedPosition"
			],
			[
				"getPlanned",
				"getPlannedPosition"
			],
			[
				"switchM",
				"switchTurnMode"
			],
			[
				"getPla",
				"getPlannedPosition"
			],
			[
				"getD",
				"getDefensiveBonus"
			],
			[
				"to",
				"totalDmg"
			],
			[
				"getEW",
				"getEWMode"
			],
			[
				"getBoost",
				"getBoostEffectElements"
			],
			[
				"getOutputmod",
				"getOutputModeMods"
			],
			[
				"Db",
				"DBManager"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"initDe",
				"initDeploymentWrapper"
			],
			[
				"getC",
				"getCurrentReinforceCost"
			],
			[
				"parentI",
				"parentIntegrity"
			],
			[
				"impul",
				"impulseString"
			],
			[
				"isIn",
				"isInEWArc"
			],
			[
				"getBas",
				"getBaseOffsetPos"
			],
			[
				"power",
				"powerReq"
			],
			[
				"DBM",
				"DBManager"
			],
			[
				"drawMove",
				"drawMoveRange"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"resol",
				"resolveBallisticFireOrder"
			],
			[
				"getOut",
				"getOutput"
			],
			[
				"getAc",
				"getActiveLocks"
			],
			[
				"getElement",
				"getElementsByClassName"
			],
			[
				"senSor",
				"checkSensorHighlight"
			],
			[
				"r",
				"echoReturn"
			],
			[
				"Salv",
				"salvoCtx"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"getUni",
				"getUnitById"
			],
			[
				"ele",
				"element"
			],
			[
				"getSyste",
				"getSystemByName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"pto",
				"prototype"
			],
			[
				"getout",
				"getOutputUsage"
			],
			[
				"traver",
				"traverseMod"
			],
			[
				"getimda",
				"getAimDataLocation"
			],
			[
				"getAimData",
				"getAimDataTarget"
			],
			[
				"getTrav",
				"getTraverseRating"
			],
			[
				"getTraverse",
				"getTraverseRating"
			],
			[
				"backg",
				"background"
			],
			[
				"var_",
				"var_export"
			],
			[
				"interc",
				"interceptVector"
			],
			[
				"getSyst",
				"getSystemDetailsDiv"
			],
			[
				"prio",
				"priority"
			],
			[
				"output",
				"outputMod"
			],
			[
				"setSystem",
				"setSystemImage"
			],
			[
				"getA",
				"getActiveWeapon"
			],
			[
				"outp",
				"outputMask"
			],
			[
				"getAcc",
				"getAccelSteps"
			],
			[
				"getBoos",
				"getBoostLevel"
			],
			[
				"reinfo",
				"reinforceTable"
			],
			[
				"damage",
				"damageInflicted"
			],
			[
				"sort",
				"sortBallistics"
			],
			[
				"intercept",
				"interceptDist"
			],
			[
				"canAd",
				"canAdvanceFromLobby"
			],
			[
				"weapon",
				"weaponLoadoutDiv"
			],
			[
				"open",
				"openGamesElement"
			],
			[
				"ongo",
				"ongoingGamesElement"
			],
			[
				"animateSh",
				"animateShipExplosions"
			],
			[
				"an",
				"animations"
			],
			[
				"class",
				"classname"
			],
			[
				"var",
				"var_dump"
			],
			[
				"getCrit",
				"getCritDuration"
			],
			[
				"z",
				"z-index"
			],
			[
				"glo",
				"globalCompositeOperation"
			],
			[
				"fps",
				"fpsInterval"
			],
			[
				"ballisti",
				"ballisticInterceptionHover"
			],
			[
				"drae",
				"drawBeamExplosion"
			],
			[
				"getReman",
				"getRemainingIntegrity"
			],
			[
				"getTurns",
				"getTurnStartPosition"
			],
			[
				"handle",
				"handleFireOrders"
			],
			[
				"has",
				"hasSystemsSelected"
			],
			[
				"getStruct",
				"getStructureById"
			],
			[
				"clasname",
				"classname"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ajax.js",
			"settings":
			{
				"buffer_size": 5896,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/classes.php",
			"settings":
			{
				"buffer_size": 5249,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "classes.js",
			"settings":
			{
				"buffer_size": 15647,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "style.css",
			"settings":
			{
				"buffer_size": 20375,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.php",
			"settings":
			{
				"buffer_size": 2951,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mixed.js",
			"settings":
			{
				"buffer_size": 13744,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Ship(data){\n\t//id, name, shipType, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.shipType = data.shipType;\n\tthis.x = data.x || 0;\n\tthis.y = data.y || 0;\n\tthis.facing = data.facing || 0;\n\tthis.faction = data.faction;\n\tthis.mass = data.mass;\n\tthis.cost = data.cost;\n\tthis.profile = data.profile;\n\tthis.size = data.size;\n\tthis.userid = data.userid;\n\tthis.shipType = data.shipType;\n\tthis.available = data.available;\n\tthis.baseHitChance = data.baseHitChance || 0;\n\tthis.baseImpulse = data.baseImpulse || 0;\n\tthis.traverse = data.traverse\n\tthis.status = data.status;\n\tthis.actions = data.actions || [];\n\tthis.cc = data.cc || [];\n\tthis.mapSelect = 1;\n\n\tthis.slipAngle = data.slipAngle || 0;\n\tthis.turnAngle = data.turnAngle || 0;\n\tthis.turnStep = data.turnStep || 0;\n\tthis.turnMod = 1;\n\tthis.baseTurnDelay = data.baseTurnDelay || 0;\n\tthis.baseTurnCost = data.baseTurnCost || 0;\n\tthis.baseImpulseCost = data.baseImpulseCost || 0;\n\tthis.currentImpulse = data.currentImpulse || 0;\n\tthis.remainingImpulse = data.remainingImpulse || 0;\n\tthis.remainingDelay = data.remainingDelay || 0;\n\n\tthis.turnAngles = {};\n\tthis.moveAngles = {};\n\tthis.attachAnims = [];\n\n\tthis.ship = data.ship;\n\tthis.flight = data.flight;\n\tthis.salvo = data.salvo;\n\n\tthis.friendly;\n\tthis.deployed;\n\tthis.drawFacing = 0;\n\tthis.drawX = 0;\n\tthis.drawY = 0;\n\n\tthis.primary;\n\n\tthis.highlight = false;\n\tthis.destroyed = false;\n\tthis.disabled = data.disabled;\n\tthis.selected = false;\n\tthis.element;\n\n\tthis.hitTable;\n\tthis.img;\n\tthis.structures = [];\n\tthis.flights = [];\n\tthis.drawImg;\n\tthis.doDraw = 1;\n\n\tthis.drawDeploymentPreview = function(pos){\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.translate(cam.o.x, cam.o.y)\n\t\tmouseCtx.scale(cam.z, cam.z)\n\t\tmouseCtx.translate(pos.x, pos.y);\n\t\t/*mouseCtx.globalAlpha = 0.3;\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.arc(0, 0, size*1, 0, 2*Math.PI, false);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.fillStyle = \"red\";\n\t\tmouseCtx.fill();\n\t*/\n\t\tthis.drawMarker(0, 0, \"yellow\", mouseCtx);\n\t\t//mouseCtx.globalAlpha = 1;\n\t\tmouseCtx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tmouseCtx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t//mouseCtx.globalAlpha = 1;\n\n\t}\n\n\tthis.detachFlight = function(id){\n\t\tfor (var i = this.cc.length-1; i >= 0; i--){\n\t\t\tif (this.cc[i] == id){\n\t\t\t\tthis.cc.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(this.element).find(\".ccContainer\").find(\".attachDiv\").each(function(i){\n\t\t\tif ($(this).data(\"id\") == id){\n\t\t\t\t$(this).remove();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.setEscortImage();\n\t\tgame.draw();\n\t}\n\n\tthis.attachFlight = function(id){\n\t\tvar attach = game.getUnitById(id);\n\t\tthis.cc.push(attach.id);\n\t\t$(this.element).find(\".ccContainer\").remove();\n\t\tthis.getAttachDivs();\n\t\tthis.setEscortImage();\n\t\tattach.cc.push(this.id);\n\t\tgame.draw();\n\t}\n\n\tthis.setEscortImage = function(){\n\t\tif (this.cc.length){\n\t\t\tvar size = this.size\n\t\t\tvar fSize = 12;\n\t\t\tvar tresh = 10;\n\t\t\tvar drawFacing = this.getDrawFacing();\n\n\t\t\tvar t = document.createElement(\"canvas\");\n\t\t\t\tt.width = size*2;\n\t\t\t\tt.height = size*2;\t\t\t\n\t\t\tvar ctx = t.getContext(\"2d\");\n\t\t\tvar shipFriendly = true;\n\t\t\tvar flightFriendly = true;\n\n\t\t\tif (this.userid != game.userid){\n\t\t\t\tshipFriendly = false;\n\t\t\t}\n\n\t\t\tif (this.cc.length){\n\t\t\t\tvar friendly = [];\n\t\t\t\tvar hostile = [];\n\t\t\t\tfor (var i = 0; i < this.cc.length; i++){\n\t\t\t\t\tvar attach = game.getUnitById(this.cc[i]);\n\t\t\t\t\tif (attach.doDraw){continue;}\n\t\t\t\t\tif (this.userid == attach.userid){\n\t\t\t\t\t\tattach.size = (size+tresh);\n\t\t\t\t\t} else attach.size = (size+tresh*2);\n\t\t\t\t\tfor (var j = 0; j < attach.structures.length; j++){\n\t\t\t\t\t\tif (!attach.structures[j].draw){;continue;}\n\t\t\t\t\t//\tif (shipFriendly){\n\t\t\t\t\t\t\tif (this.userid == attach.userid){\n\t\t\t\t\t\t\t\tfriendly.push(attach.structures[j]);\n\t\t\t\t\t\t\t} else hostile.push(attach.structures[j]);\n\t\t\t\t\t//\t}\n\t\t\t\t\t//\telse if (this.userid == attach.userid){\n\t\t\t\t\t//\t\tfriendly.push(attach.structures[j]);\n\t\t\t\t\t//\t} else hostile.push(attach.structures[j])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (friendly.length){\n\t\t\t\tvar color = \"green\";\n\t\t\t\tif (!shipFriendly){color = \"red\";}\n\t\t\t\tctx.translate(t.width/2, t.height/2);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(0, 0, size/2 + tresh, 0, 2*Math.PI);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.strokeStyle = color;\n\t\t\t\tctx.stroke();\n\t\t\t\tvar split = Math.floor(360/friendly.length-1);\n\t\t\t\tfor (var i = 0; i < friendly.length; i++){\n\t\t\t\t\tvar a =  split*i;\n\t\t\t\t\tvar pos = getPointInDirection(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t\t\t//console.log(a); \n\t\t\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\t\t\tfriendly[i].layout =  getPointInDirection(size/2+tresh - fSize/2, a+drawFacing, 0, 0);\n\t\t\t\t\tctx.translate(pos.x, +pos.y);\n\t\t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n\t\t\t\t\tctx.drawImage(\n\t\t\t\t\t\twindow.shipImages[friendly[i].name.toLowerCase()],\n\t\t\t\t\t\t-fSize/2,\n\t\t\t\t\t\t-fSize/2,\n\t\t\t\t\t\tfSize, \n\t\t\t\t\t\tfSize\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate(-((a-90)*(Math.PI/180)));\n\t\t\t\t\tctx.translate(-pos.x, -pos.y);\n\n\t\t\t\t}\n\t\t\t\tctx.translate(-t.width/2, -t.height/2);\n\t\t\t\ttresh *= 2;\n\t\t\t}\n\n\t\t\tif (hostile.length){\n\t\t\t\tvar color = \"red\";\n\t\t\t\tif (!shipFriendly){color = \"green\";}\n\t\t\t\tctx.translate(t.width/2, t.height/2);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(0, 0, size/2 + tresh, 0, 2*Math.PI);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.strokeStyle = color;\n\t\t\t\tctx.stroke();\n\t\t\t\tvar split = Math.floor(360/hostile.length-1);\n\t\t\t\tfor (var i = 0; i < hostile.length; i++){\n\t\t\t\t\tvar a =  split*i;\n\t\t\t\t\tvar pos = getPointInDirection(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t\t\t//console.log(a); \n\t\t\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\t\t\thostile[i].layout = getPointInDirection(size/2+tresh - fSize/2, a+drawFacing, 0, 0);\n\t\t\t\t\tctx.translate(pos.x, +pos.y);\n\t\t\t\t\tctx.rotate((a-90)*(Math.PI/180));\n\t\t\t\t\tctx.drawImage(\n\t\t\t\t\t\twindow.shipImages[hostile[i].name.toLowerCase()],\n\t\t\t\t\t\t-fSize/2,\n\t\t\t\t\t\t-fSize/2,\n\t\t\t\t\t\tfSize, \n\t\t\t\t\t\tfSize\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate(-((a-90)*(Math.PI/180)));\n\t\t\t\t\tctx.translate(-pos.x, -pos.y);\n\n\t\t\t\t}\n\t\t\t\tctx.translate(-t.width/2, -t.height/2);\n\t\t\t}\n\n\t\t\tthis.drawImg = t;\n\n\t\t\t//console.log(this.drawImg.toDataURL());\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\t/*this.drawSelf = function(){\n\t\t//ctx.save();\n\t\tctx.translate(this.drawX, this.drawY)\n\t\t//ctx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tctx.drawImage(this.drawImg, -this.drawImg.width/2, -this.drawImg.height/2);\n\t\tctx.translate(-this.drawX, -this.drawY);\n\t\t//ctx.restore();\n\t}*/\n\n\t\n\tthis.animationSetupMove = function(){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFacing();\n\t}\n\n\tthis.getFiringPosition = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t\t)\n\t}\n\n\tthis.getTargettingPos = function(){\n\t\treturn new Point(\n\t\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t\t)\t\t\n\t}\n\n\tthis.getTurnEndPosition = function(){\n\t\treturn this.actions[this.actions.length-1];\n\t}\n\n\tthis.canDeployHere = function(pos){\n\t\t//console.log(pos);\n\t\tvar valid = false;\n\n\t\tif (game.turn >= 2){\n\t\t\tif (getDistance({x: 0, y: 0}, pos) >= 750){\n\t\t\t\treturn false;\n\t\t\t} return true;\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < game.deploys.length; i++){\n\t\t\t\tif (game.deploys[i].userid != this.userid){continue;}\n\n\t\t\t\tif (getDistance(game.deploys[i], pos) + this.size/2 < game.deploys[i].s){\n\t\t\t\t\tfor (var j = 0; j < game.ships.length; j++){\n\t\t\t\t\t\tif (game.ships[j].deployed && game.ships[j].id != this.id && game.ships[j].userid == this.userid){ // different ship, different owners\n\t\t\t\t\t\t\tvar step = game.ships[j].getBaseOffsetPos();\n\t\t\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[j].size/2 + this.size/2)){\n\t\t\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\n\t\tfor (var i = 0; i < game.deployArea.length; i++){\n\t\t\tif (game.deployArea[i].id != game.userid){continue;}\n\t\t\tif (game.deployArea[i].x > 0){\n\t\t\t\tif (pos.x >= game.deployArea[i].x && pos.x <= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\t\tvalid = true; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x <= game.deployArea[i].x && pos.x >= game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y >= game.deployArea[i].y && pos.y <= game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos.x > game.deployArea[i].x && pos.x < game.deployArea[i].x + game.deployArea[i].w){\n\t\t\t\tif (pos.y > game.deployArea[i].y && pos.y < game.deployArea[i].y + game.deployArea[i].h){\n\t\t\t\t\tvalid = true; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (valid){\n\t\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\t\tif (game.ships[i].deployed && game.ships[i].id != this.id && game.ships[i].userid == this.userid){ // different ship, different owners\n\t\t\t\t\tvar step = game.ships[i].getBaseOffsetPos();\n\t\t\t\t\tif (getDistance(pos, step) <= (game.ships[i].size/2 + size/2)){\n\t\t\t\t\tpopup(\"The selected position is too close to the position or planned position of vessel (#\"+game.ships[i].id+\")\");\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tthis.doDeploy = function(pos){\n\t\tconsole.log(this);\n\t\tif (this.actions.length){\n\t\t\tthis.actions[0].x = pos.x;\n\t\t\tthis.actions[0].y = pos.y;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\t\t}\n\t\telse {\n\t\t\tvar facing = 0;\n\t\t\tvar index;\n\t\t\tfor (var i = 0; i < playerstatus.length; i++){\n\t\t\t\tif (playerstatus[i].userid == this.userid){\n\t\t\t\t\tindex = i % 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfacing = 0 + (180 * (index % 2));\n\t\t\tthis.actions.push(new Move(-1, \"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n\t\t\tthis.deployed = true;\n\t\t\tthis.facing = facing;\n\t\t\tthis.drawFacing = facing;\n\t\t\tthis.x = pos.x;\n\t\t\tthis.y = pos.y;\n\t\t\tthis.drawX = pos.x;\n\t\t\tthis.drawY = pos.y;\n\n\t\t\tvar shipId = this.id;\n\t\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n\t\t\t\tif ($(this).data(\"shipid\") == shipId){\n\t\t\t\t\t$(this).remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tthis.select();\n\n\t\t$(\"#game\")\n\t\t\t.find(\"#deployOverlay\").hide().end()\n\t\t\t.find(\"#deployWrapper\").find(\"#reinforceTable\").find(\".requestReinforcements\").each(function(){\n\t\t\tif ($(this).hasClass(\"selected\")){\n\t\t\t\t//$(this).find(\".cost\").addClass(\"green\");\n\t\t\t\t$(this).addClass(\"green\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}).end().find(\"#totalRequestCost\").html(game.getCurrentReinforceCost());\n\t\tgame.redraw();\n\t}\n\n\tthis.canDeployFlightHere = function(pos){\n\t\tvar dist = getDistance({x: this.x, y: this.y}, {x: pos.x, y: pos.y})\n\t\tif (dist <= game.flightDeploy.range){\n\t\t\tvar a = getAngleFromTo( {x: this.x, y: this.y}, {x: pos.x, y: pos.y} );\n\t\t\t\ta = addAngle(this.getDrawFacing(), a);\n\t\t\tif (isInArc(a, game.flightDeploy.start, game.flightDeploy.end)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.getBaseOffsetPos = function(){\n\t\tif (this.actions.length){\n\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\t\treturn {x: this.actions[i].x, y: this.actions[i].y};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {x: this.x, y: this.y};\n\t}\n\t\n\tthis.getPlannedPosition = function(){\n\t\tif (this.actions.length){\n\t\t\treturn new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t\t}\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\tthis.getWeaponPosition = function(fire){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == fire.weaponid){\n\t\t\t\t\tvar a = range(this.structures[i].start, this.structures[i].end);\n\t\t\t\t\treturn getPointInDirection(range(0, size / 4), a, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.unpowerAllSystems = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].destroyed){\n\t\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n\t\t\t\t\tthis.structures[i].systems[j].setTableRow();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.setHitTable = function(){\n\t\t//console.log(\"id: \" + this.id);\n\t\t//this.primary.setRemainingIntegrity();\n\t\tvar fraction = this.primary.remaining / this.primary.integrity;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n\t\t\t\tthis.primary.systems[i].exposed = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.isDestroyed = function(){\n\t\tif (this.primary.destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isDestroyedThisTurn = function(){\n\t\tif (this.primary.destroyed && this.primary.damages[this.primary.damages.length-1].turn == game.turn){\n\t\t\treturn true;\n\t\t} else if (this.getSystemByName(\"Reactor\").destroyed){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.hasHangarSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tthis.hasSystemsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.hasWeaponsSelected = function(){\t\t\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.doSpecificHover = function(){\n\t\tthis.drawEW();\n\t\tthis.drawMovePlan();\n\t\tthis.drawIncomingMovePlan();\n\t}\n\n\tthis.drawIncomingMovePlan = function(){\n\t\tfor (var i = 0; i < game.ships.length; i++){\n\t\t\tif (game.ships[i].flight || game.ships[i].salvo){\n\t\t\t\tif (game.ships[i].mission.arrived){continue;}\n\t\t\t\tif (game.ships[i].mission.targetid == this.id){\n\t\t\t\t\tgame.ships[i].drawMovePlan();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.drawEW = function(){\n\t\tif (!this.ship){return;}\n\t\tthis.getSystemByName(\"Sensor\").drawEW();\n\t}\n\n\tthis.drawMoveLength = function(){\n\t\tif (this.selected){return;}\n\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\tmouseCtx.scale(cam.z, cam.z);\n\t\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDirection(this.getCurrentImpulse(), angle, center.x, center.y);\n\t\t\n\t\tmouseCtx.beginPath();\t\t\t\n\t\tmouseCtx.moveTo(center.x, center.y);\n\t\tmouseCtx.lineTo(p.x, p.y);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.lineWidth = .5;\n\t\tmouseCtx.strokeStyle = \"white\";\n\t\tmouseCtx.stroke();\n\t\tmouseCtx.strokeStyle = \"black\";\n\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.checkSensorHighlight = function(){\n\t\tif (this.flight || this.salvo){return;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n\t}\n\n\tthis.hasSystemSelected = function(name){\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getStructureById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getSystemById = function(id){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tif (this.structures[i].id == id){\n\t\t\t\treturn this.structures[i];\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.primary.systems.length; j++){\n\t\t\tif (this.primary.systems[j].id == id){\n\t\t\t\treturn this.primary.systems[j];\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getPrimarySection = function(){\n\t\treturn this.primary;\n\t}\n\n\tthis.highlightSingleSystem = function(system){\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.highlightAllSelectedWeapons = function(){\n\t\t//mouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\t$(fxCanvas).css(\"opacity\", 0.3);\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.drawSystemAxis = function(system){\n\t\tvar color = \"\";\n\t\tvar alpha = 0;\n\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\tfxCtx.translate(cam.o.x, cam.o.y);\n\t\tfxCtx.scale(cam.z, cam.z);\n\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar p1 = getPointInDirection(system.range || res.x, system.start + angle, pos.x, pos.y);\n\t\tvar p2 = getPointInDirection(system.range || res.y, system.end + angle, pos.x, pos.y)\n\t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n\t\tvar rad1 = degreeToRadian(system.start + angle);\n\t\tvar rad2 = degreeToRadian(system.end + angle);\n\t\t\n\t\tfxCtx.beginPath();\t\t\t\n\t\tfxCtx.moveTo(pos.x, pos.y);\n\t\tfxCtx.arc(pos.x, pos.y, dist, rad1, rad2, false);\n\t\tfxCtx.closePath();\n\t\tswitch (system.name){\n\t\t\tcase \"Hangar\": color = \"white\"; opacity = 0.7; break;\n\t\t\tcase \"Structure\": color = \"lightBlue\"; opacity = 0.7; break;\n\t\t}\t\n\t\tfxCtx.globalAlpha = opacity;\n\t\tfxCtx.fillStyle = color;\n\t\tfxCtx.fill();\n\t\tfxCtx.globalAlpha = 1;\n\n\t\tfxCtx.setTransform(1,0,0,1,0,0);\n\t}\n\t\n\tthis.weaponHighlight = function(weapon){\n\t\tif (weapon.highlight){\n\t\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n\t\t\tweapon.highlight = false;\n\t\t}\n\t\telse {\n\t\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n\t\t\tvar angle = this.getPlannedFacing();\n\t\t\tvar shipPos = this.getPlannedPosition();\n\t\t\tweapon.highlight = true;\t\t\n\t\t\tweapon.drawArc(angle, shipPos);\n\t\t}\n\t}\n\t\n\tthis.getImpulseChangeCost = function(){\n\t\tvar cost = Math.round(this.baseImpulseCost*this.getImpulseMod());\t\n\t\treturn cost;\n\t}\n\n\tthis.getBaseImpulse = function(){\n\t\treturn this.baseImpulse;\n\t}\n\n\tthis.getCurrentImpulsea = function(){\n\t\tconsole.log(\"a\");\n\t\tvar base = this.getBaseImpulse();\n\t\tvar change = this.getImpulseStep();\n\t\t\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"speed\"){\n\t\t\t\tif (this.actions[i].dist == 1){\n\t\t\t\t\tbase += change;\n\t\t\t\t}\n\t\t\t\telse if (this.actions[i].dist == -1){\n\t\t\t\t\tbase -= change;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn base;\n\t}\n\n\tthis.getCurrentImpulse = function(){\n\t\tif (game.phase >= 1 && this.ship || game.phase >= 2 && this.flight){\n\t\t\treturn this.currentImpulse;\n\t\t}\n\t\tvar step = this.getImpulseStep();\n\t\tvar amount = 0;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type != \"speed\"){continue;}\n\t\t\tamount += this.actions[i].dist;\n\t\t}\n\t\treturn this.currentImpulse + step*amount;\n\t}\n\n\tthis.setCurrentImpulse = function(){\n\t\treturn;\n\t\tvar add = this.getImpulseStep() * this.actions[this.actions.length-1].dist\n\t\tthis.currentImpulse += add;\n\t\tthis.remainingImpulse += add;\n\t}\n\n\tthis.getRemainingImpulse = function(){\n\t\tif (game.phase >= 1 && this.ship || game.phase >= 2 && this.flight){\n\t\t\treturn 0;\n\t\t}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tif (this.actions[i].type == \"move\"){\n\t\t\t\t\timpulse -= this.actions[i].dist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn impulse;\n\t}\n\n\tthis.getRemainingImpulses = function(){\n\t\treturn this.remainingImpulse;\n\t}\n\n\tthis.setRemainingImpulse = function(){\n\t\treturn;\n\t\tthis.remainingImpulse -= this.actions[this.actions.length-1].dist;\n\t}\n\n\tthis.getImpulseStep = function(){\n\t\t//return 15;\n\t\treturn Math.floor(this.getBaseImpulse() / 7);\n\t}\n\t\n\tthis.getTurnCost = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t}\n\t\tif (this.actions.length && (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0)){\n\t\t\treturn 0;\n\t\t}\n\t\telse return this.baseTurnCost*this.getImpulseMod() * this.getTurnMod();\n\t\t//else return this.baseTurnCost; //Math.pow(this.mass, 1.25)/10000;\n\t\t//else return Math.found((Math.pow(this.mass, 1.56) / 10000) *  this.getImpulseMod());\n\t}\n\n\tthis.getTurnMod = function(){\n\t\treturn turn.mod || 1;\n\t}\n\t\n\tthis.getTurnDelay = function(){\n\t\tif (game.phase == -2){\n\t\t\treturn this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t}\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\treturn 0;\n\t\t}\n\t\telse return this.baseTurnDelay*this.getImpulseMod() / this.getTurnMod();\n\t\t//else return round(this.getBaseTurnDelay() * this.getImpulseMod(), 2);\n\t}\n\n\tthis.drawArcIndicator = function(){\n\t\treturn;\n\t\tvar shipPos = this.getBaseOffsetPos();\n\t\tvar angle = this.getPlannedFacing();\n\n\t\tvar p1 = getPointInDirection(80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p2 = getPointInDirection(-80, 90+angle, shipPos.x, shipPos.y);\n\t\tvar p3 = getPointInDirection(80, 180+angle, shipPos.x, shipPos.y);\n\t\tvar p4 = getPointInDirection(-80, 180+angle, shipPos.x, shipPos.y);\n\n\t\tmoveCtx.beginPath();\n\t\tmoveCtx.moveTo(p1.x, p1.y);\n\t\tmoveCtx.lineTo(p2.x, p2.y);\n\t\tmoveCtx.moveTo(p3.x, p3.y);\n\t\tmoveCtx.lineTo(p4.x, p4.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.stroke();\n\n\t}\n\n\tthis.getSlipAngle = function(){\n\t\treturn this.slipAngle;\n\t}\n\n\tthis.drawMoveRange = function(){\n\t\tvar center = this.getPlannedPosition();\t\t\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar slipAngle = this.getSlipAngle();\n\n\t\tthis.moveAngles = {start: addAngle(0 + slipAngle, angle), end: addAngle(360 - slipAngle, angle)};\n\t\t//console.log(this.moveAngles);\n\t\tif (slipAngle != 180){\n\t\t\tthis.drawMoveArea(center, rem);\n\t\t}\n\n\t\tcenter = {x: this.x, y: this.y};\n\t\tangle = this.facing\n\t\tvar turnEle = $(\"#game\").find(\"#epButton\")[0];\n\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, 90), center.x, center.y);\n\n\t\t$(turnEle)\n\t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n\t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.find(\"#remEP\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"green\").end()\n\t\t\t.find(\"#impulseCost\").html(this.getImpulseChangeCost() + \" EP\");\n\t}\n\t\n\tthis.drawMoveArea = function(center, rem){\n\t\t//if (game.phase < 0 || game.phase > 1){return;}\n\t\tvar p1 = getPointInDirection(rem, this.moveAngles.start, center.x, center.y);\n\t\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\t\tvar rad1 = degreeToRadian(this.moveAngles.start);\n\t\tvar rad2 = degreeToRadian(this.moveAngles.end);\n\t\tvar delay = this.getRemainingDelay();\n\t\t\n\t\tif (delay > 0){\n\t\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\tmoveCtx.lineWidth = 2\n\t\t\tmoveCtx.stroke();\n\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmoveCtx.fill();\n\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\n\t\t\tif (delay > 5 && this.canMaxCut()){\n\t\t\t\tdelay = Math.round(delay/2);\n\t\t\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\t\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\t\t\tmoveCtx.beginPath();\t\t\t\n\t\t\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\t\tmoveCtx.closePath();\n\t\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\t\tmoveCtx.lineWidth = 2\n\t\t\t\tmoveCtx.stroke();\n\t\t\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\t\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\t\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\t\t\tmoveCtx.fill();\n\t\t\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\t\t\t}\n\t\t}\n\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p1.x, p1.y); \n\t\tmoveCtx.arc(center.x, center.y, dist, rad1, rad2, false);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.globalAlpha = 0.25;\n\t\tmoveCtx.fillStyle = \"white\";\n\t\tmoveCtx.fill();\n\t\tmoveCtx.globalAlpha = 1;\n\t}\n\n\tthis.drawMoveArcs = function(center, rem){\n\t\tfor (var i in this.moveAngles){\n\t\t\tvar p = getPointInDirection(rem, this.moveAngles[i], center.x, center.y);\n\t\t\tmoveCtx.beginPath();\n\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.strokeStyle = \"white\"\n\t\t\tmoveCtx.stroke();\n\t\t}\n\t}\n\n\tthis.getEP = function(){\n\t\tvar ep = 0;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == \"Engine\"){\n\t\t\t\tep += this.primary.systems[i].getOutput();\n\t\t\t}\n\t\t}\n\n\t\treturn ep;\n\t}\n\t\n\tthis.getRemainingEP = function(){\n\t\tvar ep = this.getEP();\n\t\t\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tif (this.actions[i].cost != 0){\n\t\t\t\t\tep -= this.actions[i].cost// * this.actions[i].costmod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn Math.floor(ep);\n\t}\n\t\n\n\tthis.getRemainingDelay = function(){\n\t\tvar delay = this.remainingDelay;\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\t//delay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n\t\t\t\tdelay += this.actions[i].delay;\n\t\t\t}\n\t\t\telse if (this.actions[i].type == \"move\"){\n\t\t\t\tdelay = Math.max(0, delay - this.actions[i].dist);\n\t\t\t}\n\t\t}\n\t\treturn Math.ceil(delay);\n\t}\t\n\n\tthis.getRemainingDelaya = function(){\n\t\treturn this.remainingDelay;\n\t}\n\n\tthis.setRemainingDelay = function(){\n\t\treturn;\n\t\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\tthis.remainingDelay = Math.max(0, Math.max(this.remainingDelay - this.actions[this.actions.length-1].dist), this.actions[this.actions.length-1].delay);\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\t\tthis.remainingDelay = Math.max(0, this.remainingDelay + this.actions[this.actions.length-1].delay);\n\t\t}\n\t}\n\t\t\n\tthis.canIncreaseImpulse = function(){\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\t\n\tthis.canDecreaseImpulse = function(){\n\t\tif (this.getCurrentImpulse() <= 0){return false;}\n\t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n\t\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == (1 + this.ship)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t}\n\n\tthis.getShortenTurnCost = function(){\n\t\treturn this.getTurnCost() / turn.mod * (turn.mod + 0.1) * turn.a;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\tthis.canShortenTurn = function(){\n\t\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod < 2 && this.getRemainingEP() >= this.getShortenTurnCost()){\n\t\t\t\t//console.log(\"can shorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant shorten\")\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoShortenTurn = function(){\n\tif (game.phase == 0 || game.phase == 1){\n\t\t\tif (turn.mod > 1){\n\t\t\t\t//console.log(\"can unshorten\")\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cant unshorten\")\n\t\treturn false;\n\t}\n\n\tthis.doShortenTurn = function(max){\n\t\tif (max){\n\t\t\twhile (this.canShortenTurn()){\n\t\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\t}\n\t\t\tthis.setTurnData();\n\t\t}\n\t\telse if (this.canShortenTurn()){\n\t\t\tturn.mod = round(turn.mod + turn.step, 1);\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\t\n\tthis.doUndoShortenTurn = function(max){\n\t\tif (turn.mod > 1){\n\t\t\tif (max){\n\t\t\t\tturn.mod = 1;\n\t\t\t} else turn.mod = Math.floor((turn.mod * 10) - turn.step*10) / 10;\n\t\t\tthis.setTurnData();\n\t\t}\n\t}\n\n\tthis.setTurnData = function(){\n\t\t//console.log(turn);\n\n\t\tvar button = $(\"#game\").find(\"#turnButton\");\n\t\tvar vector = $(\"#vectorDiv\")\n\n\t\tif (game.turnMode){\n\t\t\t$(button)\n\t\t\t\t.find(\"#turnMode\").html(\"ON\").addClass(\"on\").end()\n\t\t\t\t//.find(\"#impulseMod\").html(turn.dif).end()\n\t\t\t\t.find(\"#turnCost\").html(round(turn.cost * turn.mod * turn.dif, 2) + \" EP\").end()\n\t\t\t\t.find(\"#turnDelay\").html(round(turn.delay * turn.mod * turn.dif, 2) + \" px\").end()\n\t\t\t\t.find(\"#turnMod\").html(turn.mod).end()\n\t\t\t\t.find(\"#shortenTurn\").removeClass(\"disabled\");\n\n\t\t\t$(vector).empty()\n\t\t\t\t.append($(\"<table>\")\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Angle: \" + turn.a)))\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Cost: \" + Math.ceil(turn.cost * turn.a * turn.mod * turn.dif) + \" EP\")))\n\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t.append($(\"<td>\").html(\"Delay: \" + Math.ceil(turn.delay * turn.a / turn.mod * turn.dif) + \" px\"))))\n\t\t\t\t.removeClass(\"disabled\");\n\t\t\tthis.drawDelay();\n\t\t\tthis.adjustMaxTurn()\n\t\t}\n\t\telse {\n\t\t\t$(button)\n\t\t\t\t.find(\"#turnMode\").html(\"OFF\").removeClass(\"on\").end()\n\t\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t\t.find(\"#turnDelay\").html(\"\").end()\n\t\t\t\t.find(\"#turnMod\").html(\"\").end()\n\t\t\t\t.find(\"#shortenTurn\").addClass(\"disabled\");\n\t\t\t$(vector).addClass(\"disabled\")\n\t\t}\n\n\t\tif (this.flight){\n\t\t\t$(button).find(\"#shortenTurn\").addClass(\"disabled\");\n\t\t}\n\t\tthis.drawEW();\n\t}\n\n\tthis.adjustMaxTurn = function(){\n\t\t//\tconsole.log(this.getTurnAngle());\n\t\t//\tconsole.log(\"max angle: \" + this.getMaxTurnAngle());\n\t\tif (this.getMaxTurnAngle() < turn.max){\n\t\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tthis.setMoveTranslation();\n\t\t//\tthis.drawMoveRange();\n\t\t\tthis.drawTurnArcs();\n\t\t\tthis.drawVectorIndicator();\n\t\t\tthis.resetMoveTranslation();\n\t\t}\n\t}\n\n\tthis.canDoAnotherTurn = function(){\n\t\tvar i = 0;\n\t\tif (!this.getRemainingImpulse()){\n\t\t\treturn false;\n\t\t}\n\t\telse if (this.turns[i].cost * (this.turns[i].costmod + 0.2) + this.getTurnCost() < this.getRemainingEP()){\n\t\t\treturn true;\n\t\t}\n\t\telse return false;\n\t}\n\n\tthis.doIncreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speed\", 1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.setCurrentImpulse();\n\t\tthis.resetMoveMode();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.doDecreaseImpulse = function(){\n\t\tvar shipPos = this.getPlannedPosition();\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\t}\n\t\telse {\n\t\t\tvar action = new Move(-1, \"speed\", -1, shipPos.x, shipPos.y, false, 0, this.getImpulseChangeCost());\n\t\t\tthis.actions.push(action);\n\t\t}\n\t\tthis.setCurrentImpulse();\n\t\tthis.resetMoveMode();\n\t\tgame.drawAllPlans();\n\t}\n\n\n\tthis.drawMoveUI = function(){\n\t\tthis.drawImpulseUI();\n\t\tthis.drawVectorMovementUI();\n\t\tif (this.canTurn()){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.drawTurnArcs();\n\t\t\tthis.updateDiv();\n\t\t}\n\t}\n\n\tthis.drawVectorMovementUI = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar rem = this.getRemainingImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar ele;\n\n\t\tif (rem > 0){\n\t\t\tele = document.getElementById(\"maxVector\");\n\t\t\tvar p = getPointInDirection(rem + 90, angle, center.x, center.y);\n\t\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t$(ele)\n\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t.data(\"dist\", rem)\n\t\t\t\t//.html(\"<div style='margin-left: 4px; margin-top: 7px'>\"+rem+\"<div>\")\n\t\t\t\t.html(\"<div>\"+rem+\"<div>\")\n\t\t\t\t.css(\"left\", left)\n\t\t\t\t.css(\"top\", top)\n\t\t\t\t.removeClass(\"disabled\");\n\t\t}\n\t\tif (delay > 0){\n\t\t\tif (rem >= delay){\n\t\t\t\tele = document.getElementById(\"maxTurnVector\");\n\t\t\t\tvar p = getPointInDirection(rem + 60, angle, center.x, center.y);\n\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t$(ele)\n\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t.removeClass(\"disabled\");\n\n\t\t\t\tif (this.canMaxCut()){\n\n\t\t\t\t\tdelay = Math.ceil(delay/2);\n\n\t\t\t\t\tele = document.getElementById(\"maxCutVector\");\n\t\t\t\t\tvar p = getPointInDirection(rem + 30, angle, center.x, center.y);\n\t\t\t\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\t\t\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t\t\t\t$(ele)\n\t\t\t\t\t\t.data(\"shipid\", this.id)\n\t\t\t\t\t\t.data(\"dist\", delay)\n\t\t\t\t\t\t.html(\"<div>\"+delay+\"<div>\")\n\t\t\t\t\t\t.css(\"left\", left)\n\t\t\t\t\t\t.css(\"top\", top)\n\t\t\t\t\t\t.removeClass(\"disabled\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.canMaxCut = function(){\n\t\tvar last = this.getLastTurn();\n\t\tvar ep = this.getRemainingEP();\n\n\t\tif (last.costmod == 1 && ep && ep >= last.cost / 10){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.drawVectorIndicator = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDirection(200, angle, center.x, center.y);\n\t\t\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.lineWidth = 1;\n\t\tmoveCtx.strokeStyle = \"white\";\n\t\tmoveCtx.globalAlpha = 0.5;\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.globalAlpha = 1;\n\t\tmoveCtx.strokeStyle = \"black\";\n\t}\n\n\tthis.getTurnAngle = function(){\n\t\tif (game.phase == -1 && (game.turn == 1 || this.id < 0)){\n\t\t\treturn 180;\n\t\t}\n\t\treturn this.turnAngle;\n\t}\n\n\tthis.getTurnStep = function(){\n\t\treturn this.turnStep;\n\t}\n\n\tthis.getMaxTurnAngle = function(){\n\t\tvar ep = this.getRemainingEP();\n\t\tvar limit = this.getTurnAngle();\n\t\tvar c = this.getTurnCost();\n\n\t\treturn Math.min(limit, Math.floor(ep/c));\n\t}\n\n\tthis.drawTurnUI = function(){\n\t\t//var center = this.getPlannedPosition();\n\t\t//var angle = this.getPlannedFacing();\n\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar angle = this.facing;\n\t\tvar turnEle = $(\"#game\").find(\"#turnButton\")[0];\n\t\tvar p1 = getPointInDirection(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n\t\t$(turnEle)\n\t\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(turnEle).width()/2)\n\t\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(turnEle).height()/2)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.find(\"#impulseMod\").html(\"x \" +turn.dif).end();\n\t}\n\n\tthis.drawTurnArcs = function(){\n\t\tvar center = this.getPlannedPosition();\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar turnAngle = this.getMaxTurnAngle();\n\t\tvar w = this.getTurnStep();\n\n\t\tthis.turnAngles = {start: addAngle(0 + turnAngle, angle), end: addAngle(360 - turnAngle, angle)};\n\t\t\n\t\tfor (var j = 1; j >= -1; j = j-2){\n\t\t\tfor (var i = 1; i <= w; i++){\t\t\t\n\t\t\t\tvar modAngle = turnAngle * i * j;\n\t\t\t\tvar newAngle = addToDirection(angle, modAngle);\n\t\t\t\tvar p = getPointInDirection(Math.max(100, this.getRemainingImpulse()*2), newAngle, center.x, center.y);\n\t\t\t\tif (turnAngle != 180){\n\t\t\t\t\tmoveCtx.beginPath();\n\t\t\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\t\t\tmoveCtx.closePath();\n\t\t\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\t\t\tmoveCtx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawDelay = function(){\n\t\tif (this.actions.length == 1){\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\n\t\tvar delay = turn.a * turn.delay / turn.mod * turn.dif;\n\t\tif (delay){\n\t\t\tvar angle = this.getPlannedFacing();\n\t\t\tvar center = this.getPlannedPosition();\n\t\t\tvar delayRad1 = degreeToRadian(angle-45);\n\t\t\tvar delayRad2 = degreeToRadian(angle+45);\n\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\t\tmouseCtx.scale(cam.z, cam.z);\n\t\t\tmouseCtx.beginPath();\t\t\t\n\t\t\tmouseCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\t\tmouseCtx.closePath();\n\t\t\tmouseCtx.strokeStyle = \"red\";\n\t\t\tmouseCtx.lineWidth = 3\n\t\t\tmouseCtx.stroke();\n\t\t\tmouseCtx.arc(center.x, center.y, delay, 0, 2*Math.PI, false);\n\t\t\tmouseCtx.globalCompositeOperation = \"destination-out\";\n\t\t\tmouseCtx.fill();\n\t\t\tmouseCtx.globalCompositeOperation = \"source-over\";\n\t\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t\t} else \n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\tthis.drawImpulseUI = function(){\n\t\tvar center = {x: this.x, y: this.y};\n\t\tvar p1 = getPointInDirection(this.size/2 + 10 + 15, this.getDrawFacing() + 180, center.x, center.y);\n\n\t\tif (this.canUndoLastAction()){\n\t\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#undoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#undoLastAction\").addClass(\"disabled\");\n\n\n\t\tif (this.disabled){return;}\n\n\t/*\tvar gui = $(\"#impulseGUI\");\n\t\tvar w = gui.width();\n\t\tvar h = gui.height();\n\t\tvar p = getPointInDirection((size/2 + w)/cam.z, this.facing + 180, center.x, center.y);\n\n\t\tgui.css(\"left\", p.x * cam.z + cam.o.x - w/2).css(\"top\", p.y * cam.z + cam.o.y - h/2).removeClass(\"disabled\");\n\t\tgui.find(\"#impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse());\n\t\tgui.find(\"#remTurnDelay\").html(this.getRemainingDelay());\n\t\tgui.find(\"#baseDelay\").html(round(this.getTurnDelay(), 1));\n\t\tgui.find(\"#enginePower\").html(this.getRemainingEP() + \" / \" + this.getEP());\n\t\tgui.find(\"#impulseChange\").html(this.getImpulseChangeCost() + \" EP\");\n\t\tgui.find(\"#turnCost\").html(\"<span>\" + round(this.getTurnCost(), 1) + \" EP</span>\");\n\n\t*/\tif (this.canIncreaseImpulse()){\n\t\t\tvar pPlus = getPointInDirection(50, this.getDrawFacing() +90, p1.x, p1.y);\n\t\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n\n\t\tif (this.canDecreaseImpulse()){\n\t\t\tvar mMinus = getPointInDirection(50, this.getDrawFacing() -90, p1.x, p1.y);\n\t\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n\t\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n\t\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n\t}\t\n\n\tthis.issueMove = function(pos, dist){\n\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"move\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\tthis.actions[this.actions.length-1].dist+= dist;\t\n\t\t\tthis.actions[this.actions.length-1].x = pos.x;\n\t\t\tthis.actions[this.actions.length-1].y = pos.y;\n\t\t} else this.actions.push(new Move(-1, \"move\", dist, pos.x, pos.y, 0, 0));\t\n\t\t\n\t\tthis.turnAngles = {}\n\t\t$(\"#popupWrapper\").hide();\n\t\tthis.unsetMoveMode();\n\t\tthis.setRemainingImpulse();\n\t\tthis.setRemainingDelay();\n\t\tthis.autoShortenTurn();\n\t\tthis.setMoveMode();\n\t\tgame.updateIntercepts();\n\t\tgame.redrawEW();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.autoShortenTurn = function(){\n\t\tif (this.flight){return;}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar move = this.getLastTurn();\n\n\t\tif (!impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n\t\t\t}\n\t\t}\n\t\telse if (impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tdelay -= move.delay;\n\t\t\t\tmove.cost = move.cost / move.costmod * (move.costmod + turn.step);\n\t\t\t\tmove.delay = move.delay * move.costmod / (move.costmod + turn.step);\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\tdelay += move.delay;\n\t\t\t\tif (delay <= 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\n\t\tmove.cost = Math.round(move.cost);\n\t\tmove.delay = Math.round(move.delay);\n\t\tthis.setTurnData();\n\n\t}\n\n\tthis.autoShortenTurna= function(){\n\t\tif (this.flight){return;}\n\t\tvar impulse = this.getCurrentImpulse();\n\t\tvar delay = this.getRemainingDelay();\n\t\tvar move = this.getLastTurn();\n\n\t\tif (!impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n\t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\t//console.log(move.cost, move.delay, move.costmod);\n\t\t\t}\n\t\t}\n\t\telse if (impulse && delay){\n\t\t\twhile (this.canShortenOldTurn(move)){\n\t\t\t\tdelay -= move.delay;\n\t\t\t\tmove.cost = Math.ceil(move.cost / move.costmod * (move.costmod + turn.step));\n\t\t\t\tmove.delay = Math.ceil(move.delay * move.costmod / (move.costmod + turn.step));\n\t\t\t\tmove.costmod = round(move.costmod + turn.step, 1);\n\t\t\t\tdelay += move.delay;\n\t\t\t\tif (delay <= 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tthis.setTurnData();\n\n\t}\n\t\n\tthis.canShortenOldTurn = function(move){\n\t\tif (!this.getRemainingDelay()){return;}\n\t\tif (move.costmod < 2 && this.getRemainingEP() >= this.getShortenOldTurnCost(move)){\n\t\t\t//console.log(\"can shorten\")\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tthis.getShortenOldTurnCost = function(move){\n\t\tvar c = this.getTurnCost();\n\t\tvar a = Math.abs(move.a);\n\t\treturn Math.ceil((c * a * (move.costmod + 0.1)) - (c * a * move.costmod));\n\t\treturn Math.ceil(this.getTurnCost() * Math.abs(move.a) * (move.costmod + 0.1)) - move.cost;\n\t\treturn (this.getTurnCost() / move.costmod * (move.costmod + 0.1)) * Math.abs(move.a) - move.cost;\n\n\t\t//return b * a * (m+s) * turn.a * (1+turn.step));\n\t}\n\t\n\n\tthis.getLastTurn = function(){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].type == \"turn\"){\n\t\t\t\treturn this.actions[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tthis.canUndoLastAction = function(){\n\t\tif (this.actions.length){\n\t\t\tif (this.actions[this.actions.length-1].resolved == 0){\n\t\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.undoOrderButton = false;\n\t\treturn false;\n\t}\n\t\n\tthis.undoLastAction = function(pos){\n\t\tvar update = false;\n\t\tif (this.actions[this.actions.length-1].type == \"speed\"){\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t\tthis.setCurrentImpulse();\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\tthis.setRemainingDelay();\n\t\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\t\tthis.setRemainingImpulse();\n\t\t\tupdate = true;\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"turn\"){\n\t\t\tthis.actions[this.actions.length-1].delay *= -1;\n\t\t\tthis.setRemainingDelay();\n\t\t}\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t\tif (update){game.updateIntercepts();}\n\t\tif (game.turnMode){\n\t\t\tthis.switchTurnMode();\n\t\t}\n\t\tthis.turnAngles = {}\n\t\tgame.redrawEW();\n\t\tgame.drawAllPlans();\n\t}\n\n\tthis.moveInVector = function(dist){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\n\tthis.moveToMaxVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.moveToMaxTurnVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\t\n\n\tthis.moveToMaCutVector = function(){\n\t\tvar pos = this.getPlannedPosition();\n\t\tvar dist = this.getRemainingDelay();\n\t\tvar impulse = this.getRemainingImpulse();\n\t\tvar goal = getPointInDirection(dist, this.getPlannedFacing(), pos.x, pos.y);\n\t\tthis.issueMove(goal, dist);\n\t}\n\t\n\tthis.canTurn = function(){\n\t\tif (this.disabled){return false;}\n\t\tif (this.getRemainingDelay() == 0){\n\t\t\tvar min = 5;\n\t\t\tvar have = this.getRemainingEP();\n\t\t\tvar need = this.getTurnCost() * min;\n\t\t\tif (have >= need){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (this.flight){\n\t\treturn false;\n\t\t\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\t\t\tif (this.getRemainingDelay() != 0){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar turns = 0;\n\t\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\t\t\tif (this.actions[i].turn != game.turn){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.actions[i].type == \"turn\"){\n\t\t\t\t\t\tvar a = Math.abs(this.actions[i].a);\n\t\t\t\t\t\twhile (a > 0){\n\t\t\t\t\t\t\ta -= this.getTurnAngle();\n\t\t\t\t\t\t\tturns++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (turns < this.maxTurns){\n\t\t\t\t\tvar have = this.getRemainingEP();\n\t\t\t\t\tvar need = this.getTurnCost();\n\t\t\t\t\tif (have >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tthis.switchTurnMode = function(){\n\t\tthis.turnMod = 1;\n\t\tif (game.turnMode){\n\t\t\tturn.reset();\n\t\t\tgame.turnMode = 0;\n\t\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t}\t\n\t\telse {\n\t\t\tgame.turnMode = 1;\n\t\t\tturn.set(this);\n\t\t}\n\t\tthis.setTurnData();\n\t}\n\n\tthis.handleTurning = function(e, o, f, pos){\n\t\tvar t = {x: e.clientX - offset.x, y: e.clientY - offset.y};\n\t\tvar max = this.getMaxTurnAngle();\n\t\tvar a =  getAngleFromTo(o, pos);\n\t\t\ta = Math.round(addAngle(f, a));\n\t\tif (a > 180){a = (360-a) *-1;}\n\t\t\ta = Math.min(Math.abs(a), max);\n\t\t\tturn.a = a;\n\n\t\tvar c = this.getTurnCost() * a;\n\t\tvar remEP = \"Cost: \" + Math.round(c, 2) + \" (\" + Math.round(this.getRemainingEP() - c) + \") EP\";\n\t\tvar delay = \"Delay: \" + Math.round(this.getTurnDelay() * a, 2) + \" px\";\n\n\t$(\"#vectorDiv\")\n\t\t.css(\"left\", e.clientX - offset.x - 45 + \"px\")\n\t\t.css(\"top\", e.clientY - offset.y + 40 + \"px\")\n\t\t.find(\"tr\").each(function(i){\n\t\t\tswitch (i){\n\t\t\t\tcase 0: $(this).html(\"Angle: \" + a); break;\n\t\t\t\tcase 1: $(this).html(remEP); break;\n\t\t\t\tcase 2: $(this).html(delay); break;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t})\n\n\t\tthis.drawDelay();\n\t\t//if (this.ship){this.drawEW();}\n\t\tthis.drawMouseVector(o, t);\n\t}\n\n\tthis.drawMouseVector = function(o, t){\n\t\tmouseCtx.beginPath();\n\t\tmouseCtx.moveTo(o.x * cam.z + cam.o.x, o.y * cam.z + cam.o.y);\n\t\tmouseCtx.lineTo(t.x, t.y);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.strokeStyle = \"white\";\n\t\tmouseCtx.lineWidth = 1;\n\t\tmouseCtx.stroke();\n\t}\n\n\tthis.handleTurnAttempt = function(dest){\n\t\tvar origin = this.getPlannedPosition();\n\t\tvar a = getAngleFromTo(origin, dest);\n\t\t\ta = addAngle(this.getPlannedFacing(), a);\n\t\tif (a > 180){a -= 360;}\n\t\tvar max = this.getMaxTurnAngle();\n\n\t\tif (isInArc(getCompassHeadingOfPoint(origin, dest, 0), this.turnAngles.start, this.turnAngles.end)){\n\t\t\tif (Math.abs(a) >= 2){\n\t\t\t\tthis.issueTurn(a);\n\t\t\t}\n\t\t} else if (a < 0){\n\t\t\tthis.issueTurn(-max);\n\t\t} else this.issueTurn(max);\n\t}\n\n\tthis.issueTurn = function(a){\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += Math.round(a);\n\t\t\tif (this.actions[0].a > 360){\n\t\t\t\tthis.actions[0].a -= 360;\n\t\t\t} else if (this.actions[0].a < 0){this.actions[0].a += 360;}\n\t\t\tconsole.log(this.actions[0].a);\n\t\t\tthis.drawFacing = this.actions[0].a;\n\t\t\tthis.facing = this.actions[0].a;\n\t\t\t//console.log(this.actions[0].a);\n\t\t\t//this.unsetMoveMode();\n\t\t\t//this.setMoveMode();\n\t\t\tgame.redraw()\n\t\t}\n\t\telse {\n\t\t\tvar o = this.getPlannedPosition();\n\t\t\tif (this.getRemainingImpulse() == 0){\n\t\t\t\twhile (this.canShortenTurn()){\n\t\t\t\t\tthis.doShortenTurn();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.actions.push(\n\t\t\t\tnew Move(-1, \"turn\", 0, o.x, o.y, \n\t\t\t\t\tMath.round(a),\n\t\t\t\t\tMath.ceil(this.getTurnDelay()*Math.abs(a)),\n\t\t\t\t\tMath.ceil(this.getTurnCost()*Math.abs(a)),\n\t\t\t\t\tround(turn.mod, 1), 0\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.setRemainingDelay();\n\t\t\t//console.log(this.actions[this.actions.length-1]);\n\t\t\t$(\"#game\").find(\"#turnButton\")\n\t\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t\t.find(\"#turnDelay\").html(\"\");\n\t\t\t//this.setMoveMode();\n\t\t\tgame.redrawEW();\n\t\t\tgame.drawAllPlans();\n\t\t}\n\t}\n\n\tthis.issueTurna = function(a){\n\t\tconsole.log(\"turn, a: \".a);\n\t\tif (this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\t\tthis.actions[0].a += a;\n\t\t\tthis.facing += a;\n\t\t\tgame.redraw()\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < this.turns.length; i++){\n\t\t\t\tif (this.turns[i].a == a){\n\t\t\t\t\tif (this.flight){\n\t\t\t\t\t\tif (this.actions[this.actions.length-1].type == \"turn\" && this.actions[this.actions.length-1].turn == game.turn){\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].a += this.turns[i].a;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].delay += this.turns[i].delay;\n\t\t\t\t\t\t\tthis.actions[this.actions.length-1].cost += this.turns[i].cost;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//if (this.getRemainingImpulse() == 0){this.doShortenTurn(true);}\n\n\t\t\t\t\tthis.actions.push(\n\t\t\t\t\t\tnew Move(\n\t\t\t\t\t\t\t-1, \"turn\", 0, this.turns[i].x, this.turns[i].y, \n\t\t\t\t\t\t\tthis.turns[i].a, this.turns[i].delay, this.turns[i].cost, this.turns[i].costmod\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgame.redrawEW();\n\t\t\tgame.drawAllPlans();\n\t\t}\n\t}\n\n\tthis.createBaseDiv = function(){\n\t\tvar owner = \"friendly\";\n\t\tif (game.phase > -2 && this.userid != game.userid){owner = \"hostile\";}\n\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.className = \"shipDiv \" + owner;\n\t\t\t$(div).data(\"shipId\", this.id);\n\t\tthis.element = div;\n\n\t\tvar subDiv = document.createElement(\"div\");\n\t\t\tsubDiv.className = \"header\";\n\t\t\n\t\tvar table = document.createElement(\"table\");\n\t\t\ttable.className = \"general\";\n\n\t\tvar header = \"red\";\n\t\tif (this.friendly){header = \"green\";}\n\n\t\t\t$(table)\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<th>\").html(this.name.toUpperCase() + \" #\" + this.id).attr(\"colspan\", 2).addClass(header)))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Classification\"))\n\t\t\t\t\t.append($(\"<td>\").html(game.getUnitType(this.traverse))))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Thrust\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).addClass(\"Thrust\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Engine Power:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingEP() + \" / \" + this.getEP()).addClass(\"ep\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Thrust Change:\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \" EP\").addClass(\"change\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Turn Cost per 1\"))\n\t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnCost(), 2) + \" EP\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Turn Delay per 1\"))\n\t\t\t\t\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").html(\"Active Turn Delay\"))\n\t\t\t\t\t.append($(\"<td>\").html(this.getRemainingDelay()).addClass(\"delay\")))\n\t\t\t\t\n\t\tsubDiv.appendChild(table);\n\t\tdiv.appendChild(subDiv);\n\n\t\t$(this.expandDiv(div))\n\t\t\t.addClass(\"disabled\")\n\t\t\t.drag()\n\t\t\t.find(\".structContainer\")\n\t\t\t\t.contextmenu(function(e){e.stopPropagation;})\n\t\t\t\t//.addClass(\"disabled\")\n\t\t\t\t.end()\n\t\t\t.find(\".header\")\n\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t\t})\n\t\t\t\t.end()\n\t\t\t.find(\".iconContainer\")\n\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t\tif ($(this).parent().data(\"shipId\") != aUnit){\n\t\t\t\t\t\t$(this).parent().addClass(\"disabled\");\n\t\t\t\t\t}\n\t\t\t\t})\n\n\n\t\tif (game.phase == 2){\n\t\t\t$(div).find(\".structContainer\").show();\n\t\t}\n\t}\n\n\tthis.expandDiv = function(div){\n\t\t$(div)\n\t\t.append($(\"<div>\")\n\t\t\t.addClass(\"iconContainer\")\n\t\t\t\t.append($(window.shipImages[this.name.toLowerCase()].cloneNode(true)).addClass(\"rotate270\").addClass(\"size90\"))\n\t\t\t\t.hover(function(e){\n\t\t\t\t\tif (aUnit){\n\t\t\t\t\t\tvar ship = game.getUnitById(aUnit);\n\t\t\t\t\t\tvar target = game.getUnitById($(this).parent().data(\"shipId\"));\n\t\t\t\t\t\tif (ship.id != target.id && ship.hasWeaponsSelected()){\n\t\t\t\t\t\t\thandleWeaponAimEvent(ship, target, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).\n\t\t\t\tclick(function(e){\n\t\t\t\t\tvar ship = game.getUnitById(aUnit);\n\t\t\t\t\tvar target = game.getUnitById($(this).parent().data(\"shipId\"));\n\t\t\t\t\tif (target){\n\t\t\t\t\t\tif (target.id != ship.id && (target.userid != game.userid && target.userid != ship.userid)){\n\t\t\t\t\t\t\thandleFireClick(ship, target);\n\t\t\t\t\t\t} else target.switchDiv();\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\n\t\t//document.getElementById(\"game\").appendChild(div);\n\t\tdocument.body.appendChild(div);\n\t\t$(div).css(\"position\", \"absolute\").css(\"top\", 300);\n\n\t\tstructContainer = document.createElement(\"div\");\n\t\tstructContainer.className = \"structContainer\";\n\t\tdiv.appendChild(structContainer);\n\n\t\tvar noFront = true;\n\t\tvar noAft = true;\n\t\tvar sides = 0;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tthis.structures[i].direction = this.structures[i].getDirection();\n\t\t\tif (this.structures[i].direction == 0 || this.structures[i].direction == 360){\n\t\t\t\tnoFront = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction == 180){\n\t\t\t\tnoAft = false;\n\t\t\t}\n\t\t\telse if (this.structures[i].direction > 0 && this.structures[i].direction < 180 || this.structures[i].direction > 180 && this.structures[i].direction < 360){\n\t\t\t\tsides++;\n\t\t\t}\n\t\t}\n\t\tsides /= 2;\n\n\t\tvar maxWidth = 0;\n\t\tif (this.structures.length <= 4){\n\t\t\tif (this.structures[1].systems.length > 4){\n\t\t\t\tmaxWidth = 320;\n\t\t\t}\n\t\t\telse if (this.structures[1].systems.length  < 4){\n\t\t\t\tmaxWidth = 280;\n\t\t\t} else maxWidth = 300;\n\t\t}\n\t\telse {\n\t\t\tmaxWidth = 340;\n\t\t}\n\n\t\t$(div).css(\"width\", maxWidth);\n\n\n\t\tvar conWidth = $(structContainer).width();\n\t\tvar conHeight = $(structContainer).height();\n\n\t\t// PRIMARY\n\t\tvar primaryDiv = document.createElement(\"div\");\n\t\t\tprimaryDiv.className = \"primaryDiv\";\n\t\tvar primaryTable = document.createElement(\"table\");\n\t\t\tprimaryTable.className = \"PrimaryTable\";\n\t\t\tprimaryTable.appendChild(this.primary.getTableRow());\n\n\t\t\tvar systems = 0;\n\t\t\tvar max = 3;\n\t\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n\n\t\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\t\tif (systems == 0){\n\t\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t\t}\n\n\t\t\t\tvar td = this.primary.systems[i].getTableData(false);\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tif (game.turn == 1 || this.id > 0){\n\t\t\t\t\tvar boostDiv = this.primary.systems[i].getBoostDiv();\n\t\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\t\tvar powerDiv = this.primary.systems[i].getPowerDiv();\n\t\t\t\t\tif (powerDiv){\n\t\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t\t}\n\t\t\t\t\tvar modeDiv =this.primary.systems[i].getModeDiv();\n\t\t\t\t\tif (modeDiv){\n\t\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsystems++;\n\t\t\t\ttr.appendChild(td);\n\n\n\t\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n\t\t\t\t\tprimaryTable.appendChild(tr);\n\t\t\t\t\tsystems = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\tvar offsetX = 0;\n\t\tvar offsetY = -40;\n\t\tif (noFront){\n\t\t\toffsetY -= 40;\n\t\t}\n\t\telse if (noAft){\n\t\t\toffsetY -= 10;\n\t\t}\n\n\t\tprimaryDiv.appendChild(primaryTable);\n\t\tstructContainer.appendChild(primaryDiv);\n\t\tvar w = $(primaryDiv).width();\n\t\tvar h = $(primaryDiv).height();\n\t\tvar primX = conWidth/2 - w/2;\n\t\tvar primY = conHeight/2 - h/2 + offsetY\n\t\t$(primaryDiv)\n\t\t\t.css(\"left\", primX)\n\t\t\t.css(\"top\", primY);\n\n\t\t$(structContainer).append($(\"<div>\").addClass(\"mainPower\").html(this.getSystemByName(\"Reactor\").getOutput()));\n\n\n\t\t// OUTER STRUCTS\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\n\t\t\tvar structDiv = document.createElement(\"div\");\n\t\t\t\tstructDiv.className = \"structDiv\";\n\t\t\t\t\n\t\t\tvar structTable = document.createElement(\"table\");\n\t\t\t\tstructTable.className = \"structTable\";\n\n\t\t\tstructTable.appendChild(this.structures[i].getTableRow());\n\n\t\t\tvar col = 0;\n\t\t\tvar colWidth = 1;\n\t\t\tvar max;\n\t\t\tvar a = this.structures[i].direction; if (a == 360){a = 0;}\n\t\t\tvar w;\n\t\t\tvar maxRow = 0;\n\n\t\t\tif (a == 0 || a == 180){ // front or aft\n\t\t\t\tif (a == 180){\n\t\t\t\t\tmax = Math.min(6, this.structures[i].systems.length);\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 0){\n\t\t\t\t\tmax = 4;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 4 == 3){\n\t\t\t\t\tmax = 3;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length % 3 == 0){\n\t\t\t\t\tmax = 6;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmax = 5;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // sides\n\t\t\t\tif (sides > 1){\n\t\t\t\t\tmax = 2;\n\t\t\t\t}\n\t\t\t\telse if (this.structures[i].systems.length <= 3){\n\t\t\t\t\tmax = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this.structures[i].systems.length <= 4 && noFront){\n\t\t\t\t\t\tmax = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmax = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}3\n\n\t\t\tvar fill = 0;\n\t\t\tif (a == 0 || a == 180){\n\t\t\t\tif (this.structures[i].systems.length == 1 || this.structures[i].systems.length == 2 && this.structures[i].systems[0].name != this.structures[i].systems[1].name){\n\t\t\t\t\tmax = 3;\n\t\t\t\t\tfill = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (max == 1 && !fill){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"62px\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.height = \"23px\";\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (col == 0){\n\t\t\t\t\ttr = document.createElement(\"tr\");\n\t\t\t\t\tif (this.structures[i].systems.length - j != max){\n\t\t\t\t\t\tif ((this.structures[i].systems.length - j) *2 == max){\n\t\t\t\t\t\t\tcolWidth = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fill){\n\t\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t\t}\n\n\t\t\t\tvar td = this.structures[i].systems[j].getTableData(false);\n\t\t\t\t\ttd.colSpan = colWidth;\n\t\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\t\tif (game.turn == 1 || this.id > 0){\n\t\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n\t\t\t\t\tif (powerDiv){\n\t\t\t\t\t\tpowerDiv.style.left = colWidth * 24 + \"px\";\n\t\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\t\tif (modeDiv){\n\t\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t\t}\n\n\t\t\t\tcol++;\n\t\t\t\ttr.appendChild(td);\n\n\t\t\t\tif (fill){\n\t\t\t\t\ttr.insertCell(-1).className =\"emptySystem\"; col++;\n\t\t\t\t}\n\n\t\t\t\tif (col == max){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t}\n\t\t\t\tif (j == this.structures[i].systems.length-1){\n\t\t\t\t\tstructTable.appendChild(tr);\n\t\t\t\t\tif (maxRow < col){\n\t\t\t\t\t\tmaxRow = col;\n\t\t\t\t\t}\n\t\t\t\t\tcol = 0;\n\t\t\t\t\t$(structTable).find(\".struct\").attr(\"colSpan\", maxRow);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstructDiv.appendChild(structTable);\n\t\t\tstructContainer.appendChild(structDiv);\n\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = -20;\n\n\n\t\t\tif (a == 90 || a == 270){\n\t\t\t\tif (max == 2){\n\t\t\t\t\toffsetX += 25;\n\t\t\t\t\toffsetY -= 20;\n\t\t\t\t}\n\t\t\t\telse if (max == 1){\n\t\t\t\t\toffsetX += 40;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (a == 60 || a == 300 || noAft){\n\t\t\t\t\toffsetX += 20;\n\t\t\t}\n\t\t\t\n\t\t\tvar pos = getPointInDirection(135 - offsetX, a-90, conWidth/2, conHeight/2-40);\n\t\t\tvar w = $(structDiv).width();\n\t\t\tvar h = $(structDiv).height();\n\n\t\t\tif (noFront){\n\t\t\t\toffsetY -= 60;\n\t\t\t}\n\n\t\t\tif (a == 0){\n\t\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n\t\t\t\t\toffsetY += 10;\n\t\t\t\t} else if (fill){\n\t\t\t\t\t$(primaryDiv).css(\"top\", (primY + 20));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (noAft){\n\t\t\t\toffsetY -= 60 + this.structures.length*12;\n\t\t\t}\n\t\t\telse if (a == 180){\n\t\t\t\tif (noFront){offsetY += 20;}\n\t\t\t\telse offsetY -= 40;\n\t\t\t}\n\t\t\telse if (sides >= 2 && a-90 != 0 && a-90 != 180){\n\t\t\t\toffsetY += 0;\n\t\t\t}\n\t\t\telse if (!noFront && !noAft){\n\t\t\t\toffsetY -= 30;\n\t\t\t}\n\t\t\t\n\t\t\t$(structDiv)\n\t\t\t\t.data(\"id\", this.structures[i].id)\n\t\t\t\t.css(\"left\", pos.x + -w/2)\n\t\t\t\t.css(\"top\", pos.y + offsetY)\n\t\t}\n\n\t\tvar width = 0;\n\t\tvar height = 0;\n\t\t$(div).find(\".structDiv\").each(function(){\n\t\t\tvar x = $(this).position().left + $(this).width();\n\t\t\tif (x > width){\n\t\t\t\twidth = x;\n\t\t\t}\n\t\t\tvar y = $(this).position().top + $(this).height();\n\t\t\tif (y > height){\n\t\t\t\theight = y;\n\t\t\t}\n\t\t})\n\n\t\t$(structContainer).css(\"height\", Math.max($(primaryDiv).position().top + $(primaryDiv).height(), height) + 20);\n\n\t\t/*\n\t\tvar w = $(div).width();\n\t\tvar h = $(div).height();\n\t\tvar left = 50;\n\t\tif (this.facing < 90 || this.facing > 270){\n\t\tleft = res.x - w - 50;\n\t\t}\n\t\tvar x = this.x +cam.o.x - w/2;\n\t\tvar y = this.y +cam.o.y + 150;\n\n\t\t$(div).css(\"left\", x).css(\"top\", y);\n\t\t*/\t\n\n\t\tthis.getAttachDivs();\n\t\treturn div;\n\t}\n\n\tthis.getAttachDivs = function(){\n\t\tif (this.cc.length){\n\t\t\tvar ccContainer = $(\"<div>\").addClass(\"ccContainer\")\n\t\t\t\t.append(($(\"<div>\").addClass(\"general\")\n\t\t\t\t\t.append($(\"<span>\").addClass(\"center15\").html(\"Local Units\"))));\n\n\t\t\tvar attach = [];\n\t\t\tfor (var i = 0; i < this.cc.length; i++){\n\t\t\t\tattach.push(game.getUnitById(this.cc[i]));\n\t\t\t}\n\n\t\t\tattach.sort(function(a, b){\n\t\t\t\treturn b.friendly - a.friendly;\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < attach.length; i++){\n\t\t\t\tccContainer = attach[i].getAttachment(ccContainer);\n\t\t\t}\n\t\t}\n\t\t$(this.element).append(ccContainer);\n\t}\n\n\tthis.previewSetup = function(){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"bgYellow\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.updateDiv = function(){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t$(divs)\n\t\t\t.find(\".pos\").html(this.x + \" / \" + this.y).end()\n\t\t\t.find(\".ep\").html(this.getRemainingEP() + \" / \" + this.getEP()).end()\n\t\t\t.find(\".impulse\").html(this.getRemainingImpulse() + \" / \" + this.getCurrentImpulse()).end()\n\t\t\t.find(\".delay\").html(this.getRemainingDelay())\t\t\n\t\t\t.find(\".change\").html(this.getImpulseChangeCost() + \" EP\").end()\t\t\t\n\t\t\t.find(\".turn\").html(this.getImpulseChangeCost() + \" EP\").end()\n\t}\n\n\tthis.updateDivPower = function(system){\n\t\tvar reactor = this.getSystemByName(\"Reactor\");\n\t\tvar s = reactor.getOutput();\n\t\t$(this.getSystemByName(\"Reactor\").element).find(\".outputMask\").html(s);\n\t\t$(this.element).find(\".mainPower\").html(s);\n\n\t\t$(system.element).find(\".outputMask\").html(system.getOutput());\n\t\tsystem.update();\n\t}\n\n\tthis.updateNonPowerOutput = function(system){\n\t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\t\tfor (var i = 0; i < divs.length; i++){\n\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\t\tvar divs = divs[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(divs).find(\".system\").each(\n\t\t\tfunction(){\n\t\t\t\tif ($(this).data(\"systemId\") == system.id){\n\t\t\t\t\t$(this).find(\".outputMask\").html(system.getOutput());\n\t\t\t\t\tsystem.update();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tthis.getSystemByName = function(name){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].name == name){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getActiveSensor = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected && this.primary.systems[i].name == \"Sensor\"){\n\t\t\t\treturn this.primary.systems[i];\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.attachEvent = function(td){\n\t\t$(td).data(\"shipId\", this.id);\n\t\t$(td).hover(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).hover(e);\n\t\t\t}\n\t\t).click(\n\t\t\tfunction(e){\n\t\t\t\te.stopPropagation();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).getSystemById($(this).data(\"systemId\")).select(e);\n\t\t\t}\n\t\t).\n\t\tcontextmenu(\n\t\t\tfunction(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tgame.getUnitById($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));\n\t\t\t}\n\t\t);\n\t\treturn td;\n\t}\n\n\tthis.selectAll = function(e, id){\n\t\tvar s = this.getSystemById(id);\n\t\tvar w = s.getActiveWeapon();\n\t\tvar name = w.name;\n\t\tvar hasFire = s.hasUnresolvedFireOrder();\n\t\tif (name == \"Hangar\"){return;}\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (! this.structures[i].systems[j].destroyed){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tif (this.structures[i].systems[j].weapon && this.structures[i].systems[j].hasUnresolvedFireOrder() == hasFire){\n\t\t\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tthis.doUnpowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".unpower\").hide().end().find(\".power\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doUnpower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.doPowerAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\t\t$(system.element).find(\".powerDiv\").find(\".power\").hide().end().find(\".unpower\").show();\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (!this.structures[i].systems[j].isPowered()){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].doPower();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchModeAll = function(id){\n\t\tvar system = this.getSystemById(id);\n\t\tvar name = system.getActiveWeapon().name;\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].locked){\n\t\t\t\t\tif (this.structures[i].systems[j].getActiveWeapon().name == name){\n\t\t\t\t\t\tthis.structures[i].systems[j].switchMode(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.getProfileMod = function(){\n\t\treturn Math.floor((1+((((this.getBaseImpulse() / this.getCurrentImpulse())-1)/3)))*100);\n\t}\n\n\tthis.canBoost = function(system){\n\t\tif (system.disabled || system.destroyed){\n\t\t\treturn false;\n\t\t}\n\t\telse if (system instanceof Weapon && !system.disabled && !system.destroyed && (system.getLoadLevel() >= 1 || system.getBoostEffect(\"Reload\") && system.getLoadLevel() < 1)){\n\t\t\tif (system instanceof Launcher){\n\t\t\t\tif (system.getOutput() < system.getEffiency()){\n\t\t\t\t\tif (system.getRemainingAmmo() > system.getOutput()){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"There is not enough ammunition left\");\n\t\t\t\t} else popup(\"The launcher is already at maximum capacity\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (system.getBoostLevel() < system.maxBoost){\n\t\t\t\t\tvar avail = this.getUnusedPower();\n\t\t\t\t\tvar need = system.getEffiency();\n\t\t\t\t\tif (avail >= need){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t\t\t} else popup(\"The selected system cant be boosted further.\");\n\t\t\t}\n\t\t}\n\t\telse if (!(system instanceof Weapon)){\n\t\t\tif (this.getUnusedPower() >= system.getEffiency()){\n\t\t\t\treturn true;\n\t\t\t} else popup(\"You have insufficient power remaining\");\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.getUnusedPower = function(){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i] instanceof Reactor){\n\t\t\t\treturn this.primary.systems[i].getUnusedPower();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tthis.setTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].translate(cam.o.x, cam.o.y);\n\t\t\targuments[i].scale(cam.o.x, cam.o.y);\n\t\t}\n\t}\n\n\tthis.resetTranslation = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\targuments[i].setTransform(1,0,0,1,0,0);\n\t\t}\n\t}\n\n\tthis.setMoveTranslation = function(){\n\t\tmoveCtx.translate(cam.o.x, cam.o.y);\n\t\tmoveCtx.scale(cam.z, cam.z);\n\t\tplanCtx.translate(cam.o.x, cam.o.y);\n\t\tplanCtx.scale(cam.z, cam.z);\n\t}\n\n\tthis.resetMoveTranslation = function(){\n\t\tmoveCtx.setTransform(1,0,0,1,0,0);\n\t\tplanCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\tthis.setMoveMode = function(){\n\t\tgame.mode = 1;\n\t\tturn.set(this);\n\t\tthis.turnAngles = {};\n\t\t//this.setTranslation(moveCtx, planCtx);\n\t\tthis.setMoveTranslation();\n\t\tthis.drawMoveRange();\n\t\tthis.drawVectorIndicator();\n\n\t\tif (game.phase == -1 && (this.available == game.turn && game.turn == 1|| this.id < 0)){\n\t\t\tthis.drawTurnUI();\n\t\t\tthis.drawTurnArcs();\n\t\t\t//this.updateDiv();\n\t\t}\n\t\telse if (game.phase == 0){\n\t\t\tthis.drawMoveUI();\n\t\t}\n\t\telse if (game.phase == 2){ // FIRE\n\t\t}\n\t\telse if (game.phase == 3){ // Dmg control\n\t\t}\n\n\t\tthis.resetMoveTranslation();\n\t\tthis.checkSensorHighlight();\n\t\tthis.updateDiv();\n\t}\n\t\n\tthis.unsetMoveMode = function(){\n\t\tgame.mode = 0;\n\t\t$(\"#vectorDiv\").addClass(\"disabled\");\n\t\t$(\"#impulseGUI\").addClass(\"disabled\");\n\t\t$(\".turnEle\").addClass(\"disabled\");\n\t\t$(\"#maxVector\").addClass(\"disabled\");\n\t\t$(\"#maxTurnVector\").addClass(\"disabled\");\n\t\t$(\"#maxCutVector\").addClass(\"disabled\");\n\t\t$(\"#plusImpulse\").addClass(\"disabled\");\n\t\t$(\"#minusImpulse\").addClass(\"disabled\");\n\t\t$(\"#undoLastAction\").addClass(\"disabled\");\n\t\tif (game.turnMode){this.switchTurnMode();}\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tplanCtx.clearRect(0, 0, res.x, res.y);\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\n\t//\treturn isInArc(getCompassHeadingOfPoint(loc, pos, facing), start, end);\n\n\tthis.getOffensiveBonus = function(target){\n\t\tif (this.flight || this.salvo){return 0;}\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tvar ew = sensor.getEW();\n\t\tif (sensor.disabled || sensor.destroyed || ew.type == 1 || ew.type == 3){return 0;}\n\t\tif (ew.type == 2){return 0.2}\n\n\t\tvar tPos = target.getBaseOffsetPos();\n\t\tvar origin = this.getBaseOffsetPos();\n\t\tvar d = getDistance(origin, tPos);\n\t\tvar base = target.getLockMultiplier();\n\n\t\tif (d == 0 && game.isCloseCombat(this, target) && this.isInEWArc(origin, target.getTrajectory(), sensor, ew)){\n\t\t\tif (target.salvo){\n\t\t\t\treturn base;\n\t\t\t}\n\t\t\telse if (target.flight){\n\t\t\t\tif (a == -1)\n\t\t\t\treturn Math.round(base / 180 * (Math.min(180, game.const.ew.len * Math.pow(sensor.getOutput()/ew.dist, game.const.ew.p)))*100)/100;\n\t\t\t}\n\t\t}\n\t\telse if (d <= ew.dist && this.isInEWArc(origin, tPos, sensor, ew)){\n\t\t\treturn base;\n\t\t}\n\t\telse return 0;\n\t}\n\n\tthis.getDefensiveBonus = function(shooter){\n\t\t//return 0\n\t\tif (this.flight || this.salvo || shooter.flight | shooter.salvo){return 0;}\n\n\t\tvar sensor = this.getSystemByName(\"Sensor\");\n\t\tvar ew = sensor.getEW();\n\t\tif (sensor.disabled || sensor.destroyed || ew.type == 0 || ew.type == 2){return 0;}\n\t\tif (ew.type == 3){return 0.2}\n\n\t\tvar origin = this.getBaseOffsetPos();\n\t\tvar tPos = shooter.getBaseOffsetPos();\n\t\tvar d = getDistance(origin, tPos);\n\n\t\tif (d <= ew.dist){\n\t\t\tif (this.isInEWArc(origin, tPos, sensor, ew)){\n\t\t\t\treturn 0.5;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tthis.isInEWArc = function(origin, target, sensor, ew){\t\t\n\t\tvar str = sensor.getOutput();\n\t\tvar\tw = Math.min(180, game.const.ew.len * Math.pow(str/ew.dist, game.const.ew.p));\n\t\tvar start = addAngle(0 + w, ew.angle);\n\t\tvar end = addAngle(360 - w, ew.angle);\n\t\treturn isInArc(getCompassHeadingOfPoint(origin,  target, this.getPlannedFacing()), start, end);\n\t}\n\n\tthis.getLockString = function(lock){\n\t\tif (lock){\n\t\t\treturn \"<span class='green'>Active Lock (x 1.5)</span>\";\n\t\t}\n\t\treturn \"<span class='red'>No Sensor Lock</span>\";\n\t}\n\n\tthis.canSetSensor = function(sensor){\n\t\tif (this.flight || this.salvo){return false;}\n\t\tif (sensor.selected && !sensor.locked){\n\t\t\treturn true;\n\t\t} return false;\n\t}\n\t\n\tthis.unselectSystems = function(){\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#weaponAimTableWrapper\").hide();\n\t\tvar buttons = $(this.element).find(\".system.selected\").each(function(){\n\t\t\t$(this).removeClass(\"selected\");\n\t\t});\t\n\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\tthis.structures[i].systems[j].highlight = false;\n\t\t\t\tthis.structures[i].systems[j].selected = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.flight || this.salvo){return;}\n\t\t\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected){\n\t\t\t\tthis.primary.systems[i].select();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.getFireOrders = function(){\n\tvar fires = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n\t\t\t\t} else break;\n\t\t\t}\n\t\t}\n\t}\n\treturn fires;\n}\n\nShip.prototype.getEWSettings = function(){\n\treturn this.getSystemByName(\"Sensor\").getEW();\n}\n\nShip.prototype.getPowerOrders = function(){\n\tvar powers = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = 0; k < this.structures[i].systems[j].powers.length; k++){\n\t\t\t\tif (this.structures[i].systems[j].powers[k].new){\n\t\t\t\t\tpowers.push(this.structures[i].systems[j].powers[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n\t\t\tif (this.primary.systems[i].powers[j].new){\n\t\t\t\tpowers.push(this.primary.systems[i].powers[j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn powers;\n}\n\nShip.prototype.switchDiv = function(){\n\tif (this.selected){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse if ($(this.element).hasClass(\"disabled\")){\n\t\tgame.zIndex++;\n\t\t$(this.element).removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t}\n\telse {\n\t\tgame.zIndex--;\n\t\t$(this.element).addClass(\"disabled\").css(\"zIndex\", 10);\n\t}\n}\n\nShip.prototype.setPreMoveFacing = function(){\n\t\tif (this.actions.length && this.actions[0].type == \"deploy\"){\n\t\t\tthis.drawFacing = 0;\n\t\t\tfor (var i = 0; i < Math.min(this.actions.length, 2); i++){\n\t\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.drawFacing = this.facing;\n\t\t}\n\t\t//console.log(this.id + \" \" + this.drawFacing);\n\t}\n\nShip.prototype.setPostMoveFacing = function(){\n\tthis.drawFacing = this.facing;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\tthis.drawFacing += this.actions[i].a;\n\t\t}\n\t}\n}\n\nShip.prototype.setPreMovePosition = function(){\n\tthis.drawX = this.x;\n\tthis.drawY = this.y;\n}\n\nShip.prototype.setPostMovePosition = function(){\n\tthis.drawX = this.actions[this.actions.length-1].x;\n\tthis.drawY = this.actions[this.actions.length-1].y;\n}\n\nShip.prototype.setDrawData = function(){\n\tif (this.available > game.turn || !this.available || game.turn == 1 && game.phase == -1){\n\t\treturn;\n\t}\n\t\n\tif (game.phase > 1){\n\t\tthis.setPostMovePosition();\n\t\tthis.setPostMoveFacing();\n\t}\n\telse {\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFacing();\n\t}\n}\n\nShip.prototype.setUnitGUI = function(){\n\tvar id = this.id;\n\t$(\"#unitGUI\").find(\"img\").each(function(){\n\t\tif ($(this).data(\"id\") == id){\n\t\t\t$(this).toggleClass(\"selected\"); return;\n\t\t}\n\t});\n\t$(this.element).toggleClass(\"selection\");\n}\n\nShip.prototype.getArmourString = function(a){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (isInArc(a, this.structures[i].start, this.structures[i].end)){\n\t\t\treturn (this.structures[i].remainingNegation + \" / \" + this.structures[i].negation);\n\t\t}\n\t}\n}\n\n\nShip.prototype.drawMovePlan = function(){\n\tif (!this.actions.length || this.actions[this.actions.length-1].resolved){\n\t\treturn;\n\t}\n\telse if (this.ship && game.phase == 0 || this.flight && game.phase == 1){\n\t//else if (true){\n\t\tthis.setMoveTranslation();\n\n\t\tplanCtx.strokeStyle = \"#00ea00\";\n\t\tif (!this.friendly){\n\t\t\tplanCtx.strokeStyle = \"red\";\n\t\t}\n\t\tvar i;\n\t\tfor (i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].turn == game.turn){\n\t\t\t\tvar action = this.actions[i];\n\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\n\t\t\t\tif (i == 0){\n\t\t\t\t\tvar p = this.getBaseOffsetPos();\n\t\t\t\t\tplanCtx.moveTo(p.x, p.y);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplanCtx.moveTo(this.actions[i-1].x, this.actions[i-1].y);\n\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\tif (action.type == \"move\"){\n\t\t\t\t\tplanCtx.lineTo(action.x, action.y);\n\t\t\t\t\tplanCtx.closePath();\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\telse if (action.type == \"turn\"){\n\t\t\t\t\tvar angle = this.getPlannedFacing(i);\n\t\t\t\t\t\n\t\t\t\t\tplanCtx.beginPath();\n\t\t\t\t\tplanCtx.arc(action.x, action.y, 3, 0, 2*Math.PI, false);\n\t\t\t\t\tplanCtx.stroke();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tplanCtx.closePath();\n\t\t\t}\n\t\t}\n\t\tplanCtx.strokeStyle = \"black\";\n\t\tthis.drawPlanMarker();\n\t\tthis.resetMoveTranslation();\n\t}\n}\n\nShip.prototype.getShortInfo = function(){\n\tvar ele = $(\"#shortInfo\");\n\tif (this.userid == game.userid){\n\t\t$(ele).attr(\"class\", \"friendly\");\n\t} else $(ele).attr(\"class\", \"hostile\");\n\n\tvar impulse = this.getCurrentImpulse();\n\n\tvar table = document.createElement(\"table\");\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.name + \" #\" + this.id + \" (\" +game.getUnitType(this.traverse) + \")\";\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML =  \"Thrust: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\";\n\t\ttable.insertRow(-1).insertCell(-1).innerHTML = this.getStringHitChance();\n\treturn table;\n}\n\nShip.prototype.getStringHitChance= function(){\n\tvar baseHit = this.getBaseHitChance();\n\treturn (\"Base Hit: \" + Math.floor(this.profile[0] * baseHit) + \"% - \" + Math.floor(this.profile[1] * baseHit) + \"%\");\n}\n\nShip.prototype.getParent = function(){\n\treturn this;\n}\n\n\nShip.prototype.isReady = function(){\n\tif (this.available < game.turn){\n\t\treturn true;\n\t}\n\telse if (this.available == game.turn && !(game.phase == 0 && game.animating && !this.deployed)){\n\t\tif (this.userid == game.userid && this.actions.length || game.phase >= 0){\n\t\t\treturn true;\n\t\t}\n\t} else if (this.available > game.turn && this.actions.length == 1 && !this.actions[0].resolved){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\nShip.prototype.setTarget = function(){\n\treturn;\n}\n\nShip.prototype.select = function(){\n\n\tif (!this.selected){\n\t\tthis.doSelect();\n\t} else this.switchDiv();\n}\n\nShip.prototype.doSelect = function(){\n\tconsole.log(this);\n\taUnit = this.id;\n\tthis.selected = true;\n\tthis.setUnitGUI();\n\tgame.setShipTransform();\n\tthis.drawPositionMarker();\n\tgame.resetShipTransform();\n\tgame.drawAllPlans();\n\tthis.switchDiv();\n\tif (this.ship){this.setMoveMode();}\n\n\t//console.log(this.getRemainingEP() / this.baseTurnCost)\n}\n\nShip.prototype.doUnselect = function(){\n\taUnit = false;\n\tthis.selected = false;\n\tthis.setUnitGUI();\n\tif (game.deploying){game.disableDeployment();}\n\telse if (game.flightDeploy){game.flightDeploy = false;}\n\telse if (game.mission){this.disableMissionMode()}\n\tthis.unselectSystems();\n\t//game.setShipTransform();\n\t//this.drawPositionMarker();\n\t//game.resetShipTransform();\n\tgame.redraw();\n\tgame.drawAllPlans();\n\tthis.switchDiv();\n\tthis.unsetMoveMode();\n\t$(\"#hangarLoadoutDiv\").addClass(\"disabled\");\n\t$(\"#popupWrapper\").hide()\n\t$(\"#instructWrapper\").hide()\n\t$(\"#systemDetailsDiv\").remove();\n\tmouseCtx.clearRect(0, 0, res.x, res.y);\n}\n\nShip.prototype.doHighlight = function(){\n\tif (this.highlight){\n\t\tthis.highlight = false;\n\t\tgame.draw();\n\t}\t\n\telse {\n\t\tthis.highlight = true;\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t\tctx.beginPath();\n\t\tctx.arc(this.drawX, this.drawY, this.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.lineWidth = 3;\n\t\tctx.globalAlpha = 1;\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t\tctx.setTransform(1,0,0,1,0,0);\n\t}\n}\n\nShip.prototype.undoHover = function(){\n\tgame.resetHover();\n\t//salvoCtx.clearRect(0, 0, res.x, res.y);\n\t//planCtx.clearRect(0, 0, res.x, res.y);\n}\n\nShip.prototype.create = function(){\n\tthis.img = window.shipImages[this.name.toLowerCase()];\n\tthis.setDrawData();\n\tthis.setHitTable();\n}\n\nShip.prototype.setImage = function(){\n\tvar size = this.size;\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = size*1.5;\n\t\tt.height = size*1.5;\t\t\t\n\tvar ctx = t.getContext(\"2d\");\n\n\tctx.translate(t.width/2, t.height/2);\n\tctx.rotate((this.getDrawFacing()) * (Math.PI/180));\n\tctx.drawImage(this.img, -size/2, -this.size/2, this.size, this.size);\n\n\tthis.drawImg = t;\n\t//console.log(this.drawImg.toDataURL());\n\tctx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.draw = function(){\n\tif (!this.doDraw){return;}\n\tif (this.isReady()){\n\t \tthis.drawPositionMarker();\n\t\tthis.drawSelf();\n\t\tthis.drawEscort();\n\t}\n}\n\nShip.prototype.drawSelf = function(){\n\tctx.save();\n\tctx.translate(this.drawX, this.drawY)\n\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\t//ctx.restore();\n}\n\nShip.prototype.drawEscort = function(){\n\tif (this.cc.length){\n\t\tctx.drawImage(this.drawImg, -this.drawImg.width/2, -this.drawImg.height/2, this.drawImg.width, this.drawImg.height);\n\t}\n\tctx.restore();\n}\n\nShip.prototype.drawPositionMarker = function(){\n\tvar color = \"\";\n\tif (this.selected){color = \"yellow\"}\n\telse if (this.friendly){color = \"#27e627\";}\n\telse {color = \"red\";}\n\tthis.drawMarker(this.drawX, this.drawY, color, ctx);\n}\n\nShip.prototype.drawPlanMarker = function(){\n\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\tif (!this.actions[i].resolved){\n\t\t\tvar color = \"green\";\n\t\t\tif (!this.friendly){color = \"red\";}\n\t\t\tthis.drawMarker(this.actions[i].x, this.actions[i].y, color, planCtx);\n\t\t\treturn;\n\t\t} else return;\n\t}\n}\n\nShip.prototype.drawMarker = function(x, y, c, context){\n\tcontext.beginPath();\n\tcontext.arc(x, y, (this.size-2)/2, 0, 2*Math.PI, false);\n\tcontext.closePath();\n\tcontext.lineWidth = 1 + Math.floor(this.selected*2);\n\tcontext.globalAlpha = 0.8;\n\tcontext.globalCompositeOperation = \"source-over\";\n\tcontext.strokeStyle = c;\n\tcontext.stroke();\n\tcontext.globalAlpha = 1;\n\tcontext.lineWidth = 1;\n\tcontext.strokeStyle = \"black\";\n}\n\nShip.prototype.getPlannedFacing = function(){\n\tvar angle = 0;\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\tangle += this.actions[i].a;\n\t\t}\n\t}\n\treturn this.facing + angle;\n}\n\nShip.prototype.getDrawFacing = function(){\n\treturn this.drawFacing;\n}\n\nShip.prototype.getImpulseMod = function(){\n\treturn this.getCurrentImpulse() / this.getBaseImpulse();\n}\n\n\nShip.prototype.getBaseHitChance = function(){\n\treturn this.baseHitChance;\n}\n\nShip.prototype.getAngledHitChance = function(angle){\n\tvar a, b, c, base;\n\t\n\twhile (angle > 90){\n\t\tangle -= 180;\n\t}\n\tif (angle < 0){\n\t\tangle *= -1;\n\t}\n\n\tbase = this.getBaseHitChance();\n\ta = base * this.profile[0];\n\tb = base * this.profile[1];\n\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n\tsub /= (90 - 0);\n\treturn Math.ceil(sub);\n}\n\n\nShip.prototype.getDamageEntriesByFireId = function(fire){\n\tvar dmgs = [];\n\tvar lookup = 0;\n\n\tfor (var i = 0; i < fire.hits.length; i++){\n\t\tlookup += fire.hits[i]\n\t}\n\n\tif (!lookup){\n\t\treturn dmgs;\n\t}\n\n\tfor (var i = this.primary.damages.length-1; i >= 0; i--){\n\t\tif (this.primary.damages[i].fireid == fire.id){\t\t\t\t\t\n\t\t\tdmgs.push(this.primary.damages[i]);\n\t\t\tdmgs[dmgs.length-1].system = \"Main Structure\";\n\t\t\tlookup--;\n\t\t\tif (!lookup){return dmgs};\n\t\t}\n\t\telse if (this.primary.damages[i].turn < fire.turn){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = this.primary.systems[i].damages.length-1; j >= 0; j--){\n\t\t\tif (this.primary.systems[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.primary.systems[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.primary.systems[i].display\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.primary.systems[i].damages[j].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].damages.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].damages[k].fireid == fire.id){\n\t\t\t\t\tdmgs.push(this.structures[i].systems[j].damages[k]);\n\t\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].systems[j].display\n\t\t\t\t\tlookup--;\n\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t} else if (this.structures[i].systems[j].damages[k].turn < fire.turn){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dmgs;\n}\n\n\nShip.prototype.canDeploy = function(){\n\tif (this.userid == game.userid && (game.turn == 1 || this.id < 0)){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.getGunOrigin = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\t//console.log(this.structures[i].id+ \" / \" + this.structures[i+1].id)\n\t\tif (i == this.structures.length-1 || this.structures[i].id < id && this.structures[i+1].id > id){\n\t\t\t//console.log(this.structures[i].getDirection())\n\t\t\t//console.log(\"ding\");\n\t\t\treturn getPointInDirection(this.size/3 + range(-10, 10), this.structures[i].getDirection() + this.getPlannedFacing() + range(-5, 5), 0, 0);\n\t\t}\n\t}\n\treturn this.getSystemById(id);\n}\n\nShip.prototype.resetMoveMode = function(){\n\tvar turn = game.turnMode;\n\tthis.unsetMoveMode();\n\tthis.setMoveMode();\n\tif (turn && this.canTurn()){\n\t\tthis.switchTurnMode();\n\t}\n\tthis.drawEW();\n}\n\nShip.prototype.getLockMultiplier = function(){\n\treturn 0.5;\n}",
			"file": "shipclasses.js",
			"file_size": 88049,
			"file_write_time": 131507450431265717,
			"settings":
			{
				"buffer_size": 85035,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "mathLib.js",
			"settings":
			{
				"buffer_size": 6015,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "global.php",
			"settings":
			{
				"buffer_size": 457,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/math.php",
			"settings":
			{
				"buffer_size": 3193,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 3046,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 2481,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.php",
			"settings":
			{
				"buffer_size": 18255,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/flight.php",
			"settings":
			{
				"buffer_size": 1532,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 1619,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/omega.php",
			"settings":
			{
				"buffer_size": 3640,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 2568,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 2273,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 1611,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "imageloader.js",
			"settings":
			{
				"buffer_size": 4540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/structure.php",
			"settings":
			{
				"buffer_size": 5248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "cam.js",
			"settings":
			{
				"buffer_size": 2399,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/system.php",
			"settings":
			{
				"buffer_size": 5133,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 4819,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 5056,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 6601,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "postGameData.php",
			"settings":
			{
				"buffer_size": 2928,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/salvo.php",
			"settings":
			{
				"buffer_size": 1614,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/mixed.php",
			"settings":
			{
				"buffer_size": 6049,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "server/fighter.php",
			"settings":
			{
				"buffer_size": 4487,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<php"
			}
		},
		{
			"file": "salvo.js",
			"settings":
			{
				"buffer_size": 9290,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ship.php",
			"settings":
			{
				"buffer_size": 29423,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 4111,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "systems.js",
			"settings":
			{
				"buffer_size": 86940,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphics.js",
			"settings":
			{
				"buffer_size": 8389,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 1590,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "createGame.php",
			"settings":
			{
				"buffer_size": 1418,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "script.js",
			"settings":
			{
				"buffer_size": 16158,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "lobby.php",
			"settings":
			{
				"buffer_size": 6730,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/manager.php",
			"settings":
			{
				"buffer_size": 41929,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/dbManager.php",
			"settings":
			{
				"buffer_size": 52454,
				"line_ending": "Windows"
			}
		},
		{
			"file": "game.js",
			"settings":
			{
				"buffer_size": 61754,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.js",
			"settings":
			{
				"buffer_size": 12607,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/debug.php",
			"settings":
			{
				"buffer_size": 184,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3420,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2261,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "flights.js",
			"settings":
			{
				"buffer_size": 18270,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 3681,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3471,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "autoload.php",
			"settings":
			{
				"buffer_size": 7236,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "log.txt",
			"settings":
			{
				"buffer_size": 21966,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 14 files for \"setZoom\"\n\nC:\\xampp\\htdocs\\fire\\cam.js:\n   25  \t},\n   26  \n   27: \tsetZoom: function(val){\n   28  \t\tthis.z = val;\n   29  \n\nC:\\xampp\\htdocs\\fire\\game.js:\n  744  \n  745  \tthis.initDeployment = function(){\n  746: \t\tcam.setZoom(0.6);\n  747  \t\tgame.draw();\n  748  \t\t//cam.setFocus()\n  ...\n 1288  \t\twindow.then = Date.now();\n 1289  \t\twindow.startTime = then;\n 1290: \t\tcam.setZoom(0.7);\n 1291  \t\tthis.animating = 1;\n 1292  \t\tthis.animateDeployment();\n ....\n 1382  \t\t\tgame.getUnitById(aUnit).select();\n 1383  \t\t}\n 1384: \t\tcam.setZoom(1);\n 1385  \t\tsetFPS(60);\n 1386  \n\n4 matches across 2 files\n\n\nSearching 14 files for \"adjustZoom\"\n\nC:\\xampp\\htdocs\\fire\\cam.js:\n   39  \t},\n   40  \t\n   41: \tadjustZoom: function(e, pos){\n   42  \t\tif (e.originalEvent.wheelDelta == 120) {\n   43  \t\t\tthis.z = Math.min(2, this.z + 0.2);\n\nC:\\xampp\\htdocs\\fire\\script.js:\n   85  \tvar pos = new Point(e.clientX - offset.x, e.clientY - offset.y);\n   86  \tif (game){\n   87: \t\tcam.adjustZoom(e, pos);\n   88  \t\t//game.draw();\n   89  \t}\t\n\n2 matches across 2 files\n\n\nSearching 14 files for \"adjustZoom\"\n\nC:\\xampp\\htdocs\\fire\\cam.js:\n   40  \t},\n   41  \t\n   42: \tadjustZoom: function(e, pos){\n   43  \t\tif (e.originalEvent.wheelDelta == 120) {\n   44  \t\t\tthis.z = Math.min(2, this.z + 0.2);\n\nC:\\xampp\\htdocs\\fire\\script.js:\n   85  \tvar pos = new Point(e.clientX - offset.x, e.clientY - offset.y);\n   86  \tif (game){\n   87: \t\tcam.adjustZoom(e, pos);\n   88  \t\t//game.draw();\n   89  \t}\t\n\n2 matches across 2 files\n\n\nSearching 73 files for \"baseHitChance \"\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n  209  \tthis.damages = data.damages || [];\n  210  \tthis.crits = [];\n  211: \tthis.baseHitChance = data.baseHitChance;\n  212  \tthis.destroyed = data.destroyed;\n  213  \tthis.disabled = data.disabled;\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  273  \t\t\tfor (var j = 1; j <= this.flightDeploy.loads[i].launch; j++){\n  274  \t\t\t\tvar f = new Fighter({id: j, name: this.flightDeploy.loads[i].name, ep: 0, mass: this.flightDeploy.loads[i].mass, integrity: this.flightDeploy.loads[i].integrity, value: 0, negation: 0, crits: 0, destroyed: 0})\n  275: \t\t\t\t\tf.baseHitChance = 0;\n  276  \t\t\t\tflight.structures.push(f);\n  277  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\mixed.js:\n  224  }\n  225  \n  226: Mixed.prototype.getBaseHitChance = function(){\n  227  \tvar chance = 0;\n  228  \tvar amount = 0;\n\nC:\\xampp\\htdocs\\fire\\server\\fighter.php:\n   41  \n   42  \tpublic function setBaseStats(){\n   43: \t\t$this->baseHitChance = ceil($this->mass/2);\n   44  \t}\n   45  }\n\nC:\\xampp\\htdocs\\fire\\server\\mixed.php:\n   28  \n   29  \tpublic function setBaseStats(){\n   30: \t\t$this->baseHitChance = 0;\n   31  \t\t$this->baseTurnCost = 0;\n   32  \t\t$this->baseTurnDelay = 0;\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  141  \n  142  \tpublic function setBaseStats(){\n  143: \t\t$this->baseHitChance = ceil(pow($this->mass, 1/3)*5);\n  144: \t\t//$this->baseHitChance = ceil(pow($this->mass, 0.3)*4)+20;\n  145  \t\t$this->baseTurnCost = round(pow($this->mass, 1.25)/30000, 2);\n  146  \t\t//$this->baseTurnDelay = round(pow($this->mass, 0.5)/35, 2);\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\structure.php:\n  144  \n  145  \tpublic function setBaseStats(){\n  146: \t\t$this->baseHitChance = ceil(sqrt($this->mass)*5);\n  147  \t}\n  148  \n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php:\n   41  \n   42  \tpublic function setBaseStats(){\n   43: \t\t$this->baseHitChance = ceil(sqrt($this->mass)*5);\n   44  \t}\n   45  }\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n   16  \tthis.shipType = data.shipType;\n   17  \tthis.available = data.available;\n   18: \tthis.baseHitChance = data.baseHitChance || 0;\n   19  \tthis.baseImpulse = data.baseImpulse || 0;\n   20  \tthis.traverse = data.traverse\n   ..\n 2921  \n 2922  \n 2923: Ship.prototype.getBaseHitChance = function(){\n 2924  \treturn this.baseHitChance;\n 2925  }\n\n12 matches across 9 files\n\n\nSearching 73 files for \"LACKINGF\"\n\n0 matches\n\nSearching 73 files for \"lacking f\"\n\nC:\\xampp\\htdocs\\fire\\script.js:\n  278  \t\t\t\t\t\t\t\tvalidWeapon = true;\n  279  \t\t\t\t\t\t\t} else msg = \"Not in weapon arc\";\n  280: \t\t\t\t\t\t} else msg = \"Lacking fire resolution\";\n  281  \t\t\t\t\t}\n  282  \t\t\t\t\telse if (system.posIsOnArc(shipLoc, pos, facing)){ // ship vs ship/fighter\n\n1 match in 1 file\n\n\nSearching 73 files for \"getReso\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n 1575  \tthis.resolveFire = function(){\n 1576  \t\tthis.resetImageData();\n 1577: \t\tthis.getResolvingFireOrders();\n 1578  \t\tthis.getShotDetails();\n 1579  \t\tthis.getFireAnimationDetails();\n ....\n 1607  \t}\n 1608  \n 1609: \tthis.getResolvingFireOrders= function(){\n 1610  \t\tthis.fireOrders = [];\n 1611  \t\tfor (var i = 0; i < this.ships.length; i++){\n\n2 matches in 1 file\n\n\nSearching 73 files for \"crits[]\"\n\nC:\\xampp\\htdocs\\fire\\server\\mixed.php:\n   51  \t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->crits); $j++){\n   52  \t\t\t\tif ($this->structures[$i]->crits[$j]->turn == $turn){\n   53: \t\t\t\t\t$crits[] = $this->structures[$i]->crits[$j];\n   54  \t\t\t\t}\n   55  \t\t\t}\n   ..\n   84  \t\t\tfor ($k = 0; $k < sizeof($this->structures); $k++){\n   85  \t\t\t\tif ($this->structures[$k]->id == $crits[$j]->systemid){\n   86: \t\t\t\t\t$this->structures[$k]->crits[] = $crits[$j];\n   87  \t\t\t\t\tbreak;\n   88  \t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  349  \t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$k]->systems); $l++){\n  350  \t\t\t\t\tif ($this->structures[$k]->systems[$l]->id == $crits[$j]->systemid){\n  351: \t\t\t\t\t\t$this->structures[$k]->systems[$l]->crits[] = $crits[$j];\n  352  \t\t\t\t\t\tbreak 2;\n  353  \t\t\t\t\t}\n  ...\n  356  \t\t\tfor ($k = 0; $k < sizeof($this->primary->systems); $k++){\n  357  \t\t\t\tif ($this->primary->systems[$k]->id == $crits[$j]->systemid){\n  358: \t\t\t\t\t$this->primary->systems[$k]->crits[] = $crits[$j];\n  359  \t\t\t\t\tbreak;\n  360  \t\t\t\t}\n  ...\n  956  \t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$j]->systems[$k]->crits); $l++){\n  957  \t\t\t\t\tif ($this->structures[$j]->systems[$k]->crits[$l]->turn == $turn){\n  958: \t\t\t\t\t\t$crits[] = $this->structures[$j]->systems[$k]->crits[$l];\n  959  \t\t\t\t\t}\n  960  \t\t\t\t}\n  ...\n  964  \t\t\tfor ($l = 0; $l < sizeof($this->primary->systems[$k]->crits); $l++){\n  965  \t\t\t\tif ($this->primary->systems[$k]->crits[$l]->turn == $turn){\n  966: \t\t\t\t\t$crits[] = $this->primary->systems[$k]->crits[$l];\n  967  \t\t\t\t}\n  968  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\structure.php:\n  232  \t\t\tif (mt_rand(0, 1)){\n  233  \t\t\t\tDebug::log(\"Droput!\");\n  234: \t\t\t\t$this->crits[] = new Crit(\n  235  \t\t\t\t\tsizeof($this->crits)+1,\n  236  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  201  \t\t\t\t}\n  202  \n  203: \t\t\t\t$this->crits[] = new Crit(\n  204  \t\t\t\t\tsizeof($this->crits)+1,\n  205  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php:\n   46  \t\tif ($effect){\n   47  \t\t\tif ($fire->target->flight || $fire->target->salvo){\n   48: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 0, 0, 1);\n   49  \t\t\t\t$system->destroyed = true;\n   50  \t\t\t}\n   51  \t\t\telse if (is_a($system, \"Primary\")){\n   52  \t\t\t\t$reactor = $fire->target->getSystemByName(\"Reactor\");\n   53: \t\t\t\t$reactor->crits[] = new Crit(sizeof($reactor->crits)+1, $reactor->parentId, $reactor->id, $fire->turn, \"Output\", 1, 0.1, 1);\n   54  \t\t\t}\n   55  \t\t\telse if ($system->weapon && !$system->isDisabled($fire->turn)){\n   56: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 1, 0, 1);\n   57  \t\t\t\t$system->disabled = true;\n   58  \t\t\t}\n\n11 matches across 5 files\n\n\nSearching 73 files for \"crits[] =\"\n\nC:\\xampp\\htdocs\\fire\\server\\mixed.php:\n   51  \t\t\tfor ($j = 0; $j < sizeof($this->structures[$i]->crits); $j++){\n   52  \t\t\t\tif ($this->structures[$i]->crits[$j]->turn == $turn){\n   53: \t\t\t\t\t$crits[] = $this->structures[$i]->crits[$j];\n   54  \t\t\t\t}\n   55  \t\t\t}\n   ..\n   84  \t\t\tfor ($k = 0; $k < sizeof($this->structures); $k++){\n   85  \t\t\t\tif ($this->structures[$k]->id == $crits[$j]->systemid){\n   86: \t\t\t\t\t$this->structures[$k]->crits[] = $crits[$j];\n   87  \t\t\t\t\tbreak;\n   88  \t\t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\ship.php:\n  349  \t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$k]->systems); $l++){\n  350  \t\t\t\t\tif ($this->structures[$k]->systems[$l]->id == $crits[$j]->systemid){\n  351: \t\t\t\t\t\t$this->structures[$k]->systems[$l]->crits[] = $crits[$j];\n  352  \t\t\t\t\t\tbreak 2;\n  353  \t\t\t\t\t}\n  ...\n  356  \t\t\tfor ($k = 0; $k < sizeof($this->primary->systems); $k++){\n  357  \t\t\t\tif ($this->primary->systems[$k]->id == $crits[$j]->systemid){\n  358: \t\t\t\t\t$this->primary->systems[$k]->crits[] = $crits[$j];\n  359  \t\t\t\t\tbreak;\n  360  \t\t\t\t}\n  ...\n  956  \t\t\t\tfor ($l = 0; $l < sizeof($this->structures[$j]->systems[$k]->crits); $l++){\n  957  \t\t\t\t\tif ($this->structures[$j]->systems[$k]->crits[$l]->turn == $turn){\n  958: \t\t\t\t\t\t$crits[] = $this->structures[$j]->systems[$k]->crits[$l];\n  959  \t\t\t\t\t}\n  960  \t\t\t\t}\n  ...\n  964  \t\t\tfor ($l = 0; $l < sizeof($this->primary->systems[$k]->crits); $l++){\n  965  \t\t\t\tif ($this->primary->systems[$k]->crits[$l]->turn == $turn){\n  966: \t\t\t\t\t$crits[] = $this->primary->systems[$k]->crits[$l];\n  967  \t\t\t\t}\n  968  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\structure.php:\n  232  \t\t\tif (mt_rand(0, 1)){\n  233  \t\t\t\tDebug::log(\"Droput!\");\n  234: \t\t\t\t$this->crits[] = new Crit(\n  235  \t\t\t\t\tsizeof($this->crits)+1,\n  236  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  201  \t\t\t\t}\n  202  \n  203: \t\t\t\t$this->crits[] = new Crit(\n  204  \t\t\t\t\tsizeof($this->crits)+1,\n  205  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php:\n   46  \t\tif ($effect){\n   47  \t\t\tif ($fire->target->flight || $fire->target->salvo){\n   48: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 0, 0, 1);\n   49  \t\t\t\t$system->destroyed = true;\n   50  \t\t\t}\n   51  \t\t\telse if (is_a($system, \"Primary\")){\n   52  \t\t\t\t$reactor = $fire->target->getSystemByName(\"Reactor\");\n   53: \t\t\t\t$reactor->crits[] = new Crit(sizeof($reactor->crits)+1, $reactor->parentId, $reactor->id, $fire->turn, \"Output\", 1, 0.1, 1);\n   54  \t\t\t}\n   55  \t\t\telse if ($system->weapon && !$system->isDisabled($fire->turn)){\n   56: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 1, 0, 1);\n   57  \t\t\t\t$system->disabled = true;\n   58  \t\t\t}\n\n11 matches across 5 files\n\n\nSearching 73 files for \"initF\"\n\n0 matches\n\nSearching 73 files for \"initi\"\n\nC:\\xampp\\htdocs\\fire\\ajax.js:\n   64  \t\t\tdatatype: \"json\",\n   65  \t\t\tdata: {\n   66: \t\t\t\t\ttype: \"buyInitialFleet\",\n   67  \t\t\t\t\tgameid: gameid,\n   68  \t\t\t\t\tuserid: userid,\n   ..\n   77  \n   78  \tconfirmDeployment: function(callback){\n   79: \t\tvar initial = [];\n   80  \t\tvar reinforce = [];\n   81  \t\tvar fireOrders = [];\n   ..\n   97  \t\t\t\t\t\t\t\tactions: [ game.ships[i].actions[j] ],\n   98  \t\t\t\t\t\t\t\tid: game.ships[i].id,\n   99: \t\t\t\t\t\t\t\tstatus: \"initial\"\n  100  \t\t\t\t\t\t\t};\n  101: \t\t\t\t\t\t\tinitial.push(ship);\n  102  \t\t\t\t\t\t}\n  103  \t\t\t\t\t\telse {\n  ...\n  136  \t\t\t\t\tturn: game.turn,\n  137  \t\t\t\t\tphase: game.phase,\n  138: \t\t\t\t\tinitial: initial,\n  139  \t\t\t\t\treinforce: reinforce,\n  140  \t\t\t\t\tdeployedFlights: deployedFlights,\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  897  \n  898  \t\tfor (var i = 0; i < this.ships.length; i++){\n  899: \t\t\tvar ship = window.initiateUnit(this.ships[i]);\n  900  \t\t\tvar deployed = 0;\n  901  \t\t\tvar friendly = 0;\n  ...\n  928  \n  929  \t\tfor (var i = 0; i < this.reinforcements.length; i++){\n  930: \t\t\tthis.reinforcements[i] = window.initiateShip(this.reinforcements[i]);\n  931  \t\t\tthis.reinforcements[i].create(); this.reinforcements[i].createBaseDiv();\n  932  \t\t\tthis.reinforcements[i].friendly = 1;\n  ...\n 2177  \t\t\t\t\t\t}\n 2178  \t\t\t\t\t}\n 2179: \t\t\t\t} else popup(\"Reinforces can only be requested in Deployment/Initial Phase.\");\n 2180  \t\t\t})\n 2181  \t\t\t.contextmenu(function(e){\n\nC:\\xampp\\htdocs\\fire\\game.php:\n   27  switch ($manager->phase){\n   28  \tcase -1:\n   29: \t\t$phase = \"Deployment / Initial\";\n   30  \t\tbreak;\n   31  \tcase 0:\n   ..\n  498  \t\t})\n  499  \n  500: \t\twindow.initiateKeyDowns();\n  501  \n  502  \t\tdocument.getElementById(\"combatlogWrapper\").onmousedown = function(){\n  ...\n  591  \n  592  \n  593: \tfunction initiateKeyDowns(){\n  594  \t\t$(this).keypress(function(e){\n  595  \t\t\tif (game){\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  420  \n  421  \t\tfor (var i = 0; i < window.ships.length; i++){\n  422: \t\t\tvar ship = window.initiateShip(window.ships[i]);\n  423  \t\t\t\tship.facing = -90;\n  424  \t\t\tship.actions.push(new Move(-1, \"deploy\", 0, res.x/2, res.y/2, 270, 0, 0));\n\nC:\\xampp\\htdocs\\fire\\lobby.php:\n   54  \t\t\tswitch ($game[\"phase\"]){\n   55  \t\t\t\tcase -1:\n   56: \t\t\t\t\t$phase = \"Deployment / Initial\"; break;\n   57  \t\t\t\tcase 0:\n   58  \t\t\t\t\t$phase = \"Capital Movement\"; break;\n\nC:\\xampp\\htdocs\\fire\\postGameData.php:\n   21  \t\techo $dbManager->leaveGame($_POST[\"userid\"], $_POST[\"gameid\"]);\n   22  \t}\n   23: \telse if ($_POST[\"type\"] == \"buyInitialFleet\") {\n   24  \t\t$rem = $manager->validateFleetCost($_POST[\"ships\"]);\n   25  \t\tif ($rem >= 0){\n   26: \t\t\tif ($dbManager->processInitialBuy($_POST[\"userid\"], $_POST[\"gameid\"], $_POST[\"ships\"], $rem, $_POST[\"ships\"][0][\"faction\"])) {\n   27  \t\t\t\tif ($dbManager->gameIsReady($_POST[\"gameid\"])) {\n   28  \t\t\t\t\tif ($dbManager->startGame($_POST[\"gameid\"])) {\n   ..\n   38  \t}\n   39  \telse if ($_POST[\"type\"] == \"deployment\"){\n   40: \t\tif (isset($_POST[\"initial\"])){\n   41: \t\t\t$dbManager->deployShipsDB($_POST[\"gameid\"], $_POST[\"initial\"]);\n   42  \t\t}\n   43  \t\tif (isset($_POST[\"reinforce\"])){\n\nC:\\xampp\\htdocs\\fire\\server\\dbManager.php:\n  263  \t\t}\n  264  \n  265: \t\tpublic function processInitialBuy($userid, $gameid, $units, $rem, $faction){\n  266  \t\t\t$this->insertUnits($userid, $gameid, $units);\n  267  \t\t\t$this->insertLoads($userid, $gameid, $units);\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n   84  \t\t//$this->handleFighterMovementPhaseNew(); return;\n   85  \t\t//$this->test(); return;\n   86: \t\t//$this->initiateDogfights();\n   87  \t\t//$this->createDogfightFires();\n   88  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  156  }\n  157  \n  158: function initiateUnit(data){\n  159  \tswitch (data.unitType){\n  160: \t\tcase \"Ship\": return window.initiateShip(data);\n  161: \t\tcase \"Flight\": return window.initiateFlight(data);\n  162: \t\tcase \"Salvo\": return window.initiateSalvo(data);\n  163  \t}\n  164  }\n  165  \n  166: function initiateSalvo(data){\n  167  \tvar salvo = new Salvo(data);\n  168  \n  ...\n  175  \n  176  \n  177: function initiateFlight(data){\n  178  \t//return\n  179  \n  ...\n  201  }\n  202  \n  203: function initiateShip(data){\n  204  \n  205  \tvar ship = new Ship(data);\n\n27 matches across 9 files\n\n\nSearching 73 files for \"initiate\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  897  \n  898  \t\tfor (var i = 0; i < this.ships.length; i++){\n  899: \t\t\tvar ship = window.initiateUnit(this.ships[i]);\n  900  \t\t\tvar deployed = 0;\n  901  \t\t\tvar friendly = 0;\n  ...\n  928  \n  929  \t\tfor (var i = 0; i < this.reinforcements.length; i++){\n  930: \t\t\tthis.reinforcements[i] = window.initiateShip(this.reinforcements[i]);\n  931  \t\t\tthis.reinforcements[i].create(); this.reinforcements[i].createBaseDiv();\n  932  \t\t\tthis.reinforcements[i].friendly = 1;\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  498  \t\t})\n  499  \n  500: \t\twindow.initiateKeyDowns();\n  501  \n  502  \t\tdocument.getElementById(\"combatlogWrapper\").onmousedown = function(){\n  ...\n  591  \n  592  \n  593: \tfunction initiateKeyDowns(){\n  594  \t\t$(this).keypress(function(e){\n  595  \t\t\tif (game){\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  420  \n  421  \t\tfor (var i = 0; i < window.ships.length; i++){\n  422: \t\t\tvar ship = window.initiateShip(window.ships[i]);\n  423  \t\t\t\tship.facing = -90;\n  424  \t\t\tship.actions.push(new Move(-1, \"deploy\", 0, res.x/2, res.y/2, 270, 0, 0));\n\nC:\\xampp\\htdocs\\fire\\server\\manager.php:\n   84  \t\t//$this->handleFighterMovementPhaseNew(); return;\n   85  \t\t//$this->test(); return;\n   86: \t\t//$this->initiateDogfights();\n   87  \t\t//$this->createDogfightFires();\n   88  \n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  156  }\n  157  \n  158: function initiateUnit(data){\n  159  \tswitch (data.unitType){\n  160: \t\tcase \"Ship\": return window.initiateShip(data);\n  161: \t\tcase \"Flight\": return window.initiateFlight(data);\n  162: \t\tcase \"Salvo\": return window.initiateSalvo(data);\n  163  \t}\n  164  }\n  165  \n  166: function initiateSalvo(data){\n  167  \tvar salvo = new Salvo(data);\n  168  \n  ...\n  175  \n  176  \n  177: function initiateFlight(data){\n  178  \t//return\n  179  \n  ...\n  201  }\n  202  \n  203: function initiateShip(data){\n  204  \n  205  \tvar ship = new Ship(data);\n\n13 matches across 5 files\n\n\nSearching 73 files for \"modifiers\"\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n  285  \tif (this.crits.length){\n  286  \t\t\t$(table)\n  287: \t\t\t\t.append($(\"<tr>\").append($(\"<td>\").attr(\"colspan\", 2).css(\"fontSize\", 16).css(\"borderBottom\", \"1px solid white\").css(\"borderTop\", \"1px solid white\").html(\"Modifiers\")))\n  288  \n  289  \t\tfor (var i = 0; i < this.crits.length; i++){\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n   41  \t}\n   42  \tvar div = $(ele) || $(\"#systemDetailsDiv\");\n   43: \t\tdiv.find(\".modifiers\").remove();\n   44  \tvar boost = this.getBoostLevel();\n   45  \tvar table;\n   46  \tif (boost || this.crits.length){\n   47: \t\ttable = $(\"<table>\").addClass(\"modifiers\").append($(\"<tr>\").append($(\"<th>\").html(\"Modifiers\").attr(\"colSpan\", 2)));\n   48  \t\tif (boost){\n   49  \t\t\tfor (var i = 0; i < this.boostEffect.length; i++){\n\n4 matches across 2 files\n\n\nSearching 73 files for \"Function figh\"\n\nC:\\xampp\\htdocs\\fire\\flights.js:\n  533  }\n  534  \n  535: function Fighter(data){\n  536  \tSingle.call(this, data);\n  537  \tthis.fighter = 1;\n\n1 match in 1 file\n\n\nSearching 73 files for \"hover =\"\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n  256  }\n  257  \n  258: Single.prototype.hover = function(e){\n  259  \tif (!this.highlight){\n  260  \t\tthis.highlight = true;\n  ...\n  508  \t}\n  509  \n  510: \tthis.hover = function(e){\n  511  \t\tif (game.flightDeploy){return false;}\n  512  \t\tif (this.highlight){\n  ...\n  611  \t}\n  612  \n  613: \tthis.hover = function(e){\n  614  \t\tif (game.flightDeploy){return false;}\n  615  \t\tif (this.highlight){\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  976  \t}\n  977  \n  978: \tthis.doGenericHover = function(unit){\n  979  \t\tif (unit.id == game.shortInfo){\n  980  \t\t\treturn;\n  ...\n  995  \t}\n  996  \n  997: \tthis.resetHover = function(){\n  998  \t\tif (game.deploying){\n  999  \t\t\tgame.drawDeploymentZone();\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  500  \t}\n  501  \n  502: \tthis.doSpecificHover = function(){\n  503  \t\tthis.drawEW();\n  504  \t\tthis.drawMovePlan();\n  ...\n 2817  }\n 2818  \n 2819: Ship.prototype.undoHover = function(){\n 2820  \tgame.resetHover();\n 2821  \t//salvoCtx.clearRect(0, 0, res.x, res.y);\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n  105  \treturn this;\n  106  }\n  107: System.prototype.hover = function(e){\n  108  \tif (game.flightDeploy){return false;}\n  109  \tif (this.highlight){\n  ...\n  825  \n  826  \n  827: PrimarySystem.prototype.hover = function(e){\n  828  \tif (game.flightDeploy){return false;}\n  829  \tif (this.highlight){\n  ...\n 1162  }\n 1163  \n 1164: Sensor.prototype.hover = function(e){\n 1165  \tPrimarySystem.prototype.hover.call(this, e);\n 1166  \tif (game.phase == -2){return;}\n ....\n 2604  Hangar.prototype = Object.create(PrimarySystem.prototype);\n 2605  \n 2606: Hangar.prototype.hover = function(e){\n 2607  \tSystem.prototype.hover.call(this, e);\n 2608  \tif (game.getUnitById(this.parentId).hasWeaponsSelected()){\n\n11 matches across 4 files\n\n\nSearching 73 files for \"new Crit\"\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n  307  \t\t}\n  308  \t\tfor (var k = 0; k < data.crits.length; k++){\n  309: \t\t\tthis.systems.push(new Crit(data.crits[k]));\n  310  \t\t}\n  311  \t}\n\nC:\\xampp\\htdocs\\fire\\server\\dbManager.php:\n 1268  \t\t\t\t\tfor ($j = 0; $j < (sizeof($result)); $j++){\n 1269  \t\t\t\t\t\t//var_export($result[$j]);\n 1270: \t\t\t\t\t\t$crit = new Crit(\n 1271  \t\t\t\t\t\t\t$result[$j][\"id\"],\n 1272  \t\t\t\t\t\t\t$result[$j][\"shipid\"],\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\structure.php:\n  232  \t\t\tif (mt_rand(0, 1)){\n  233  \t\t\t\tDebug::log(\"Droput!\");\n  234: \t\t\t\t$this->crits[] = new Crit(\n  235  \t\t\t\t\tsizeof($this->crits)+1,\n  236  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\system.php:\n  201  \t\t\t\t}\n  202  \n  203: \t\t\t\t$this->crits[] = new Crit(\n  204  \t\t\t\t\tsizeof($this->crits)+1,\n  205  \t\t\t\t\t$this->parentId, $this->id, $turn,\n\nC:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php:\n   46  \t\tif ($effect){\n   47  \t\t\tif ($fire->target->flight || $fire->target->salvo){\n   48: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 0, 0, 1);\n   49  \t\t\t\t$system->destroyed = true;\n   50  \t\t\t}\n   51  \t\t\telse if (is_a($system, \"Primary\")){\n   52  \t\t\t\t$reactor = $fire->target->getSystemByName(\"Reactor\");\n   53: \t\t\t\t$reactor->crits[] = new Crit(sizeof($reactor->crits)+1, $reactor->parentId, $reactor->id, $fire->turn, \"Output\", 1, 0.1, 1);\n   54  \t\t\t}\n   55  \t\t\telse if ($system->weapon && !$system->isDisabled($fire->turn)){\n   56: \t\t\t\t$system->crits[] = new Crit(sizeof($system->crits)+1, $system->parentId, $system->id, $fire->turn, \"Disabled\", 1, 0, 1);\n   57  \t\t\t\t$system->disabled = true;\n   58  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\shared.js:\n  193  \n  194  \t\tfor (var k = 0; k < data.structures[j].crits.length; k++){\n  195: \t\t\tflight.structures[j].crits.push(new Crit(data.structures[j].crits[k]));\n  196  \t\t}\n  197  \n  ...\n  218  \n  219  \t\tfor (var l = 0; l < data.primary.systems[j].crits.length; l++){\n  220: \t\t\tprimSystem.crits.push(new Crit(data.primary.systems[j].crits[l]));\n  221  \t\t}\n  222  \n  ...\n  251  \n  252  \t\t\t\tfor (var l = 0; l < data.structures[j].systems[k].crits.length; l++){\n  253: \t\t\t\t\tsystem.crits.push(new Crit(data.structures[j].systems[k].crits[l]));\n  254  \t\t\t\t}\n  255  \t\t\t\tsystem.setState();\n\n10 matches across 6 files\n\n\nSearching 73 files for \"drawFlightP\"\n\n0 matches",
			"settings":
			{
				"buffer_size": 21726,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "gameSetup.php",
			"settings":
			{
				"buffer_size": 17080,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1771,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2738,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/demos.php",
			"settings":
			{
				"buffer_size": 1992,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 1764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/haven.php",
			"settings":
			{
				"buffer_size": 1686,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 3139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "getGameData.php",
			"settings":
			{
				"buffer_size": 663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shiptest.php",
			"settings":
			{
				"buffer_size": 6815,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2303,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "combattest.php",
			"settings":
			{
				"buffer_size": 2850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2688,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.php",
			"settings":
			{
				"buffer_size": 2379,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 2518,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "balltest.php",
			"settings":
			{
				"buffer_size": 1297,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "systemtest.php",
			"settings":
			{
				"buffer_size": 3559,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/server/wing.php",
		"/C/xampp/htdocs/fire/squadron.js",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/debug.php",
		"/C/xampp/htdocs/fire/server/ship.php",
		"/C/xampp/htdocs/fire/server/salvo.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/server/flight.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/ships/tinashi.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/paired.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/server/ships/Haven.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/volley.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
		"/C/xampp/htdocs/fire/server/ships/demos.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/manager.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/server/ships/tethys.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"setPureImage",
			"",
			"flights.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.pphp",
			"",
			"*.js",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"style.css",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"this.turnAngles = {}",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"manager.php",
			"*.php",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*,php",
			"",
			"*.php",
			"\t",
			"",
			"*.js",
			"",
			"classes.js",
			"",
			"*.js",
			".js",
			"",
			"systems.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"lobby.php",
			"",
			"*.php",
			"",
			"addFighter",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"aUnit",
			"",
			"aShip",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"resolveBallisticFireOrders",
			"resolveballi",
			"resolveBallisticFireOrders",
			"getValidEffects",
			"animateFireOrders",
			"animatefi",
			"drawFlightP",
			"size =",
			"disabled",
			"crit",
			"getSystemDetailsDiv",
			"systemd",
			"new Crit",
			"hover =",
			"Function figh",
			"modifiers",
			"initiate",
			"initi",
			"initF",
			"crits[] =",
			"crits[]",
			"getReso",
			"lacking f",
			"LACKINGF",
			"baseHitChance ",
			"shiplocks",
			"pulse.prototype.getan",
			"getGunOrigin",
			"origin",
			"TurnDel",
			"baseimpulse",
			"baseturndelay ",
			"setFocus",
			"adjustZoom",
			"setfocus",
			"setfocus,",
			"setfocus",
			"adjustZoom",
			"setZoom",
			"focus",
			"setFocus",
			"focus",
			"focus = ",
			"focus ",
			"cam.setfocus",
			"setzoom",
			"createcombatloge",
			"guns = ",
			"combatlogentry",
			"Trajectory",
			"getremainingammo",
			"initbal",
			"calculate",
			"calculateo",
			"calculateot",
			"this.getFireDistance = functio",
			"elapsed",
			"getOffensiveBonus",
			"insert into actions",
			"insert into units",
			"insert into a",
			"getActiveBallistics",
			"setmiss",
			"canLaunchFlight",
			"game.enableFlightDeployment()",
			"insertMissions",
			"insertinto m",
			"error",
			"insertmis",
			"insertMissions",
			"insertMission",
			"into miss",
			"into mi",
			"deployOverlay",
			"deployOverlay\n",
			"ueMission = function(pos)",
			"-3",
			"switchdiv",
			"updateSystemLoad",
			"insertUnits",
			"updateSystemLoad",
			"popup",
			"confirmfiring",
			"getDeployState",
			"setfireorder ",
			"setfireorder",
			"highlightFireOrder",
			"setfireorder ",
			"dodeployflight",
			"return Mixed.p",
			"return Ship.p",
			"hasUnresolvedFireOrder",
			"hasFireorder",
			"hasfireo",
			"popup",
			"switchToUnit",
			"popup(h",
			"hasNoFires",
			"disengage f",
			"confirmOrders",
			"flight f",
			"combatloge",
			"weaponaimevent",
			"setPreMoveImage",
			"setlayout",
			"getPointInDirection",
			"fsize",
			"const.ew.l",
			"setshiplock",
			"drawSensorArc",
			"len",
			"/20",
			"drawEW",
			"sensore",
			"testCriticals",
			"fire id:",
			"getResolvingFireOrders",
			"weaponaime",
			"flightDiv",
			"new Missile",
			"systems.",
			"gettabled",
			"settimeloaded",
			"setstate",
			"getLoadLevel",
			"setTimeLoaded",
			"doboost = fu",
			"doboost()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"selectFromPopup",
			"speed",
			"font16",
			"font15",
			"DBManager::app()->updateFireOrders",
			"getFireAngle",
			"getImpactAngle",
			"insertClientFireOrder",
			"getAngledHitSection",
			"getAngledHitChance",
			"getAnglesHitChance",
			"target.",
			"setRawImage",
			"setPureImage",
			"",
			"Local Units",
			"shipImages",
			"game.getUnitByClick",
			"getUnitById",
			"resolveFlightMovement",
			"isCloseCombat($id)",
			"getHitSection",
			"s",
			"pSize",
			"isCloseCombat",
			"setPostMoveFacing",
			"updateIntercepts",
			"[$j]",
			"$stack[$i][j]",
			"planCtx",
			"inRange",
			"updateTargets",
			"resolveUnitMovement",
			"animateUnitMovement",
			"getIncomingUnits",
			"drawMovePlan",
			"launchData",
			"$",
			"$unit",
			"\"<td>\"",
			"\"<tr>\"",
			", ",
			");",
			"draw",
			"isExposed",
			"MediumTwinIon",
			"#27e627",
			"#24de24",
			"lime",
			"lime;",
			"getCurrentImpulse();",
			"getCurrentImplse();",
			"x.drawX",
			"shooter.drawX",
			"setDrawData",
			"setDrawData()",
			"getPlannedPosition",
			"remainingDelay",
			"delay",
			"getPlannedFacing()",
			"salvo",
			".getCurrentImpulse()",
			"this.getCurrentImpulse",
			"this.getCurrentImPulse",
			"new Action(-1, ",
			"unitGUI",
			"getDmgRangeMod($fire)",
			"\"Thrust",
			"getDmgString",
			"Damage loss",
			".getRangeDmgMod",
			"getDmgRangeMod",
			"getDmgRangePenalty",
			"dmgLoss",
			"mouse",
			"salvo",
			"mouseCtx",
			"system",
			"this.turnAngles = {}",
			"IsOnMovementArc",
			"getTurnStep",
			"$this->updatePlayerStatus",
			"\"Disabled\"",
			"doOverkill",
			"applyOverkill",
			"new",
			"$this->boostEffect[] = new",
			"$manager->incoming[$i]",
			"$units",
			"insertServerActions",
			"$units[$i][\"actions\"][$j]",
			"insertClientActions",
			"drawMovePlan",
			"element",
			"",
			"getRemainingIntegrity",
			"getImpulseProfileMod",
			"getShots($this->turn)",
			"public function getShots($turn){",
			"getEWSettings",
			"ctx",
			"</span>",
			"<span class='red'",
			"<span",
			"ballistics",
			"if (this.destroyed || this.disabled || this.locked){",
			"$this",
			"doDamage($fire, $roll, $system)",
			"rollToHit",
			"getSection",
			"angle",
			"section",
			"$negation = $fire->target->getArmourValue($fire, $hitSystem);",
			"$negation = $fire->target->getArmourElement($fire) * $hitSystem->getArmourMod();",
			"salvo",
			"move",
			"moveAngles",
			"getPlannedFacing",
			"planCtx",
			"moveCtx",
			"Debug::",
			"drawEW",
			"mouse",
			"loc",
			"salvoCtx",
			"salvoPathCtx",
			".",
			"= data."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 43,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								1599,
								1599
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1018.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5249,
						"regions":
						{
						},
						"selection":
						[
							[
								741,
								741
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 122.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15647,
						"regions":
						{
						},
						"selection":
						[
							[
								5393,
								5393
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 29.0,
						"translation.y": 4493.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20375,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21932.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2951,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13744,
						"regions":
						{
						},
						"selection":
						[
							[
								4604,
								4604
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2871.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85035,
						"regions":
						{
						},
						"selection":
						[
							[
								70140,
								70140
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 43751.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6015,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4253.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 78.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								591,
								591
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								1894,
								1894
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 253.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18255,
						"regions":
						{
						},
						"selection":
						[
							[
								13945,
								13953
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 708.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1532,
						"regions":
						{
						},
						"selection":
						[
							[
								1063,
								1063
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 402.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								452,
								452
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3640,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2775,
						"regions":
						{
						},
						"selection":
						[
							[
								1780,
								1780
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2568,
						"regions":
						{
						},
						"selection":
						[
							[
								2366,
								2366
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 133.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								1768,
								1768
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 27.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1611,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4540,
						"regions":
						{
						},
						"selection":
						[
							[
								882,
								882
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 56.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5248,
						"regions":
						{
						},
						"selection":
						[
							[
								4666,
								4666
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3404.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2399,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								152
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5133,
						"regions":
						{
						},
						"selection":
						[
							[
								761,
								761
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4819,
						"regions":
						{
						},
						"selection":
						[
							[
								4498,
								4498
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2450.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5056,
						"regions":
						{
						},
						"selection":
						[
							[
								1043,
								1043
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6601,
						"regions":
						{
						},
						"selection":
						[
							[
								6319,
								6319
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 948.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2928,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1614,
						"regions":
						{
						},
						"selection":
						[
							[
								1270,
								1270
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 654.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6049,
						"regions":
						{
						},
						"selection":
						[
							[
								2614,
								2616
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1462.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4487,
						"regions":
						{
						},
						"selection":
						[
							[
								549,
								549
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 169.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9290,
						"regions":
						{
						},
						"selection":
						[
							[
								8970,
								8970
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4996.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29423,
						"regions":
						{
						},
						"selection":
						[
							[
								3588,
								3588
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 292.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								4111,
								4111
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2294.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86940,
						"regions":
						{
						},
						"selection":
						[
							[
								46167,
								46167
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29664.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8389,
						"regions":
						{
						},
						"selection":
						[
							[
								2526,
								2526
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1345.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3046,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1590,
						"regions":
						{
						},
						"selection":
						[
							[
								711,
								711
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1418,
						"regions":
						{
						},
						"selection":
						[
							[
								860,
								860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16158,
						"regions":
						{
						},
						"selection":
						[
							[
								4345,
								4345
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2693.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6730,
						"regions":
						{
						},
						"selection":
						[
							[
								6730,
								6730
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4110.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41929,
						"regions":
						{
						},
						"selection":
						[
							[
								23800,
								23826
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14404.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52454,
						"regions":
						{
						},
						"selection":
						[
							[
								22600,
								22600
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14150.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 61754,
						"regions":
						{
						},
						"selection":
						[
							[
								6724,
								6724
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4205.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12607,
						"regions":
						{
						},
						"selection":
						[
							[
								11339,
								11341
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7854.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								700,
								700
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								1313,
								1313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18270,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2993.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								516,
								516
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 51,
					"file": "server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1614,
						"regions":
						{
						},
						"selection":
						[
							[
								771,
								771
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3471,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								795,
								795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 197.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29423,
						"regions":
						{
						},
						"selection":
						[
							[
								14232,
								14232
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8516.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5056,
						"regions":
						{
						},
						"selection":
						[
							[
								1003,
								1003
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 272.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4819,
						"regions":
						{
						},
						"selection":
						[
							[
								4642,
								4642
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2378.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7236,
						"regions":
						{
						},
						"selection":
						[
							[
								664,
								664
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21966,
						"regions":
						{
						},
						"selection":
						[
							[
								20651,
								20651
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 7731.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8389,
						"regions":
						{
						},
						"selection":
						[
							[
								1389,
								1389
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 526.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2481,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5133,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85035,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 44707.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86940,
						"regions":
						{
						},
						"selection":
						[
							[
								1845,
								1845
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 104.0,
						"translation.y": 387.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6015,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1575.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52454,
						"regions":
						{
						},
						"selection":
						[
							[
								44566,
								44566
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29524.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8389,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"spell_check": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15647,
						"regions":
						{
						},
						"selection":
						[
							[
								9497,
								9497
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6649.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52454,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2399,
						"regions":
						{
						},
						"selection":
						[
							[
								384,
								384
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 61754,
						"regions":
						{
						},
						"selection":
						[
							[
								47585,
								47585
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31853.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 55,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21726,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										90,
										97
									],
									[
										239,
										246
									],
									[
										389,
										396
									],
									[
										541,
										548
									],
									[
										704,
										714
									],
									[
										968,
										978
									],
									[
										1145,
										1155
									],
									[
										1409,
										1419
									],
									[
										1647,
										1661
									],
									[
										2101,
										2115
									],
									[
										2245,
										2259
									],
									[
										2427,
										2441
									],
									[
										2587,
										2601
									],
									[
										2778,
										2792
									],
									[
										2843,
										2857
									],
									[
										3150,
										3164
									],
									[
										3330,
										3344
									],
									[
										3523,
										3537
									],
									[
										3544,
										3558
									],
									[
										3699,
										3713
									],
									[
										4024,
										4033
									],
									[
										4321,
										4328
									],
									[
										4457,
										4464
									],
									[
										4825,
										4832
									],
									[
										5064,
										5071
									],
									[
										5363,
										5370
									],
									[
										5609,
										5616
									],
									[
										5849,
										5856
									],
									[
										6102,
										6109
									],
									[
										6311,
										6318
									],
									[
										6502,
										6509
									],
									[
										6763,
										6770
									],
									[
										7057,
										7064
									],
									[
										7278,
										7285
									],
									[
										7694,
										7703
									],
									[
										7933,
										7942
									],
									[
										8232,
										8241
									],
									[
										8478,
										8487
									],
									[
										8718,
										8727
									],
									[
										8971,
										8980
									],
									[
										9180,
										9189
									],
									[
										9371,
										9380
									],
									[
										9632,
										9641
									],
									[
										9926,
										9935
									],
									[
										10147,
										10156
									],
									[
										10510,
										10515
									],
									[
										10655,
										10660
									],
									[
										10849,
										10854
									],
									[
										10889,
										10894
									],
									[
										11022,
										11027
									],
									[
										11031,
										11036
									],
									[
										11241,
										11246
									],
									[
										11445,
										11450
									],
									[
										11720,
										11725
									],
									[
										11901,
										11906
									],
									[
										11985,
										11990
									],
									[
										12131,
										12136
									],
									[
										12340,
										12345
									],
									[
										12609,
										12614
									],
									[
										12855,
										12860
									],
									[
										12992,
										12997
									],
									[
										13308,
										13313
									],
									[
										13383,
										13388
									],
									[
										13543,
										13548
									],
									[
										13862,
										13867
									],
									[
										13998,
										14003
									],
									[
										14086,
										14091
									],
									[
										14144,
										14149
									],
									[
										14203,
										14208
									],
									[
										14267,
										14272
									],
									[
										14371,
										14376
									],
									[
										14457,
										14462
									],
									[
										14704,
										14712
									],
									[
										14908,
										14916
									],
									[
										15144,
										15152
									],
									[
										15290,
										15298
									],
									[
										15499,
										15507
									],
									[
										15798,
										15806
									],
									[
										15934,
										15942
									],
									[
										16022,
										16030
									],
									[
										16080,
										16088
									],
									[
										16139,
										16147
									],
									[
										16203,
										16211
									],
									[
										16307,
										16315
									],
									[
										16393,
										16401
									],
									[
										16771,
										16780
									],
									[
										16963,
										16972
									],
									[
										17127,
										17136
									],
									[
										17179,
										17188
									],
									[
										17420,
										17433
									],
									[
										17632,
										17639
									],
									[
										17752,
										17759
									],
									[
										17887,
										17894
									],
									[
										18056,
										18063
									],
									[
										18181,
										18188
									],
									[
										18347,
										18354
									],
									[
										18470,
										18477
									],
									[
										18655,
										18662
									],
									[
										18804,
										18811
									],
									[
										18947,
										18954
									],
									[
										19164,
										19171
									],
									[
										19488,
										19496
									],
									[
										19696,
										19704
									],
									[
										19920,
										19928
									],
									[
										20111,
										20119
									],
									[
										20372,
										20380
									],
									[
										20666,
										20674
									],
									[
										20887,
										20895
									],
									[
										21189,
										21197
									],
									[
										21367,
										21375
									],
									[
										21556,
										21564
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								21726,
								21726
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 17,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 13055.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12607,
						"regions":
						{
						},
						"selection":
						[
							[
								3817,
								3817
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2833.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16158,
						"regions":
						{
						},
						"selection":
						[
							[
								7459,
								7459
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4491.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17080,
						"regions":
						{
						},
						"selection":
						[
							[
								2548,
								2548
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1316.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13744,
						"regions":
						{
						},
						"selection":
						[
							[
								9536,
								9536
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6821.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								1627,
								1627
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3651,
						"regions":
						{
						},
						"selection":
						[
							[
								421,
								421
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1771,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 160.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3193,
						"regions":
						{
						},
						"selection":
						[
							[
								390,
								390
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 69.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5249,
						"regions":
						{
						},
						"selection":
						[
							[
								3792,
								3800
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3084.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2738,
						"regions":
						{
						},
						"selection":
						[
							[
								1345,
								1345
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								813,
								813
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								409
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1686,
						"regions":
						{
						},
						"selection":
						[
							[
								350,
								350
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3139,
						"regions":
						{
						},
						"selection":
						[
							[
								1860,
								1860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 672.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18270,
						"regions":
						{
						},
						"selection":
						[
							[
								16059,
								16059
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9799.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9290,
						"regions":
						{
						},
						"selection":
						[
							[
								7441,
								7441
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3920.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1532,
						"regions":
						{
						},
						"selection":
						[
							[
								455,
								455
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								627,
								627
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3187.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5248,
						"regions":
						{
						},
						"selection":
						[
							[
								4350,
								4350
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3082.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4487,
						"regions":
						{
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<php",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2928,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 97.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 663,
						"regions":
						{
						},
						"selection":
						[
							[
								652,
								652
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41929,
						"regions":
						{
						},
						"selection":
						[
							[
								14683,
								14689
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 584.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "shiptest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6815,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "combattest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2850,
						"regions":
						{
						},
						"selection":
						[
							[
								1064,
								1064
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								1922,
								1922
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 81.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1860,
								1860
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 546.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2518,
						"regions":
						{
						},
						"selection":
						[
							[
								566,
								566
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "balltest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1297,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "systemtest.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3559,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6601,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6049,
						"regions":
						{
						},
						"selection":
						[
							[
								6039,
								6039
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "<?php",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3440.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4111,
						"regions":
						{
						},
						"selection":
						[
							[
								1944,
								1944
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 686.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3420,
						"regions":
						{
						},
						"selection":
						[
							[
								1651,
								1653
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								859,
								859
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 253.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.456934838385,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "p1.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"s",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"class",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"mana",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"dem",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\demos.php"
			],
			[
				"vor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\vorchan.php"
			],
			[
				"hav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\haven.php"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"puls",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"amtt",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\matter.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"gq",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gquan.php"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"m",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"p",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"g",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"w",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"laser",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"flight",
				"C:\\xampp\\htdocs\\fire\\server\\flight.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"gamej.s",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"plasma",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"pr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\server\\classes.php"
			],
			[
				"mx",
				"C:\\xampp\\htdocs\\fire\\server\\mixed.php"
			],
			[
				"pla",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"game.php",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"stru",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"f",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"sj",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"gamejs",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"ima",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"iam",
				"C:\\xampp\\htdocs\\fire\\imageloader.js"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"de",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"l",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"stly",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"mag",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"cr",
				"C:\\xampp\\htdocs\\fire\\createGame.php"
			],
			[
				"os",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"gl",
				"C:\\xampp\\htdocs\\fire\\global.php"
			],
			[
				"shi",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"sa",
				"C:\\xampp\\htdocs\\fire\\server\\salvo.php"
			],
			[
				"sjh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"lgo",
				"C:\\xampp\\htdocs\\fire\\log.txt"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"gamj",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"style",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"tet",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tethys.php"
			],
			[
				"plas",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"shipt",
				"C:\\xampp\\htdocs\\fire\\shiptest.php"
			],
			[
				"al",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"omg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"fgl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"salv",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"c",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"wi",
				"C:\\xampp\\htdocs\\fire\\server\\wing.php"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"dual",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\dual.php"
			],
			[
				"ship",
				"C:\\xampp\\htdocs\\fire\\server\\ship.php"
			],
			[
				"deb",
				"C:\\xampp\\htdocs\\fire\\server\\debug.php"
			],
			[
				"part",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"em",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\em.php"
			],
			[
				"lase",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"tina",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\tinashi.php"
			],
			[
				"dar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"dark",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\darkner.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"plasm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\plasma.php"
			],
			[
				"stl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"omeg",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 89.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
