{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"atan",
				"atan2"
			],
			[
				"getBa",
				"getBaseOffsetPos"
			],
			[
				"getTurn",
				"getTurnStartFacing"
			],
			[
				"spee",
				"speedChange"
			],
			[
				"background",
				"background-color"
			],
			[
				"JS",
				"json_decode"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"drawSh",
				"drawShipForPreview"
			],
			[
				"elint",
				"elintResult"
			],
			[
				"json",
				"json_encode"
			],
			[
				"addTa",
				"addTableRedBackground"
			],
			[
				"currentS",
				"currentSubTick"
			],
			[
				"current",
				"currentSubStick"
			],
			[
				"var",
				"var_export"
			],
			[
				"Fetch",
				"FETCH_ASSOC"
			],
			[
				"exe",
				"execute"
			],
			[
				"Fet",
				"FETCH_ASSOC"
			],
			[
				"erro",
				"errorCode"
			],
			[
				"fetch",
				"FETCH_ASSOC"
			],
			[
				"isE",
				"isEqual"
			],
			[
				"getL",
				"getLastInsertId"
			],
			[
				"p",
				"possibleLanes"
			],
			[
				"gate",
				"gateSelected"
			],
			[
				"off",
				"offSetX"
			],
			[
				"getH",
				"getHexById"
			],
			[
				"act",
				"activeHover"
			],
			[
				"ships",
				"shipActions"
			],
			[
				"getElement",
				"getElementsByTagName"
			],
			[
				"cont",
				"contextmenu"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"update",
				"updatePlayerStatus"
			],
			[
				"createF",
				"createFleetAndTransfer"
			],
			[
				"selected",
				"selectedHex"
			],
			[
				"createPlanetN",
				"createPlanetNotes1"
			],
			[
				"createEne",
				"createPlanetEnviroment"
			],
			[
				"backgrou",
				"background"
			],
			[
				"backgr",
				"background-color"
			],
			[
				"JSO",
				"json_encode"
			],
			[
				"class",
				"class_exists"
			],
			[
				"mysql",
				"mysql_query"
			],
			[
				"js",
				"json_encode"
			],
			[
				"mysqli",
				"mysqli_fetch"
			],
			[
				"back",
				"background-color"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"s",
				"success"
			],
			[
				"f",
				"function"
			],
			[
				"succ",
				"successSubmit"
			],
			[
				"request",
				"requestHexContentTEST"
			],
			[
				"a",
				"AjaxManager"
			],
			[
				"drawPla",
				"drawPlanetLayer"
			],
			[
				"active",
				"activePlanet"
			],
			[
				"drawSy",
				"drawSystemBackground"
			],
			[
				"systems",
				"systemImages"
			],
			[
				"requ",
				"requiredSpace"
			],
			[
				"farmin",
				"farmAffinity"
			],
			[
				"mooN",
				"moonNumber"
			],
			[
				"checkforH",
				"checkForHoverOutNearPlanet"
			],
			[
				"paret",
				"parentLoc"
			],
			[
				"Par",
				"parentLoc"
			],
			[
				"check",
				"checkForHoverOutNearPlanet"
			],
			[
				"checkSy",
				"checkSystemHover"
			],
			[
				"xml",
				"XMLHttpRequest"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"appendch",
				"appendCHild"
			],
			[
				"creatE",
				"createEmpireDiv"
			],
			[
				"systemb",
				"systemBG"
			],
			[
				"ne",
				"newLanes"
			],
			[
				"origin",
				"originId"
			],
			[
				"orig",
				"originId"
			],
			[
				"or",
				"originId"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"desti",
				"destinationLoc"
			],
			[
				"get",
				"getSystemById"
			],
			[
				"fill",
				"fillStyle"
			],
			[
				"in",
				"inline"
			],
			[
				"creat",
				"createCanvas"
			],
			[
				"getShip",
				"getShipByID"
			],
			[
				"getS",
				"getSystemByID"
			],
			[
				"offs",
				"offsetX"
			],
			[
				"offse",
				"offsetY"
			],
			[
				"offset",
				"offsetY"
			],
			[
				"fireO",
				"fireOrderArray"
			],
			[
				"fS",
				"fShaderQuellcode"
			],
			[
				"font",
				"font-size"
			],
			[
				"ac",
				"activeRaidID"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/xampp/htdocs/fire/ajax.js",
			"settings":
			{
				"buffer_size": 18947,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/cam.js",
			"settings":
			{
				"buffer_size": 1935,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/classes.js",
			"settings":
			{
				"buffer_size": 1485,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/graphics.js",
			"settings":
			{
				"buffer_size": 2139,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/imageloader.js",
			"settings":
			{
				"buffer_size": 1181,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/mathLib.js",
			"settings":
			{
				"buffer_size": 3235,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/shared.js",
			"settings":
			{
				"buffer_size": 991,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/shipclasses.js",
			"settings":
			{
				"buffer_size": 37691,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/style.css",
			"settings":
			{
				"buffer_size": 4249,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/systems.js",
			"settings":
			{
				"buffer_size": 9936,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/script.js",
			"settings":
			{
				"buffer_size": 12764,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/game.php",
			"settings":
			{
				"buffer_size": 3572,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nfunction Game(id, name, status, userid, turn, phase){\n	this.id = id;\n	this.name = name;\n	this.status = status;\n	this.userid = userid;\n	this.turn = turn;\n	this.phase = phase;\n	this.ships = [];\n	this.mode = false;\n	this.deploying = false;\n	this.canSubmit = false;\n\n	this.confirmDeployment = function(){\n		if (! this.canSubmit){\n			ajax.confirmDeployment();\n		}\n	}\n	\n	this.endPhase = function(){\n		if (! this.canSubmit){\n			if (this.phase == 1){\n				var valid = true;\n				for (var i = 0; i < this.ships.length; i++){\n					if (this.ships[i].userid == this.userid){\n						if (this.ships[i].getRemainingImpulse() > 0){\n							valid = false;\n							break;\n						}\n					}\n				}\n\n				if (valid){\n					ajax.confirmMovement();\n				}\n				else {\n					console.log(\"not all ships rdy yet\");\n				}\n			}\n			else if (this.phase == 2){\n				ajax.confirmFiringOrders()\n			}\n		}\n	}\n\n	this.initDeployment = function(){\n		$(\"#deployWrapper\").draggable();\n\n		var toDo = [];\n		var table;\n\n		for (var i = 0; i < this.ships.length; i++){\n			if (this.ships[i].deployed == false){\n				if (this.ships[i].userid == this.userid){\n					toDo.push(this.ships[i]);\n				}\n			}\n		}\n\n		if (toDo.length){\n			table = document.getElementById(\"deployTable\");\n\n			for (var i = 0; i < toDo.length; i++){\n				var tr = document.createElement(\"tr\");				\n					$(tr).data(\"shipid\", toDo[i].id).click(function(e){\n						console.log($(this).data());\n						e.preventDefault();\n						e.stopPropagation();\n\n						if (game.deploying == $(this).data(\"shipid\")){\n							$(this).toggleClass(\"selected\");\n							//game.mode = false;\n							game.deploying = false;\n						}\n						else if (!game.deploying){\n							$(this).toggleClass(\"selected\");\n							//game.mode = -1;\n							game.deploying = $(this).data(\"shipid\");\n						}\n						else {\n							return;\n						}\n					});\n\n				var td = document.createElement(\"td\");\n					var img = toDo[i].img; img.style.width = \"50px\"; img.style.height = \"50px\";\n				td.appendChild(img); tr.appendChild(td);\n\n				var td = document.createElement(\"td\");\n					td.innerHTML = toDo[i].shipClass;\n				tr.appendChild(td);\n\n				var td = document.createElement(\"td\");\n					td.innerHTML = toDo[i].shipType;\n				tr.appendChild(td);\n\n				var td = document.createElement(\"td\");\n					td.innerHTML = \"0\";\n				tr.appendChild(td);\n				table.appendChild(tr);\n			}\n\n\n				var tr = document.createElement(\"tr\");\n					$(tr).click(function(){\n						var valid = true;\n						for (var i = 0; i < game.ships.length; i++){\n							if (game.ships[i].userid == game.userid){\n								if (! game.ships[i].deployed){\n								valid = false;\n								break;\n								}\n							}\n								\n						}\n\n						if (valid){\n							ajax.confirmDeployment();\n						}\n						else console.log(\"nope\");\n					});\n				var th = document.createElement(\"th\");\n					th.colSpan = 4;\n					th.innerHTML = \"Confirm Deployment\";\n					tr.appendChild(th);\n				table.appendChild(tr);\n		}\n		else {\n			$(\"#deployWrapper\").remove();\n		}\n	}\n\n	this.initFiring = function(){\n		this.executeMovement(\"rdy\");\n	}\n\n	this.initDamageControl = function(){\n		this.resolveFire(\"rdy\");\n	}\n	\n	this.initPhase = function(n){\n\n		$(\"#turnDiv\").html(\"Turn: \" + this.turn);\n\n		if (n == -1){\n			this.phase = n;\n				$(\"#phaseDiv\").html(\"Deployment and Initial\")\n				$(\"#phaseSwitchDiv\").fadeIn(200);\n				$(\"#phaseSwitchDiv\").click(function(){\n					game.initDeployment();\n					$(this).fadeOut(200);\n					$(\"#deployWrapper\").fadeIn(200);\n				});\n		}\n		else if (n == 1){\n			this.phase = n;\n				$(\"#phaseDiv\").html(\"Movement\")\n				$(\"#phaseSwitchDiv\").fadeIn(200);\n				$(\"#phaseSwitchDiv\").click(function(){\n					//game.initDeployment();\n					$(this).fadeOut(200);\n				});\n		}\n		else if (n == 2){\n			this.phase = n;\n				$(\"#phaseDiv\").html(\"Firing\")\n				$(\"#phaseSwitchDiv\").fadeIn(200);\n				$(\"#phaseSwitchDiv\").click(function(){\n					game.initFiring();\n					$(this).fadeOut(200);\n				});\n		}\n		else if (n == 3){\n			this.phase = n;\n				$(\"#phaseDiv\").html(\"Damage Control\")\n				$(\"#phaseSwitchDiv\").fadeIn(200);\n				$(\"#phaseSwitchDiv\").click(function(){\n					game.initDamageControl();\n					$(this).fadeOut(200);\n				});\n		}\n	}\n	\n	this.create = function(){\n		for (var i = 0; i < window.ships.length; i++){\n			var shipclass = window.ships[i].shipclass;\n			var owner = window.ships[i].userid;\n			var id = window.ships[i].id;\n			var facing = 0;\n			var x;\n			var y;\n			var deployed;\n			var friendly;\n\n			if (window.ships[i].status == \"deployed\"){deployed = true;}else {deployed = false;}\n			if (window.ships[i].userid == this.userid){friendly = true;}else {friendly = false;}\n\n			var ship = new window[shipclass](id, shipclass.toLowerCase(), x, y, facing, owner, \"blue\");\n				ship.deployed = deployed;\n				ship.friendly = friendly;\n				ship.actions = [];\n\n			//turn 1 - deploy move\n			//turn 2 - all moves incl turn 1\n			//turn 3 - all moves incl turn 2\n\n			// deploy - move - move - move\n			//	 1        1      1     2 \n\n\n			// turn 1\n			// phase 0 - MOVE\n\n			if (! friendly){\n				if (deployed){\n					ship.actions.push(window.ships[i].actions[0]);\n					if (this.phase == -1){\n						continue;\n					}\n					else if (this.phase == 1){\n						for (var j = 1; j < window.ships[i].actions.length; j++){\n							if (window.ships[i].actions[j].turn < game.turn){\n								ship.actions.push(window.ships[i].actions[j]);\n							}\n							else {\n								break;\n							}\n						}\n					}\n					else if (this.phase == 2 || this.phase == 3){\n						ship.actions = window.ships[i].actions;\n					}\n				}\n			}\n			else {\n				for (var j = 0; j < window.ships[i].actions.length; j++){\n					ship.actions.push(window.ships[i].actions[j]);\n				}\n			}\n\n\n			this.ships.push(ship);\n		}\n\n		this.initPhase(this.phase);\n	}\n	\n	this.hasShipOnPos = function(pos){\n		for (var i = 0; i < this.ships.length; i++){\n			if (this.ships[i].deployed){\n				var shipPos = this.ships[i].getBaseOffsetPos();\n				if (shipPos.x < pos.x + this.ships[i].size/3 && shipPos.x > pos.x - this.ships[i].size/3){\n					if (shipPos.y > pos.y - this.ships[i].size/3 && shipPos.y < pos.y + this.ships[i].size/3){\n						return this.ships[i];\n					}\n				}\n			}\n		}	\n		return false;\n	}\n	\n	this.posIsOccupied = function(ship, pos){\n		for (var i = 0; i < this.ships.length; i++){\n			if (this.ships[i].x < pos.x + this.ships[i].size/2 && this.ships[i].x > pos.x - this.ships[i].size/2){\n				if (this.ships[i].y > pos.y - this.ships[i].size/2 && this.ships[i].y < pos.y + this.ships[i].size/2){\n					if (this.ships[i].id != ship.id);\n					return true;\n				}\n			}\n		}	\n		return false;\n	}\n\n	this.getShipByClick = function(pos){\n		for (var i = 0; i < game.ships.length; i++){\n			var ship = game.ships[i];\n			if (ship.deployed){\n				var shipPos = this.ships[i].getBaseOffsetPos();\n				if (pos.x < shipPos.x + ship.size/3 && pos.x > shipPos.x - ship.size/3){\n					if (pos.y > shipPos.y - ship.size/3 && pos.y < shipPos.y + ship.size/3){\n						return ship;\n					}\n				}\n			}\n		}\n	}\n	\n	this.draw = function(){\n		ctx.clearRect(0, 0, canvas.width, canvas.height);\n		//	ctx.moveTo(0, res/2); ctx.lineTo(res, res/2); ctx.stroke();\n		//	ctx.moveTo(res/2, 0); ctx.lineTo(res/2, res); ctx.stroke();\n		this.drawShips();		\n	}\n	\n	this.drawShips = function(){	\n		for (var i = 0; i < this.ships.length; i++){\n			this.ships[i].draw();\n		}\n	}\n	\n	this.drawOtherShips = function(id){\n		for (var i = 0; i < this.ships.length; i++){\n			if (this.ships[i].id != id){\n				this.ships[i].draw();\n			}\n		}\n	}\n\n	this.getShipById = function(id){	\n		for (var i = 0; i < game.ships.length; i++){\n			if (game.ships[i].id == id){\n				return game.ships[i];\n			}\n		}\n	}\n	\n	this.getActiveShip = function(){\n		for (var i = 0; i < this.ships.length; i++){\n			if (this.ships[i].selected){\n				return this.ships[i];\n			}\n		}\n	}\n\n\n	\n	this.executeMovement = function(callback){\n	//	return;\n		if (aShip){\n			game.getShipById(aShip).unselect();\n		}\n\n		//var s = game.ships[1]; game.ships = [s]; console.log(\"ding\");\n		\n		var frames = 30;\n	\n		for (var i = 0; i < this.ships.length; i++){\n\n			if (! this.ships[i].deployed){continue;}\n\n			this.ships[i].animationSetup();\n\n			var speed = this.ships[i].getTotalImpulse();\n			var frameMod = frames / speed ;\n			var moves = 0;\n			\n			for (var j = 0; j < this.ships[i].actions.length; j++){				\n				if (this.ships[i].actions[j].turn == game.turn && this.ships[i].actions[j].type == \"move\"){\n					moves++;\n				}\n			}\n				\n			for (var j = 0; j < this.ships[i].actions.length; j++){\n				if (this.ships[i].actions[j].turn == game.turn){\n					var action = this.ships[i].actions[j];\n					//console.log(move);\n\n					if (action.type == \"deploy\" || action.type == \"speedChange\"){\n						this.ships[i].actions[j].animated = true;\n					}\n					\n					if (j == 0){\n						if (action.type == \"move\"){\n							var v = new Vector(this.ships[i].getBaseOffsetPos(), {x: action.x, y: action.y});\n								v.t = [0, action.dist * frameMod];\n							this.ships[i].actions[j].v = v;\n						}\n						else if (action.type == \"turn\"){\n							this.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n						}\n					}\n					else {\n						if (action.type == \"move\"){\n							var v = new Vector({x: this.ships[i].actions[j-1].x, y: this.ships[i].actions[j-1].y}, {x: action.x, y: action.y});\n								v.t = [0, action.dist * frameMod];\n							this.ships[i].actions[j].v = v;\n							//console.log(v);\n						}\n						else if (action.type == \"turn\"){\n							this.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n						}\n					}\n				}\n			}\n		}\n\n		setTimeout(function(callback){\n			game.animateMovement(callback);\n		}, 500);\n	}\n	\n	this.animateMovement = function(callback){\n		\n		anim = window.requestAnimationFrame(game.animateMovement.bind(this, callback));\n		ctx.clearRect(0, 0, res.x, res.y);\n		\n		for (var i = 0; i < game.ships.length; i++){\n			if (game.ships[i].deployed){\n				for (var j = 0; j < game.ships[i].actions.length; j++){\n					var action = game.ships[i].actions[j];\n					if (! action.animated){\n						if (action.type == \"move\"){\n							//	console.log(game.ships[i].actions[j].v);\n							game.ships[i].actions[j].v.t[0] += 1;\n							game.ships[i].x += action.v.x * 1 / game.ships[i].actions[j].v.t[1];\n							game.ships[i].y += action.v.y * 1 / game.ships[i].actions[j].v.t[1];\n							if (game.ships[i].actions[j].v.t[0] >= game.ships[i].actions[j].v.t[1]){\n							//	console.log(\"anim true\");\n								game.ships[i].actions[j].animated = true;\n							}\n						}\n						else if (action.type == \"turn\"){\n							//	console.log(\"turn\");\n								if (action.a > 0){\n									game.ships[i].add(5);\n									game.ships[i].actions[j].angle -= 5;\n								}\n								else {\n									game.ships[i].add(-5);\n									game.ships[i].actions[j].angle += 5;\n								}\n								\n								if (game.ships[i].actions[j].angle == 0){\n									game.ships[i].actions[j].animated = true;\n								}\n							\n						/*	if (action.a > 0){\n								game.ships[i].add(action.a);\n								game.ships[i].actions[j].a = 0;\n							}\n							else if (action.a < 0) {\n								game.ships[i].add(action.a);\n								game.ships[i].actions[j].a = 0;\n							}\n							if (game.ships[i].actions[j].a == 0){\n							//	console.log(\"turn done\")\n								game.ships[i].actions[j].animated = true;\n							}*/\n						}\n						else if (action.type == \"deploy\"){\n						}\n						else if (action.type == \"speedChange\"){\n						}\n						\n						break;\n					}\n				}\n				game.ships[i].draw();\n			}\n		}\n		\n		var done = true;\n		\n		for (var i = 0; i < game.ships.length; i++){\n			if (! done){\n				break;\n			}\n			\n			for (var j = 0; j < game.ships[i].actions.length; j++){\n				if (! game.ships[i].actions[j].animated){\n					done = false;\n					break;\n				}\n			}\n		}\n		\n		if (done){\n		//	console.log(\"all done\");\n\n			window.cancelAnimationFrame(anim);\n			for (var i = 0; i < game.ships.length; i++){\n				if (game.ships[i].deployed){\n					game.ships[i].x = Math.floor(game.ships[i].x);\n					game.ships[i].y = Math.floor(game.ships[i].y);\n				}\n			}\n		//	console.log(callback);\n		}\n	}\n\n\n	this.resolveFire = function(){\n			this.getShotDetails();\n			this.getAnimationDetails();\n			this.animate();\n	}\n\n	this.getShotDetails = function(){\n\n		fireOrders = [fireOrders[0]];\n\n		for (var i = 0; i < fireOrders.length; i++){\n			fireOrders[i].shooter = game.getShipById(fireOrders[i].shooterid);\n			fireOrders[i].weapon = fireOrders[i].shooter.getWeaponById(fireOrders[i].weaponid);\n			fireOrders[i].guns = fireOrders[i].weapon.guns;\n			fireOrders[i].shots = fireOrders[i].weapon.shots;\n			fireOrders[i].anim = [];\n		}\n		\n		for (var i = 0; i < fireOrders.length; i++){\n			var a = fireOrders[i];\n			\n			if (fireOrders[i].guns){\n				fireOrders[i].target = game.getShipById(a.targetid);\n				\n				for (var j = 0; j < fireOrders.length; j++){\n					var b = fireOrders[j];\n					\n					if (a.id != b.id){\n						if (fireOrders[j].shots){\n							if (a.shooterid == b.shooterid){\n								if (a.targetid == b.targetid){\n									if (a.weapon.name == b.weapon.name){\n										fireOrders[i].guns += fireOrders[j].guns;\n										fireOrders[j].guns = 0;\n									}\n								}\n							}\n						}\n					}\n				}\n			}\n		}\n	}\n\n	this.getAnimationDetails = function(){\n		for (var i = 0; i < fireOrders.length; i++){\n			console.log(fireOrders[i]);\n			for (var j = 0; j < fireOrders[i].guns; j++){\n				var ox = fireOrders[i].shooter.x + Math.random()*30-15; // GUN origin for all proj\n				var oy = fireOrders[i].shooter.y + Math.random()*30-15;\n				\n				var anims = [];\n				\n				for (var k = 0; k < fireOrders[i].shots; k++){\n					var tx = fireOrders[i].target.x + Math.random()*fireOrders[i].target.size/3 - fireOrders[i].target.size/6; // proj destination on HIT\n					var ty = fireOrders[i].target.y + Math.random()*fireOrders[i].target.size/3 - fireOrders[i].target.size/3;\n					var hit = true;\n					var subAbim = {};\n					\n					if (fireOrders[i].weapon.animation == \"projectile\"){\n						if (k > fireOrders[i].hits){\n							hit = false;\n							tx = tx + Math.random()*fireOrders[i].target.size / 1 - fireOrders[i].target.size / 2;\n							ty = ty + Math.random()*fireOrders[i].target.size / 1 - fireOrders[i].target.size / 2;\n						}\n							subAnim = {\n								ox: ox,\n								oy: oy,\n								tx: tx,\n								ty: ty,\n								t: [0 - (j*10 + k*5), 100],\n								hit: hit,\n								v: new Vector({x: ox, y: oy}, {x: tx, y: ty}),\n								explo: false,\n								animated: false\n							}\n					}\n					else if (fireOrders[i].weapon.animation == \"laser\"){\n						if (k > fireOrders[i].hits){\n							hit = false;\n							//console.log(fireOrders[i].target.size);\n							var stepX = Math.random()*fireOrders[i].target.size * 1.5 - fireOrders[i].target.size * .75;\n							var stepY = Math.random()*fireOrders[i].target.size * 1.5 - fireOrders[i].target.size * .75;\n							tx += stepX;\n							ty += stepY;\n							\n							//console.log(stepX, stepY);\n						}\n						\n						var tbx = tx + Math.random()*fireOrders[i].target.size / 2 - fireOrders[i].target.size / 4;\n						var tby = ty + Math.random()*fireOrders[i].target.size / 2 - fireOrders[i].target.size / 4;\n						\n						subAnim = {\n							ox: ox,\n							oy: oy,\n							tax: tx,\n							tay: ty,\n							tbx: tbx,\n							tby: tby,\n							t: [0, fireOrders[i].weapon.rakeTime],\n							hit: hit,\n							v: new Vector({x: tx, y: ty}, {x: tbx, y: tby}),\n							explo: false,\n							animated: false\n						}\n					}\n					\n					if (hit){\n						subAnim.explo = {t: [0, 100], s: 6};\n					}\n	//				console.log(subAnim);\n				\n				anims.push(subAnim);\n				}\n			fireOrders[i].anim.push(anims);\n			}\n		}\n	}\n			\n\n	this.animate = function(){\n	\n		animation = setInterval(function(){\n		\n		//	$(\"#combatLog\").show();\n			//console.log(\"ding\");\n			fxCtx.clearRect(0, 0, res.x, res.y);\n			for (var i = 0; i  < fireOrders.length; i++){\n				if (! fireOrders[i].animated){\n					//console.log(\"animating fire[\" + i + \"] for shots: \" + fireOrders[i].shots);\n					var x, y;\n					\n					//console.log(\"animating \" + fireOrders[i].anim.length + \" guns with \" + fireOrders[i].anim[0].length + \" shots each.\");\n					for (var j = 0; j < fireOrders[i].anim.length; j++){\n						//console.log(fireOrders[i].anim[j]);\n						for (var k = 0; k < fireOrders[i].anim[j].length; k++){\n							if (fireOrders[i].weapon.animation == \"projectile\"){\n								if (fireOrders[i].anim[j][k].t[0] < fireOrders[i].anim[j][k].t[1]){ // still to animate\n									fireOrders[i].anim[j][k].t[0] += 1;\n									if (fireOrders[i].anim[j][k].t[0] > 0){ // t valid, now animate\n										x = fireOrders[i].anim[j][k].ox + (fireOrders[i].anim[j][k].v.x * fireOrders[i].anim[j][k].t[0] / fireOrders[i].anim[j][k].t[1]);\n										y = fireOrders[i].anim[j][k].oy + (fireOrders[i].anim[j][k].v.y * fireOrders[i].anim[j][k].t[0] / fireOrders[i].anim[j][k].t[1]);\n										drawProjectile(fireOrders[i].weapon, x, y);  // PROJ\n									}\n								}\n								else {// animate EXPLO\n									if (fireOrders[i].anim[j][k].explo){\n										if (fireOrders[i].anim[j][k].explo.t[0] < fireOrders[i].anim[j][k].explo.t[1]){\n											fireOrders[i].anim[j][k].explo.t[0] += 10;\n											x = fireOrders[i].anim[j][k].ox + fireOrders[i].anim[j][k].v.x;\n											y = fireOrders[i].anim[j][k].oy + fireOrders[i].anim[j][k].v.y;	\n											drawExplosion(x, y, fireOrders[i].anim[j][k].explo.s * fireOrders[i].anim[j][k].explo.t[0] / fireOrders[i].anim[j][k].explo.t[1]); // EXPLO\n										}\n										else {\n											fireOrders[i].anim[j][k].animated = true;\n										}\n									}\n									else {\n										fireOrders[i].anim[j][k].animated = true;\n									}\n								}\n							}\n							else if (fireOrders[i].weapon.animation == \"laser\"){\n								//console.log(\"laser\");\n								//console.log(fireOrders[i].anim);\n								fireOrders[i].anim[j][k].t[0] += 1;\n								x = fireOrders[i].anim[j][k].tax + (fireOrders[i].anim[j][k].v.x * fireOrders[i].anim[j][k].t[0] / fireOrders[i].anim[j][k].t[1]);\n								y = fireOrders[i].anim[j][k].tay + (fireOrders[i].anim[j][k].v.y * fireOrders[i].anim[j][k].t[0] / fireOrders[i].anim[j][k].t[1]);\n								drawBeam(fireOrders[i].weapon, fireOrders[i].anim[j][k].ox, fireOrders[i].anim[j][k].oy, x, y); // BEAM\n								if (fireOrders[i].anim[j][k].explo){\n									fireOrders[i].anim[j][k].explo.t[0] = fireOrders[i].anim[j][k].explo.t[1];		\n									var size = Math.random() * 3 +4;\n								//	drawExplosion(x, y, fireOrders[i].anim[j][k].explo.s); // EXPLO\n									drawExplosion(x, y, size) // EXPL\n								}\n								if (fireOrders[i].anim[j][k].t[0] == fireOrders[i].anim[j][k].t[1]){\n									fireOrders[i].anim[j][k].animated = true;\n								}\n							}\n						}\n					}\n					\n					var allAnimated = true;\n					for (var j = 0; j < fireOrders[i].anim.length; j++){\n						for (var k = 0; k < fireOrders[i].anim[j].length; k++){\n							if (! fireOrders[i].anim[j][k].animated){\n								allAnimated = false;\n								break;\n							}\n						}\n						if (!allAnimated){\n							break;\n						}\n					}\n					\n					if (allAnimated){\n						fireOrders[i].animated = allAnimated;\n						//createLogEntry(fireOrders[i]);\n					}\n				\n					break;\n				}\n			}\n			\n			\n			var done = true\n			\n			for (var i = 0; i  < fireOrders.length; i++){\n				if (! fireOrders[i].animated){\n					done = false;\n				}\n			}\n			\n			if (done){\n				console.log(\"done\");\n				clearInterval(animation);\n				fxCtx.clearRect(0, 0, res.x, res.y);\n			}\n			\n		}, 30);\n	}\n\n	this.createLogEntry = function(fire){\n		\n		for (var i = 0; i < fire.guns; i++){\n			var hits = 0;\n			for (var j = 0; j < fire.shots; j++){\n				if(fire.anim[i][j].hit){\n					hits++;\n				}\n			}\n		}\n		\n		var string = \"FIRE:\";\n			string += \" shooter: \" + fire.shooterId;\n			string += \", target: \" + fire.targetId;\n			string += \"Gun \" + i + \" firing \" + fire.shots + \" shots, hits: \" + hits;\n			\n		var span = document.createElement(\"span\");\n			span.innerHTML = string;\n		\n		var combatLog = $(\"#combatLog\");\n			combatLog.append(span);\n			combatLog.append(\"</br>\");\n	}\n\n	\n	this.create();\n}\n\n",
			"file": "/C/xampp/htdocs/fire/game.js",
			"file_size": 20495,
			"file_write_time": 131206723468445862,
			"settings":
			{
				"buffer_size": 19753,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/baseship.php",
			"settings":
			{
				"buffer_size": 1673,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
			"settings":
			{
				"buffer_size": 704,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 676,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/math.php",
			"settings":
			{
				"buffer_size": 512,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/gameManager.php",
			"settings":
			{
				"buffer_size": 8506,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/log.txt",
			"settings":
			{
				"buffer_size": 616,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/systems.php",
			"settings":
			{
				"buffer_size": 1129,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 1361,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 734,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/dbManager.php",
			"settings":
			{
				"buffer_size": 19181,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/index.php",
			"settings":
			{
				"buffer_size": 2453,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/lobby.php",
			"settings":
			{
				"buffer_size": 6227,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/gameSetup.php",
			"settings":
			{
				"buffer_size": 11419,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/createGame.php",
			"settings":
			{
				"buffer_size": 1310,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/postGameData.php",
			"settings":
			{
				"buffer_size": 2092,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/getGameData.php",
			"settings":
			{
				"buffer_size": 630,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/ships/omega.php",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/test.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/04_StaticScene.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/30_LightAnimation.as",
		"/D/SecureWAMP_Portable/htdocs/projectX/index.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/debug.php",
		"/I/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/Debug.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/GameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/DBManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/pickGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/ajaxManager.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game - Copy.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/landing.html",
		"/D/SecureWAMP_Portable/htdocs/reg.php",
		"/D/SecureWAMP_Portable/htdocs/index - Copy.html",
		"/D/SecureWAMP_Portable/htdocs/simulator/test.php",
		"/D/SecureWAMP_Portable/htdocs/simulator/hexfiller.php",
		"/D/SecureWAMP_Portable/htdocs/hexFiller.php",
		"/D/SecureWAMP_Portable/htdocs/switchfile.php",
		"/H/Ultimate/buildings.js",
		"/H/Ultimate/script.js",
		"/H/Ultimate/style.css",
		"/H/Ultimate/index.html",
		"/H/ajax/index.html",
		"/H/ajax/script.js",
		"/C/Users/Chris/AppData/Roaming/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/D/MoO3/Autobuild.txt",
		"/H/SpaceSim/script.js",
		"/H/SpaceSim/style.css"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"game.js",
			"",
			"game.js",
			"*.js",
			"",
			"shipclasses.js",
			"",
			"*.php",
			"",
			"shipclasses.js",
			"shipclass.js",
			"*.js",
			"",
			"$this->gamedata[\"ships\"];",
			"",
			"style.css",
			"",
			"shipclasses.js",
			"",
			"shipclasses.js",
			"",
			"script.js",
			"shipclasses.js",
			"game.js",
			"",
			"imageloader.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"gui",
			"fire[i]",
			"fire.push",
			"fire",
			"\"done\"",
			"getshot",
			"weaponId",
			"initDamageC",
			"fireOrders",
			"startnewturn",
			"fireOrders",
			"new window",
			"\"ships\"",
			"getTurnStartPosition",
			"this.draw =",
			"this.draw",
			"getOffsetPos",
			"getOffsetPos\n",
			"getbase",
			"new wind",
			"new",
			"this.draw",
			"game.phase == 2",
			"new window",
			"if (this.dep",
			", color);",
			", color){",
			"new window",
			"new widnow",
			"this.create",
			"getTurnStartFacing",
			"getTurnStartPosition",
			"this.draw",
			"thisc.reate",
			"this.draw",
			"initFiring",
			"executeMovement",
			"animationsetup",
			"getGameStatus\n",
			"getgamedata",
			"damagecon",
			"getOpenFireOrders",
			"getShips",
			"getfireorders",
			"getfireord",
			"getOpenFireOrders",
			"getFireOrders",
			"getActionsForShips",
			"getgamedat",
			"executeMovement",
			"initFiring",
			"fireorders",
			"shots",
			"handleFireOrders",
			"handleFi",
			"handlefi",
			" $parentid, ",
			" $userid, ",
			"($id, ",
			"addsystem",
			"td",
			"if (ves",
			"posIsOnArc",
			"ifinarc",
			"inarc",
			"weaponAimTable",
			"create =",
			"create",
			"(this.id, ",
			"weapons",
			"windex",
			"sIndex",
			"wi",
			"new window",
			"handlefir",
			"vectordiv",
			"shortinfo",
			"getBaseHitChance",
			"shortinfo",
			"getCompassHeadingOfPoint",
			"addToDirection",
			"getAngleFromTo",
			"addToDirection",
			"fireord",
			"fire",
			"180",
			"addtodirection",
			"addtodrection",
			"handle",
			"doAdvanceGameState",
			"handleFiringPhase",
			"doAdvanceGameState",
			"handleFiringPhase",
			"$gdShips",
			"handlef",
			"canAdvanceGameState",
			"doAdvanceGameState",
			"frames",
			"doAdvanceGameState",
			"canad",
			"moement",
			"weaponAimTable",
			"frames",
			"weaponaim",
			"weaponAimTable",
			"setFireOrder",
			"weaponAimTable",
			"fireorders",
			"fireOrders",
			"fireorders",
			"getPlannedFacingToMove",
			"drawVector",
			"drawve",
			"getTurnStartPosition",
			"getBaseOffsetPos",
			"turnstart",
			"canvasmousem",
			"getbase",
			"get",
			"resolve",
			"handle",
			"handlemov",
			"handleDeploymentPhase",
			"dragg",
			"new window",
			"new wind",
			"img",
			"hover"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"fireOrders[i]",
			"weaponid",
			", color, deployed);",
			", color, deployed){",
			"($parentid, ",
			"($userid, ",
			" ",
			"(this.weapons.length+1, this.id, ",
			"$this->gamedata[\"ships\"];",
			"z-index",
			"pos.x\npos.x",
			"pos.x\npos.y",
			"pos.x\npos.x",
			"(this, id, shipClass, x, ",
			"(id, shipClass, x,",
			"(id, shipClass,",
			", ",
			"ele.className",
			"userid",
			"= \"/shipIcons/",
			"fleetid",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/xampp/htdocs/fire/ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18947,
						"regions":
						{
						},
						"selection":
						[
							[
								2934,
								2942
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1815.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/xampp/htdocs/fire/cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1935,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/xampp/htdocs/fire/classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1485,
						"regions":
						{
						},
						"selection":
						[
							[
								1294,
								1294
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 421.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/xampp/htdocs/fire/graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2139,
						"regions":
						{
						},
						"selection":
						[
							[
								476,
								476
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/xampp/htdocs/fire/imageloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1181,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/fire/mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3235,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 372.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/xampp/htdocs/fire/shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								400,
								400
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/xampp/htdocs/fire/shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37691,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								405
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/xampp/htdocs/fire/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4249,
						"regions":
						{
						},
						"selection":
						[
							[
								4187,
								4177
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4045.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/xampp/htdocs/fire/systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9936,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								416
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/xampp/htdocs/fire/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12764,
						"regions":
						{
						},
						"selection":
						[
							[
								12764,
								12764
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6677.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/fire/game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3572,
						"regions":
						{
						},
						"selection":
						[
							[
								1216,
								1216
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/xampp/htdocs/fire/game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19753,
						"regions":
						{
						},
						"selection":
						[
							[
								14552,
								14552
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8288.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/fire/server/baseship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1673,
						"regions":
						{
						},
						"selection":
						[
							[
								784,
								805
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 424.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 704,
						"regions":
						{
						},
						"selection":
						[
							[
								327,
								327
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 676,
						"regions":
						{
						},
						"selection":
						[
							[
								439,
								439
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/fire/server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 512,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/xampp/htdocs/fire/gameManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8506,
						"regions":
						{
						},
						"selection":
						[
							[
								1385,
								1385
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/fire/log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 616,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/fire/server/systems/systems.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1129,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1361,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 734,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/fire/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19181,
						"regions":
						{
						},
						"selection":
						[
							[
								13652,
								14232
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10804.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/xampp/htdocs/fire/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2453,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/fire/lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6227,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/fire/gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11419,
						"regions":
						{
						},
						"selection":
						[
							[
								8095,
								8095
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5828.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/xampp/htdocs/fire/createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1310,
						"regions":
						{
						},
						"selection":
						[
							[
								153,
								153
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/xampp/htdocs/fire/postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2092,
						"regions":
						{
						},
						"selection":
						[
							[
								1828,
								1828
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 630.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/xampp/htdocs/fire/getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 630,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.80072396137,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fire.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"table",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\table.php"
			],
			[
				"mov",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\movement.js"
			],
			[
				"tble",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\table.php"
			],
			[
				"adm",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\admin.js"
			],
			[
				"ajax",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\ajax.js"
			],
			[
				"transfer",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\transfer.js"
			],
			[
				"admin",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\admin.js"
			],
			[
				"postgame",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\postGameData.php"
			],
			[
				"sc",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\script.js"
			],
			[
				"scrip",
				"D:\\SecureWAMP_Portable\\htdocs\\script.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 135.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
