{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"proto",
				"prototype"
			],
			[
				"re",
				"reinforcementsTD"
			],
			[
				"mem",
				"memory_get_usage"
			],
			[
				"getReman",
				"getRemainingMitigation"
			],
			[
				"handle",
				"handleFiringPhase"
			],
			[
				"json_",
				"json_encode"
			],
			[
				"calcu",
				"calculateHitChance"
			],
			[
				"getD",
				"getDmgLoss"
			],
			[
				"rollf",
				"rollForDamage"
			],
			[
				"jsco",
				"json_encode"
			],
			[
				"jso",
				"JSON"
			],
			[
				"gets",
				"getShipsForFaction"
			],
			[
				"showSHi",
				"showShipList"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"spee",
				"speedChange"
			],
			[
				"background",
				"background-color"
			],
			[
				"JS",
				"json_decode"
			],
			[
				"drawSh",
				"drawShipForPreview"
			],
			[
				"elint",
				"elintResult"
			],
			[
				"json",
				"json_encode"
			],
			[
				"addTa",
				"addTableRedBackground"
			],
			[
				"currentS",
				"currentSubTick"
			],
			[
				"current",
				"currentSubStick"
			],
			[
				"var",
				"var_export"
			],
			[
				"Fetch",
				"FETCH_ASSOC"
			],
			[
				"exe",
				"execute"
			],
			[
				"Fet",
				"FETCH_ASSOC"
			],
			[
				"erro",
				"errorCode"
			],
			[
				"fetch",
				"FETCH_ASSOC"
			],
			[
				"isE",
				"isEqual"
			],
			[
				"getL",
				"getLastInsertId"
			],
			[
				"p",
				"possibleLanes"
			],
			[
				"gate",
				"gateSelected"
			],
			[
				"off",
				"offSetX"
			],
			[
				"getH",
				"getHexById"
			],
			[
				"act",
				"activeHover"
			],
			[
				"ships",
				"shipActions"
			],
			[
				"getElement",
				"getElementsByTagName"
			],
			[
				"cont",
				"contextmenu"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"update",
				"updatePlayerStatus"
			],
			[
				"createF",
				"createFleetAndTransfer"
			],
			[
				"selected",
				"selectedHex"
			],
			[
				"createPlanetN",
				"createPlanetNotes1"
			],
			[
				"createEne",
				"createPlanetEnviroment"
			],
			[
				"backgrou",
				"background"
			],
			[
				"backgr",
				"background-color"
			],
			[
				"JSO",
				"json_encode"
			],
			[
				"class",
				"class_exists"
			],
			[
				"mysql",
				"mysql_query"
			],
			[
				"js",
				"json_encode"
			],
			[
				"mysqli",
				"mysqli_fetch"
			],
			[
				"back",
				"background-color"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"s",
				"success"
			],
			[
				"f",
				"function"
			],
			[
				"succ",
				"successSubmit"
			],
			[
				"request",
				"requestHexContentTEST"
			],
			[
				"a",
				"AjaxManager"
			],
			[
				"drawPla",
				"drawPlanetLayer"
			],
			[
				"active",
				"activePlanet"
			],
			[
				"drawSy",
				"drawSystemBackground"
			],
			[
				"systems",
				"systemImages"
			],
			[
				"requ",
				"requiredSpace"
			],
			[
				"farmin",
				"farmAffinity"
			],
			[
				"mooN",
				"moonNumber"
			],
			[
				"checkforH",
				"checkForHoverOutNearPlanet"
			],
			[
				"paret",
				"parentLoc"
			],
			[
				"Par",
				"parentLoc"
			],
			[
				"check",
				"checkForHoverOutNearPlanet"
			],
			[
				"checkSy",
				"checkSystemHover"
			],
			[
				"xml",
				"XMLHttpRequest"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"appendch",
				"appendCHild"
			],
			[
				"creatE",
				"createEmpireDiv"
			],
			[
				"systemb",
				"systemBG"
			],
			[
				"ne",
				"newLanes"
			],
			[
				"origin",
				"originId"
			],
			[
				"orig",
				"originId"
			],
			[
				"or",
				"originId"
			],
			[
				"stroke",
				"strokeStyle"
			],
			[
				"desti",
				"destinationLoc"
			],
			[
				"get",
				"getSystemById"
			],
			[
				"fill",
				"fillStyle"
			],
			[
				"in",
				"inline"
			],
			[
				"creat",
				"createCanvas"
			],
			[
				"getShip",
				"getShipByID"
			],
			[
				"getS",
				"getSystemByID"
			],
			[
				"offs",
				"offsetX"
			],
			[
				"offse",
				"offsetY"
			],
			[
				"offset",
				"offsetY"
			],
			[
				"fireO",
				"fireOrderArray"
			],
			[
				"fS",
				"fShaderQuellcode"
			],
			[
				"font",
				"font-size"
			],
			[
				"ac",
				"activeRaidID"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/xampp/htdocs/fire/ajax.js",
			"settings":
			{
				"buffer_size": 6872,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/cam.js",
			"settings":
			{
				"buffer_size": 1935,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/classes.js",
			"settings":
			{
				"buffer_size": 6596,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/classes.php",
			"settings":
			{
				"buffer_size": 1720,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "<?php"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/graphics.js",
			"settings":
			{
				"buffer_size": 2139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/shared.js",
			"settings":
			{
				"buffer_size": 2385,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/shipclasses.js",
			"settings":
			{
				"buffer_size": 37341,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/style.css",
			"settings":
			{
				"buffer_size": 6468,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/systems.js",
			"settings":
			{
				"buffer_size": 10744,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/game.php",
			"settings":
			{
				"buffer_size": 4791,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/game.js",
			"settings":
			{
				"buffer_size": 28558,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/gameManager.php",
			"settings":
			{
				"buffer_size": 14245,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/script.js",
			"settings":
			{
				"buffer_size": 12363,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/gameSetup.php",
			"settings":
			{
				"buffer_size": 15059,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/mathLib.js",
			"settings":
			{
				"buffer_size": 3235,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/math.php",
			"settings":
			{
				"buffer_size": 2087,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/log.txt",
			"settings":
			{
				"buffer_size": 8006,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 29 files for \"buyInitialFleet\"\n\nC:\\xampp\\htdocs\\fire\\ajax.js:\n   48  \t\t\tdatatype: \"json\",\n   49  \t\t\tdata: {\n   50: \t\t\t\t\ttype: \"buyInitialFleet\",\n   51  \t\t\t\t\tgameid: gameid,\n   52  \t\t\t\t\tuserid: userid,\n\nC:\\xampp\\htdocs\\fire\\log.txt:\n    1: buyInitialFleet\n    2  asking for preview of: Omega\n    3: buyInitialFleet\n    4  buyShips\n    5  Omega\n    .\n    9  createPlayerStatus\n   10  entry CREATE for player 2 in game 1 phase: -1 and status joined\n   11: buyInitialFleet\n   12  buyShips\n   13  Sharlin\n   ..\n  297  asking for preview of: Omega\n  298  asking for preview of: Omega\n  299: buyInitialFleet\n  300: buyInitialFleet\n  301  \n\nC:\\xampp\\htdocs\\fire\\postGameData.php:\n   32  \t\t}\n   33  \t}\n   34: \telse if ($_POST[\"type\"] == \"buyInitialFleet\") {\n   35: \t\tdebug::log(\"buyInitialFleet\");\n   36  \t\tif ($manager->validateFleetCost($_POST[\"ships\"])){\n   37  \t\t\tif ($dbManager->buyShips($_POST[\"userid\"], $_POST[\"gameid\"], $_POST[\"ships\"])) {\n\n8 matches across 3 files\n\n\nSearching 29 files for \"createPlayerStatus\"\n\nC:\\xampp\\htdocs\\fire\\dbManager.php:\n  133  \t\tif ($this->createNewGame($name, $pv)){\n  134  \t\t\t$gameid = $this->getLastInsertId();\n  135: \t\t\tif ($this->createPlayerStatus($userid, $gameid, 0, -1, \"joined\")){\n  136  \t\t\t\treturn true;\n  137  \t\t\t}\n  ...\n  139  \t}\n  140  \n  141: \tpublic function createPlayerStatus($userid, $gameid, $turn, $phase, $status){\n  142: \t\tdebug::log(\"createPlayerStatus\");\n  143  \n  144  \t\t$stmt = $this->connection->prepare(\"\n\nC:\\xampp\\htdocs\\fire\\postGameData.php:\n   17  \n   18  \tif ($_POST[\"type\"] == \"joinGame\") {\n   19: \t\tif ($dbManager->createPlayerStatus($_POST[\"userid\"], $_POST[\"gameid\"], 0, -1, \"joined\")) {\n   20  \t\t\techo \"joinGame success\";\n   21  \t\t}\n\n4 matches across 2 files\n\n\nSearching 29 files for \"hover\"\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n  136  \t\t$(td).data(\"shipId\", this.parentId);\n  137  \t\t$(td).data(\"systemId\", this.id);\n  138: \t\t$(td).hover(\n  139  \t\t\tfunction(e){\n  140  \t\t\t\tvar shipId = $(this).data(\"shipId\");\n  141  \t\t\t\tvar systemId = $(this).data(\"systemId\");\n  142: \t\t\t\tgame.getShipById(shipId).getSystemById(systemId).hover();\n  143  \t\t\t},\n  144  \t\t\tfunction(e){\n  145  \t\t\t\tvar shipId = $(this).data(\"shipId\");\n  146  \t\t\t\tvar systemId = $(this).data(\"systemId\");\n  147: \t\t\t\tgame.getShipById(shipId).getSystemById(systemId).hover();\n  148  \t\t\t}\n  149  \t\t)\n  ...\n  180  \n  181  \n  182: \tthis.hover = function(){\n  183  \t\tif (this.highlight){\n  184  \t\t\tthis.highlight = false;\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  200  \t})\n  201  \n  202: \t$(\"#reinforcementsTD\").hover(function(e){\n  203  \t\t\n  204  \t})\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n   43  \t\t\t$(td).data(\"shipId\", this.parentId);\n   44  \t\t\t$(td).data(\"systemId\", this.id);\n   45: \t\t\t$(td).hover(\n   46  \t\t\t\tfunction(e){\n   47  \t\t\t\t\tvar shipId = $(this).data(\"shipId\");\n   48  \t\t\t\t\tvar systemId = $(this).data(\"systemId\");\n   49: \t\t\t\t\tgame.getShipById(shipId).getSystemById(systemId).hover();\n   50  \t\t\t\t\tgame.getShipById(shipId).highlightAllSelectedWeapons();\n   51  \t\t\t\t},\n   ..\n   53  \t\t\t\t\tvar shipId = $(this).data(\"shipId\");\n   54  \t\t\t\t\tvar systemId = $(this).data(\"systemId\");\n   55: \t\t\t\t\tgame.getShipById(shipId).getSystemById(systemId).hover();\n   56  \t\t\t\t\tgame.getShipById(shipId).highlightAllSelectedWeapons();\n   57  \t\t\t\t}\n   ..\n  168  \t}\n  169  \n  170: \tthis.hover = function(){\n  171  \t\tif (this.highlight){\n  172  \t\t\tthis.highlight = false;\n\n9 matches across 3 files\n\n\nSearching 29 files for \"arrival in\"\n\nC:\\xampp\\htdocs\\fire\\game.php:\n  169  \t\t\t\t\t\t</th>\n  170  \t\t\t\t\t\t<th  width=\"20%\" >\n  171: \t\t\t\t\t\t\tArrival in\n  172  \t\t\t\t\t\t</th>\n  173  \t\t\t\t\t</tr>\n\n1 match in 1 file\n\n\nSearching 29 files for \"todo\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n   68  \t    });\n   69  \n   70: \t\tvar toDo = [];\n   71  \t\tvar table;\n   72  \n   ..\n   74  \t\t\tif (this.ships[i].deployed == false){\n   75  \t\t\t\tif (this.ships[i].userid == this.userid){\n   76: \t\t\t\t\ttoDo.push(this.ships[i]);\n   77  \t\t\t\t}\n   78  \t\t\t}\n   79  \t\t}\n   80  \n   81: \t\tif (toDo.length){\n   82  \t\t\ttable = document.getElementById(\"deployTable\");\n   83  \n   84: \t\t\tfor (var i = 0; i < toDo.length; i++){\n   85  \t\t\t\tvar available = false;\n   86: \t\t\t\tif (toDo[i].available <= this.turn){\n   87  \t\t\t\t\tavailable = true;\n   88  \t\t\t\t}\n   ..\n   91  \n   92  \t\t\t\tif (available){\n   93: \t\t\t\t\t$(tr).data(\"shipid\", toDo[i].id).click(function(e){\n   94  \t\t\t\t\t\t//console.log($(this).data());\n   95  \t\t\t\t\t\te.preventDefault();\n   ..\n  113  \n  114  \t\t\t\tvar td = document.createElement(\"td\");\n  115: \t\t\t\t\ttd.innerHTML = \"<img style='width: 50px; height: 50px;' src='shipIcons/\"+toDo[i].shipClass.toLowerCase() + \".png'>\";\n  116  \t\t\t\t//\ttd.appendChild(img);\n  117  \t\t\t\ttr.appendChild(td);\n  118  \n  119: \t\t\t\tconsole.log(toDo[i]);\n  120  \t\t\t\tvar td = document.createElement(\"td\");\n  121: \t\t\t\t\ttd.innerHTML = toDo[i].shipClass;\n  122  \t\t\t\ttr.appendChild(td);\n  123  \n  124  \t\t\t\tvar td = document.createElement(\"td\");\n  125: \t\t\t\t\ttd.innerHTML = toDo[i].shipType;\n  126  \t\t\t\ttr.appendChild(td);\n  127  \n  128  \t\t\t\tvar td = document.createElement(\"td\");\n  129: \t\t\t\t\ttd.innerHTML = toDo[i].available - this.turn;\n  130  \t\t\t\t\tif (available){td.className = \"shipAvailable\";}else{td.className = \"shipUnavailable\";}\n  131  \t\t\t\t\t\n\n11 matches in 1 file\n\n\nSearching 29 files for \"this.\"\n\nC:\\xampp\\htdocs\\fire\\ajax.js:\n  332  \t\t\t\t\t\t\tdiv.shipClass = \"popup\";\n  333  \t\t\t\t\t\t\tdiv.addEventListener(\"click\", function(){\n  334: \t\t\t\t\t\t\t\tthis.parentNode.removeChild(this);\n  335  \t\t\t\t\t\t\t})\n  336  \n\nC:\\xampp\\htdocs\\fire\\cam.js:\n   30  \t\n   31  \tdoScroll: function(pos){\n   32: \t\tthis.o.x -= pos.x - res.x/2;\n   33: \t\tthis.o.y -= pos.y - res.y/2;\n   34  \t},\n   35  \t\n   ..\n   38  \t\t\n   39  \t\tif (e.originalEvent.wheelDelta == 120){\n   40: \t\t\tthis.z++;\n   41  \t\t}\n   42  \t\telse {\n   43: \t\t\tif (this.z > 1){\n   44: \t\t\t\tthis.z--;\n   45  \t\t\t}\n   46  \t\t}\n   ..\n   48  \t\n   49  \t\n   50: \t\t/*this.trackMouse(pos);\n   51: \t\tthis.trackWheel(e);\n   52: \t\tthis.adjustScale();*/\n   53  \t\n   54  \ttrackMouse: function(pos){\n   55: \t\tthis.mouse.screen.x\t= pos.x;\n   56: \t\tthis.mouse.screen.y\t= pos.y;\n   57: \t\tthis.mouse.world.x\t= this.scale.x_INV(this.mouse.screen.x);\n   58: \t\tthis.mouse.world.y\t= this.scale.y_INV(this.mouse.screen.y);\n   59  \t},\n   60  \t\n   ..\n   62  \t//\tconsole.log(e.deltaY);\n   63  \t\tif (e.deltaY < 0) {\n   64: \t\t\tthis.zoom.scale = Math.min(5, this.zoom.scale * 1.1);\n   65  \t\t}\n   66  \t\telse {\n   67: \t\t\tthis.zoom.scale = Math.max(0.1, this.zoom.scale * (1/1.1));\n   68  \t\t}\n   69: \t//\tconsole.log(this.zoom.scale);\n   70  \t},\n   71  \t\n   72  \tadjustScale: function(){\n   73: \t  this.zoom.screen.x = this.mouse.screen.x;\n   74: \t  this.zoom.screen.y = this.mouse.screen.y;\n   75: \t  this.zoom.world.x\t= this.mouse.world.x;\n   76: \t  this.zoom.world.y\t= this.mouse.world.y;\n   77: \t  this.mouse.world.x = this.scale.x_INV(this.mouse.screen.x);\n   78: \t  this.mouse.world.y = this.scale.y_INV(this.mouse.screen.y);\n   79  \t},\n   80  \t\n\nC:\\xampp\\htdocs\\fire\\classes.js:\n    1  function Point(x, y){\n    2: \tthis.x = Math.floor(x);\n    3: \tthis.y = Math.floor(y);\n    4  \t\n    5: \tthis.getOffset = function(){\n    6: \t//\tconsole.log({x: cam.scale.x(this.x - cam.o.x), y: cam.scale.y(this.y - cam.o.y)});\n    7: \t\treturn { x: this.x - cam.o.x, y: this.y - cam.o.y };\n    8  \t}\n    9  }\n   10  \n   11  function Move(type, dist, x, y, a, delay, cost, costmod){\n   12: \tthis.turn = game.turn;\n   13: \tthis.type = type;\n   14: \tthis.dist = dist;\n   15: \tthis.x = x;\n   16: \tthis.y = y;\n   17: \tthis.a = a;\n   18: \tthis.animated = false\n   19: \tthis.s = false;\n   20: \tthis.cost = cost || 0;\n   21: \tthis.delay = delay || 0;\n   22: \tthis.costmod = costmod || 1;\n   23  }\n   24  \n   25  function Vector(a, b){\n   26: \tthis.x;\n   27: \tthis.y;\n   28: \tthis.nx;\n   29: \tthis.ny;\n   30: \tthis.m;\n   31: \tthis.t;\n   32  \t\n   33: \tthis.setup = function(){\n   34: \t\tthis.x = b.x - a.x;\n   35: \t\tthis.y = b.y - a.y;\n   36  \t\t\n   37: \t\tvar x = Math.pow(this.x, 2);\n   38: \t\tvar y = Math.pow(this.y, 2);\n   39  \t\tvar m = x + y;\n   40  \t\t\n   41: \t\tthis.m = Math.sqrt(m);\t\t\t\n   42: \t\tthis.nx = this.x/this.m;\n   43: \t\tthis.ny = this.y/this.m;\n   44  \t}\n   45  \t\n   46: \tthis.setup();\n   47  }\n   48  \n   49  function Path (a, b){\n   50: \tthis.a = a;\n   51: \tthis.b = b;\n   52: \tthis.distance;\n   53: \tthis.animated = false;\n   54  \t\n   55: \tthis.setup = function(){\n   56: \t\tvar a = this.a.x - this.b.x;\n   57: \t\tvar b = this.a.y - this.b.y;\n   58  \t\t\n   59  \t\tvar a = Math.pow(a, 2);\n   ..\n   62  \t\tvar c = Math.sqrt(c);\n   63  \t\t\n   64: \t\tthis.distance = Math.floor(c);\n   65  \t}\n   66  \t\n   67: \tthis.setup();\n   68  };\n   69  \n   70  function FireOrder(id, shooterId, targetId, weaponId, turn){\n   71: \tthis.id = id;\n   72: \tthis.weaponId = weaponId;\n   73: \tthis.targetId = targetId;\n   74: \tthis.shooterId = shooterId;\n   75: \tthis.dist;\n   76: \tthis.shots;\n   77: \tthis.guns;\n   78: \tthis.animated = false;\n   79: \tthis.anim = [];\n   80: \tthis.turn = turn;\n   81  }\n   82  \n   83  function Damage (id, fireid, gameid, shipid, structureid, turn, type, totalDmg, shieldDmg, structDmg, armourDmg, mitigation, destroyed, notes){\n   84: \tthis.id = id;\n   85: \tthis.fireid = fireid;\n   86: \tthis.gameid = gameid;\n   87: \tthis.shipid = shipid;\n   88: \tthis.structureid = structureid;\n   89: \tthis.turn = turn;\n   90: \tthis.type = type;\n   91: \tthis.totalDmg = totalDmg;\n   92: \tthis.shieldDmg = shieldDmg;\n   93: \tthis.structDmg = structDmg;\n   94: \tthis.armourDmg = armourDmg;\n   95: \tthis.mitigation = mitigation;\n   96: \tthis.destroyed = destroyed;\n   97: \tthis.notes = notes;\n   98  }\n   99  \n  100  function Structure(id, parentId, start, end, integrity, armour, mitigation, destroyed){\n  101: \tthis.name = \"Structure\";\n  102: \tthis.display = \"Structure\";\n  103: \tthis.id = id;\n  104: \tthis.parentId = parentId;\n  105: \tthis.start = start;\n  106: \tthis.end = end;\n  107: \tthis.integrity = integrity;\n  108: \tthis.armour = armour;\n  109: \tthis.mitigation = mitigation;\n  110: \tthis.destroyed = destroyed || false;\n  111: \tthis.systems = [];\n  112: \tthis.highlight = false;\n  113: \tthis.damages = [];\n  114  \n  115: \tthis.getTableRow = function(){\n  116  \t\tvar tr = document.createElement(\"tr\");\n  117  \t\tvar td = document.createElement(\"td\");\n  118  \t\t\ttd.className = \"struct\";\n  119  \n  120: \t\tvar rem = this.getRemainingIntegrity();\n  121  \n  122  \t\tvar span = document.createElement(\"div\");\n  123  \t\t\tspan.className = \"integrityAmount\";\n  124: \t\t\tspan.innerHTML = rem + \" / \" + this.integrity;\n  125  \t\t\ttd.appendChild(span);\n  126  \n  127  \t\tvar lowerDiv = document.createElement(\"div\");\n  128  \t\t\tlowerDiv.className = \"integrityNow\";\n  129: \t\t\tlowerDiv.style.width =  rem/this.integrity * 100 + \"%\";\n  130  \t\t\ttd.appendChild(lowerDiv);\n  131  \t\t\t\n  ...\n  134  \t\t\ttd.appendChild(upperDiv);\n  135  \n  136: \t\t$(td).data(\"shipId\", this.parentId);\n  137: \t\t$(td).data(\"systemId\", this.id);\n  138  \t\t$(td).hover(\n  139  \t\t\tfunction(e){\n  ...\n  159  \t}\n  160  \n  161: \tthis.getDirection = function(){\n  162: \t\tvar a = this.start;\n  163: \t\tvar b = this.end;\n  164  \t\tvar a;\n  165  \n  ...\n  180  \n  181  \n  182: \tthis.hover = function(){\n  183: \t\tif (this.highlight){\n  184: \t\t\tthis.highlight = false;\n  185: \t\t\tgame.getShipById(this.parentId).highlightAllSelectedWeapons();\n  186: \t\t\tthis.hideInfoDiv();\n  187  \t\t}\n  188  \t\telse {\n  189: \t\t\tthis.highlight = true;\n  190: \t\t\tthis.showHitAxis();\n  191: \t\t\tthis.showInfoDiv();\n  192  \t\t}\n  193  \t}\n  194  \n  195: \tthis.showHitAxis = function(){\n  196: \t\tgame.getShipById(this.parentId).drawStructureAxis(this);\n  197  \t}\n  198  \n  199: \tthis.showInfoDiv = function(){\n  200: \t\tvar div = this.getSystemDetailsDiv();\n  201: \t\tvar parentId = this.parentId;\n  202: \t\tvar id = this.id;\n  203  \t\t\n  204  \t\tvar div = $(\".shipDiv\").each(function(i){\n  ...\n  217  \t}\n  218  \t\n  219: \tthis.hideInfoDiv = function(){\n  220  \t\tvar div = document.getElementById(\"systemDetailsDiv\");\n  221  \t\t\t$(div).remove();\n  222  \t}\n  223  \n  224: \tthis.getSystemDetailsDiv = function(){\n  225  \t\tvar div = document.createElement(\"div\");\n  226  \t\t\tdiv.id = \"systemDetailsDiv\";\n  ...\n  232  \t\tvar td = document.createElement(\"td\");\n  233  \n  234: \t\t\ttd.innerHTML = this.getRemainingIntegrity() + \" / \" + this.integrity; tr.appendChild(td); table.appendChild(tr);\n  235  \t\t\t\n  236  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  238  \t\t\ttd.innerHTML = \"Armour\"; tr.appendChild(td);\n  239  \t\tvar td = document.createElement(\"td\");\n  240: \t\t\ttd.innerHTML = this.getRemainingArmour() + \" / \" + this.armour; tr.appendChild(td); table.appendChild(tr);\n  241  \n  242  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  244  \t\t\ttd.innerHTML = \"Mitigation\"; tr.appendChild(td);\n  245  \t\tvar td = document.createElement(\"td\");\n  246: \t\t\ttd.innerHTML = this.getRemainingMitigation() + \"%\" + \" / \" + this.mitigation + \"%\"; tr.appendChild(td); table.appendChild(tr);\n  247  \t\t\t\n  248  \t\tdiv.appendChild(table);\n  ...\n  251  \t}\n  252  \n  253: \tthis.getRemainingIntegrity = function(){\n  254: \t\tvar integrity = this.integrity;\n  255: \t\tfor (var i = 0; i < this.damages.length; i++){\n  256: \t\t\tintegrity -= this.damages[i].structDmg;\n  257  \t\t}\n  258  \t\treturn integrity;\n  259  \t}\n  260  \n  261: \tthis.getRemainingArmour = function(){\n  262: \t\tvar armour = this.armour;\n  263: \t\tfor (var i = 0; i < this.damages.length; i++){\n  264: \t\t\tarmour -= this.damages[i].armourDmg;\n  265  \t\t}\n  266  \t\treturn armour;\n  267  \t}\n  268  \n  269: \tthis.getRemainingMitigation = function(){\n  270: \t\treturn Math.round((Math.pow(this.getRemainingArmour(), 0.5) / Math.pow(this.armour, 0.5)) * this.mitigation);\n  271  \t}\n  272  \n\nC:\\xampp\\htdocs\\fire\\game.js:\n    1  \n    2  function Game(id, name, status, userid, turn, phase){\n    3: \tthis.id = id;\n    4: \tthis.name = name;\n    5: \tthis.status = status;\n    6: \tthis.userid = userid;\n    7: \tthis.turn = turn;\n    8: \tthis.phase = phase;\n    9: \tthis.ships = [];\n   10: \tthis.fireOrders = [];\n   11: \tthis.mode = false;\n   12: \tthis.deploying = false;\n   13: \tthis.canSubmit = false;\n   14: \tthis.index = 1;\n   15  \n   16: \tthis.confirmDeployment = function(){\n   17: \t\tif (! this.canSubmit){\n   18  \t\t\tajax.confirmDeployment();\n   19  \t\t}\n   20  \t}\n   21  \t\n   22: \tthis.endPhase = function(){\n   23: \t\tif (! this.canSubmit){\n   24: \t\t\tif (this.phase == 1){\n   25  \t\t\t\tvar valid = true;\n   26: \t\t\t\tfor (var i = 0; i < this.ships.length; i++){\n   27: \t\t\t\t\tif (this.ships[i].userid == this.userid){\n   28: \t\t\t\t\t\tif (this.ships[i].getRemainingImpulse() > 0){\n   29  \t\t\t\t\t\t\tvalid = false;\n   30  \t\t\t\t\t\t\tbreak;\n   ..\n   40  \t\t\t\t}\n   41  \t\t\t}\n   42: \t\t\telse if (this.phase == 2){\n   43  \t\t\t\tajax.confirmFiringOrders();\n   44  \t\t\t}\n   45: \t\t\telse if (this.phase == 3){\n   46  \t\t\t\tajax.confirmDamageControl();\n   47  \t\t\t}\n   ..\n   49  \t}\n   50  \n   51: \tthis.createDeploymentTable = function(){\n   52  \t\t$(\"#deployWrapper\").on('mousedown', $(this), function() {\n   53          $(this).addClass('draggable').parents().on('mousemove', function(e) {\n   ..\n   71  \t\tvar table;\n   72  \n   73: \t\tfor (var i = 0; i < this.ships.length; i++){\n   74: \t\t\tif (this.ships[i].deployed == false){\n   75: \t\t\t\tif (this.ships[i].userid == this.userid){\n   76: \t\t\t\t\ttoDo.push(this.ships[i]);\n   77  \t\t\t\t}\n   78  \t\t\t}\n   ..\n   84  \t\t\tfor (var i = 0; i < toDo.length; i++){\n   85  \t\t\t\tvar available = false;\n   86: \t\t\t\tif (toDo[i].available <= this.turn){\n   87  \t\t\t\t\tavailable = true;\n   88  \t\t\t\t}\n   ..\n  127  \n  128  \t\t\t\tvar td = document.createElement(\"td\");\n  129: \t\t\t\t\ttd.innerHTML = (toDo[i].available - this.turn) + \" turn/s\";\n  130  \t\t\t\t\tif (available){td.className = \"shipAvailable\";}else{td.className = \"shipUnavailable\";}\n  131  \t\t\t\t\t\n  ...\n  168  \t}\n  169  \n  170: \tthis.initDeployment = function(){\n  171  \t\t$(\"#deployWrapper\").show();\n  172  \t}\n  173  \n  174: \tthis.initFiring = function(){\n  175: \t\tthis.executeMovement(\"rdy\");\n  176  \t}\n  177  \n  178: \tthis.initDamageControl = function(){\n  179: \t\tthis.resolveFire(\"rdy\");\n  180  \t}\n  181  \t\n  182: \tthis.initPhase = function(n){\n  183  \n  184: \t\t$(\"#turnDiv\").html(\"Turn: \" + this.turn);\n  185: \t\tthis.createDeploymentTable();\n  186  \n  187  \t\tif (n == -1){\n  188: \t\t\tthis.phase = n;\n  189  \t\t\t\t$(\"#phaseDiv\").html(\"Deployment and Initial\")\n  190  \t\t\t\t$(\"#phaseSwitchDiv\").fadeIn(200);\n  ...\n  196  \t\t}\n  197  \t\telse if (n == 1){\n  198: \t\t\tthis.phase = n;\n  199  \t\t\t\t$(\"#phaseDiv\").html(\"Movement\")\n  200  \t\t\t\t$(\"#phaseSwitchDiv\").fadeIn(200);\n  ...\n  204  \t\t}\n  205  \t\telse if (n == 2){\n  206: \t\t\tthis.phase = n;\n  207  \t\t\t\t$(\"#phaseDiv\").html(\"Firing\")\n  208  \t\t\t\t$(\"#phaseSwitchDiv\").fadeIn(200);\n  ...\n  213  \t\t}\n  214  \t\telse if (n == 3){\n  215: \t\t\tthis.phase = n;\n  216  \t\t\t\t$(\"#phaseDiv\").html(\"Damage Control\")\n  217  \t\t\t\t$(\"#phaseSwitchDiv\").fadeIn(200);\n  ...\n  223  \t}\n  224  \t\n  225: \tthis.create = function(){\n  226  \n  227  \t\t$(\"#phaseSwitchDiv\").show();\n  ...\n  233  \t\t\tvar friendly = false;\n  234  \n  235: \t\t\tif (window.ships[i].userid == this.userid){\n  236  \t\t\t\tfriendly = true;\n  237  \t\t\t}\n  ...\n  367  \t\t\t\tif (deployed){\n  368  \t\t\t\t\tship.actions.push(window.ships[i].actions[0]);\n  369: \t\t\t\t\tif (this.phase == -1){\n  370: \t\t\t\t\t\tif (ship.actions[0].turn == this.turn){\n  371  \t\t\t\t\t\t\tcontinue;\n  372  \t\t\t\t\t\t}\n  ...\n  382  \t\t\t\t\t\t}\n  383  \t\t\t\t\t}\n  384: \t\t\t\t\telse if (this.phase == 1){\n  385  \t\t\t\t\t\tfor (var j = 1; j < window.ships[i].actions.length; j++){\n  386  \t\t\t\t\t\t\tif (window.ships[i].actions[j].turn < game.turn){\n  ...\n  392  \t\t\t\t\t\t}\n  393  \t\t\t\t\t}\n  394: \t\t\t\t\telse if (this.phase == 2 || this.phase == 3){\n  395  \t\t\t\t\t\tship.actions = window.ships[i].actions;\n  396  \t\t\t\t\t}\n  ...\n  404  \n  405  \t\t\tship.create();\n  406: \t\t\tthis.ships.push(ship);\n  407  \t\t}\n  408  \n  409: \t\t//if (window.fireOrders.length){console.log(\"ding\");this.fireOrders = window.fireOrders;}\n  410  \n  411: \t\tthis.initPhase(this.phase);\n  412  \t}\n  413  \t\n  414: \tthis.hasShipOnPos = function(pos){\n  415: \t\tfor (var i = 0; i < this.ships.length; i++){\n  416: \t\t\tif (this.ships[i].deployed){\n  417: \t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n  418: \t\t\t\tif (shipPos.x < pos.x + this.ships[i].size/3 && shipPos.x > pos.x - this.ships[i].size/3){\n  419: \t\t\t\t\tif (shipPos.y > pos.y - this.ships[i].size/3 && shipPos.y < pos.y + this.ships[i].size/3){\n  420: \t\t\t\t\t\treturn this.ships[i];\n  421  \t\t\t\t\t}\n  422  \t\t\t\t}\n  ...\n  426  \t}\n  427  \t\n  428: \tthis.posIsOccupied = function(ship, pos){\n  429  \t\treturn false;\n  430: \t\tfor (var i = 0; i < this.ships.length; i++){\n  431: \t\t\tif (this.ships[i].x < pos.x + this.ships[i].size/2 && this.ships[i].x > pos.x - this.ships[i].size/2){\n  432: \t\t\t\tif (this.ships[i].y > pos.y - this.ships[i].size/2 && this.ships[i].y < pos.y + this.ships[i].size/2){\n  433: \t\t\t\t\tif (this.ships[i].id != ship.id);\n  434  \t\t\t\t\treturn true;\n  435  \t\t\t\t}\n  ...\n  439  \t}\n  440  \n  441: \tthis.getShipByClick = function(pos){\n  442  \t\tfor (var i = 0; i < game.ships.length; i++){\n  443  \t\t\tvar ship = game.ships[i];\n  444  \t\t\tif (ship.deployed){\n  445: \t\t\t\tvar shipPos = this.ships[i].getBaseOffsetPos();\n  446  \t\t\t\tif (pos.x < shipPos.x + ship.size/3 && pos.x > shipPos.x - ship.size/3){\n  447  \t\t\t\t\tif (pos.y > shipPos.y - ship.size/3 && pos.y < shipPos.y + ship.size/3){\n  ...\n  453  \t}\n  454  \t\n  455: \tthis.draw = function(){\n  456  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  457  \t\t//\tctx.moveTo(0, res/2); ctx.lineTo(res, res/2); ctx.stroke();\n  458  \t\t//\tctx.moveTo(res/2, 0); ctx.lineTo(res/2, res); ctx.stroke();\n  459: \t\tthis.drawShips();\t\t\n  460  \t}\n  461  \t\n  462: \tthis.drawShips = function(){\t\n  463: \t\tfor (var i = 0; i < this.ships.length; i++){\n  464: \t\t\tthis.ships[i].draw();\n  465  \t\t}\n  466  \t}\n  467  \t\n  468: \tthis.drawOtherShips = function(id){\n  469: \t\tfor (var i = 0; i < this.ships.length; i++){\n  470: \t\t\tif (this.ships[i].id != id){\n  471: \t\t\t\tthis.ships[i].draw();\n  472  \t\t\t}\n  473  \t\t}\n  474  \t}\n  475  \n  476: \tthis.getShipById = function(id){\t\n  477  \t\tfor (var i = 0; i < game.ships.length; i++){\n  478  \t\t\tif (game.ships[i].id == id){\n  ...\n  482  \t}\n  483  \t\n  484: \tthis.getActiveShip = function(){\n  485: \t\tfor (var i = 0; i < this.ships.length; i++){\n  486: \t\t\tif (this.ships[i].selected){\n  487: \t\t\t\treturn this.ships[i];\n  488  \t\t\t}\n  489  \t\t}\n  ...\n  492  \n  493  \t\n  494: \tthis.executeMovement = function(callback){\n  495  \t//\treturn;\n  496  \t\tif (aShip){\n  ...\n  502  \t\tvar frames = 30;\n  503  \t\n  504: \t\tfor (var i = 0; i < this.ships.length; i++){\n  505  \n  506: \t\t\tif (! this.ships[i].deployed){continue;}\n  507  \n  508: \t\t\tthis.ships[i].animationSetup();\n  509  \n  510: \t\t\tvar speed = this.ships[i].getTotalImpulse();\n  511  \t\t\tvar frameMod = frames / speed ;\n  512  \t\t\tvar moves = 0;\n  513  \t\t\t\n  514: \t\t\tfor (var j = 0; j < this.ships[i].actions.length; j++){\t\t\t\t\n  515: \t\t\t\tif (this.ships[i].actions[j].turn == game.turn && this.ships[i].actions[j].type == \"move\"){\n  516  \t\t\t\t\tmoves++;\n  517  \t\t\t\t}\n  518  \t\t\t}\n  519  \t\t\t\t\n  520: \t\t\tfor (var j = 0; j < this.ships[i].actions.length; j++){\n  521: \t\t\t\tif (this.ships[i].actions[j].turn == game.turn){\n  522: \t\t\t\t\tvar action = this.ships[i].actions[j];\n  523  \t\t\t\t\t//console.log(move);\n  524  \n  525  \t\t\t\t\tif (action.type == \"deploy\" || action.type == \"speedChange\"){\n  526: \t\t\t\t\t\tthis.ships[i].actions[j].animated = true;\n  527  \t\t\t\t\t}\n  528  \t\t\t\t\t\n  529  \t\t\t\t\tif (j == 0){\n  530  \t\t\t\t\t\tif (action.type == \"move\"){\n  531: \t\t\t\t\t\t\tvar v = new Vector(this.ships[i].getBaseOffsetPos(), {x: action.x, y: action.y});\n  532  \t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n  533: \t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n  534  \t\t\t\t\t\t}\n  535  \t\t\t\t\t\telse if (action.type == \"turn\"){\n  536: \t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n  537  \t\t\t\t\t\t}\n  538  \t\t\t\t\t}\n  539  \t\t\t\t\telse {\n  540  \t\t\t\t\t\tif (action.type == \"move\"){\n  541: \t\t\t\t\t\t\tvar v = new Vector({x: this.ships[i].actions[j-1].x, y: this.ships[i].actions[j-1].y}, {x: action.x, y: action.y});\n  542  \t\t\t\t\t\t\t\tv.t = [0, action.dist * frameMod];\n  543: \t\t\t\t\t\t\tthis.ships[i].actions[j].v = v;\n  544  \t\t\t\t\t\t\t//console.log(v);\n  545  \t\t\t\t\t\t}\n  546  \t\t\t\t\t\telse if (action.type == \"turn\"){\n  547: \t\t\t\t\t\t\tthis.ships[i].actions[j].angle = this.ships[i].actions[j].a;\n  548  \t\t\t\t\t\t}\n  549  \t\t\t\t\t}\n  ...\n  557  \t}\n  558  \t\n  559: \tthis.animateMovement = function(callback){\n  560  \t\t\n  561  \t\tanim = window.requestAnimationFrame(game.animateMovement.bind(this, callback));\n  ...\n  646  \t}\n  647  \n  648: \tthis.resolveFire = function(){\n  649: \t\tthis.getResolvingFireOrders();\n  650: \t\tthis.getShotDetails();\n  651: \t\tthis.getAnimationDetails();\n  652: \t\tthis.animate();\n  653  \t}\n  654  \n  655: \tthis.getResolvingFireOrders= function(){\n  656: \t\tthis.fireOrders = [];\n  657  \n  658: \t\tfor (var i = 0; i < this.ships.length; i++){\n  659: \t\t\tfor (var j = 0; j < this.ships[i].structures.length; j++){\n  660: \t\t\t\tfor (var k = 0; k < this.ships[i].structures[j].systems.length; k++){\n  661: \t\t\t\t\tif (this.ships[i].structures[j].systems[k].weapon){\n  662: \t\t\t\t\t\tfor (var l = 0; l < this.ships[i].structures[j].systems[k].fireOrders.length; l++){\n  663: \t\t\t\t\t\t\tif (this.ships[i].structures[j].systems[k].fireOrders[l].turn == this.turn){\n  664: \t\t\t\t\t\t\t\tthis.fireOrders.push(this.ships[i].structures[j].systems[k].fireOrders[l]);\n  665  \t\t\t\t\t\t\t}\n  666  \t\t\t\t\t\t}\n  ...\n  671  \t}\n  672  \n  673: \tthis.getShotDetails = function(){\n  674  \t\t//\tconsole.log(\"getShotDetails\");\n  675: \t\t//\tthis.fireOrders = [this.fireOrders[0]];\n  676: \t\t//  console.log(this.fireOrders);\n  677  \n  678: \t\tfor (var i = 0; i < this.fireOrders.length; i++){\n  679: \t\t\tthis.fireOrders[i].shooter = game.getShipById(this.fireOrders[i].shooterid);\n  680: \t\t\tthis.fireOrders[i].weapon = this.fireOrders[i].shooter.getSystemById(this.fireOrders[i].weaponid);\n  681: \t\t\tthis.fireOrders[i].guns = this.fireOrders[i].weapon.guns;\n  682: \t\t\tthis.fireOrders[i].anim = [];\n  683: \t\t\tthis.fireOrders[i].hits = [this.fireOrders[i].hits];\n  684  \t\t}\n  685  \t\t\n  686: \t\tfor (var i = 0; i < this.fireOrders.length; i++){\n  687: \t\t\tvar a = this.fireOrders[i];\n  688  \t\t\t\n  689: \t\t\tif (this.fireOrders[i].guns){\n  690: \t\t\t\tthis.fireOrders[i].target = game.getShipById(a.targetid);\n  691  \t\t\t\t\n  692: \t\t\t\tfor (var j = 0; j < this.fireOrders.length; j++){\n  693: \t\t\t\t\tvar b = this.fireOrders[j];\n  694  \t\t\t\t\t\n  695  \t\t\t\t\tif (a.id != b.id){\n  696: \t\t\t\t\t\tif (this.fireOrders[j].guns){\n  697  \t\t\t\t\t\t\tif (a.shooterid == b.shooterid){\n  698  \t\t\t\t\t\t\t\tif (a.targetid == b.targetid){\n  699  \t\t\t\t\t\t\t\t\tif (a.weapon.name == b.weapon.name){\n  700: \t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].guns += this.fireOrders[j].guns;\n  701: \t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].hits.push(this.fireOrders[j].hits[0]);\n  702: \t\t\t\t\t\t\t\t\t\tthis.fireOrders[j].guns = 0;\n  703  \t\t\t\t\t\t\t\t\t}\n  704  \t\t\t\t\t\t\t\t}\n  ...\n  710  \t\t}\n  711  \n  712: \t\t//console.log(this.fireOrders);\n  713: \t\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n  714: \t\t\tif (! this.fireOrders[i].guns){\n  715: \t\t\t\tthis.fireOrders.splice(i, 1);\n  716  \t\t\t}\n  717  \t\t}\n  718  \t}\n  719  \n  720: \tthis.getAnimationDetails = function(){\n  721  \t\t//console.log(\"getAnimationDetails\");\n  722  \t\t//\tconsole.time(\"start\");\n  723: \t\tfor (var i = 0; i < this.fireOrders.length; i++){\n  724: \t\t\t//\tconsole.log(this.fireOrders[i]);\n  725: \t\t\tfor (var j = 0; j < this.fireOrders[i].guns; j++){\n  726: \t\t\t\tvar ox = this.fireOrders[i].shooter.x + Math.random()*30-15; // GUN origin for all proj\n  727: \t\t\t\tvar oy = this.fireOrders[i].shooter.y + Math.random()*30-15;\n  728  \t\t\t\t\n  729  \t\t\t\tvar anims = [];\n  730  \t\t\t\t\n  731: \t\t\t\tfor (var k = 0; k < this.fireOrders[i].weapon.shots; k++){\n  732  \t\t\t\t\tvar hit = true;\n  733: \t\t\t\t\tvar tx = this.fireOrders[i].target.x + Math.random()*this.fireOrders[i].target.size/3 - this.fireOrders[i].target.size/6; // proj destination on HIT\n  734: \t\t\t\t\tvar ty = this.fireOrders[i].target.y + Math.random()*this.fireOrders[i].target.size/3 - this.fireOrders[i].target.size/3;\n  735  \t\t\t\t\tvar subAbim = {};\n  736  \t\t\t\t\t\n  737: \t\t\t\t\tif (this.fireOrders[i].weapon.animation == \"projectile\"){\n  738: \t\t\t\t\t\tif (k >= this.fireOrders[i].hits[j]){\n  739  \t\t\t\t\t\t\thit = false;\n  740: \t\t\t\t\t\t\ttx = tx + Math.random()*this.fireOrders[i].target.size / 1 - this.fireOrders[i].target.size / 2;\n  741: \t\t\t\t\t\t\tty = ty + Math.random()*this.fireOrders[i].target.size / 1 - this.fireOrders[i].target.size / 2;\n  742  \t\t\t\t\t\t}\n  743  \t\t\t\t\t\t\tsubAnim = {\n  ...\n  753  \t\t\t\t\t\t\t}\n  754  \t\t\t\t\t}\n  755: \t\t\t\t\telse if (this.fireOrders[i].weapon.animation == \"laser\"){\n  756: \t\t\t\t\t\tif (k >= this.fireOrders[i].hits[j]){\n  757  \t\t\t\t\t\t\thit = false;\n  758: \t\t\t\t\t\t\t//console.log(this.fireOrders[i].target.size);\n  759: \t\t\t\t\t\t\tvar stepX = Math.random()*this.fireOrders[i].target.size * 1.5 - this.fireOrders[i].target.size * .75;\n  760: \t\t\t\t\t\t\tvar stepY = Math.random()*this.fireOrders[i].target.size * 1.5 - this.fireOrders[i].target.size * .75;\n  761  \t\t\t\t\t\t\ttx += stepX;\n  762  \t\t\t\t\t\t\tty += stepY;\n  ...\n  765  \t\t\t\t\t\t}\n  766  \t\t\t\t\t\t\n  767: \t\t\t\t\t\t\tvar tbx = tx + Math.random()*this.fireOrders[i].target.size / 2 - this.fireOrders[i].target.size / 4;\n  768: \t\t\t\t\t\t\tvar tby = ty + Math.random()*this.fireOrders[i].target.size / 2 - this.fireOrders[i].target.size / 4;\n  769  \t\t\t\t\t\t\t\n  770  \t\t\t\t\t\t\tsubAnim = {\n  ...\n  775  \t\t\t\t\t\t\t\ttbx: tbx,\n  776  \t\t\t\t\t\t\t\ttby: tby,\n  777: \t\t\t\t\t\t\t\tt: [0, this.fireOrders[i].weapon.rakeTime],\n  778  \t\t\t\t\t\t\t\thit: hit,\n  779  \t\t\t\t\t\t\t\tv: new Vector({x: tx, y: ty}, {x: tbx, y: tby}),\n  ...\n  790  \t\t\t\tanims.push(subAnim);\n  791  \t\t\t\t}\n  792: \t\t\tthis.fireOrders[i].anim.push(anims);\n  793  \t\t\t}\n  794  \t\t}\n  ...\n  797  \t}\n  798  \n  799: \tthis.animate = function(){\n  800  \t\treturn;\n  801  \t\t//console.log(\"animate\");\n  802: \t\t//console.log(this.fireOrders);\n  803  \t\n  804  \t\tanimation = setInterval(function(){\n  ...\n  807  \t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n  808  \n  809: \t\t\tfor (var i = 0; i  < this.fireOrders.length; i++){\n  810: \t\t\t\tif (! this.fireOrders[i].animated){\n  811: \t\t\t\t\t//console.log(\"animating fire[\" + i + \"] for shots: \" + this.fireOrders[i].shots);\n  812  \t\t\t\t\tvar x, y;\n  813  \t\t\t\t\t\n  814: \t\t\t\t\t//console.log(\"animating \" + this.fireOrders[i].anim.length + \" guns with \" + this.fireOrders[i].anim[0].length + \" shots each.\");\n  815: \t\t\t\t\tfor (var j = 0; j < this.fireOrders[i].anim.length; j++){\n  816: \t\t\t\t\t\t//console.log(this.fireOrders[i].anim[j]);\n  817: \t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[i].anim[j].length; k++){\n  818: \t\t\t\t\t\t\tif (this.fireOrders[i].weapon.animation == \"projectile\"){\n  819: \t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] < this.fireOrders[i].anim[j][k].t[1]){ // still to animate\n  820: \t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].t[0] += 1;\n  821: \t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] > 0){ // t valid, now animate\n  822: \t\t\t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].ox + (this.fireOrders[i].anim[j][k].v.x * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n  823: \t\t\t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].oy + (this.fireOrders[i].anim[j][k].v.y * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n  824: \t\t\t\t\t\t\t\t\t\tdrawProjectile(this.fireOrders[i].weapon, x, y);  // PROJ\n  825  \t\t\t\t\t\t\t\t\t}\n  826  \t\t\t\t\t\t\t\t}\n  827  \t\t\t\t\t\t\t\telse {// animate EXPLO\n  828: \t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo){\n  829: \t\t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo.t[0] < this.fireOrders[i].anim[j][k].explo.t[1]){\n  830: \t\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].explo.t[0] += 10;\n  831: \t\t\t\t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].ox + this.fireOrders[i].anim[j][k].v.x;\n  832: \t\t\t\t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].oy + this.fireOrders[i].anim[j][k].v.y;\t\n  833: \t\t\t\t\t\t\t\t\t\t\tdrawExplosion(x, y, this.fireOrders[i].anim[j][k].explo.s * this.fireOrders[i].anim[j][k].explo.t[0] / this.fireOrders[i].anim[j][k].explo.t[1]); // EXPLO\n  834  \t\t\t\t\t\t\t\t\t\t}\n  835  \t\t\t\t\t\t\t\t\t\telse {\n  836: \t\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n  837  \t\t\t\t\t\t\t\t\t\t}\n  838  \t\t\t\t\t\t\t\t\t}\n  839  \t\t\t\t\t\t\t\t\telse {\n  840: \t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n  841  \t\t\t\t\t\t\t\t\t}\n  842  \t\t\t\t\t\t\t\t}\n  843  \t\t\t\t\t\t\t}\n  844: \t\t\t\t\t\t\telse if (this.fireOrders[i].weapon.animation == \"laser\"){\n  845  \t\t\t\t\t\t\t//\tconsole.log(\"laser\");\n  846: \t\t\t\t\t\t\t//\tconsole.log(this.fireOrders[i].anim);\n  847: \t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].t[0] += 1;\n  848: \t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].tax + (this.fireOrders[i].anim[j][k].v.x * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n  849: \t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].tay + (this.fireOrders[i].anim[j][k].v.y * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n  850: \t\t\t\t\t\t\t\tdrawBeam(this.fireOrders[i].weapon, this.fireOrders[i].anim[j][k].ox, this.fireOrders[i].anim[j][k].oy, x, y); // BEAM\n  851: \t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo){\n  852: \t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].explo.t[0] = this.fireOrders[i].anim[j][k].explo.t[1];\t\t\n  853  \t\t\t\t\t\t\t\t\tvar size = Math.random() * 3 +4;\n  854: \t\t\t\t\t\t\t\t//\tdrawExplosion(x, y, this.fireOrders[i].anim[j][k].explo.s); // EXPLO\n  855  \t\t\t\t\t\t\t\t\tdrawExplosion(x, y, size) // EXPL\n  856  \t\t\t\t\t\t\t\t}\n  857: \t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] == this.fireOrders[i].anim[j][k].t[1]){\n  858: \t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n  859  \t\t\t\t\t\t\t\t}\n  860  \t\t\t\t\t\t\t}\n  ...\n  863  \t\t\t\t\t\n  864  \t\t\t\t\tvar allAnimated = true;\n  865: \t\t\t\t\tfor (var j = 0; j < this.fireOrders[i].anim.length; j++){\n  866: \t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[i].anim[j].length; k++){\n  867: \t\t\t\t\t\t\tif (! this.fireOrders[i].anim[j][k].animated){\n  868  \t\t\t\t\t\t\t\tallAnimated = false;\n  869  \t\t\t\t\t\t\t\tbreak;\n  ...\n  876  \t\t\t\t\t\n  877  \t\t\t\t\tif (allAnimated){\n  878: \t\t\t\t\t\tthis.fireOrders[i].animated = allAnimated;\n  879: \t\t\t\t\t\tgame.createLogEntry(this.fireOrders[i]);\n  880  \t\t\t\t\t}\n  881  \t\t\t\t\n  ...\n  887  \t\t\tvar done = true\n  888  \t\t\t\n  889: \t\t\tfor (var i = 0; i  < this.fireOrders.length; i++){\n  890: \t\t\t\tif (! this.fireOrders[i].animated){\n  891  \t\t\t\t\tdone = false;\n  892  \t\t\t\t}\n  ...\n  902  \t}\n  903  \n  904: \tthis.createLogEntry = function(fire){\n  905  \t\t //console.log(fire);\n  906  \n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  198  \t\t\t\tships: [],\n  199  \t\t\t\tgetShipById: function(id){\t\n  200: \t\t\t\t\treturn this.ships[0];\n  201  \t\t\t\t},\n  202  \t\t\t\tshipsBought: [],\n  ...\n  525  \t\t\t\t\tsubTr.addEventListener(\"contextmenu\", function(e){\n  526  \t\t\t\t\t\te.preventDefault();\n  527: \t\t\t\t\t\trequestShipData(this.childNodes[0].innerHTML);\n  528  \t\t\t\t\t})\n  529  \t\t\t\t\t\n\nC:\\xampp\\htdocs\\fire\\lobby.php:\n  177  \t\t\tif ($canProcess){\n  178  \t\t\t\t$adminElement .= \"<tr><td style='border: 2px solid white' colSpan = 3>\";\n  179: \t\t\t\t$adminElement .= \"<input type='button' id='\".$game[\"id\"].\".\".$game[\"turn\"].\"'value='PROCESS TURN' onclick='initTurnProcession(this.id)'></input>\";\n  180  \t\t\t\t$adminElement .= \"</td></tr>\";\n  181  \t\t\t}\n\nC:\\xampp\\htdocs\\fire\\script.js:\n   27  \t\t\tinput.value = canv[i].id;\n   28  \t\t\tinput.addEventListener(\"click\", function(){\n   29: \t\t\t\tvar c = document.getElementById(this.value);\n   30  \t\t\t\tif (c.style.display == \"none\"){\n   31  \t\t\t\t\tc.style.display = \"\";\n   ..\n   85  function mouseCanvasZoom(e){\n   86  \te.preventDefault();\t\n   87: \tvar rect = this.getBoundingClientRect();\t\t\n   88  \tvar pos = new Point(e.clientX - rect.left, e.clientY - rect.top);\n   89  \tif (game){\n   ..\n   96  //\tconsole.log(\"ding\");\n   97  \te.preventDefault();\n   98: \tvar rect = this.getBoundingClientRect();\t\t\n   99  \tvar pos = new Point(e.clientX - rect.left, e.clientY - rect.top);\n  100  \tif (game && !aShip){\n  ...\n  107  \te.preventDefault();\n  108  \te.stopPropagation();\n  109: \tvar rect = this.getBoundingClientRect();\t\t\n  110  \tvar pos = new Point(e.clientX - rect.left, e.clientY - rect.top);\n  111  \t\n  ...\n  258  \n  259  function canvasMouseClick(e){\n  260: \tvar rect = this.getBoundingClientRect();\t\t\n  261  \tvar pos = new Point(e.clientX - rect.left, e.clientY - rect.top);\n  262  \tvar ship;\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n    1  function Ship(id, shipClass, x, y, facing, userid){\n    2: \tthis.id = id;\n    3: \tthis.shipClass = shipClass;\n    4: \tthis.x = x || false;\n    5: \tthis.y = y || false;\n    6: \tthis.facing = facing;\n    7: \tthis.userid = userid;\n    8: \tthis.id = id;\n    9: \tthis.img;\n   10: \tthis.turns = [];\n   11: \tthis.actions = [];\n   12: \tthis.validMoveArcs = [];\n   13: \tthis.impulseAdjust = [];\n   14: \tthis.maxVector = false;\n   15: \tthis.undoOrderButton = false;\n   16: \tthis.structures = [];\n   17  \n   18: \tthis.profile = [];\n   19: \tthis.mass = 0;\n   20  \n   21: /*\tthis.preview = function(){\n   22: \t\tthis.createDiv();\n   23  \t\t\n   24: \t\tif (! this.img){\n   25  \t\t\twindow.img = new Image();\n   26: \t\t\twindow.img.src = \"shipIcons/\" + this.shipClass.toLowerCase() + \".png\";\n   27  \t\t\twindow.img.onload = function(){\n   28  \t\t\t\tgame.ships[0].img = window.img;\n   ..\n   31  \t\t}\n   32  \t\telse {\n   33: \t\t\tthis.drawShipForPreview();\n   34  \t\t}\n   35  \t}*/\n   36  \n   37: \tthis.drawShipForPreview = function(){\n   38  \t\tshipCtx.clearRect(0, 0, res.x, res.y);\n   39  \t\tshipCtx.save();\n   40: \t\tshipCtx.translate(this.x, this.y);\n   41: \t\tshipCtx.rotate(this.actions[0].a*(Math.PI/180));\n   42: \t\tshipCtx.drawImage(this.img, -30, -30, 60, 60);\n   43  \t\tshipCtx.restore();\n   44  \t}\n   45  \n   46: \tthis.draw = function(){\n   47: \t\tif (this.deployed){\n   48: \t\t\tvar size = this.size*cam.z * 0.8;\n   49  \n   50  \t\t\tctx.save();\n   51: \t\t\tctx.translate(this.x + cam.o.x, this.y + cam.o.y);\n   52: \t\t\tctx.rotate(this.facing * (Math.PI/180));\n   53: \t\t\tctx.drawImage(this.img, -size/2, -size/2, size, size);\n   54  \t\t\tctx.restore();\n   55  \t\t}\n   56  \t}\n   57  \n   58: \tthis.animationSetup = function(){\n   59: \t\tvar start = this.getTurnStartPosition();\n   60: \t\tthis.facing = this.getTurnStartFacing();\n   61  \n   62: \t\tthis.x = start.x;\n   63: \t\tthis.y = start.y;\n   64  \t}\n   65  \n   66: \tthis.getTurnStartPosition = function(){\n   67  \t\tvar i;\n   68  \n   69: \t\tfor (i = 0; i < this.actions.length; i++){\n   70: \t\t\tif (this.actions[i].turn >= game.turn){\n   71  \t\t\t\tif (i > 0){\n   72  \t\t\t\t\ti = i -1;\n   73  \t\t\t\t\tbreak;\n   74  \t\t\t\t}\n   75: \t\t\t\telse if (this.actions.type == \"deploy\"){\n   76  \t\t\t\t\tbreak;\n   77  \t\t\t\t}\n   ..\n   79  \t\t}\n   80  \n   81: \t\treturn this.actions[i];\n   82  \t}\n   83  \n   84: \tthis.getTurnStartFacing = function(){\n   85  \t\tvar angle = 0;\n   86  \t\tvar index = 0;\n   87  \n   88: \t\tfor (var i = 0; i < this.actions.length; i++){\n   89: \t\t\tif (this.actions[i].type == \"deploy\"){\n   90: \t\t\t\tangle += this.actions[i].a;\n   91  \t\t\t}\n   92: \t\t\telse if (this.actions[i].turn >= game.turn){\n   93  \t\t\t\tbreak;\n   94  \t\t\t}\n   95  \t\t\telse {\n   96: \t\t\t\tangle += this.actions[i].a;\n   97  \t\t\t}\n   98  \t\t}\n   ..\n  101  \t}\n  102  \n  103: \tthis.getFacing = function(){\n  104  \t\tvar angle = 0;\n  105  \n  106: \t\tfor (var i = 0; i < this.actions.length; i++){\n  107: \t\t\tif (this.actions[i].resolved == 1){\n  108: \t\t\t\tangle += this.actions[i].a;\n  109  \t\t\t}\n  110  \t\t}\n  ...\n  113  \t}\n  114  \n  115: \tthis.doDeploy = function(pos){\n  116: \t\tif (this.actions.length){\n  117: \t\t\tthis.actions[0].x = pos.x - cam.o.x;\n  118: \t\t\tthis.actions[0].y = pos.y - cam.o.y;\n  119: \t\t\tthis.unselect();\n  120: \t\t\tthis.select();\n  121  \t\t}\n  122  \t\telse {\n  123  \n  124  \t\t\tvar facing = 0;\n  125: \t\t\tif (this.userid == 1){facing = 0;}else {facing = 180};\n  126: \t\t\tthis.actions.push(new Move(\"deploy\", 0, pos.x, pos.y, facing, 0, 0));\n  127: \t\t\tthis.deployed = true;\n  128  \n  129: \t\t\tvar shipId = this.id;\n  130  \t\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n  131  \t\t\t\tif ($(this).data(\"shipid\") == shipId){\n  ...\n  137  \n  138  \t\tgame.deploying = false;\n  139: \t\tthis.setPosition();\n  140: \t\tthis.setFacing();\n  141  \t\tgame.draw();\n  142  \t}\n  143  \t\n  144: \tthis.getBaseOffsetPos = function(){\n  145: \t\tif (this.actions.length == 1){\n  146: \t\t\treturn {x: this.actions[0].x + cam.o.x, y: this.actions[0].y + cam.o.y};\n  147  \t\t}\n  148  \t\telse {\n  149: \t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n  150: \t\t\t\tif (this.actions[i].resolved == 1){\n  151: \t\t\t\t\treturn {x: this.actions[i].x + cam.o.x, y: this.actions[i].y + cam.o.y};\n  152  \t\t\t\t}\n  153  \t\t\t}\n  ...\n  155  \t}\n  156  \t\n  157: \tthis.getOffsetPos = function(){\n  158: \t\treturn {x: this.actions[this.actions.length-1].x + cam.o.x, y: this.actions[this.actions.length-1].y + cam.o.y};\n  159  \t}\n  160  \n  161: \tthis.setPosition = function(){\n  162: \t\tif (this.actions.length == 1){\n  163: \t\t\tthis.x = this.actions[0].x;\n  164: \t\t\tthis.y = this.actions[0].y;\n  165  \t\t\treturn;\n  166  \t\t}\n  167  \n  168: \t\tif (this.deployed){\n  169  \t\t\tif (game.phase == 2){ // FIRE -> animation of moves phase\n  170: \t\t\t\tif (this.actions.length == 1){\n  171: \t\t\t\t\tthis.x = this.actions[0].x;\n  172: \t\t\t\t\tthis.y = this.actions[0].y;\n  173  \t\t\t\t}\n  174  \t\t\t\telse {\n  175: \t\t\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n  176: \t\t\t\t\t\tif (this.actions[i].resolved){\n  177: \t\t\t\t\t\t\tthis.x = this.actions[i].x;\n  178: \t\t\t\t\t\t\tthis.y = this.actions[i].y;\n  179  \t\t\t\t\t\t}\n  180  \t\t\t\t\t}\n  ...\n  182  \t\t\t}\n  183  \t\t\telse {\n  184: \t\t\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n  185: \t\t\t\t\tif (this.actions[i].resolved){\n  186: \t\t\t\t\t\tthis.x = this.actions[i].x;\n  187: \t\t\t\t\t\tthis.y = this.actions[i].y;\n  188  \t\t\t\t\t\treturn;\n  189  \t\t\t\t\t}\n  190  \t\t\t\t\telse if (i == 0){\n  191: \t\t\t\t\t\tthis.x = this.actions[0].x;\n  192: \t\t\t\t\t\tthis.y = this.actions[0].y;\n  193  \t\t\t\t\t\treturn;\n  194  \t\t\t\t\t}\n  ...\n  198  \t}\n  199  \n  200: \tthis.setFacing = function(){\n  201  \t\tvar facing = 0;\n  202  \n  203: \t\tif (this.deployed){\n  204  \t\t\tif (game.phase == 2){\n  205: \t\t\t\tfor (var i = 0; i < this.actions.length; i++){\n  206: \t\t\t\t\tif (this.actions[i].turn <= game.turn){\n  207: \t\t\t\t\t\tfacing = addAngle(facing, this.actions[i].a);\n  208  \t\t\t\t\t}\n  209  \t\t\t\t}\t\n  210  \t\t\t}\n  211  \t\t\telse if (game.phase == -1){\n  212: \t\t\t\tif (this.actions.length == 1){\n  213: \t\t\t\t\tfacing = addAngle(facing, this.actions[0].a);\n  214  \t\t\t\t}\n  215  \t\t\t\telse {\n  216: \t\t\t\t\tfor (var i = 0; i < this.actions.length; i++){\n  217: \t\t\t\t\t\tif (this.actions[i].resolved){\n  218: \t\t\t\t\t\t\tfacing = addAngle(facing, this.actions[i].a);\n  219  \t\t\t\t\t\t}\n  220  \t\t\t\t\t}\n  ...\n  222  \t\t\t}\n  223  \t\t\telse {\n  224: \t\t\t\tfor (var i = 0; i < this.actions.length; i++){\n  225: \t\t\t\t\tif (this.actions[i].resolved){\n  226: \t\t\t\t\t\tfacing = addAngle(facing, this.actions[i].a);\n  227  \t\t\t\t\t}\n  228  \t\t\t\t}\n  ...\n  230  \t\t}\n  231  \n  232: \t\tthis.facing = facing;\n  233  \t}\n  234  \t\n  235: \tthis.create = function(){\n  236: \t\tthis.img = window.shipImages[this.shipClass.toLowerCase()];\n  237: \t\t//this.addSystems();\n  238  \t\t//resetIndex();\n  239: \t\t//this.addStructures();\n  240: \t\tthis.setPosition();\n  241: \t\tthis.setFacing()\n  242  \n  243  \t\tif (!window.preview){\n  244: \t\t\tthis.createShortInfo();\n  245: \t\t\tthis.createDiv();\n  246  \t\t}\n  247  \t}\n  248  \n  249: \tthis.hasWeaponsSelected = function(){\t\t\n  250: \t\tfor (var i = 0; i < this.structures.length; i++){\n  251: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  252: \t\t\t\tif (this.structures[i].systems[j].selected){\n  253  \t\t\t\t\treturn true;\n  254  \t\t\t\t}\n  ...\n  259  \t}\n  260  \n  261: \tthis.getSystemById = function(id){\n  262: \t\tfor (var i = 0; i < this.structures.length; i++){\n  263: \t\t\tif (this.structures[i].id == id){\n  264: \t\t\t\treturn this.structures[i];\n  265  \t\t\t}\n  266  \n  267: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  268: \t\t\t\tif (this.structures[i].systems[j].id == id){\n  269: \t\t\t\t\treturn this.structures[i].systems[j];\n  270  \t\t\t\t}\n  271  \t\t\t}\n  ...\n  273  \t}\n  274  \t\n  275: \tthis.highlightAllSelectedWeapons = function(){\n  276  \t\tfxCtx.clearRect(0, 0, res.x, res.y);\n  277  \t\t\n  278: \t\tfor (var i = 0; i < this.structures.length; i++){\n  279: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n  280: \t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n  281  \t\t\t\t\t//console.log(\"ding\");\n  282: \t\t\t\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n  283: \t\t\t\t\tthis.structures[i].systems[j].drawArc(angle, this.getOffsetPos());\n  284  \t\t\t\t}\n  285  \t\t\t}\n  ...\n  287  \t}\n  288  \n  289: \tthis.drawStructureAxis = function(struct){\n  290  \t\tfxCtx.clearRect(0, 0, res.x, res.y);\n  291  \n  292: \t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n  293: \t\tvar pos = this.getOffsetPos();\n  294  \t\tvar p1 = getPointInDirection(res.x, struct.start + angle, pos.x, pos.y);\n  295  \t\tvar p2 = getPointInDirection(res.y, struct.end + angle, pos.x, pos.y)\n  ...\n  310  \t}\n  311  \t\n  312: \tthis.weaponHighlight = function(weapon){\n  313  \t\tif (weapon.highlight){\n  314  \t\t\tweapon.highlight = false;\n  ...\n  319  \t\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n  320  \t\t\tweapon.highlight = true;\t\t\n  321: \t\t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n  322: \t\t\tvar shipPos = this.getOffsetPos();\n  323  \t\t\t\n  324  \t\t\tweapon.drawArc(angle, shipPos);\n  ...\n  326  \t}\n  327  \t\n  328: \tthis.drawTurnControl = function(){\n  329  \t\tvar center;\n  330: \t\tvar plannedAngle = this.getPlannedFacingToMove(this.actions.length-1);\n  331  \t\t\n  332: \t\tif (this.actions.length){\n  333: \t\t\tcenter = new Point(this.actions[this.actions.length-1].x + cam.o.x, this.actions[this.actions.length-1].y + cam.o.y);\n  334  \t\t}\n  335  \t\telse {\n  336: \t\t\tcenter = this.getBaseOffsetPos();\n  337  \t\t}\n  338  \n  339: \t\tif (this.turns.length){\n  340: \t\t\tfor (var i = 0; i < this.turns.length; i++){\n  341: \t\t\t\tvar turn = this.turns[i];\n  342: \t\t\t\t\tturn.cost = this.getTurnCost();\n  343: \t\t\t\t\tturn.delay = this.getTurnDelay();\n  344  \t\t\t\t\n  345  \t\t\t\tvar p = getPointInDirection(300, addAngle(plannedAngle, turn.a), center.x, center.y);\n  ...\n  374  \t\t\t\tdrawText(moveCtx, \"blue\", \"delay; \" + Math.ceil(turn.delay/turn.costmod), 10, {x: p1.x, y: p1.y+15});\n  375  \t\t\t\t\n  376: \t\t\t\tif (this.canShortenTurn()){\n  377  \t\t\t\t\tmoveCtx.beginPath();\n  378  \t\t\t\t\tmoveCtx.arc(turn.clickX -20, turn.clickY, 7, 0, 2*Math.PI);\n  ...\n  389  \t\t\t\t}\n  390  \n  391: \t\t\t\tif (this.canUndoShortenTurn()){\n  392  \t\t\t\t\tmoveCtx.beginPath();\n  393  \t\t\t\t\tmoveCtx.arc(turn.clickX +20, turn.clickY, 7, 0, 2*Math.PI);\n  ...\n  420  \t\t\t\t\t\t\t\t\tclickY: turnButton.y,\n  421  \t\t\t\t\t\t\t\t\ta: modAngle,\n  422: \t\t\t\t\t\t\t\t\tcost: this.getTurnCost(),\n  423: \t\t\t\t\t\t\t\t\tdelay: this.getTurnDelay(),\n  424  \t\t\t\t\t\t\t\t\tthrustUp: false,\n  425  \t\t\t\t\t\t\t\t\tcostmod: 1\n  ...\n  447  \t\t\t\t\tdrawText(moveCtx, \"blue\", \"delay; \" + Math.ceil(turn.delay/turn.costmod), 10, {x: p1.x, y: p1.y+15});\n  448  \t\t\t\t\t\n  449: \t\t\t\t\tif (this.canShortenTurn()){\n  450  \t\t\t\t\t\tmoveCtx.beginPath();\n  451  \t\t\t\t\t\tmoveCtx.arc(turnButton.x -20, turnButton.y, 7, 0, 2*Math.PI);\n  ...\n  458  \t\t\t\t\t\t\t\t\t\t};\n  459  \t\t\t\t\t}\n  460: \t\t\t\t\tif (this.canUndoShortenTurn()){\n  461  \t\t\t\t\t\tmoveCtx.beginPath();\n  462  \t\t\t\t\t\tmoveCtx.arc(turnButton.x +20, turnButton.y, 7, 0, 2*Math.PI);\n  ...\n  469  \t\t\t\t\t\t\t\t\t}\n  470  \t\t\t\t\t}\n  471: \t\t\t\t\tthis.turns.push(turn);\n  472  \t\t\t\t}\n  473  \t\t\t}\n  ...\n  475  \t}\n  476  \t\t\n  477: \tthis.getRemainingImpulse = function(){\t\n  478: \t\tvar base = this.getBaseImpulse();\t\t\n  479: \t\tfor (var i = 0; i < this.actions.length; i++){\n  480: \t\t\tif (this.actions[i].turn == game.turn){\n  481: \t\t\t\tif (this.actions[i].type == \"speedChange\"){\n  482: \t\t\t\t\tif (this.actions[i].dist == 1){\n  483  \t\t\t\t\t\tbase += 20;\n  484  \t\t\t\t\t}\n  485: \t\t\t\t\telse if (this.actions[i].dist == -1){\n  486  \t\t\t\t\t\tbase -= 20;\n  487  \t\t\t\t\t}\n  488  \t\t\t\t}\n  489: \t\t\t\telse if (this.actions[i].type == \"move\"){\n  490: \t\t\t\t\tbase -= this.actions[i].dist;\n  491  \t\t\t\t}\n  492  \t\t\t}\n  ...\n  496  \t}\n  497  \t\n  498: \tthis.getUsedImpulse = function(){\n  499  \t\tvar impulse = 0;\t\t\n  500: \t\tfor (var i = 0; i < this.actions.length; i++){\n  501: \t\t\tif (this.actions[i].type == \"move\"){\n  502: \t\t\t\timpulse += this.actions[i].dist;\n  503  \t\t\t}\n  504  \t\t}\n  ...\n  507  \t}\n  508  \t\n  509: \tthis.getImpulseChangeCost = function(){\n  510: \t\tvar cost = Math.ceil((Math.pow(this.mass, 1.25))*this.getImpulseMod() / 500);\t\n  511  \t\treturn cost;\n  512  \t}\n  513  \t\n  514: \tthis.getBaseImpulse = function(){\n  515  \t\treturn 200;\n  516  \t}\n  517  \t\n  518: \tthis.getTotalImpulse = function(){\t\n  519: \t\tvar base = this.getBaseImpulse();\n  520  \t\t\n  521: \t\tfor (var i = 0; i < this.actions.length; i++){\n  522: \t\t\tif (this.actions[i].type == \"speedChange\"){\n  523: \t\t\t\tif (this.actions[i].dist == 1){\n  524  \t\t\t\t\tbase += 20;\n  525  \t\t\t\t}\n  526: \t\t\t\telse if (this.actions[i].dist == -1){\n  527  \t\t\t\t\tbase -= 20;\n  528  \t\t\t\t}\n  ...\n  533  \t}\t\n  534  \t\n  535: \tthis.getImpulseMod = function(){\n  536: \t\treturn this.getTotalImpulse() / this.getBaseImpulse();\n  537  \t}\n  538  \t\n  539: \tthis.getTurnCost = function(){\n  540: \t\treturn Math.ceil((Math.pow(this.mass, 1.55) / 10000) *  this.getImpulseMod());\n  541  \t}\n  542  \t\n  543: \tthis.getBaseTurnDelay = function(){\n  544: \t\treturn Math.ceil(Math.pow(this.mass, 0.5));\n  545  \t}\n  546  \t\n  547: \tthis.getTurnDelay = function(){\n  548: \t\treturn this.getBaseTurnDelay() / this.getImpulseMod();\n  549  \t}\n  550  \t\n  551: \tthis.drawSelector = function(){\n  552: \t\tvar shipPos = this.getBaseOffsetPos();\n  553  \t\tmoveCtx.beginPath();\t\t\t\n  554: \t\tmoveCtx.arc(shipPos.x, shipPos.y, this.size/2, 0, 2*Math.PI, false);\n  555  \t\tmoveCtx.closePath();\n  556  \t\t\n  557: \t\tif (this.friendly){\n  558  \t\t\tmoveCtx.strokeStyle = \"green\";\n  559  \t\t}\n  ...\n  564  \t}\n  565  \t\n  566: \tthis.drawMoveRange = function(){\n  567  \t\t\n  568: \t\tif (this.actions.length){\n  569: \t\t\tcenter = new Point(this.actions[this.actions.length-1].x + cam.o.x, this.actions[this.actions.length-1].y + cam.o.y);\n  570  \t\t}\n  571  \t\telse {\n  572: \t\t\tcenter = new Point(this.x + cam.o.x, this.y + cam.o.y);\n  573  \t\t}\n  574  \t\t\n  575: \t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1);\n  576  \t\tvar start = addAngle(350, angle);\n  577  \t\tvar end = addAngle(10, angle);\n  578  \t\t\n  579: \t\tthis.validMoveArcs = {start: 350, end: 10};\n  580  \t\t\n  581: \t\tvar p1 = getPointInDirection(this.getRemainingImpulse(), start, center.x, center.y);\n  582  \t\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n  583  \t\tvar rad1 = degreeToRadian(start);\n  ...\n  596  \t\tmoveCtx.globalAlpha = 1;\n  597  \t\t\n  598: \t\tvar delay = this.getRemainingDelay();\n  599  \t\t\n  600  \t\tif (delay > 0){\n  ...\n  614  \t\t\tmoveCtx.strokeStyle = \"black\";\t\n  615  \t\t\t\n  616: \t\t\tif (this.getRemainingImpulse() > delay){\n  617: \t\t\t\tvar last = this.actions[this.actions.length-1];\n  618  \t\t\t\tvar turnP = getPointInDirection(delay, angle, center.x, center.y);\n  619: \t\t\t\tvar arcP = getPointInDirection(this.getRemainingImpulse() + 70, angle, last.x + cam.o.x, last.y + cam.o.y);\n  620  \t\t\t\tmoveCtx.beginPath();\n  621  \t\t\t\tmoveCtx.arc(arcP.x, arcP.y, 8, 0, 2*Math.PI, false);\n  ...\n  623  \t\t\t\tmoveCtx.stroke();\n  624  \t\t\t\t\n  625: \t\t\t\tthis.maxTurnVector = {clickX: arcP.x, clickY: arcP.y, x: turnP.x, y: turnP.y};\n  626  \t\t\t}\n  627  \t\t\telse {\n  628: \t\t\t\tthis.maxTurnVector = false;\n  629  \t\t\t}\n  630  \t\t}\n  631  \t}\n  632  \t\n  633: \tthis.getRemainingEP = function(){\n  634: \t\tvar ep = this.ep;\n  635  \t\t\n  636: \t\tfor (var i = 1; i < this.actions.length; i++){\n  637: \t\t\tif (this.actions[i].turn == window.gd.turn){\n  638: \t\t\t\tif (this.actions[i].cost != 0){\n  639: \t\t\t\t\tep -= this.actions[i].cost * this.actions[i].costmod;\n  640  \t\t\t\t\t//console.log(ep);\n  641  \t\t\t\t}\n  ...\n  646  \t}\n  647  \t\n  648: \tthis.getRemainingDelay = function(){\n  649  \t\tvar delay = 0;\n  650: \t\tfor (var i = 0; i < this.actions.length; i++){\n  651: \t\t\tif (this.actions[i].type == \"turn\"){\n  652: \t\t\t\tdelay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n  653  \t\t\t}\n  654: \t\t\telse if (this.actions[i].type == \"move\"){\n  655: \t\t\t\tif (delay > 0){ delay -= this.actions[i].dist;}\n  656  \t\t\t\tif (delay < 0){ delay = 0;}\n  657  \t\t\t}\n  ...\n  660  \t}\n  661  \n  662: \tthis.getPlannedPosition = function(){\n  663: \t\tif (this.actions.length){\n  664: \t\t\treturn new Point(this.actions[this.actions.length-1].x + cam.o.x, this.actions[this.actions.length-1].y + cam.o.y);\n  665  \t\t}\n  666  \t\telse {\n  667: \t\t\treturn new Point(this.x + cam.o.x, this.y + cam.o.y);\n  668  \t\t}\n  669  \t}\n  670  \t\t\n  671: \tthis.drawImpulseIndicator = function(){\n  672: \t\tvar center = this.getPlannedPosition();\n  673  \t\t\n  674: \t\tvar angle = this.getPlannedFacingToMove(this.actions.length-1)\n  675: \t\t//var p1 = getPointInDirection(this.getRemainingImpulse() + 60, angle, center.x, center.y);\n  676  \t\tvar p = getPointInDirection(20, angle, center.x, center.y);\n  677  \t\tvar p1 = getPointInDirection(300, angle, center.x, center.y);\n  ...\n  685  \t\tmoveCtx.lineWidth = 1;\n  686  \n  687: \t\tif (this.getRemainingImpulse() > 0){\t\t\n  688: \t\t\tvar p2 = getPointInDirection(this.getRemainingImpulse(), angle, center.x, center.y);\n  689: \t\t\tvar p3 = getPointInDirection(this.getRemainingImpulse() + 40, angle, center.x, center.y);\n  690  \t\t\n  691  \t\t\tmoveCtx.beginPath();\t\n  ...\n  693  \t\t\tmoveCtx.closePath();\n  694  \t\t\tmoveCtx.stroke();\n  695: \t\t\tthis.maxVector = {clickX: p3.x, clickY: p3.y, x: p2.x, y: p2.y};\n  696  \t\t}\n  697  \t\telse {\n  698: \t\t\tthis.maxVector = false;\n  699  \t\t}\n  700  \t}\n  701  \t\n  702: \tthis.getPlannedFacingToMove = function(end){\n  703  \t\tif (end == undefined){\n  704: \t\t\tend = this.actions.length-1;\n  705  \t\t}\n  706  \n  ...\n  708  \t\t\n  709  \t\tfor (var i = 0; i <= end; i++){\n  710: \t\t\tif (this.actions[i].type == \"deploy\" || this.actions[i].type == \"turn\"){\n  711: \t\t\t\tangle += this.actions[i].a;\n  712  \t\t\t}\n  713  \t\t}\n  ...\n  715  \t}\n  716  \t\t\n  717: \tthis.canIncreaseImpulse = function(){\n  718: \t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n  719: \t\t\tif (this.actions.length == 1){\n  720  \t\t\t\treturn true;\n  721  \t\t\t}\n  722: \t\t\telse if (this.actions[this.actions.length-1].turn == game.turn -1){\n  723  \t\t\t\treturn true;\n  724  \t\t\t}\n  725: \t\t\tif (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n  726  \t\t\t\treturn true;\n  727  \t\t\t}\n  728  \t\t}\n  729: \t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n  730  \t\t\treturn true;\n  731  \t\t}\n  ...\n  734  \t}\n  735  \t\n  736: \tthis.canDecreaseImpulse = function(){\n  737: \t\tif (this.getRemainingEP() >= this.getImpulseChangeCost()){\n  738: \t\t\tif (this.actions.length == 1){\n  739  \t\t\t\treturn true;\n  740  \t\t\t}\n  741: \t\t\telse if (this.actions[this.actions.length-1].turn == game.turn -1){\n  742  \t\t\t\treturn true;\n  743  \t\t\t}\n  744: \t\t\tif (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n  745  \t\t\t\treturn true;\n  746  \t\t\t}\n  747  \t\t}\n  748: \t\telse if (this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n  749  \t\t\treturn true;\n  750  \t\t}\n  ...\n  753  \t}\n  754  \n  755: \tthis.getShortenTurnCost = function(){\n  756: \t\tif (this.turns.length){\n  757: \t\t\treturn this.turns[0].cost * (this.turns[0].costmod + 0.2);\n  758  \t\t}\n  759  \t\telse {\n  760: \t\t\treturn this.getTurnCost() * 1.2;\n  761  \t\t}\n  762  \t}\n  763  \t\n  764: \tthis.canShortenTurn = function(){\n  765  \t\tif (game.phase == 1){\n  766: \t\t\tif (this.getRemainingEP() >= this.getShortenTurnCost()){\n  767  \t\t\t\treturn true;\n  768  \t\t\t}\n  ...\n  772  \t}\n  773  \t\n  774: \tthis.canUndoShortenTurn = function(){\n  775  \t\tif (game.phase == 1){\n  776: \t\t\tif (this.turns.length){\n  777: \t\t\t\tif (this.turns[0].costmod > 1){\n  778  \t\t\t\t\treturn true;\n  779  \t\t\t\t}\n  ...\n  782  \t}\n  783  \t\n  784: \tthis.issueShortenTurnDelay = function(i){\n  785  \t\t//console.log(\"issueShortenTurnDelay\")\n  786: \t\tfor (var j = 0; j < this.turns.length; j++){\n  787: \t\t\tthis.turns[j].costmod = (this.turns[j].costmod * 10 + 2) / 10;\n  788  \t\t}\n  789: \t\tthis.unsetMoveMode();\n  790: \t\tthis.setMoveMode();\n  791  \t}\n  792  \t\n  793: \tthis.cancelShortenTurnDelay = function(i){\n  794  \t\t//console.log(\"cancelShortenTurnDelay\")\n  795: \t\tfor (var j = 0; j < this.turns.length; j++){\n  796: \t\t\tthis.turns[j].costmod = (this.turns[j].costmod * 10 - 2) / 10;\n  797  \t\t}\n  798: \t\tthis.unsetMoveMode();\n  799: \t\tthis.setMoveMode();\n  800  \t}\n  801  \n  802: \tthis.doAdjustImpulse = function(obj){\n  803: \t\tvar shipPos = this.getPlannedPosition();\n  804  \t\tif (obj.type == \"+\"){\n  805: \t\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == -1){\n  806: \t\t\t\tthis.actions.splice(this.actions.length-1, 1);\n  807  \t\t\t}\n  808  \t\t\telse {\n  809  \t\t\t\tvar action = new Move(\"speedChange\", 1, shipPos.x - cam.o.x, shipPos.y - cam.o.y, false, 0, obj.cost)\n  810: \t\t\t\tthis.actions.push(action);\n  811  \t\t\t}\n  812  \t\t}\n  813  \t\telse if (obj.type == \"-\"){\n  814: \t\t\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speedChange\" && this.actions[this.actions.length-1].dist == 1){\n  815: \t\t\t\tthis.actions.splice(this.actions.length-1, 1);\n  816  \t\t\t}\n  817  \t\t\telse {\n  818  \t\t\t\tvar action = new Move(\"speedChange\", -1, shipPos.x - cam.o.x, shipPos.y - cam.o.y, false, 0, obj.cost)\n  819: \t\t\t\tthis.actions.push(action);\n  820  \t\t\t}\n  821  \t\t}\n  822  \t\t\n  823: \t\tthis.unsetMoveMode();\n  824: \t\tthis.setMoveMode();\n  825  \t}\n  826  \t\n  827: \tthis.drawImpulseUI = function(){\n  828  \t\n  829: \t\tthis.impulseAdjust = [];\n  830  \t\t\n  831: \t\tvar offSetPos = this.getBaseOffsetPos();\n  832  \t\tvar shipIcon\n  833  \n  834  \t\t//console.log(offSetPos);\n  835: \t\tvar p = getPointInDirection(this.size/2 + 80, this.getTurnStartFacing() + 180, offSetPos.x, offSetPos.y);\n  836  \t\t//console.log(p);\n  837  \n  ...\n  848  \t\t//console.log(tp);\n  849  \n  850: \t\tdrawText(moveCtx, \"blue\", \"Engine Power: \" + this.getRemainingEP() + \" / \" + this.ep, 10, tp);\n  851: \t\tdrawText(moveCtx, \"blue\", \"Impulse: \" + this.getRemainingImpulse() + \" / \" + this.getTotalImpulse(), 10,  {x: tp.x, y: tp.y+18});\n  852: \t\tdrawText(moveCtx, \"blue\", \"Change Impulse: \" + this.getImpulseChangeCost() + \" EP\", 10,  {x: tp.x, y: tp.y+36});\n  853  \t\t\n  854  \t\t/*var div = document.createElement(\"div\");\n  ...\n  862  \t\t\t*/\n  863  \t\t\t\t\t\t\n  864: \t\tif (this.canIncreaseImpulse()){\n  865  \t\t\tvar plus = {x: p.x-25, y: p.y+54};\t\t\t\n  866: \t\t\tthis.impulseAdjust.push({clickX: plus.x, clickY: plus.y, type: \"+\", cost: this.getImpulseChangeCost()});\n  867  \t\t\tmoveCtx.beginPath();\t\t\t\t\n  868  \t\t\tmoveCtx.arc(plus.x, plus.y, 8, 0, 2*Math.PI, false);\n  ...\n  871  \t\t\tdrawText(moveCtx, \"black\", \"+\", 12, plus);\n  872  \t\t}\n  873: \t\tif (this.canDecreaseImpulse()){\n  874  \t\t\tvar minus = {x: p.x+25, y: p.y+54};\n  875: \t\t\tthis.impulseAdjust.push({clickX: minus.x, clickY: minus.y, type: \"-\", cost: this.getImpulseChangeCost()});\t\t\t\n  876  \t\t\tmoveCtx.beginPath();\t\n  877  \t\t\tmoveCtx.arc(minus.x, minus.y, 8, 0, 2*Math.PI, false);\n  ...\n  880  \t\t\tdrawText(moveCtx, \"black\", \"-\", 12, minus);\n  881  \t\t}\n  882: \t\tif (this.canUndoLastOrder()){\n  883: \t\t\tthis.undoOrderButton = {clickX: p.x, clickY: p.y+55};\n  884  \t\t\tmoveCtx.beginPath();\n  885  \t\t\tmoveCtx.arc(p.x, p.y+55, 8, 0, 2*Math.PI);\n  ...\n  891  \t}\n  892  \t\n  893: \tthis.issueMove = function(pos, dist){\t\t\t\n  894: \t\tthis.actions.push(new Move(\"move\", dist, pos.x - cam.o.x, pos.y - cam.o.y, 0, 0));\t\t\n  895: \t\tthis.maxVector = false;\n  896: \t\tthis.maxTurnVector = false;\n  897: \t\tthis.turns = [];\n  898  \t\t\t\t\t\t\n  899  \t\tgame.drawShips();\n  900: \t\tthis.unsetMoveMode();\n  901: \t\tthis.setMoveMode();\n  902  \t}\n  903  \t\n  904: \tthis.canUndoLastOrder = function(){\n  905: \t\tif (this.actions.length){\n  906: \t\t\tif (this.actions[this.actions.length-1].turn == game.turn){\n  907: \t\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n  908  \t\t\t\t\treturn true;\n  909  \t\t\t\t}\n  ...\n  911  \t\t}\n  912  \n  913: \t\tthis.undoOrderButton = false;\n  914  \t\treturn false;\n  915  \t}\n  916  \t\n  917: \tthis.undoLastOrder = function(pos){\t\t\n  918: \t\tthis.actions.splice(this.actions.length-1, 1);\n  919: \t\tthis.turns = [];\n  920: \t\tthis.unsetMoveMode();\n  921: \t\tthis.setMoveMode();\n  922  \t}\n  923  \t\n  924: \tthis.moveToMaxVector = function(){\n  925: \t\tvar dist = Math.ceil(getDistance(this.getOffsetPos(), this.maxVector));\n  926: \t\tthis.issueMove(this.maxVector, dist);\n  927  \t}\n  928  \t\n  929: \tthis.moveToMaxTurnVector = function(pos){\n  930: \t\tvar dist = Math.ceil(getDistance(this.getOffsetPos(), this.maxTurnVector));\n  931: \t\tthis.issueMove(this.maxTurnVector, dist);\n  932  \t}\n  933  \t\n  934: \tthis.canTurn = function(){\n  935: \t\tif (this.getRemainingDelay() == 0){\n  936: \t\t\tvar have = this.getRemainingEP();\n  937: \t\t\tvar need = this.getTurnCost();\n  938  \t\t\tif (have >= need){\n  939  \t\t\t\treturn true;\n  ...\n  943  \t}\n  944  \t\n  945: \tthis.issueTurn = function(turn){\n  946: \t\tthis.turns = [];\n  947: \t\tthis.actions.push(new Move(\"turn\", 0, turn.x - cam.o.x, turn.y - cam.o.y, turn.a, turn.delay, turn.cost, turn.costmod));\n  948: \t\tthis.unsetMoveMode();\n  949: \t\tthis.setMoveMode();\n  950  \t\tgame.draw();\n  951  \t}\n  952  \t\n  953: \tthis.issueDeploymentTurn = function(turn){\n  954: \t\tthis.turns = [];\n  955  \t\t\n  956: \t\tthis.actions[0].a += turn.a;\n  957: \t\tthis.setFacing();\n  958  \n  959: \t\tthis.unsetMoveMode();\n  960: \t\tthis.setMoveMode();\n  961  \t\tgame.draw();\n  962  \t}\n  963  \n  964: \tthis.getBaseHitChance = function(){\n  965: \t\treturn Math.ceil(Math.pow(this.mass, 0.5));\n  966  \t}\n  967  \n  968: \tthis.getHitChanceFromAngle = function(angle){\n  969  \t\t//console.log(angle);\t\t\t\t342\n  970  \t\tvar a, b, c, base;\n  ...\n  978  \t\t}\n  979  \n  980: \t\tbase = this.getBaseHitChance();\n  981  \t\t//console.log(base);\n  982: \t\ta = base * this.profile[0];\n  983: \t\tb = base * this.profile[1];\n  984  \n  985  \t\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n  ...\n  990  \t}\n  991  \t\n  992: \tthis.createDiv = function(){\n  993  \n  994  \t\tvar div = document.createElement(\"div\");\n  995  \t\t\tdiv.className = \"shipDiv disabled\";\n  996: \t\t\t$(div).data(\"shipId\", this.id);\n  997  \t\t\n  998  \t\tvar table = document.createElement(\"table\");\n  ...\n 1001  \t\tvar tr = document.createElement(\"tr\");\n 1002  \t\tvar th = document.createElement(\"th\");\n 1003: \t\t\tth.innerHTML = this.shipClass.toUpperCase() + \" #\" + this.id;\n 1004  \t\t\tth.colSpan = 2; th.style.textAlign = \"center\";\n 1005  \t\t\ttr.appendChild(th); table.appendChild(tr);\n ....\n 1009  \t\t\ttd.innerHTML = \"Position: \"; tr.appendChild(td);\n 1010  \t\tvar td = document.createElement(\"td\"); td.className = \"pos\";\n 1011: \t\t\ttd.innerHTML = this.x + \" / \" + this.y; tr.appendChild(td); table.appendChild(tr);\n 1012  \t\t\t\n 1013  \t\tvar tr = document.createElement(\"tr\");\n ....\n 1015  \t\t\ttd.innerHTML = \"Mass: \"; tr.appendChild(td);\n 1016  \t\tvar td = document.createElement(\"td\");\n 1017: \t\t\ttd.innerHTML = this.mass; tr.appendChild(td); table.appendChild(tr);\n 1018  \n 1019  \t\tvar tr = document.createElement(\"tr\");\n ....\n 1021  \t\t\ttd.innerHTML = \"Engine Power: \"; tr.appendChild(td);\n 1022  \t\tvar td = document.createElement(\"td\"); td.className = \"ep\";\n 1023: \t\t\ttd.innerHTML = this.getRemainingEP() + \" / \" + this.ep; tr.appendChild(td); table.appendChild(tr);\n 1024  \n 1025  \t\tvar tr = document.createElement(\"tr\");\n ....\n 1027  \t\t\ttd.innerHTML = \"Impulse: \"; tr.appendChild(td);\n 1028  \t\tvar td = document.createElement(\"td\"); td.className = \"impulse\";\n 1029: \t\t\ttd.innerHTML = this.getRemainingImpulse() + \" / \" + this.getTotalImpulse(); tr.appendChild(td); table.appendChild(tr);\n 1030  \t\t\t\n 1031  \t\tvar tr = document.createElement(\"tr\");\n ....\n 1033  \t\t\ttd.innerHTML = \"Turn Delay: \"; tr.appendChild(td);\n 1034  \t\tvar td = document.createElement(\"td\"); td.className = \"delay\";\n 1035: \t\t\ttd.innerHTML = this.getRemainingDelay(); tr.appendChild(td); table.appendChild(tr);\n 1036  \n 1037  \t\tvar tr = document.createElement(\"tr\");\n ....\n 1039  \t\t\ttd.innerHTML = \"Impulse Change: \"; tr.appendChild(td);\n 1040  \t\tvar td = document.createElement(\"td\"); td.className = \"change\";\n 1041: \t\t\ttd.innerHTML = this.getImpulseChangeCost(); tr.appendChild(td); table.appendChild(tr);\n 1042  \t\t\t\t\n 1043  \t\tdiv.appendChild(table);\n ....\n 1057  \t\tvar pHeight = $(structContainer).height();\n 1058  \n 1059: \t\tfor (var i = 0; i < this.structures.length; i++){\n 1060  \n 1061  \t\t\tvar structDiv = document.createElement(\"div\");\n ....\n 1066  \t\t\t\t$(structDiv).data(\"structureId\", i);\n 1067  \t\t\t\n 1068: \t\t\t/*this.weapons.sort(function(a, b){\n 1069  \t\t\t\tif (a.name == b.name){\n 1070  \t\t\t\t\tif (a.id > b.id){\n ....\n 1074  \t\t\t})*/\n 1075  \n 1076: \t\t\tstructTable.appendChild(this.structures[i].getTableRow());\n 1077  \n 1078: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 1079: \t\t\t\tvar ele = this.structures[i].systems[j].getTableRow();\n 1080  \t\t\t\tstructTable.appendChild(ele);\n 1081  \t\t\t}\n ....\n 1084  \t\t\tstructContainer.appendChild(structDiv);\n 1085  \n 1086: \t\t\tvar a = this.structures[i].getDirection();\n 1087  \t\t\tvar pos = getPointInDirection(130, addAngle(a, -90), pWidth/2, pHeight/2);\n 1088  \t\t\tvar w = $(structTable).width() / 2; \n 1089  \t\t\tvar h = $(structTable).height() /2 +45;\n 1090: \t\t\t//console.log(\"id: \" + this.structures[i].id + \", a: \" + a);\n 1091  \t\t\t//console.log(w, h);\n 1092  \t\t\t$(structDiv)\n 1093: \t\t\t\t.data(\"id\", this.structures[i].id)\n 1094  \t\t\t\t.data(\"structureId\", i)\n 1095  \t\t\t\t.css(\"left\", pos.x - w -2)\n ....\n 1101  \n 1102  \t\t\tvar img = new Image();\n 1103: \t\t\t\timg.src = \"shipIcons/\" + this.shipClass.toLowerCase() + \".png\";\n 1104  \t\t\t\t$(img)\n 1105  \t\t\t\t\t.addClass(\"rotate270\")\n ....\n 1115  \t}\n 1116  \t\n 1117: \tthis.updateDiv = function(){\n 1118  \t\tvar divs = document.getElementsByClassName(\"shipDiv\");\n 1119  \t\t\n 1120  \t\tfor (var i = 0; i < divs.length; i++){\n 1121: \t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n 1122  \t\t\t\tvar divs = divs[i];\n 1123  \t\t\t\tbreak;\n ....\n 1125  \t\t}\n 1126  \t\t\n 1127: \t\t$(divs).find(\".pos\").html(this.x + \" / \" + this.y);\n 1128: \t\t$(divs).find(\".ep\").html(this.getRemainingEP() + \" / \" + this.ep);\n 1129: \t\t$(divs).find(\".impulse\").html(this.getRemainingImpulse() + \" / \" + this.getTotalImpulse());\n 1130: \t\t$(divs).find(\".delay\").html( this.getRemainingDelay());\n 1131: \t\t$(divs).find(\".change\").html(this.getImpulseChangeCost());\n 1132  \t}\n 1133  \t\n 1134  \n 1135: \tthis.createShortInfo = function(){\n 1136  \t\tvar div = document.createElement(\"div\");\n 1137: \t\t\tdiv.id = this.id + \"shortInfo\";\n 1138  \t\t\tdiv.className = \"shortInfo disabled\"\n 1139  \t\tvar span = document.createElement(\"span\");\n 1140: \t\t\tspan.innerHTML = this.shipClass + \" # \" + this.id;\n 1141  \t\t\tdiv.appendChild(span);\n 1142  \t\tvar span = document.createElement(\"span\");\n 1143: \t\t\tspan.innerHTML = \"</br>base hit : \" + this.getBaseHitChance() + \"% - \" + this.profile[0] + \" / \"  + this.profile[1];\n 1144  \t\t\tdiv.appendChild(span);\n 1145  \t\tdocument.body.appendChild(div);\n 1146  \t}\n 1147  \t\n 1148: \tthis.displayShortInfo = function(){\n 1149: \t\tvar ele = document.getElementById(this.id + \"shortInfo\");\t\t\n 1150  \t\t\n 1151  \t\tif (shortInfo){\n 1152: \t\t\tif (shortInfo != this.id){\n 1153  \t\t\t\t\tvar oldEle  = document.getElementById(shortInfo + \"shortInfo\");\n 1154  \t\t\t\t\t\toldEle.className = \"shortInfo disabled\";\n ....\n 1156  \t\t\t\t\tele.className = \"shortInfo\";\n 1157  \t\t\t}\n 1158: \t\t\telse if (shortInfo == this.id){\n 1159  \t\t\t\tele.className = \"shortInfo\";\n 1160  \t\t\t}\n 1161  \t\t}\n 1162  \t\telse {\n 1163: \t\t\tshortInfo = this.id;\n 1164: \t\t\tvar opos = this.getBaseOffsetPos();\n 1165  \t\t\tele.style.left = (opos.x - 80) + \"px\";\n 1166  \t\t\tele.style.top = (opos.y + 40) + \"px\";\n 1167  \t\t}\n 1168  \t\t\n 1169: \t\tif (this.friendly){\n 1170: \t\t\t$(\"#\" + this.id + \"shortInfo\").addClass(\"friendly\");\n 1171  \t\t}\n 1172  \t\telse {\n 1173: \t\t\t$(\"#\" + this.id + \"shortInfo\").addClass(\"hostile\");\n 1174  \t\t}\n 1175  \t}\n 1176  \t\n 1177: \tthis.switchDiv = function(){\n 1178  \t\tvar div = document.getElementsByClassName(\"shipDiv\");\t\t\n 1179  \t\t\n 1180  \t\tfor (var i = 0; i < div.length; i++){\n 1181: \t\t\tif (this.id == $(div[i]).data(\"shipId\")){\n 1182  \t\t\t\tdiv = div[i];\n 1183  \t\t\t\tbreak;\n ....\n 1187  \t\tif (div.className == \"shipDiv disabled\"){\n 1188  \t\t\tdiv.className = \"shipDiv\";\n 1189: \t\t\t$(div).css(\"left\", this.x + cam.o.x - 100).css(\"top\", this.y + cam.o.y + 100);\n 1190  \t\t\tif (shortInfo){\n 1191  \t\t\t\tdocument.getElementById(shortInfo + \"shortInfo\").className = \"shortInfo disabled\";\n ....\n 1198  \t}\n 1199  \t\n 1200: \tthis.setMoveMode = function(){\n 1201  \t\tgame.mode = 1;\n 1202: \t\tthis.drawSelector();\n 1203  \n 1204  \n 1205  \t\tif (game.phase == -1){ // DEPLOYMENT\n 1206: \t\t\tif (this.actions[0].type == \"deploy\"  && this.actions[0].turn == game.turn){\n 1207: \t\t\t\tthis.drawTurnControl();\n 1208: \t\t\t\tthis.updateDiv();\n 1209  \t\t\t}\n 1210  \t\t\telse {\n ....\n 1213  \t\t}\n 1214  \t\telse if (game.phase == 1){\n 1215: \t\t\tthis.drawMoveRange();\n 1216: \t\t\tthis.drawImpulseIndicator();\n 1217: \t\t\tthis.drawImpulseUI();\n 1218: \t\t\tthis.drawMovePlan();\n 1219  \n 1220: \t\t\tif (this.canTurn()){\n 1221: \t\t\t\tthis.drawTurnControl()\n 1222: \t\t\t\tthis.updateDiv();\n 1223  \t\t\t}\n 1224  \t\t}\n ....\n 1227  \t\t}\n 1228  \t\telse if (game.phase == 3){\n 1229: \t\t\tthis.drawMoveRange();\n 1230: \t\t\tthis.drawImpulseIndicator();\n 1231  \t\t}\n 1232  \n 1233: \t\tthis.updateDiv();\n 1234  \t}\t\n 1235  \t\n 1236: \tthis.unsetMoveMode = function(){\n 1237  \t\tgame.mode = false;\n 1238  \t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n ....\n 1241  \t}\n 1242  \t\n 1243: \tthis.drawMovePlan = function(){\n 1244  \n 1245: \t\tvar p = this.getBaseOffsetPos();\n 1246  \n 1247  \t\tplanCtx.strokeStyle = \"red\";\n 1248  \t\t\n 1249: \t\tfor (var i = 0; i < this.actions.length; i++){\n 1250: \t\t\tif (this.actions[i].turn == game.turn){\n 1251: \t\t\t\tvar action = this.actions[i];\n 1252  \t\t\t\t\n 1253  \t\t\t\t//console.log(action);\n ....\n 1259  \t\t\t\t}\n 1260  \t\t\t\telse {\n 1261: \t\t\t\t\tplanCtx.moveTo(this.actions[i-1].x + cam.o.x, this.actions[i-1].y + cam.o.y);\n 1262  \t\t\t\t}\n 1263  \t\t\t\t\t\n ....\n 1269  \t\t\t\t}\n 1270  \t\t\t\telse if (action.type == \"turn\"){\n 1271: \t\t\t\t\tvar angle = this.getPlannedFacingToMove(i);\n 1272  \t\t\t\t\t\n 1273  \t\t\t\t\tplanCtx.beginPath();\n ....\n 1282  \t}\n 1283  \t\n 1284: \tthis.select = function(){\n 1285  \t\tconsole.log(this);\n 1286: \t\taShip = this.id;\n 1287: \t\tthis.selected = true;\n 1288: \t\tthis.switchDiv();\n 1289: \t\tthis.setMoveMode();\n 1290  \t}\n 1291  \t\n 1292: \tthis.unselect = function(){\n 1293  \t\taShip = false;\n 1294  \t\t$(\"#vectorDiv\").addClass(\"disabled\");\n 1295: \t\tthis.selected = false;\n 1296: \t\tthis.turns = [];\n 1297: \t\tthis.unselectWeapons();\n 1298: \t\tthis.switchDiv();\n 1299: \t\tthis.unsetMoveMode();\n 1300  \t}\n 1301  \t\n 1302: \tthis.unselectWeapons = function(){\t\n 1303  \t\tfxCtx.clearRect(0, 0, res.x, res.y);\n 1304  \t\t\n 1305: \t\tif (this.hasWeaponsSelected()){\t\t\n 1306  \t\t\tvar divs = document.getElementsByClassName(\"shipDiv\")\n 1307  \t\t\t\n 1308  \t\t\tfor (var i = 0; i < divs.length; i++){\n 1309: \t\t\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n 1310  \t\t\t\t\tdivs = divs[i];\n 1311  \t\t\t\t\tbreak;\n ....\n 1318  \t\t\t}\n 1319  \t\t\t\n 1320: \t\t\tfor (var i = 0; i < this.structures.length; i++){\n 1321: \t\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 1322: \t\t\t\t\tthis.structures[i].systems[j].highlight = false;\n 1323: \t\t\t\t\tthis.structures[i].systems[j].selected = false;\n 1324  \t\t\t\t}\n 1325  \t\t\t}\n ....\n 1329  \t}\n 1330  \n 1331: \tthis.getFireOrders = function(){\n 1332  \n 1333  \t\tvar fires = [];\n 1334  \n 1335: \t\tfor (var i = 0; i < this.structures.length; i++){\n 1336: \t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n 1337: \t\t\t\tif (this.structures[i].systems[j].fireOrders.length){\n 1338: \t\t\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n 1339: \t\t\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].turn == game.turn){\n 1340: \t\t\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n 1341  \t\t\t\t\t\t}\n 1342  \t\t\t\t\t\telse return fires;\n ....\n 1353  function Capital(id, shipClass, x, y, facing, userid, color){\n 1354  \tShip.call(this, id, shipClass, x, y, facing, userid, color);\n 1355: \tthis.shipType = \"Capital\";\n 1356  \t\n 1357: \tthis.getBaseImpulse = function(){\n 1358  \t\treturn 180;\n 1359  \t}\n ....\n 1363  function HeavyAttack(id, shipClass, x, y, facing, userid, color){\n 1364  \tShip.call(this, id, shipClass, x, y, facing, userid, color);\n 1365: \tthis.shipType = \"HeavyAttack\";\n 1366  \t\n 1367: \tthis.getBaseImpulse = function(){\n 1368  \t\treturn 210;\n 1369  \t}\n ....\n 1373  function Escort(id, shipClass, x, y, facing, userid, color){\n 1374  \tShip.call(this, id, shipClass, x, y, facing, userid, color);\n 1375: \tthis.shipType = \"Escort\";\n 1376  \t\n 1377  \t\n 1378: \tthis.getBaseImpulse = function(){\n 1379  \t\treturn 240;\n 1380  \t}\n ....\n 1384  function Patrol(id, shipClass, x, y, facing, userid, color){\n 1385  \tShip.call(this, id, shipClass, x, y, facing, userid, color);\n 1386: \tthis.shipType = \"Patrol\";\n 1387  \t\n 1388: \tthis.getBaseImpulse = function(){\n 1389  \t\treturn 270;\n 1390  \t}\n\nC:\\xampp\\htdocs\\fire\\systems.js:\n    1  function System(id, parentId, name, display){\n    2: \tthis.id = id;\n    3: \tthis.parentId = parentId;\n    4: \tthis.name = name;\n    5: \tthis.display = display;\n    6: \tthis.detailsTable = false;\n    7: \tthis.highlight = false;\n    8: \tthis.selected = false;\n    9: \tthis.destroyed = false;\n   10: \tthis.tr = false;\n   11  \t\t\t\t\n   12: \tthis.posIsOnArc = function(loc, pos, facing){\n   13  \t\t//console.log(arguments);\n   14  \t\tvar targetCompassHeading = getCompassHeadingOfPoint(loc, pos, facing);\n   15  \t\n   16: \t\tfor (var i = 0; i < this.arc.length; i++){\n   17: \t\t\tvar start = this.arc[i][0];\n   18: \t\t\tvar end = this.arc[i][1];\n   19  \t\t\tvar inArc = isInArc(targetCompassHeading, start, end);\n   20  \t\t\t\n   ..\n   25  \t}\n   26  \t\n   27: \tthis.getTableRow = function(){\n   28  \t\tvar tr = document.createElement(\"tr\");\n   29  \t\tvar td = document.createElement(\"td\");\n   30  \t\t\ttd.className = \"weapon\";\n   31: \t\t\ttd.innerHTML = this.name + \" #\" + (this.id);\n   32  \n   33: \t\t\tif (this.hasActiveFireOrder()){\n   34  \t\t\t\ttd.className = \"weapon fireOrder\";\n   35  \t\t\t}\n   ..\n   37  \t\tvar div = document.createElement(\"div\");\n   38  \t\t\tdiv.className = \"loadLevel\";\n   39: \t\t\tvar load = this.getLoadLevel();\n   40  \t\t\tdiv.style.width = load * 100 + \"%\";\n   41  \t\t\ttd.appendChild(div);\n   42  \n   43: \t\t\t$(td).data(\"shipId\", this.parentId);\n   44: \t\t\t$(td).data(\"systemId\", this.id);\n   45  \t\t\t$(td).hover(\n   46  \t\t\t\tfunction(e){\n   ..\n   66  \t\t\ttr.appendChild(td);\n   67  \n   68: \t\t\tthis.tr = tr;\n   69  \t\t\t\n   70  \t\treturn tr;\n   71  \t}\n   72  \n   73: \tthis.hasActiveFireOrder = function(){\n   74: \t\tfor (var i = 0; i < this.fireOrders.length; i++){\n   75: \t\t\tif (this.fireOrders[i].turn == game.turn){\n   76  \t\t\t\treturn true;\n   77  \t\t\t\tbreak;\n   ..\n   82  \t}\n   83  \n   84: \tthis.select = function(){\n   85: \t\tvar id = this.id;\n   86: \t\tvar parentId = this.parentId;\n   87  \t\tvar selected = false;\n   88  \n   89: \t\tif (this.hasActiveFireOrder()){\n   90: \t\t\tthis.unsetFireOrder();\n   91  \t\t}\n   92  \n   93: \t\tif (this.selected){\n   94: \t\t\tthis.selected = false;\n   95  \t\t}\n   96  \t\telse {\n   97: \t\t\tthis.selected = true;\n   98  \t\t}\n   99  \n  100  \n  101: \t\tthis.setTableRow();\n  102  \n  103  \t\tvar ship = game.getShipById(parentId);\n  ...\n  114  \t}\n  115  \t\n  116: \tthis.getSystemDetailsDiv = function(){\n  117  \t\tvar div = document.createElement(\"div\");\n  118  \t\t\tdiv.id = \"systemDetailsDiv\";\n  ...\n  123  \t\t\ttd.innerHTML = \"Type\"; tr.appendChild(td);\n  124  \t\tvar td = document.createElement(\"td\");\n  125: \t\t\ttd.innerHTML = this.animation.toUpperCase(0, 1); tr.appendChild(td); table.appendChild(tr);\n  126  \n  127  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  129  \t\t\ttd.innerHTML = \"Loading\"; tr.appendChild(td);\n  130  \t\tvar td = document.createElement(\"td\");\n  131: \t\t\ttd.innerHTML = this.getTimeLoaded() + \" / \" + this.reload; tr.appendChild(td); table.appendChild(tr);\n  132  \t\t\t\n  133  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  135  \t\t\ttd.innerHTML = \"Accuracy loss\"; tr.appendChild(td);\n  136  \t\tvar td = document.createElement(\"td\");\n  137: \t\t\ttd.innerHTML = this.accDecay; tr.appendChild(td); table.appendChild(tr);\n  138  \t\t\t\n  139  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  141  \t\t\ttd.innerHTML = \"Shots\"; tr.appendChild(td);\n  142  \t\tvar td = document.createElement(\"td\");\n  143: \t\t\ttd.innerHTML = this.shots; tr.appendChild(td); table.appendChild(tr);\n  144  \t\t\t\n  145  \t\tvar tr = document.createElement(\"tr\");\n  ...\n  147  \t\t\ttd.innerHTML = \"Damage\"; tr.appendChild(td);\n  148  \t\tvar td = document.createElement(\"td\");\n  149: \t\t\ttd.innerHTML = this.getDamage(); tr.appendChild(td); table.appendChild(tr);\n  150  \n  151: \t\tif (this.animation == \"laser\"){\n  152  \t\t\tvar tr = document.createElement(\"tr\");\n  153  \t\t\tvar td = document.createElement(\"td\");\n  154  \t\t\t\ttd.innerHTML = \"Focus point\"; tr.appendChild(td);\n  155  \t\t\tvar td = document.createElement(\"td\");\n  156: \t\t\t\ttd.innerHTML = this.optRange; tr.appendChild(td); table.appendChild(tr);\n  157  \n  158  \t\t\tvar tr = document.createElement(\"tr\");\n  ...\n  160  \t\t\t\ttd.innerHTML = \"Damage loss\"; tr.appendChild(td);\n  161  \t\t\tvar td = document.createElement(\"td\");\n  162: \t\t\t\ttd.innerHTML = this.dmgDecay; tr.appendChild(td); table.appendChild(tr);\n  163  \t\t}\n  164  \t\t\t\n  ...\n  168  \t}\n  169  \n  170: \tthis.hover = function(){\n  171: \t\tif (this.highlight){\n  172: \t\t\tthis.highlight = false;\n  173: \t\t\tthis.hideInfoDiv();\n  174  \t\t}\n  175  \t\telse {\n  176: \t\t\tthis.highlight = true;\n  177: \t\t\tthis.showInfoDiv();\n  178  \t\t}\n  179  \t}\n  180  \n  181: \tthis.showInfoDiv = function(){\n  182: \t\tvar div = this.getSystemDetailsDiv();\n  183: \t\tvar parentId = this.parentId;\n  184: \t\tvar id = this.id;\n  185  \t\t\n  186  \t\tvar div = $(\".shipDiv\").each(function(i){\n  ...\n  201  \t}\n  202  \t\n  203: \tthis.hideInfoDiv = function(){\n  204  \t\tvar div = document.getElementById(\"systemDetailsDiv\");\n  205  \t\t\t$(div).remove();\n  206  \t}\n  207  \t\n  208: \tthis.setFireOrder = function(fire){\n  209: \t\tvar parentId = this.parentId;\n  210: \t\tvar systemId = this.id;\n  211: \t\tthis.selected = false;\n  212: \t\tthis.highlight = false;\n  213  \n  214: \t\tthis.fireOrders.push(fire);\n  215: \t\tthis.setTableRow();\n  216  \n  217  \t}\n  218  \n  219: \tthis.unsetFireOrder = function(){\n  220: \t\tfor (var i = this.fireOrders.length-1; i >= 0; i--){\n  221: \t\t\tif (this.fireOrders[i].turn == game.turn){\n  222: \t\t\t\tthis.fireOrders.splice(i, 1);\n  223  \t\t\t}\n  224  \t\t}\n  225  \n  226: \t\tthis.setTableRow();\n  227  \t}\n  228  \n  229: \tthis.setTableRow = function(){\n  230: \t\tvar id = this.id;\n  231: \t\tvar parentId = this.parentId;\n  232: \t\tvar fire = this.hasActiveFireOrder();\n  233: \t\tvar selected = this.selected;\n  234  \n  235  \n  ...\n  258  \t}\n  259  \n  260: \tthis.drawArc = function(angle, pos){\n  261: \t\tfor (var i = 0; i < this.arc.length; i++){\n  262: \t\t\tvar p1 = getPointInDirection(res.x, this.arc[i][0] + angle, pos.x, pos.y);\n  263: \t\t\tvar p2 = getPointInDirection(res.y, this.arc[i][1] + angle, pos.x, pos.y)\n  264  \t\t\tvar dist = getDistance( {x: pos.x, y: pos.y}, p1);\n  265: \t\t\tvar rad1 = degreeToRadian(this.arc[i][0] + angle);\n  266: \t\t\tvar rad2 = degreeToRadian(this.arc[i][1] + angle);\n  267  \t\t\t\n  268  \t\t\tfxCtx.beginPath();\t\t\t\n  ...\n  271  \t\t\tfxCtx.closePath();\n  272  \t\t\tfxCtx.globalAlpha = 0.2;\t\t\t\n  273: \t\t\tfxCtx.fillStyle = this.getFillStyle(pos.x, pos.y, dist);\n  274  \t\t\tfxCtx.fill();\n  275  \t\t\tfxCtx.globalAlpha = 1;\n  ...\n  279  \t}\t\t\n  280  \t\n  281: \tthis.getAccurayDecay = function(dist){\t\t\n  282  \t\t//var dist = getDistance(ship.getPlannedPos(), pos);\n  283: \t\tvar decay = this.accDecay;\t\t\n  284  \t\treturn Math.ceil(decay * dist/decayVar);\n  285  \t}\n  286  \t\n  287: \tthis.getDamageDecay = function(dist){\n  288  \t\treturn 0;\n  289  \t}\n  290  \t\n  291: \tthis.getExpectedDamage = function(dist){\n  292: \t\tvar loss = this.getDamageDecay(dist);\n  293  \t\t\n  294: \t\treturn Math.floor(this.damage - (this.damage / 100 * loss));\n  295  \t}\n  296  \t\n  297: \tthis.getFillStyle = function(x, y, dist){\n  298  \t\treturn \"green\";\n  299  \t}\n  ...\n  301  \t\t\t\t\n  302  function Weapon(id, parentId, name, display, output, minDmg, maxDmg, accDecay, shots, reload, arc1, arc2, arc3, arc4){\n  303: \tthis.minDmg = minDmg;\n  304: \tthis.maxDmg = maxDmg;\n  305: \tthis.shots = shots;\n  306: \tthis.reload = reload;\n  307: \tthis.loaded;\n  308: \tthis.accDecay = accDecay;\n  309: \tthis.fireOrders = [];\n  310: \tthis.arc = [\n  311  \t\t\t\t[arc1, arc2]\n  312  \t\t\t\t];\n  313  \n  314: \tthis.canFire = function(){\n  315: \t\tif (this.getLoadLevel() >= 1){\n  316  \t\t\treturn true;\n  317  \t\t}\n  318  \t}\n  319  \n  320: \tthis.getLoadLevel = function(){\n  321: \t\tvar need = this.reload;\n  322: \t\tvar has = this.getTimeLoaded();\n  323  \n  324  \t\tif (has / need > 1){\n  ...\n  328  \t}\n  329  \n  330: \tthis.getTimeLoaded = function(){\n  331  \n  332: \t\tvar load = this.reload;\n  333  \t\tvar limit;\n  334  \n  ...\n  341  \n  342  \n  343: \t\tif (this.fireOrders.length){\n  344  \t\t\tfor (var i = 0; i <= limit; i++){\n  345: \t\t\t\tif (load < this.reload){\n  346  \t\t\t\t\tload++;\n  347  \t\t\t\t}\n  348  \n  349: \t\t\t\tfor (var j = 0; j < this.fireOrders.length; j++){\n  350: \t\t\t\t\tif (this.fireOrders[j].turn == i){\n  351  \t\t\t\t\t\tload = 0;\n  352  \t\t\t\t\t}\n  ...\n  358  \t}\n  359  \n  360: \tthis.getDamage = function(){\n  361: \t\treturn this.minDmg + \" - \" + this.maxDmg;\n  362  \t}\n  363  \n  ...\n  371  \n  372  \tWeapon.call(this, id, parentId, name, display, output, minDmg, maxDmg, accDecay, shots, reload, arc1, arc2, arc3, arc4);\t\n  373: \tthis.animation = \"particle\";\n  374  \t\n  375  }\n  ...\n  377  \n  378  function Laser(id, parentId, name, display, output, minDmg, maxDmg, optRange, dmgDecay, accDecay, shots, reload, arc1, arc2, arc3, arc4){\n  379: \tthis.optRange = optRange;\n  380: \tthis.dmgDecay = dmgDecay;\n  381  \n  382  \tWeapon.call(this, id, parentId, name, display, output, minDmg, maxDmg, accDecay, shots, reload, arc1, arc2, arc3, arc4);\t\n  383: \tthis.animation = \"laser\";\n  384  \t\n  385: \tthis.getFillStyle = function(x, y, dist){\n  386  \t\tvar grad = fxCtx.createRadialGradient(x, y, 0, x, y, dist);\n  387: \t\tvar opt = this.optRange / res.x;\n  388  \n  389  \t\tif (opt > 1){opt = 1;}\n  ...\n  392  \t\t\tgrad.addColorStop(opt/2, \"yellow\");\n  393  \t\t\tgrad.addColorStop(opt, \"green\");\n  394: \t\t//\tgrad.addColorStop(this.optRange/res.x*1.5, \"yellow\");\n  395  \t\t\n  396  \t\t\tif (opt*1.5 > 1){\n  ...\n  407  \t}\n  408  \t\n  409: \tthis.getDamageDecay = function(dist){\n  410  \t//\tvar dist = getDistance(ship.getPlannedPos(), pos);\n  411: \t\tvar decay = this.dmgDecay;\n  412  \t\t\n  413: \t\tif (dist < this.optRange){\n  414: \t\t\tdist = this.optRange - dist;\n  415: \t\t} else dist = dist - this.optRange;\n  416  \t//\tconsole.log(dist);\n  417  \t\t\n\n1073 matches across 9 files\n\n\nSearching 29 files for \"new system\"\n\n0 matches\n\nSearching 29 files for \"new la\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  305  \t\t\t\t\t\tif (window.ships[i].structures[j].systems[k].type == \"Laser\"){\n  306  \t\t\t\t\t\t\t//console.log(window.ships[i].structures[j].systems[k]);\n  307: \t\t\t\t\t\t\tvar system = new Laser(\n  308  \t\t\t\t\t\t\t\twindow.ships[i].structures[j].systems[k].id,\n  309  \t\t\t\t\t\t\t\twindow.ships[i].structures[j].systems[k].parentId,\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  407  \t\t\t\t\tif (data.structures[j].systems[k].type == \"Laser\"){\n  408  \t\t\t\t\t\t//console.log(data.structures[j].systems[k]);\n  409: \t\t\t\t\t\tvar system = new Laser(\n  410  \t\t\t\t\t\t\tdata.structures[j].systems[k].id,\n  411  \t\t\t\t\t\t\tdata.structures[j].systems[k].parentId,\n\n2 matches across 2 files\n\n\nSearching 29 files for \"raketime\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  776  \t\t\t\t\t\t\t\ttbx: tbx,\n  777  \t\t\t\t\t\t\t\ttby: tby,\n  778: \t\t\t\t\t\t\t\tt: [0, this.fireOrders[i].weapon.rakeTime],\n  779  \t\t\t\t\t\t\t\thit: hit,\n  780  \t\t\t\t\t\t\t\tv: new Vector({x: tx, y: ty}, {x: tbx, y: tby}),\n\n1 match in 1 file\n\n\nSearching 29 files for \"raketime\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  776  \t\t\t\t\t\t\t\ttbx: tbx,\n  777  \t\t\t\t\t\t\t\ttby: tby,\n  778: \t\t\t\t\t\t\t\tt: [0, this.fireOrders[i].weapon.rakeTime],\n  779  \t\t\t\t\t\t\t\thit: hit,\n  780  \t\t\t\t\t\t\t\tv: new Vector({x: tx, y: ty}, {x: tbx, y: tby}),\n\n1 match in 1 file\n\n\nSearching 29 files for \"new la\"\n\nC:\\xampp\\htdocs\\fire\\game.js:\n  305  \t\t\t\t\t\tif (window.ships[i].structures[j].systems[k].type == \"Laser\"){\n  306  \t\t\t\t\t\t\t//console.log(window.ships[i].structures[j].systems[k]);\n  307: \t\t\t\t\t\t\tvar system = new Laser(\n  308  \t\t\t\t\t\t\t\twindow.ships[i].structures[j].systems[k].id,\n  309  \t\t\t\t\t\t\t\twindow.ships[i].structures[j].systems[k].parentId,\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  407  \t\t\t\t\tif (data.structures[j].systems[k].type == \"Laser\"){\n  408  \t\t\t\t\t\t//console.log(data.structures[j].systems[k]);\n  409: \t\t\t\t\t\tvar system = new Laser(\n  410  \t\t\t\t\t\t\tdata.structures[j].systems[k].id,\n  411  \t\t\t\t\t\t\tdata.structures[j].systems[k].parentId,\n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 81938,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/dbManager.php",
			"settings":
			{
				"buffer_size": 22710,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/createGame.php",
			"settings":
			{
				"buffer_size": 1310,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/index.php",
			"settings":
			{
				"buffer_size": 2453,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/lobby.php",
			"settings":
			{
				"buffer_size": 6717,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/postGameData.php",
			"settings":
			{
				"buffer_size": 2616,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/getGameData.php",
			"settings":
			{
				"buffer_size": 893,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/baseship.php",
			"settings":
			{
				"buffer_size": 3812,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 1835,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
			"settings":
			{
				"buffer_size": 2254,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/systems.php",
			"settings":
			{
				"buffer_size": 2523,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 1373,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 982,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package control install package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/lobby.css",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/server/systems/systems",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/C/xampp/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt",
		"/D/SecureWAMP_Portable/htdocs/projectX/style.css",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/movement.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/transfer.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/admin.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/cam.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-workspace",
		"/D/SecureWAMP_Portable/htdocs/projectX/projectx.sublime-project",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/25_Urho2DParticle.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/01_HelloWorld.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/03_Sprites.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/Utilities/Sample.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/26_ConsoleInput.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/07_Billboards.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/test.as",
		"/D/Downloads/Urho3D-1.5-Windows-SHARED/Urho3D-1.5-Windows-SHARED/share/Urho3D/Resources/Data/Scripts/04_StaticScene.as",
		"/D/Downloads/Urho3D-1.5/Urho3D-1.5/bin/Data/Scripts/30_LightAnimation.as",
		"/D/SecureWAMP_Portable/htdocs/projectX/index.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/debug.php",
		"/I/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/Debug.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/GameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/DBManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/pickGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/ajaxManager.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/game - Copy.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/script.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/index.html",
		"/D/SecureWAMP_Portable/htdocs/projectX/landing.html",
		"/D/SecureWAMP_Portable/htdocs/reg.php",
		"/D/SecureWAMP_Portable/htdocs/index - Copy.html",
		"/D/SecureWAMP_Portable/htdocs/simulator/test.php",
		"/D/SecureWAMP_Portable/htdocs/simulator/hexfiller.php",
		"/D/SecureWAMP_Portable/htdocs/hexFiller.php",
		"/D/SecureWAMP_Portable/htdocs/switchfile.php",
		"/H/Ultimate/buildings.js",
		"/H/Ultimate/script.js",
		"/H/Ultimate/style.css",
		"/H/Ultimate/index.html",
		"/H/ajax/index.html",
		"/H/ajax/script.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"*.php",
			".php",
			"",
			"*.php",
			"",
			"css",
			"*.js, *.css",
			"*.js, *,css",
			"",
			"*.php",
			".php",
			"php",
			"",
			"sharlin.php",
			"sharlin",
			"omega.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"laser.php",
			"particle.php",
			"particle.js",
			"",
			"*.php",
			"*.js",
			".js",
			"",
			"addAngle",
			"",
			"dbmanager.php",
			"",
			"style.css",
			"",
			"shipclasses.js",
			"",
			"shipclasses.js",
			"",
			"script.js",
			"shipclasses.js",
			"game.js",
			"",
			"imageloader.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"new la",
			"mew öaser",
			"raketime",
			"d",
			"getShotD",
			"new la",
			"new system",
			"this.",
			"time",
			"fireOrders",
			"this.create",
			"animate",
			"resolveFire",
			"todo",
			"arrival in",
			"initDeployment",
			"selected",
			"hover",
			"getShipBuyValue",
			"validateFleetCost",
			"createReinforcementsEntry",
			"createPlayerStatus",
			"buyInitialFleet",
			"new",
			"case",
			"\"phase\"",
			"todo",
			"248",
			"function ship",
			"new sh",
			"new windwo",
			"toDo",
			"deployTable",
			"deploy in",
			"buyShips",
			"addtofleet",
			"getship",
			"sahipsbought.",
			"confirmFleetPurchase",
			"buyFleet",
			"postGameData",
			"buyFleet",
			"deployTable",
			"deployWrapper",
			"initDeployment",
			"playerstatus",
			"getgameda",
			"turn:",
			"integ",
			"window.res",
			"fxc",
			"preview",
			"draw",
			"new structure",
			"drawTurnControl",
			"drawTurnControl\n",
			"setMoveMode",
			"new ship",
			"new window",
			"switch",
			"setPlayerstatus",
			"handleDamageControlPhase",
			"doAdvanceGameState",
			"canAdvanceGameState",
			"setPlayerstatus",
			"setgameturn",
			"setgameturnphase",
			"setGameTurnPhase",
			"$turn",
			"turn",
			"setGamePhase",
			"startnewt",
			"startgame",
			"setPlayerstatus",
			"setPlayerstatus\n",
			"startDamageControlPhase",
			"memory_",
			"new damage",
			"getAllFireOrders",
			",",
			"getAllFireOrders",
			"new damage",
			"insertDamageEntires",
			"writeDamageEntries",
			"doDamage",
			"handlefire",
			"doDamage",
			"startDamageControlPhase",
			"handleFiringPhase",
			"updatef",
			"new dam",
			"updateFireOrders",
			"handleFiringPhase",
			"writeDamageEntries",
			"updateFireOrders",
			"doDamage",
			"handlefir",
			"new damage",
			"handlefi",
			"getAllFireOrders",
			"getall",
			"damage",
			"insert",
			"new damage",
			"getRemainingMitigation",
			"createdam",
			"aaaa",
			"getSystemDetailsDiv",
			"getRemainingIntegrity",
			"getremai",
			"new dam",
			"doDamage",
			"handleFiring",
			"integrity",
			"int",
			"startDamageControlPhase",
			"advan",
			"json_en",
			"handlef",
			"startDamageControlPhase",
			"handl",
			"aaa",
			"updateFireOrders",
			"getGameData",
			"getallfire",
			"updateFireOrders",
			"doDamage",
			"updateFireOrders"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"game.",
			"Searching",
			"\n\t\treturn;\n\t\t//console.log(\"animate\");\n\t\t//console.log(this.fireOrders);\n\t\n\t\tanimation = setInterval(function(){\n\n\t\t\t$(\"#combatLog\").show();\n\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\n\t\t\tfor (var i = 0; i  < this.fireOrders.length; i++){\n\t\t\t\tif (! this.fireOrders[i].animated){\n\t\t\t\t\t//console.log(\"animating fire[\" + i + \"] for shots: \" + this.fireOrders[i].shots);\n\t\t\t\t\tvar x, y;\n\t\t\t\t\t\n\t\t\t\t\t//console.log(\"animating \" + this.fireOrders[i].anim.length + \" guns with \" + this.fireOrders[i].anim[0].length + \" shots each.\");\n\t\t\t\t\tfor (var j = 0; j < this.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\t//console.log(this.fireOrders[i].anim[j]);\n\t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (this.fireOrders[i].weapon.animation == \"projectile\"){\n\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] < this.fireOrders[i].anim[j][k].t[1]){ // still to animate\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].t[0] += 1;\n\t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] > 0){ // t valid, now animate\n\t\t\t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].ox + (this.fireOrders[i].anim[j][k].v.x * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n\t\t\t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].oy + (this.fireOrders[i].anim[j][k].v.y * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n\t\t\t\t\t\t\t\t\t\tdrawProjectile(this.fireOrders[i].weapon, x, y);  // PROJ\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {// animate EXPLO\n\t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo){\n\t\t\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo.t[0] < this.fireOrders[i].anim[j][k].explo.t[1]){\n\t\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].explo.t[0] += 10;\n\t\t\t\t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].ox + this.fireOrders[i].anim[j][k].v.x;\n\t\t\t\t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].oy + this.fireOrders[i].anim[j][k].v.y;\t\n\t\t\t\t\t\t\t\t\t\t\tdrawExplosion(x, y, this.fireOrders[i].anim[j][k].explo.s * this.fireOrders[i].anim[j][k].explo.t[0] / this.fireOrders[i].anim[j][k].explo.t[1]); // EXPLO\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (this.fireOrders[i].weapon.animation == \"laser\"){\n\t\t\t\t\t\t\t//\tconsole.log(\"laser\");\n\t\t\t\t\t\t\t//\tconsole.log(this.fireOrders[i].anim);\n\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].t[0] += 1;\n\t\t\t\t\t\t\t\tx = this.fireOrders[i].anim[j][k].tax + (this.fireOrders[i].anim[j][k].v.x * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n\t\t\t\t\t\t\t\ty = this.fireOrders[i].anim[j][k].tay + (this.fireOrders[i].anim[j][k].v.y * this.fireOrders[i].anim[j][k].t[0] / this.fireOrders[i].anim[j][k].t[1]);\n\t\t\t\t\t\t\t\tdrawBeam(this.fireOrders[i].weapon, this.fireOrders[i].anim[j][k].ox, this.fireOrders[i].anim[j][k].oy, x, y); // BEAM\n\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].explo){\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].explo.t[0] = this.fireOrders[i].anim[j][k].explo.t[1];\t\t\n\t\t\t\t\t\t\t\t\tvar size = Math.random() * 3 +4;\n\t\t\t\t\t\t\t\t//\tdrawExplosion(x, y, this.fireOrders[i].anim[j][k].explo.s); // EXPLO\n\t\t\t\t\t\t\t\t\tdrawExplosion(x, y, size) // EXPL\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this.fireOrders[i].anim[j][k].t[0] == this.fireOrders[i].anim[j][k].t[1]){\n\t\t\t\t\t\t\t\t\tthis.fireOrders[i].anim[j][k].animated = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar allAnimated = true;\n\t\t\t\t\tfor (var j = 0; j < this.fireOrders[i].anim.length; j++){\n\t\t\t\t\t\tfor (var k = 0; k < this.fireOrders[i].anim[j].length; k++){\n\t\t\t\t\t\t\tif (! this.fireOrders[i].anim[j][k].animated){\n\t\t\t\t\t\t\t\tallAnimated = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!allAnimated){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (allAnimated){\n\t\t\t\t\t\tthis.fireOrders[i].animated = allAnimated;\n\t\t\t\t\t\tgame.createLogEntry(this.fireOrders[i]);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tvar done = true\n\t\t\t\n\t\t\tfor (var i = 0; i  < this.fireOrders.length; i++){\n\t\t\t\tif (! this.fireOrders[i].animated){\n\t\t\t\t\tdone = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (done){\n\t\t\t\tconsole.log(\"done\");\n\t\t\t\tclearInterval(animation);\n\t\t\t\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t}\n\t\t\t\n\t\t}, 30);\n\t}",
			"setGameTurnPhase",
			"data",
			"$fire",
			"this->gd",
			"getSystemDetailsDiv",
			"\"systemDetailsDiv\"",
			"data.",
			"($this->getId(), $this->id, ",
			"public $",
			"(",
			"",
			"addAngle",
			"",
			"z-index",
			"pos.x\npos.x",
			"pos.x\npos.y",
			"pos.x\npos.x",
			"(this, id, shipClass, x, ",
			"(id, shipClass, x,",
			"(id, shipClass,",
			", ",
			"ele.className",
			"userid",
			"= \"/shipIcons/",
			"fleetid",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/xampp/htdocs/fire/ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6872,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 310.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/xampp/htdocs/fire/cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1935,
						"regions":
						{
						},
						"selection":
						[
							[
								851,
								851
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/xampp/htdocs/fire/classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6596,
						"regions":
						{
						},
						"selection":
						[
							[
								3092,
								3640
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2181.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/xampp/htdocs/fire/server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1720,
						"regions":
						{
						},
						"selection":
						[
							[
								1111,
								1111
							]
						],
						"settings":
						{
							"auto_name": "<?php",
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/xampp/htdocs/fire/graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2139,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/fire/shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2385,
						"regions":
						{
						},
						"selection":
						[
							[
								1787,
								1787
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/xampp/htdocs/fire/shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37341,
						"regions":
						{
						},
						"selection":
						[
							[
								5334,
								5334
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3945.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/xampp/htdocs/fire/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6468,
						"regions":
						{
						},
						"selection":
						[
							[
								4795,
								4795
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5736.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/xampp/htdocs/fire/systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10744,
						"regions":
						{
						},
						"selection":
						[
							[
								9700,
								9700
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6147.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/xampp/htdocs/fire/game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4791,
						"regions":
						{
						},
						"selection":
						[
							[
								1414,
								1414
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 549.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/xampp/htdocs/fire/game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28558,
						"regions":
						{
						},
						"selection":
						[
							[
								8533,
								8592
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5331.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/fire/gameManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14245,
						"regions":
						{
						},
						"selection":
						[
							[
								2883,
								2898
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2262.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/xampp/htdocs/fire/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12363,
						"regions":
						{
						},
						"selection":
						[
							[
								8112,
								8118
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4700.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/fire/gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15059,
						"regions":
						{
						},
						"selection":
						[
							[
								7655,
								7655
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4621.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/fire/mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3235,
						"regions":
						{
						},
						"selection":
						[
							[
								1614,
								1614
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1181.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/fire/server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2087,
						"regions":
						{
						},
						"selection":
						[
							[
								1050,
								1050
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 304.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/fire/log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8006,
						"regions":
						{
						},
						"selection":
						[
							[
								3287,
								3302
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2322.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 17,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81938,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										137,
										152
									],
									[
										249,
										264
									],
									[
										308,
										323
									],
									[
										463,
										478
									],
									[
										595,
										610
									],
									[
										618,
										633
									],
									[
										739,
										754
									],
									[
										780,
										795
									],
									[
										1174,
										1192
									],
									[
										1314,
										1332
									],
									[
										1397,
										1415
									],
									[
										1590,
										1608
									],
									[
										1907,
										1912
									],
									[
										2097,
										2102
									],
									[
										2302,
										2307
									],
									[
										2369,
										2374
									],
									[
										2535,
										2540
									],
									[
										2715,
										2720
									],
									[
										2909,
										2914
									],
									[
										3169,
										3174
									],
									[
										3296,
										3301
									],
									[
										3541,
										3551
									],
									[
										3708,
										3712
									],
									[
										3866,
										3870
									],
									[
										3949,
										3953
									],
									[
										4059,
										4063
									],
									[
										4127,
										4131
									],
									[
										4277,
										4281
									],
									[
										4534,
										4538
									],
									[
										4675,
										4679
									],
									[
										4762,
										4766
									],
									[
										4897,
										4901
									],
									[
										5031,
										5035
									],
									[
										5370,
										5375
									],
									[
										5511,
										5516
									],
									[
										5549,
										5554
									],
									[
										5673,
										5678
									],
									[
										5724,
										5729
									],
									[
										5748,
										5753
									],
									[
										5816,
										5821
									],
									[
										5847,
										5852
									],
									[
										5876,
										5881
									],
									[
										5951,
										5956
									],
									[
										5989,
										5994
									],
									[
										6027,
										6032
									],
									[
										6048,
										6053
									],
									[
										6065,
										6070
									],
									[
										6096,
										6101
									],
									[
										6117,
										6122
									],
									[
										6134,
										6139
									],
									[
										6255,
										6260
									],
									[
										6285,
										6290
									],
									[
										6346,
										6351
									],
									[
										6378,
										6383
									],
									[
										6440,
										6445
									],
									[
										6521,
										6526
									],
									[
										6542,
										6547
									],
									[
										6573,
										6578
									],
									[
										6594,
										6599
									],
									[
										6625,
										6630
									],
									[
										6645,
										6650
									],
									[
										6675,
										6680
									],
									[
										6695,
										6700
									],
									[
										6725,
										6730
									],
									[
										6746,
										6751
									],
									[
										6763,
										6768
									],
									[
										6795,
										6800
									],
									[
										6816,
										6821
									],
									[
										6833,
										6838
									],
									[
										6946,
										6951
									],
									[
										6978,
										6983
									],
									[
										7019,
										7024
									],
									[
										7087,
										7092
									],
									[
										7121,
										7126
									],
									[
										7163,
										7168
									],
									[
										7184,
										7189
									],
									[
										7304,
										7309
									],
									[
										7335,
										7340
									],
									[
										7361,
										7366
									],
									[
										7387,
										7392
									],
									[
										7407,
										7412
									],
									[
										7427,
										7432
									],
									[
										7447,
										7452
									],
									[
										7477,
										7482
									],
									[
										7501,
										7506
									],
									[
										7532,
										7537
									],
									[
										7565,
										7570
									],
									[
										7649,
										7654
									],
									[
										7665,
										7670
									],
									[
										7681,
										7686
									],
									[
										7698,
										7703
									],
									[
										7715,
										7720
									],
									[
										7731,
										7736
									],
									[
										7756,
										7761
									],
									[
										7790,
										7795
									],
									[
										7819,
										7824
									],
									[
										7875,
										7880
									],
									[
										7913,
										7918
									],
									[
										7968,
										7973
									],
									[
										8003,
										8008
									],
									[
										8013,
										8018
									],
									[
										8020,
										8025
									],
									[
										8037,
										8042
									],
									[
										8047,
										8052
									],
									[
										8054,
										8059
									],
									[
										8089,
										8094
									],
									[
										8157,
										8162
									],
									[
										8177,
										8182
									],
									[
										8197,
										8202
									],
									[
										8220,
										8225
									],
									[
										8260,
										8265
									],
									[
										8302,
										8307
									],
									[
										8313,
										8318
									],
									[
										8340,
										8345
									],
									[
										8351,
										8356
									],
									[
										8460,
										8465
									],
									[
										8518,
										8523
									],
									[
										8626,
										8631
									],
									[
										8648,
										8653
									],
									[
										8682,
										8687
									],
									[
										8716,
										8721
									],
									[
										8752,
										8757
									],
									[
										8771,
										8776
									],
									[
										8791,
										8796
									],
									[
										8810,
										8815
									],
									[
										8841,
										8846
									],
									[
										8865,
										8870
									],
									[
										9059,
										9064
									],
									[
										9081,
										9086
									],
									[
										9111,
										9116
									],
									[
										9141,
										9146
									],
									[
										9171,
										9176
									],
									[
										9211,
										9216
									],
									[
										9237,
										9242
									],
									[
										9263,
										9268
									],
									[
										9297,
										9302
									],
									[
										9333,
										9338
									],
									[
										9369,
										9374
									],
									[
										9405,
										9410
									],
									[
										9443,
										9448
									],
									[
										9479,
										9484
									],
									[
										9619,
										9624
									],
									[
										9652,
										9657
									],
									[
										9688,
										9693
									],
									[
										9710,
										9715
									],
									[
										9744,
										9749
									],
									[
										9772,
										9777
									],
									[
										9796,
										9801
									],
									[
										9832,
										9837
									],
									[
										9862,
										9867
									],
									[
										9900,
										9905
									],
									[
										9945,
										9950
									],
									[
										9972,
										9977
									],
									[
										10004,
										10009
									],
									[
										10039,
										10044
									],
									[
										10228,
										10233
									],
									[
										10404,
										10409
									],
									[
										10600,
										10605
									],
									[
										10755,
										10760
									],
									[
										10803,
										10808
									],
									[
										10890,
										10895
									],
									[
										10939,
										10944
									],
									[
										10968,
										10973
									],
									[
										11032,
										11037
									],
									[
										11070,
										11075
									],
									[
										11097,
										11102
									],
									[
										11148,
										11153
									],
									[
										11204,
										11209
									],
									[
										11261,
										11266
									],
									[
										11294,
										11299
									],
									[
										11324,
										11329
									],
									[
										11381,
										11386
									],
									[
										11438,
										11443
									],
									[
										11504,
										11509
									],
									[
										11554,
										11559
									],
									[
										11606,
										11611
									],
									[
										11639,
										11644
									],
									[
										11742,
										11747
									],
									[
										11890,
										11895
									],
									[
										12105,
										12110
									],
									[
										12144,
										12149
									],
									[
										12396,
										12401
									],
									[
										12432,
										12437
									],
									[
										12682,
										12687
									],
									[
										12728,
										12733
									],
									[
										12870,
										12875
									],
									[
										12936,
										12941
									],
									[
										12981,
										12986
									],
									[
										13031,
										13036
									],
									[
										13122,
										13127
									],
									[
										13182,
										13187
									],
									[
										13224,
										13229
									],
									[
										13271,
										13276
									],
									[
										13359,
										13364
									],
									[
										13438,
										13443
									],
									[
										13481,
										13486
									],
									[
										13502,
										13507
									],
									[
										13646,
										13651
									],
									[
										13668,
										13673
									],
									[
										13694,
										13699
									],
									[
										13724,
										13729
									],
									[
										13754,
										13759
									],
									[
										13780,
										13785
									],
									[
										13808,
										13813
									],
									[
										13833,
										13838
									],
									[
										13863,
										13868
									],
									[
										13890,
										13895
									],
									[
										13922,
										13927
									],
									[
										13954,
										13959
									],
									[
										13986,
										13991
									],
									[
										14038,
										14043
									],
									[
										14129,
										14134
									],
									[
										14172,
										14177
									],
									[
										14203,
										14208
									],
									[
										14281,
										14286
									],
									[
										14322,
										14327
									],
									[
										14346,
										14351
									],
									[
										14377,
										14382
									],
									[
										14519,
										14524
									],
									[
										14607,
										14612
									],
									[
										14709,
										14714
									],
									[
										14965,
										14970
									],
									[
										15004,
										15009
									],
									[
										15053,
										15058
									],
									[
										15077,
										15082
									],
									[
										15113,
										15118
									],
									[
										15279,
										15284
									],
									[
										15446,
										15451
									],
									[
										15614,
										15619
									],
									[
										15711,
										15716
									],
									[
										15750,
										15755
									],
									[
										15805,
										15810
									],
									[
										15851,
										15856
									],
									[
										15903,
										15908
									],
									[
										15980,
										15985
									],
									[
										16001,
										16006
									],
									[
										16072,
										16077
									],
									[
										16244,
										16249
									],
									[
										16402,
										16407
									],
									[
										16558,
										16563
									],
									[
										16701,
										16706
									],
									[
										16859,
										16864
									],
									[
										17020,
										17025
									],
									[
										17080,
										17085
									],
									[
										17187,
										17192
									],
									[
										17396,
										17401
									],
									[
										17415,
										17420
									],
									[
										17549,
										17554
									],
									[
										17652,
										17657
									],
									[
										17707,
										17712
									],
									[
										17722,
										17727
									],
									[
										17762,
										17767
									],
									[
										17826,
										17831
									],
									[
										17865,
										17870
									],
									[
										17915,
										17920
									],
									[
										17984,
										17989
									],
									[
										18028,
										18033
									],
									[
										18087,
										18092
									],
									[
										18131,
										18136
									],
									[
										18174,
										18179
									],
									[
										18249,
										18254
									],
									[
										18343,
										18348
									],
									[
										18382,
										18387
									],
									[
										18408,
										18413
									],
									[
										18432,
										18437
									],
									[
										18458,
										18463
									],
									[
										18496,
										18501
									],
									[
										18522,
										18527
									],
									[
										18546,
										18551
									],
									[
										18572,
										18577
									],
									[
										18611,
										18616
									],
									[
										18711,
										18716
									],
									[
										18893,
										18898
									],
									[
										19129,
										19134
									],
									[
										19365,
										19370
									],
									[
										19412,
										19417
									],
									[
										19471,
										19476
									],
									[
										19506,
										19511
									],
									[
										19566,
										19571
									],
									[
										19631,
										19636
									],
									[
										19670,
										19675
									],
									[
										19706,
										19711
									],
									[
										19777,
										19782
									],
									[
										19937,
										19942
									],
									[
										19999,
										20004
									],
									[
										20038,
										20043
									],
									[
										20081,
										20086
									],
									[
										20150,
										20155
									],
									[
										20303,
										20308
									],
									[
										20352,
										20357
									],
									[
										20405,
										20410
									],
									[
										20467,
										20472
									],
									[
										20608,
										20613
									],
									[
										20663,
										20668
									],
									[
										20709,
										20714
									],
									[
										20839,
										20844
									],
									[
										20890,
										20895
									],
									[
										20960,
										20965
									],
									[
										21114,
										21119
									],
									[
										21282,
										21287
									],
									[
										21409,
										21414
									],
									[
										21516,
										21521
									],
									[
										21549,
										21554
									],
									[
										21703,
										21708
									],
									[
										21736,
										21741
									],
									[
										21860,
										21865
									],
									[
										21999,
										22004
									],
									[
										22032,
										22037
									],
									[
										22122,
										22127
									],
									[
										22296,
										22301
									],
									[
										22336,
										22341
									],
									[
										22376,
										22381
									],
									[
										22408,
										22413
									],
									[
										22445,
										22450
									],
									[
										22487,
										22492
									],
									[
										22537,
										22542
									],
									[
										22596,
										22601
									],
									[
										22651,
										22656
									],
									[
										22721,
										22726
									],
									[
										22787,
										22792
									],
									[
										22868,
										22873
									],
									[
										22950,
										22955
									],
									[
										23011,
										23016
									],
									[
										23038,
										23043
									],
									[
										23059,
										23064
									],
									[
										23177,
										23182
									],
									[
										23266,
										23271
									],
									[
										23285,
										23290
									],
									[
										23331,
										23336
									],
									[
										23386,
										23391
									],
									[
										23426,
										23431
									],
									[
										23472,
										23477
									],
									[
										23513,
										23518
									],
									[
										23541,
										23546
									],
									[
										23582,
										23587
									],
									[
										23622,
										23627
									],
									[
										23648,
										23653
									],
									[
										23690,
										23695
									],
									[
										23730,
										23735
									],
									[
										23757,
										23762
									],
									[
										23833,
										23838
									],
									[
										23881,
										23886
									],
									[
										23926,
										23931
									],
									[
										23963,
										23968
									],
									[
										24064,
										24069
									],
									[
										24114,
										24119
									],
									[
										24195,
										24200
									],
									[
										24384,
										24389
									],
									[
										24411,
										24416
									],
									[
										24453,
										24458
									],
									[
										24482,
										24487
									],
									[
										24528,
										24533
									],
									[
										24640,
										24645
									],
									[
										24680,
										24685
									],
									[
										24736,
										24741
									],
									[
										24773,
										24778
									],
									[
										24852,
										24857
									],
									[
										25002,
										25007
									],
									[
										25057,
										25062
									],
									[
										25108,
										25113
									],
									[
										25159,
										25164
									],
									[
										25258,
										25263
									],
									[
										25392,
										25397
									],
									[
										25480,
										25485
									],
									[
										25524,
										25529
									],
									[
										25559,
										25564
									],
									[
										25641,
										25646
									],
									[
										25685,
										25690
									],
									[
										25720,
										25725
									],
									[
										25813,
										25818
									],
									[
										25889,
										25894
									],
									[
										25983,
										25988
									],
									[
										26020,
										26025
									],
									[
										26094,
										26099
									],
									[
										26131,
										26136
									],
									[
										26265,
										26270
									],
									[
										26336,
										26341
									],
									[
										26420,
										26425
									],
									[
										26493,
										26498
									],
									[
										26532,
										26537
									],
									[
										26610,
										26615
									],
									[
										26649,
										26654
									],
									[
										26819,
										26824
									],
									[
										26856,
										26861
									],
									[
										26935,
										26940
									],
									[
										26972,
										26977
									],
									[
										27127,
										27132
									],
									[
										27314,
										27319
									],
									[
										27406,
										27411
									],
									[
										27508,
										27513
									],
									[
										27672,
										27677
									],
									[
										27719,
										27724
									],
									[
										27817,
										27822
									],
									[
										27920,
										27925
									],
									[
										27969,
										27974
									],
									[
										28054,
										28059
									],
									[
										28119,
										28124
									],
									[
										28181,
										28186
									],
									[
										28240,
										28245
									],
									[
										28313,
										28318
									],
									[
										28350,
										28355
									],
									[
										28423,
										28428
									],
									[
										28484,
										28489
									],
									[
										28570,
										28575
									],
									[
										28606,
										28611
									],
									[
										28642,
										28647
									],
									[
										28679,
										28684
									],
									[
										28737,
										28742
									],
									[
										28773,
										28778
									],
									[
										28809,
										28814
									],
									[
										28846,
										28851
									],
									[
										28915,
										28920
									],
									[
										29051,
										29056
									],
									[
										29110,
										29115
									],
									[
										29153,
										29158
									],
									[
										29214,
										29219
									],
									[
										29284,
										29289
									],
									[
										29319,
										29324
									],
									[
										29376,
										29381
									],
									[
										29411,
										29416
									],
									[
										29485,
										29490
									],
									[
										29525,
										29530
									],
									[
										29568,
										29573
									],
									[
										29681,
										29686
									],
									[
										29805,
										29810
									],
									[
										29926,
										29931
									],
									[
										30043,
										30048
									],
									[
										30084,
										30089
									],
									[
										30144,
										30149
									],
									[
										30181,
										30186
									],
									[
										30217,
										30222
									],
									[
										30254,
										30259
									],
									[
										30310,
										30315
									],
									[
										30347,
										30352
									],
									[
										30383,
										30388
									],
									[
										30420,
										30425
									],
									[
										30481,
										30486
									],
									[
										30508,
										30513
									],
									[
										30542,
										30547
									],
									[
										30610,
										30615
									],
									[
										30664,
										30669
									],
									[
										30707,
										30712
									],
									[
										30838,
										30843
									],
									[
										30973,
										30978
									],
									[
										31011,
										31016
									],
									[
										31064,
										31069
									],
									[
										31231,
										31236
									],
									[
										31302,
										31307
									],
									[
										31363,
										31368
									],
									[
										31524,
										31529
									],
									[
										31600,
										31605
									],
									[
										31721,
										31726
									],
									[
										31768,
										31773
									],
									[
										31869,
										31874
									],
									[
										32063,
										32068
									],
									[
										32251,
										32256
									],
									[
										32592,
										32597
									],
									[
										32833,
										32838
									],
									[
										33013,
										33018
									],
									[
										33222,
										33227
									],
									[
										33439,
										33444
									],
									[
										33624,
										33629
									],
									[
										33853,
										33858
									],
									[
										33875,
										33880
									],
									[
										33911,
										33916
									],
									[
										33940,
										33945
									],
									[
										33969,
										33974
									],
									[
										33999,
										34004
									],
									[
										34029,
										34034
									],
									[
										34051,
										34056
									],
									[
										34069,
										34074
									],
									[
										34094,
										34099
									],
									[
										34121,
										34126
									],
									[
										34154,
										34159
									],
									[
										34187,
										34192
									],
									[
										34219,
										34224
									],
									[
										34257,
										34262
									],
									[
										34295,
										34300
									],
									[
										34322,
										34327
									],
									[
										34355,
										34360
									],
									[
										34391,
										34396
									],
									[
										34434,
										34439
									],
									[
										34523,
										34528
									],
									[
										34690,
										34695
									],
									[
										34756,
										34761
									],
									[
										34894,
										34899
									],
									[
										34902,
										34907
									],
									[
										34935,
										34940
									],
									[
										34996,
										35001
									],
									[
										35079,
										35084
									],
									[
										35116,
										35121
									],
									[
										35153,
										35158
									],
									[
										35230,
										35235
									],
									[
										35248,
										35253
									],
									[
										35288,
										35293
									],
									[
										35342,
										35347
									],
									[
										35445,
										35450
									],
									[
										35500,
										35505
									],
									[
										35538,
										35543
									],
									[
										35552,
										35557
									],
									[
										35596,
										35601
									],
									[
										35623,
										35628
									],
									[
										35667,
										35672
									],
									[
										35756,
										35761
									],
									[
										35797,
										35802
									],
									[
										35930,
										35935
									],
									[
										36035,
										36040
									],
									[
										36078,
										36083
									],
									[
										36201,
										36206
									],
									[
										36242,
										36247
									],
									[
										36297,
										36302
									],
									[
										36347,
										36352
									],
									[
										36450,
										36455
									],
									[
										36524,
										36529
									],
									[
										36614,
										36619
									],
									[
										36655,
										36660
									],
									[
										36707,
										36712
									],
									[
										36781,
										36786
									],
									[
										36825,
										36830
									],
									[
										36857,
										36862
									],
									[
										36904,
										36909
									],
									[
										36951,
										36956
									],
									[
										36978,
										36983
									],
									[
										37068,
										37073
									],
									[
										37129,
										37134
									],
									[
										37209,
										37214
									],
									[
										37262,
										37267
									],
									[
										37446,
										37451
									],
									[
										37475,
										37480
									],
									[
										37542,
										37547
									],
									[
										37591,
										37596
									],
									[
										37639,
										37644
									],
									[
										37671,
										37676
									],
									[
										37751,
										37756
									],
									[
										37803,
										37808
									],
									[
										37858,
										37863
									],
									[
										37890,
										37895
									],
									[
										37978,
										37983
									],
									[
										38030,
										38035
									],
									[
										38043,
										38048
									],
									[
										38082,
										38087
									],
									[
										38095,
										38100
									],
									[
										38158,
										38163
									],
									[
										38202,
										38207
									],
									[
										38239,
										38244
									],
									[
										38248,
										38253
									],
									[
										38277,
										38282
									],
									[
										38286,
										38291
									],
									[
										38355,
										38360
									],
									[
										38454,
										38459
									],
									[
										38493,
										38498
									],
									[
										38502,
										38507
									],
									[
										38533,
										38538
									],
									[
										38542,
										38547
									],
									[
										38617,
										38622
									],
									[
										38671,
										38676
									],
									[
										38712,
										38717
									],
									[
										38721,
										38726
									],
									[
										38754,
										38759
									],
									[
										38763,
										38768
									],
									[
										38870,
										38875
									],
									[
										38923,
										38928
									],
									[
										38963,
										38968
									],
									[
										38972,
										38977
									],
									[
										39004,
										39009
									],
									[
										39013,
										39018
									],
									[
										39110,
										39115
									],
									[
										39119,
										39124
									],
									[
										39151,
										39156
									],
									[
										39160,
										39165
									],
									[
										39246,
										39251
									],
									[
										39321,
										39326
									],
									[
										39400,
										39405
									],
									[
										39443,
										39448
									],
									[
										39518,
										39523
									],
									[
										39631,
										39636
									],
									[
										39696,
										39701
									],
									[
										39779,
										39784
									],
									[
										39823,
										39828
									],
									[
										39890,
										39895
									],
									[
										40005,
										40010
									],
									[
										40048,
										40053
									],
									[
										40114,
										40119
									],
									[
										40195,
										40200
									],
									[
										40244,
										40249
									],
									[
										40279,
										40284
									],
									[
										40308,
										40313
									],
									[
										40350,
										40355
									],
									[
										40405,
										40410
									],
									[
										40436,
										40441
									],
									[
										40465,
										40470
									],
									[
										40531,
										40536
									],
									[
										40565,
										40570
									],
									[
										40620,
										40625
									],
									[
										40689,
										40694
									],
									[
										40749,
										40754
									],
									[
										40805,
										40810
									],
									[
										40916,
										40921
									],
									[
										40980,
										40985
									],
									[
										41024,
										41029
									],
									[
										41072,
										41077
									],
									[
										41142,
										41147
									],
									[
										41198,
										41203
									],
									[
										41258,
										41263
									],
									[
										41347,
										41352
									],
									[
										41479,
										41484
									],
									[
										41539,
										41544
									],
									[
										41595,
										41600
									],
									[
										41638,
										41643
									],
									[
										41738,
										41743
									],
									[
										41766,
										41771
									],
									[
										41802,
										41807
									],
									[
										41847,
										41852
									],
									[
										41926,
										41931
									],
									[
										42044,
										42049
									],
									[
										42072,
										42077
									],
									[
										42115,
										42120
									],
									[
										42330,
										42335
									],
									[
										42570,
										42575
									],
									[
										42598,
										42603
									],
									[
										42646,
										42651
									],
									[
										42753,
										42758
									],
									[
										42837,
										42842
									],
									[
										42865,
										42870
									],
									[
										42912,
										42917
									],
									[
										42963,
										42968
									],
									[
										42976,
										42981
									],
									[
										43012,
										43017
									],
									[
										43025,
										43030
									],
									[
										43108,
										43113
									],
									[
										43165,
										43170
									],
									[
										43215,
										43220
									],
									[
										43262,
										43267
									],
									[
										43301,
										43306
									],
									[
										43346,
										43351
									],
									[
										43622,
										43627
									],
									[
										43793,
										43798
									],
									[
										44021,
										44026
									],
									[
										44064,
										44069
									],
									[
										44294,
										44299
									],
									[
										44483,
										44488
									],
									[
										44670,
										44675
									],
									[
										44752,
										44757
									],
									[
										44812,
										44817
									],
									[
										44866,
										44871
									],
									[
										44907,
										44912
									],
									[
										44958,
										44963
									],
									[
										45014,
										45019
									],
									[
										45102,
										45107
									],
									[
										45203,
										45208
									],
									[
										45256,
										45261
									],
									[
										45336,
										45341
									],
									[
										45427,
										45432
									],
									[
										45468,
										45473
									],
									[
										45523,
										45528
									],
									[
										45601,
										45606
									],
									[
										45681,
										45686
									],
									[
										45699,
										45704
									],
									[
										45778,
										45783
									],
									[
										45860,
										45865
									],
									[
										45916,
										45921
									],
									[
										45978,
										45983
									],
									[
										46019,
										46024
									],
									[
										46074,
										46079
									],
									[
										46159,
										46164
									],
									[
										46259,
										46264
									],
									[
										46308,
										46313
									],
									[
										46333,
										46338
									],
									[
										46383,
										46388
									],
									[
										46450,
										46455
									],
									[
										46479,
										46484
									],
									[
										46529,
										46534
									],
									[
										46600,
										46605
									],
									[
										46645,
										46650
									],
									[
										46693,
										46698
									],
									[
										46719,
										46724
									],
									[
										46768,
										46773
									],
									[
										46823,
										46828
									],
									[
										46924,
										46929
									],
									[
										47012,
										47017
									],
									[
										47113,
										47118
									],
									[
										47169,
										47174
									],
									[
										47220,
										47225
									],
									[
										47233,
										47238
									],
									[
										47269,
										47274
									],
									[
										47282,
										47287
									],
									[
										47375,
										47380
									],
									[
										47393,
										47398
									],
									[
										47454,
										47459
									],
									[
										47482,
										47487
									],
									[
										47608,
										47613
									],
									[
										47700,
										47705
									],
									[
										47936,
										47941
									],
									[
										48070,
										48075
									],
									[
										48129,
										48134
									],
									[
										48142,
										48147
									],
									[
										48286,
										48291
									],
									[
										48517,
										48522
									],
									[
										48636,
										48641
									],
									[
										48714,
										48719
									],
									[
										48766,
										48771
									],
									[
										48814,
										48819
									],
									[
										48855,
										48860
									],
									[
										48911,
										48916
									],
									[
										48957,
										48962
									],
									[
										48980,
										48985
									],
									[
										49082,
										49087
									],
									[
										49172,
										49177
									],
									[
										49213,
										49218
									],
									[
										49276,
										49281
									],
									[
										49298,
										49303
									],
									[
										49355,
										49360
									],
									[
										49424,
										49429
									],
									[
										49530,
										49535
									],
									[
										49581,
										49586
									],
									[
										49630,
										49635
									],
									[
										49643,
										49648
									],
									[
										49679,
										49684
									],
									[
										49692,
										49697
									],
									[
										49783,
										49788
									],
									[
										49801,
										49806
									],
									[
										49859,
										49864
									],
									[
										49921,
										49926
									],
									[
										49979,
										49984
									],
									[
										50007,
										50012
									],
									[
										50070,
										50075
									],
									[
										50330,
										50335
									],
									[
										50404,
										50409
									],
									[
										50499,
										50504
									],
									[
										50677,
										50682
									],
									[
										50779,
										50784
									],
									[
										50841,
										50846
									],
									[
										50934,
										50939
									],
									[
										51047,
										51052
									],
									[
										51083,
										51088
									],
									[
										51136,
										51141
									],
									[
										51212,
										51217
									],
									[
										51263,
										51268
									],
									[
										51288,
										51293
									],
									[
										51332,
										51337
									],
									[
										51414,
										51419
									],
									[
										51427,
										51432
									],
									[
										51523,
										51528
									],
									[
										51536,
										51541
									],
									[
										51584,
										51589
									],
									[
										51597,
										51602
									],
									[
										51697,
										51702
									],
									[
										51710,
										51715
									],
									[
										51758,
										51763
									],
									[
										51771,
										51776
									],
									[
										51874,
										51879
									],
									[
										51925,
										51930
									],
									[
										51950,
										51955
									],
									[
										51994,
										51999
									],
									[
										52076,
										52081
									],
									[
										52089,
										52094
									],
									[
										52185,
										52190
									],
									[
										52198,
										52203
									],
									[
										52246,
										52251
									],
									[
										52259,
										52264
									],
									[
										52360,
										52365
									],
									[
										52373,
										52378
									],
									[
										52421,
										52426
									],
									[
										52434,
										52439
									],
									[
										52535,
										52540
									],
									[
										52586,
										52591
									],
									[
										52623,
										52628
									],
									[
										52645,
										52650
									],
									[
										52719,
										52724
									],
									[
										52783,
										52788
									],
									[
										52862,
										52867
									],
									[
										52887,
										52892
									],
									[
										52984,
										52989
									],
									[
										53067,
										53072
									],
									[
										53102,
										53107
									],
									[
										53201,
										53206
									],
									[
										53320,
										53325
									],
									[
										53355,
										53360
									],
									[
										53380,
										53385
									],
									[
										53438,
										53443
									],
									[
										53469,
										53474
									],
									[
										53516,
										53521
									],
									[
										53637,
										53642
									],
									[
										53672,
										53677
									],
									[
										53697,
										53702
									],
									[
										53755,
										53760
									],
									[
										53786,
										53791
									],
									[
										53832,
										53837
									],
									[
										53893,
										53898
									],
									[
										53965,
										53970
									],
									[
										53988,
										53993
									],
									[
										54001,
										54006
									],
									[
										54049,
										54054
									],
									[
										54062,
										54067
									],
									[
										54109,
										54114
									],
									[
										54129,
										54134
									],
									[
										54309,
										54314
									],
									[
										54409,
										54414
									],
									[
										54432,
										54437
									],
									[
										54445,
										54450
									],
									[
										54493,
										54498
									],
									[
										54506,
										54511
									],
									[
										54552,
										54557
									],
									[
										54572,
										54577
									],
									[
										54753,
										54758
									],
									[
										54822,
										54827
									],
									[
										54853,
										54858
									],
									[
										54900,
										54905
									],
									[
										54951,
										54956
									],
									[
										55011,
										55016
									],
									[
										55138,
										55143
									],
									[
										55156,
										55161
									],
									[
										55347,
										55352
									],
									[
										55379,
										55384
									],
									[
										55446,
										55451
									],
									[
										55483,
										55488
									],
									[
										55592,
										55597
									],
									[
										55766,
										55771
									],
									[
										55852,
										55857
									],
									[
										55926,
										55931
									],
									[
										56138,
										56143
									],
									[
										56222,
										56227
									],
									[
										56298,
										56303
									],
									[
										56513,
										56518
									],
									[
										56549,
										56554
									],
									[
										56720,
										56725
									],
									[
										56770,
										56775
									],
									[
										56864,
										56869
									],
									[
										56897,
										56902
									],
									[
										56934,
										56939
									],
									[
										57001,
										57006
									],
									[
										57032,
										57037
									],
									[
										57079,
										57084
									],
									[
										57128,
										57133
									],
									[
										57164,
										57169
									],
									[
										57177,
										57182
									],
									[
										57235,
										57240
									],
									[
										57248,
										57253
									],
									[
										57362,
										57367
									],
									[
										57442,
										57447
									],
									[
										57489,
										57494
									],
									[
										57509,
										57514
									],
									[
										57545,
										57550
									],
									[
										57571,
										57576
									],
									[
										57602,
										57607
									],
									[
										57649,
										57654
									],
									[
										57726,
										57731
									],
									[
										57747,
										57752
									],
									[
										57774,
										57779
									],
									[
										57789,
										57794
									],
									[
										57839,
										57844
									],
									[
										57923,
										57928
									],
									[
										57944,
										57949
									],
									[
										57975,
										57980
									],
									[
										57990,
										57995
									],
									[
										58044,
										58049
									],
									[
										58084,
										58089
									],
									[
										58137,
										58142
									],
									[
										58181,
										58186
									],
									[
										58287,
										58292
									],
									[
										58329,
										58334
									],
									[
										58355,
										58360
									],
									[
										58485,
										58490
									],
									[
										58516,
										58521
									],
									[
										58585,
										58590
									],
									[
										58637,
										58642
									],
									[
										58673,
										58678
									],
									[
										58711,
										58716
									],
									[
										58746,
										58751
									],
									[
										58777,
										58782
									],
									[
										58845,
										58850
									],
									[
										58916,
										58921
									],
									[
										58960,
										58965
									],
									[
										59113,
										59118
									],
									[
										59188,
										59193
									],
									[
										59225,
										59230
									],
									[
										59338,
										59343
									],
									[
										59503,
										59508
									],
									[
										59704,
										59709
									],
									[
										59742,
										59747
									],
									[
										60021,
										60026
									],
									[
										60038,
										60043
									],
									[
										60282,
										60287
									],
									[
										60555,
										60560
									],
									[
										60587,
										60592
									],
									[
										60858,
										60863
									],
									[
										60895,
										60900
									],
									[
										61185,
										61190
									],
									[
										61479,
										61484
									],
									[
										61691,
										61696
									],
									[
										61863,
										61868
									],
									[
										62024,
										62029
									],
									[
										62097,
										62102
									],
									[
										62159,
										62164
									],
									[
										62339,
										62344
									],
									[
										62589,
										62594
									],
									[
										62704,
										62709
									],
									[
										62883,
										62888
									],
									[
										63008,
										63013
									],
									[
										63202,
										63207
									],
									[
										63323,
										63328
									],
									[
										63340,
										63345
									],
									[
										63383,
										63388
									],
									[
										63415,
										63420
									],
									[
										63464,
										63469
									],
									[
										63501,
										63506
									],
									[
										63564,
										63569
									],
									[
										63629,
										63634
									],
									[
										63694,
										63699
									],
									[
										63798,
										63803
									],
									[
										63947,
										63952
									],
									[
										63972,
										63977
									],
									[
										64114,
										64119
									],
									[
										64149,
										64154
									],
									[
										64176,
										64181
									],
									[
										64294,
										64299
									],
									[
										64373,
										64378
									],
									[
										64461,
										64466
									],
									[
										64692,
										64697
									],
									[
										64803,
										64808
									],
									[
										64833,
										64838
									],
									[
										64989,
										64994
									],
									[
										65023,
										65028
									],
									[
										65113,
										65118
									],
									[
										65195,
										65200
									],
									[
										65360,
										65365
									],
									[
										65564,
										65569
									],
									[
										65599,
										65604
									],
									[
										65777,
										65782
									],
									[
										65841,
										65846
									],
									[
										65938,
										65943
									],
									[
										65975,
										65980
									],
									[
										66022,
										66027
									],
									[
										66057,
										66062
									],
									[
										66167,
										66172
									],
									[
										66199,
										66204
									],
									[
										66238,
										66243
									],
									[
										66270,
										66275
									],
									[
										66313,
										66318
									],
									[
										66341,
										66346
									],
									[
										66375,
										66380
									],
									[
										66479,
										66484
									],
									[
										66511,
										66516
									],
									[
										66568,
										66573
									],
									[
										66614,
										66619
									],
									[
										66756,
										66761
									],
									[
										66813,
										66818
									],
									[
										66923,
										66928
									],
									[
										66964,
										66969
									],
									[
										67024,
										67029
									],
									[
										67151,
										67156
									],
									[
										67182,
										67187
									],
									[
										67327,
										67332
									],
									[
										67438,
										67443
									],
									[
										67509,
										67514
									],
									[
										67527,
										67532
									],
									[
										67558,
										67563
									],
									[
										67585,
										67590
									],
									[
										67632,
										67637
									],
									[
										67740,
										67745
									],
									[
										67772,
										67777
									],
									[
										67798,
										67803
									],
									[
										67831,
										67836
									],
									[
										67858,
										67863
									],
									[
										67907,
										67912
									],
									[
										68012,
										68017
									],
									[
										68210,
										68215
									],
									[
										68326,
										68331
									],
									[
										68387,
										68392
									],
									[
										68440,
										68445
									],
									[
										68501,
										68506
									],
									[
										68606,
										68611
									],
									[
										68709,
										68714
									],
									[
										68769,
										68774
									],
									[
										68825,
										68830
									],
									[
										68900,
										68905
									],
									[
										68982,
										68987
									],
									[
										69071,
										69076
									],
									[
										69316,
										69321
									],
									[
										69360,
										69365
									],
									[
										69581,
										69586
									],
									[
										69629,
										69634
									],
									[
										69845,
										69850
									],
									[
										69897,
										69902
									],
									[
										70113,
										70118
									],
									[
										70156,
										70161
									],
									[
										70316,
										70321
									],
									[
										70338,
										70343
									],
									[
										70372,
										70377
									],
									[
										70398,
										70403
									],
									[
										70430,
										70435
									],
									[
										70465,
										70470
									],
									[
										70497,
										70502
									],
									[
										70528,
										70533
									],
									[
										70560,
										70565
									],
									[
										70597,
										70602
									],
									[
										70796,
										70801
									],
									[
										70841,
										70846
									],
									[
										70877,
										70882
									],
									[
										71002,
										71007
									],
									[
										71189,
										71194
									],
									[
										71209,
										71214
									],
									[
										71241,
										71246
									],
									[
										71443,
										71448
									],
									[
										71580,
										71585
									],
									[
										71629,
										71634
									],
									[
										71740,
										71745
									],
									[
										71811,
										71816
									],
									[
										71878,
										71883
									],
									[
										71922,
										71927
									],
									[
										72035,
										72040
									],
									[
										72079,
										72084
									],
									[
										72112,
										72117
									],
									[
										72179,
										72184
									],
									[
										72217,
										72222
									],
									[
										72272,
										72277
									],
									[
										72298,
										72303
									],
									[
										72358,
										72363
									],
									[
										72416,
										72421
									],
									[
										72525,
										72530
									],
									[
										72785,
										72790
									],
									[
										73053,
										73058
									],
									[
										73084,
										73089
									],
									[
										73340,
										73345
									],
									[
										73590,
										73595
									],
									[
										73838,
										73843
									],
									[
										73920,
										73925
									],
									[
										74182,
										74187
									],
									[
										74439,
										74444
									],
									[
										74551,
										74556
									],
									[
										74589,
										74594
									],
									[
										74616,
										74621
									],
									[
										74650,
										74655
									],
									[
										74707,
										74712
									],
									[
										74740,
										74745
									],
									[
										74797,
										74802
									],
									[
										74847,
										74852
									],
									[
										74899,
										74904
									],
									[
										74932,
										74937
									],
									[
										75035,
										75040
									],
									[
										75184,
										75189
									],
									[
										75244,
										75249
									],
									[
										75283,
										75288
									],
									[
										75301,
										75306
									],
									[
										75333,
										75338
									],
									[
										75374,
										75379
									],
									[
										75411,
										75416
									],
									[
										75465,
										75470
									],
									[
										75521,
										75526
									],
									[
										75575,
										75580
									],
									[
										75625,
										75630
									],
									[
										75695,
										75700
									],
									[
										75741,
										75746
									],
									[
										75790,
										75795
									],
									[
										75823,
										75828
									],
									[
										75858,
										75863
									],
									[
										75909,
										75914
									],
									[
										75972,
										75977
									],
									[
										76038,
										76043
									],
									[
										76107,
										76112
									],
									[
										76192,
										76197
									],
									[
										76327,
										76332
									],
									[
										76388,
										76393
									],
									[
										76557,
										76562
									],
									[
										76688,
										76693
									],
									[
										76812,
										76817
									],
									[
										76906,
										76911
									],
									[
										76990,
										76995
									],
									[
										77051,
										77056
									],
									[
										77115,
										77120
									],
									[
										77130,
										77135
									],
									[
										77185,
										77190
									],
									[
										77414,
										77419
									],
									[
										77444,
										77449
									],
									[
										77474,
										77479
									],
									[
										77502,
										77507
									],
									[
										77532,
										77537
									],
									[
										77553,
										77558
									],
									[
										77587,
										77592
									],
									[
										77617,
										77622
									],
									[
										77684,
										77689
									],
									[
										77724,
										77729
									],
									[
										77811,
										77816
									],
									[
										77863,
										77868
									],
									[
										77895,
										77900
									],
									[
										77987,
										77992
									],
									[
										78048,
										78053
									],
									[
										78124,
										78129
									],
									[
										78215,
										78220
									],
									[
										78301,
										78306
									],
									[
										78347,
										78352
									],
									[
										78447,
										78452
									],
									[
										78492,
										78497
									],
									[
										78514,
										78519
									],
									[
										78697,
										78702
									],
									[
										78911,
										78916
									],
									[
										78945,
										78950
									],
									[
										79117,
										79122
									],
									[
										79160,
										79165
									],
									[
										79290,
										79295
									],
									[
										79478,
										79483
									],
									[
										79585,
										79590
									],
									[
										79706,
										79711
									],
									[
										79751,
										79756
									],
									[
										79784,
										79789
									],
									[
										79836,
										79841
									],
									[
										80207,
										80213
									],
									[
										80530,
										80536
									],
									[
										80834,
										80842
									],
									[
										81118,
										81126
									],
									[
										81476,
										81482
									],
									[
										81799,
										81805
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								81478,
								81478
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 11,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 48888.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/fire/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22710,
						"regions":
						{
						},
						"selection":
						[
							[
								13319,
								13334
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10344.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/fire/createGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1310,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/xampp/htdocs/fire/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2453,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/fire/lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6717,
						"regions":
						{
						},
						"selection":
						[
							[
								1508,
								1829
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 510.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/fire/postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2616,
						"regions":
						{
						},
						"selection":
						[
							[
								1034,
								1059
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 318.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/xampp/htdocs/fire/getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 893,
						"regions":
						{
						},
						"selection":
						[
							[
								814,
								826
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/fire/server/baseship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3812,
						"regions":
						{
						},
						"selection":
						[
							[
								444,
								436
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 142.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1835,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								186
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2254,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/xampp/htdocs/fire/server/systems/systems.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2523,
						"regions":
						{
						},
						"selection":
						[
							[
								1720,
								1720
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 790.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1373,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1193
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 982,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.682212581345,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fire.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"table",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\table.php"
			],
			[
				"mov",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\movement.js"
			],
			[
				"tble",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\table.php"
			],
			[
				"adm",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\admin.js"
			],
			[
				"ajax",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\ajax.js"
			],
			[
				"transfer",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\transfer.js"
			],
			[
				"admin",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\admin.js"
			],
			[
				"postgame",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\postGameData.php"
			],
			[
				"sc",
				"D:\\SecureWAMP_Portable\\htdocs\\projectX\\hexagon\\script.js"
			],
			[
				"scrip",
				"D:\\SecureWAMP_Portable\\htdocs\\script.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
