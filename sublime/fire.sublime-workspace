{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inline",
				"inline-block\tdisplay"
			],
			[
				"inlin",
				"inline-block\tdisplay"
			],
			[
				"inl",
				"inline-block\tdisplay"
			],
			[
				"getRem",
				"getRemSpeed"
			],
			[
				"getCrit",
				"getCritModMax"
			],
			[
				"func_get",
				"func_get_args"
			],
			[
				"testFie",
				"testFieldVsAllFields"
			],
			[
				"img",
				"imageId"
			],
			[
				"getBase",
				"getBaseCollisionPct"
			],
			[
				"getBas",
				"getBaseCollisionPct"
			],
			[
				"total",
				"totalDist"
			],
			[
				"getDis",
				"getDist"
			],
			[
				"oP",
				"oPosToCenter"
			],
			[
				"dot_bcb",
				"dot_bcbm"
			],
			[
				"sh",
				"shooterToTarget"
			],
			[
				"shooterto",
				"shooterToIntersect"
			],
			[
				"getDist",
				"getDist2"
			],
			[
				"interse",
				"intersectPoints"
			],
			[
				"inters",
				"intersectPoints"
			],
			[
				"interSec",
				"intersectPoints"
			],
			[
				"intersect",
				"intersect"
			],
			[
				"intersectio",
				"intersectPoint"
			],
			[
				"isDe",
				"isDestroyedThisTurn"
			],
			[
				"isDestroye",
				"isDestroyed"
			],
			[
				"nebula",
				"nebulaAmount"
			],
			[
				"cap",
				"capacityMass"
			],
			[
				"turr",
				"turret"
			],
			[
				"secton",
				"sections"
			],
			[
				"arm",
				"armurMod"
			],
			[
				"Anti",
				"Anti-Proton"
			],
			[
				"imp",
				"impulseGUI"
			],
			[
				"addTo",
				"addTopDamage"
			],
			[
				"sele",
				"selected"
			],
			[
				"back-",
				"background-color\tproperty"
			],
			[
				"movin",
				"movingObstacles"
			],
			[
				"has",
				"hasAutomatedStartMoves"
			],
			[
				"targe",
				"targetPos"
			],
			[
				"combat",
				"combatLogWrapper"
			],
			[
				"canSe",
				"canSetNewCommandUnit"
			],
			[
				"fun",
				"function"
			],
			[
				"doConf",
				"doConfirmSystemLoadout"
			],
			[
				"setPostmo",
				"setPostMovePosition"
			],
			[
				"depth",
				"depthIntoField"
			],
			[
				"colli",
				"collision"
			],
			[
				"ob",
				"obstacleId"
			],
			[
				"pierc",
				"pierceIn"
			],
			[
				"rock",
				"rockSize"
			],
			[
				"obs",
				"obstacleDiv"
			],
			[
				"off",
				"offsetX"
			],
			[
				"allr",
				"allReq"
			],
			[
				"mod",
				"modifier"
			],
			[
				"req",
				"requestJumpOut"
			],
			[
				"baseIMp",
				"baseImpulseCost"
			],
			[
				"play",
				"playerstatus"
			],
			[
				"pr",
				"prototype"
			],
			[
				"text-a",
				"text-align\tproperty"
			],
			[
				"player",
				"playerstatus"
			],
			[
				"Fet",
				"FETCH_ASSOC"
			],
			[
				"getIncoming",
				"getIncomingById"
			],
			[
				"mag",
				"magnitude"
			],
			[
				"ex",
				"extends"
			],
			[
				"positio",
				"doPositionChat"
			],
			[
				"iint",
				"integrityAmount"
			],
			[
				"purh",
				"purchaseId"
			],
			[
				"pur",
				"purchaseId"
			],
			[
				"setPatrol",
				"setPatrolLayout"
			],
			[
				"ap",
				"attempts"
			],
			[
				"position",
				"doPositionLog"
			],
			[
				"toggle",
				"toggleDrawMovePaths"
			],
			[
				"background",
				"background-color\tproperty"
			],
			[
				"bac",
				"background-color\tproperty"
			],
			[
				"addE",
				"addShieldLogEntry"
			],
			[
				"popu",
				"popupEntryConfirm"
			],
			[
				"getF",
				"getFocusSpending"
			],
			[
				"createG",
				"createGameMenu"
			],
			[
				"ships",
				"shipsBought"
			],
			[
				"setUnit",
				"setUnitCenterFocus"
			],
			[
				"Shoo",
				"shooterAngle"
			],
			[
				"shoot",
				"shooterAngle"
			],
			[
				"getDraw",
				"getDrawPos"
			],
			[
				"proto",
				"prototype"
			],
			[
				"launcher",
				"Launcher"
			],
			[
				"reif",
				"reinforce"
			],
			[
				"DBMana",
				"DBManager"
			],
			[
				"le",
				"length"
			],
			[
				"pri",
				"primary"
			],
			[
				"extra",
				"extraPulses"
			],
			[
				"pro",
				"prototype"
			],
			[
				"prt",
				"prototype"
			],
			[
				"lightP",
				"LightPlasmaPulse"
			],
			[
				"text",
				"text-anchor"
			],
			[
				"fighter",
				"fighterDiv"
			],
			[
				"Fe",
				"FETCH_ASSOC"
			],
			[
				"structur",
				"structures"
			],
			[
				"getSystem",
				"getSystemByName"
			],
			[
				"childen",
				"children"
			],
			[
				"getT",
				"getTotalCrewCost"
			],
			[
				"getCrew",
				"getCrewAddCost"
			],
			[
				"shield",
				"shieldDmg"
			],
			[
				"ext",
				"extraPulses"
			],
			[
				"pla",
				"placeholder"
			],
			[
				"text-",
				"text-align"
			],
			[
				"hasUn",
				"getHasUnusedPower"
			],
			[
				"hasU",
				"hasUnusedPower"
			],
			[
				"drawTur",
				"drawTurnShorterningUI"
			],
			[
				"getImp",
				"getImpulseChangeCost"
			],
			[
				"jump",
				"jumpOut"
			],
			[
				"salvo",
				"salvoCtx"
			],
			[
				"salo",
				"salvoCtx"
			],
			[
				"set",
				"setupDogfights"
			],
			[
				"draw",
				"drawShipPreview"
			],
			[
				"shipC",
				"shipCtx"
			],
			[
				"previe",
				"previewCanvas"
			],
			[
				"crea",
				"createElement"
			],
			[
				"han",
				"hangars"
			],
			[
				"hangar",
				"hangarLoadoutDiv"
			],
			[
				"intercept",
				"interceptAnimated"
			],
			[
				"move",
				"movementResolved"
			],
			[
				"getDama",
				"getDamageMod"
			],
			[
				"resolveFi",
				"resolveFireOrders"
			],
			[
				"mov",
				"movementResolved"
			],
			[
				"shi",
				"shipId"
			],
			[
				"create",
				"createShortInfo"
			],
			[
				"getDa",
				"getDamageMod"
			],
			[
				"append",
				"appendChild"
			],
			[
				"struct",
				"structDmg"
			],
			[
				"int",
				"integrity"
			],
			[
				"posI",
				"posIsOnArc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/xampp/htdocs/fire/shared.js",
			"settings":
			{
				"buffer_size": 11540,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/classes.js",
			"settings":
			{
				"buffer_size": 28060,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/classes.php",
			"settings":
			{
				"buffer_size": 8193,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/systems.js",
			"settings":
			{
				"buffer_size": 123524,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/style.css",
			"settings":
			{
				"buffer_size": 34008,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n<?php\n\ninclude_once $_SERVER[\"DOCUMENT_ROOT\"].\"/fire/global.php\";\n\nif (isset($_SESSION[\"userid\"])){\n\t$gameid = $_GET[\"gameid\"];\n\t$playerid = $_SESSION[\"userid\"];\n\n\t$_SESSION[\"gameid\"] = $_GET[\"gameid\"];\n\techo \"<script>var gameid = \".$gameid.\"; var playerid = \".$playerid.\";</script>\";\n\t$dbManager = DBManager::app($gameid);\n\t$game = $dbManager->getGameDetails($gameid);\n\tif (!$game){\n\t\theader(\"Location: lobby.php\");\n\t}\n\n\tif ($game[\"status\"] == \"active\"){\n\t\theader(\"Location: game.php?gameid=\".$game[\"id\"]);\n\t}\n\t$manager = new Manager(0, $playerid);\n\t$players = $dbManager->getPlayersInGame($gameid);\n\techo \"<script>\";\n\techo \"window.players = \".json_encode($players).\";\";\n\techo \"window.factions = \".json_encode($manager->getFactions()).\";\";\n\techo \"window.settings = \".json_encode($game).\";\";\n\techo \"window.userid = \".$playerid.\";\";\n\techo \"</script>\";\n\t$joined = false;\n\t$ready = false;\n\n\t$element = \"<div class='gameSetupStatus'>\";\n\t$element .= \"<table>\";\n\t$element .= \"<tr>\";\n\t$element .= \"<th colSpan=2 style='font-size: 22px;'>\".$game[\"name\"].\"</th>\";\n\t$element .= \"</tr>\";\n\t$element .= \"<tr>\";\n\t$element .= \"<th colSpan=2 style='font-size: 16px;'>\".$game[\"pv\"].\" Initial point value</br>\".$game[\"reinforce\"].\" Reinforcement point value @ turn \".$game[\"reinforceTurn\"].\" - ETA \".$game[\"reinforceETA\"].\"</th>\";\n\t$element .= \"</tr>\";\n\n\t$element .= \"<tr style='height: 10px;'><td colSpan=2></td></tr>\";\n\n\t$element .= \"<tr style='border-bottom: 1px solid white'>\";\n\t$element .= \"<th width='80%'>Player Name</th>\";\n\t$element .= \"<th>Status</th>\";\n\t$element .= \"</tr>\";\n\n\tif (!$players){\n\t\t$element .= \"<tr>\";\n\t\t$element .= \"<td colSpan='2'>No Player ingame yet</td>\";\n\t\t$element .= \"</tr>\";\n\t}\n\telse {\n\t\tforeach ($players as $player){\n\t\t\tif ($player[\"userid\"] == $playerid) {\n\t\t\t\tif ($player[\"status\"] == \"ready\") {\n\t\t\t\t\t$ready = true;\n\t\t\t\t}\n\t\t\t\telse if ($player[\"status\"] == \"joined\") {\n\t\t\t\t\t$joined = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$element .= \"<tr style='border-bottom: 1px solid white'>\";\n\t\t\t$element .= \"<td style='text-align: center'>\".$player[\"username\"].\"</td>\";\n\n\t\t\t$status = $player[\"status\"];\n\t\t\tif ($status == \"ready\"){\n\t\t\t\t$element .= \"<td style='color: black; background-color: lightGreen; text-align: center'>\".$status.\"</td>\";\n\n\t\t\t}\n\t\t\telse if ($status == \"joined\"){\n\t\t\t\t$element .= \"<td style='color: black; background-color: #ffeb3e; text-align: center'>\".$status.\"</td>\";\n\t\t\t}\n\n\t\t\t$element .= \"</tr>\";\n\t\t}\n\t}\n\t$element .= \"<tr style='height: 20px;'><td colSpan=2></td></tr>\";\n\n\tif ($ready){}\n\telse if ($joined){$element .= \"<tr><td colSpan=2><input type='button' value='Leave Game' onclick='leaveGame()'></td></tr>\";}\n\telse {$element .= \"<tr><td colSpan=2><input type='button' onclick='joinGame()' value='Join Game'></td></tr>\";}\n\n\t$element .= \"<tr><td colSpan=2><input type='button' onclick='window.goToLobby()' value='Return to Lobby'></td></tr>\";\t\n\n\t$element .= \"</table></div>\";\n\n\tif ($ready){echo \"<script> window.ready = true;</script>\";}\n\telse if ($joined){echo \"<script> window.joined = true;</script>\";}\n\n}\nelse header(\"Location: index.php\");\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n\t<link rel='stylesheet' href='style.css'/>\n\t<script src=\"jquery-2.1.1.min.js\"></script>\n\t<script src='mathLib.js'></script>\t\n\t<script src='shared.js'></script>\n\t<script src='shipclasses.js'></script>\n\t<script src='systems.js'></script>\n\t<script src='structure.js'></script>\n\t<script src='classes.js'></script>\n\t<script src='mixed.js'></script>\n\t<script src='salvo.js'></script>\n\t<script src='flights.js'></script>\n\t<script src='squadron.js'></script>\n\t<script src='squaddie.js'></script>\n\t<script src='graphics.js'></script>\n\t<script src='cam.js'></script>\n\t<script src='game.js'></script>\n\t<script src='ajax.js'></script>\n</head>\n\t<body style=\"padding: 5px\">\n\t\t<div id=\"popupWrapper\">\n\t\t\t<div class=\"popupText\">\n\t\t\t</div>\n\t\t</div>\n\n\t\t<?php echo $element;?>\n\n\t\t<div class=\"fleetBought\">\n\t\t\t<table id=\"shipsBoughtTable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=5 style=\"font-size: 20px\">\n\t\t\t\t\t\t\tFleet Overview\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th id=\"reinforceFaction\" class=\"disabled\" colSpan=5 style=\"font-size: 14px\">\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr style=\"height: 10px\">\n\t\t\t\t\t\t<td style=\"width: 24px\"></td>\n\t\t\t\t\t\t<td style=\"width: 24px\"></td>\n\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t<td style=\"width: 55px\"></td>\n\t\t\t\t\t\t<td style=\"width: 24px\"></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan=5 id=\"focusGain\">\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=5>\n\t\t\t\t\t\t\t<span id=\"remPV\">\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr style=\"height: 10px\"><th colSpan=5></th></tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=5>\n\t\t\t\t\t\t\t<input type=\"button\" style=\"font-size: 20px\" onclick=\"game.tryConfirmFleet()\" value=\"Confirm Fleet Selection\">\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<div id=\"fleetChoice\">\n\t\t\t<div class=\"factionAvail\"></div>\n\t\t\t<div class=\"factionContentWrapper\"></div>\n\t\t</div>\n\n\n\t\t<div id=\"game\" style=\"position: absolute; top: 350px; left: 525px\">\n\t\t\t<canvas id=\"shipCanvas\" class=\"gameCanvas\" style='border: 1px solid white; z-index: 2'></canvas>\n\t\t\t<canvas id=\"fxCanvas\" class=\"gameCanvas\" style='z-index: 1'></canvas>\n\t\t</div>\n\t\t<div id=\"hangarDiv\" class=\"disabled\">\n\t\t\t<div class=\"header\">\n\t\t\t\tCan store a total tonnage of up to <span id=\"capacity\"></span> kT.\n\t\t\t\t<br>\n\t\t\t\tCan launch up to <span id=\"launchRate\"></span> kTs of units per cycle.\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<span class=\"dedicatedCarrier\">\n\t\t\t\t\tDedicated carrier unit, <span class='yellow'>30 % cost discount</span>.\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<table id=\"hangarTable\">\n\t\t\t</table>\n\t\t\t<div class=\"header\">\n\t\t\t\t<input type=\"button\" value=\"Confirm Loadout\" onclick=\"game.getUnit(aUnit).doConfirmSystemLoadout()\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"weaponDiv\" class=\"disabled\">\n\t\t\t<div class=\"header\">\n\t\t\t\tPick Ammunition for the selected weapon\n\t\t\t</div>\n\t\t\t<table id=\"weaponTable\">\n\t\t\t</table>\n\t\t\t<div class=\"header\">\n\t\t\t\t<input type=\"button\" value=\"Confirm Loadout\" onclick=\"game.getUnit(aUnit).doConfirmSystemLoadout()\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"crewDiv\" class=\"disabled\">\n\t\t\t<div class=\"header\">\n\t\t\t\tAssign experienced officers to this unit\n\t\t\t</div>\n\t\t\t<table id=\"crewTable\">\n\t\t\t</table>\n\t\t\t<div class=\"header\">\n\t\t\t\t<input type=\"button\" value=\"Confirm Training\" onclick=\"game.getUnit(aUnit).doConfirmSystemLoadout()\">\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>\n\n<script>\n\tgraphics.preload();\n\n\t$(document).ready(function(){\n\n\t\t$(\"#popupWrapper\")\n\t\t\t.css(\"left\", 700)\n\t\t\t.css(\"top\", 300)\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\t$(this).hide();\n\t\t\t});\n\n\t\tif (window.ready){\n\t\t\t$(\"#shipsBoughtTable\").hide();\n\t\t\t$(\"#game\").hide();\n\t\t}\n\t\telse if (window.joined){\n\t\t\twindow.turn = new Turn();\n\t\t\twindow.preview = true;\n\t\t\twindow.aUnit = 1;\n\t\t\twindow.res = {x: 200, y: 200};\n\t\t\twindow.game = {\n\t\t\t\tturn: 0,\n\t\t\t \tphase: -2,\n\t\t\t \tpurchases: 1,\n\t\t\t \topenRequest: 0,\n\t\t\t \tcanConfirm: 1,\n\t\t\t \tretrofit: 0,\n\t\t\t\tships: [],\t\t\t\t\n\t\t\t\tshipsBought: [],\n\t\t\t\tuserid: window.userid,\n\t\t\t\tfaction: \"\",\n\t\t\t\tarcRange: res.x/2,\n\t\t\t\tsystem: 0,\n\t\t\t\tfighters: [],\n\t\t\t\tballistics: [],\n\t\t\t\tsettings: window.settings,\n\n\t\t\t\tgetPlayerStatus: function(){\n\t\t\t\t\treturn {morale: 0}\n\t\t\t\t},\n\n\t\t\t\tdoCloneSquaddie: function(data){\n\t\t\t\t\tvar squadron = game.getUnit(aUnit);\n\t\t\t\t\tvar sub = squadron.getSystem(data.systemId);\n\t\t\t\t\tif (squadron.getSlotsUsed() + sub.space > squadron.getMaxSlots()){return;}\n\n\t\t\t\t\tvar copy = initSquaddie(JSON.parse(JSON.stringify(sub)));\n\t\t\t\t\t\tsquadron.index++;\n\t\t\t\t\t\tcopy.id = squadron.index;\n\t\t\t\t\t\tcopy.create();\n\n\t\t\t\t\t\tfor (var i = 0; i < copy.systems.length; i++){\n\t\t\t\t\t\t\tsquadron.index++;\n\t\t\t\t\t\t\tcopy.systems[i].id = squadron.index;\n\t\t\t\t\t\t\tcopy.systems[i].setTotalBuyData();\n\t\t\t\t\t\t\t//$(copy.systems[i].element).find(\".outputMask\").hide();\n\t\t\t\t\t\t}\n\n\t\t\t\t\tthis.finishExpandSquadron(squadron, copy);\n\t\t\t\t},\n\n\t\t\t\trequestSubUnit: function(data){\n\t\t\t\t\tvar unit = game.getUnit(aUnit);\n\t\t\t\t\tif (!unit || !unit.squad){return;}\n\t\t\t\t\tif (game.openRequest){return;}\n\t\t\t\t\tif (unit.getRemainingSlots() < data.space){\n\t\t\t\t\t\tpopup(\"Insufficent slot space remaining</br>\" + $(unit.element).find(\".squadSlots\").html()); return;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar purchase = game.purchases;\n\n\t\t\t\t\tif (game.retrofit){purchase = unit.purchaseId;}\n\n\t\t\t\t\tgame.openRequest = 1;\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\t\turl: \"getGameData.php\",\n\t\t\t\t\t\tdatatype: \"json\",\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\ttype: \"unitdata\",\n\t\t\t\t\t\t\t\tunit: \"squaddie\",\n\t\t\t\t\t\t\t\tpurchases: purchase,\n\t\t\t\t\t\t\t\tindex: unit.index,\n\t\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\tsuccess: game.addUnitToSquadron,\n\t\t\t\t\t\terror: ajax.error,\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\taddUnitToSquadron: function(data){\n\t\t\t\t\tgame.openRequest = 0;\n\t\t\t\t\tvar squadron = game.getUnit(aUnit);\n\t\t\t\t\tvar sub = initSquaddie(JSON.parse(data));\n\t\t\t\t\t\tsub.create();\t\n\t\t\t\t\tsquadron.index = sub.index;\t\n\n\t\t\t\t\tgame.finishExpandSquadron(squadron, sub);\n\t\t\t\t},\n\n\t\t\t\tfinishExpandSquadron: function(squadron, squaddie){\n\t\t\t\t\tsquadron.structures.push(squaddie);\n\t\t\t\t\tsquadron.size = 50 + squadron.structures.length;\n\t\t\t\t\tsquadron.setLayout();\n\t\t\t\t\tsquadron.addSubContainers();\n\t\t\t\t\tsquadron.setStats();\n\t\t\t\t\tsquadron.setSubSystemState();\n\t\t\t\t\tsquadron.updateImage();\n\t\t\t\t\tsquaddie.fillSelfContainer();\n\t\t\t\t\tsquadron.previewSetup();\n\t\t\t\t\tdrawShipPreview();\n\n\t\t\t\t\tsquadron.recalcCommandUpgrades();\n\t\t\t\t\tgame.setUnitTotal(squadron);\n\t\t\t\t},\n\n\t\t\t\ttryConfirmUnitPurchase: function(){\n\t\t\t\t\tvar unit = game.getUnit(aUnit);\n\t\t\t\t\tvar cur = game.getFleetCost();\n\t\t\t\t\tvar add = unit.totalCost;\n\t\t\t\t\tvar max = game.settings.pv;\n\n\t\t\t\t\tif (unit.squad && unit.structures.length < 1){\n\t\t\t\t\t\tpopup(\"A squadron needs to include at least 1 units.\");\n\t\t\t\t\t} else if (cur + add > max){\n\t\t\t\t\t\tpopup(\"You have insufficient point value left\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (unit.hasUnsetupedSystems()){\n\n\t\t\t\t\t}\n\t\t\t\t\telse {this.doConfirmUnitPurchase(unit);}\n\t\t\t\t},\n\n\t\t\t\tdoConfirmUnitPurchase: function(unit){\n\t\t\t\t\tunit.callsign = $(\"#nameWrapper\").find(\"input\").val();\n\t\t\t\t\t$(\"#popupWrapper\").hide();\n\n\t\t\t\t\tif (game.system){\n\t\t\t\t\t\tgame.getUnit(aUnit).doConfirmSystemLoadout();\n\t\t\t\t\t\tgame.setUnitTotal(game.getUnit(aUnit));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.retrofit){\n\t\t\t\t\t\tunit.endRetrofitMode();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tunit.purchaseId = game.purchases;\n\t\t\t\t\t\tgame.shipsBought.push(unit);\n\t\t\t\t\t\tgame.purchases++;\n\n\t\t\t\t\t\tvar tr = $(\"<tr>\")\n\t\t\t\t\t\t\t.addClass(\"purchasedUnit\")\n\t\t\t\t\t\t\t.data(\"purchaseId\", game.shipsBought[game.shipsBought.length-1].purchaseId)\n\t\t\t\t\t\t\t.contextmenu(function(e){\n\t\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.append($(\"<img>\")\n\t\t\t\t\t\t\t\t\t.addClass(\"size20\").attr(\"src\", \"varIcons/cmd.png\").hide()))\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.append($(\"<img>\")\n\t\t\t\t\t\t\t\t\t.addClass(\"size20\").attr(\"src\", \"varIcons/retrofit.png\")\n\t\t\t\t\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t\t\t\t\tgame.getPurchasedUnit($(this).parent().parent().data(\"purchaseId\")).doretrofit();\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t\t\t\t\t$(this).toggleClass(\"hover\")\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.html(unit.getPurchaseHeader(unit))\n\t\t\t\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t\t\t\tgame.setAsCommand($(this).parent().data(\"purchaseId\"));\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.append($(\"<td>\").html(unit.totalCost))\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.append($(\"<img>\")\n\t\t\t\t\t\t\t\t\t.addClass(\"size20\").attr(\"src\", \"varIcons/undo.png\")\n\t\t\t\t\t\t\t\t\t.click(function(e){\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); e.stopPropagation();\n\t\t\t\t\t\t\t\t\t\tgame.removeUnit($(this).parent().parent().data(\"purchaseId\"));\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t\t\t\t\t$(this).toggleClass(\"hover\")\n\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\tgame.shipsBought[game.shipsBought.length-1].tr = tr;\n\t\t\t\t\t\t$(\"#shipsBoughtTable tr\").eq(-4).before(tr);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#remPoints\").html()\n\t\t\t\t\t$(\".shipDiv\").remove();\n\t\t\t\t\tgame.setRemPV()\n\t\t\t\t\twindow.shipCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\t\twindow.fxCtx.clearRect(0, 0, res.x, res.y);\n\t\t\t\t\t\n\t\t\t\t\t$(\"#hangarTable\").html(\"\");\n\t\t\t\t\tgame.setReinforceFaction(unit);\n\t\t\t\t\taUnit = 0;\n\t\t\t\t\tgame.ships[0] = undefined;\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tgetPurchasedUnit: function(purchaseId){\n\t\t\t\t\tfor (var i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tif (game.shipsBought[i].purchaseId == purchaseId){\n\t\t\t\t\t\t\treturn game.shipsBought[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tremoveUnit: function(purchaseId){\n\t\t\t\t\tif (game.retrofit == purchaseId){\n\t\t\t\t\t\tgame.retrofit = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = game.shipsBought.length-1; i >= 0; i--){\n\t\t\t\t\t\tif (game.shipsBought[i].purchaseId == purchaseId){\n\t\t\t\t\t\t\t$(game.shipsBought[i].tr).remove();\n\t\t\t\t\t\t\tgame.shipsBought.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($(\".shipDiv\").data(\"shipId\") == purchaseId){\n\t\t\t\t\t\t$(\".shipDiv\").remove();\n\t\t\t\t\t}\n\n\t\t\t\t\tgame.setRemPV();\n\t\t\t\t\tgame.setFocusGain();\n\t\t\t\t\t$(\"#popupWrapper\").hide();\n\t\t\t\t},\n\n\t\t\t\ttryConfirmFleet: function(){\n\t\t\t\t\tif (!game.shipsBought.length){\n\t\t\t\t\t\tpopup(\"Please add units to your fleet.\")\n\t\t\t\t\t}\n\t\t\t\t\telse if (!game.hasCommandUnit()){\n\t\t\t\t\t\tpopup(\"Please select a unit to serve as Fleet Command.</br>(Left click one of your purchased units)\");\n\t\t\t\t\t} else if (!game.hasReinforceFaction()){\t\t\t\n\t\t\t\t\t\tpopup(\"Please select a faction to receive reinforcements from.</br>(Right-click on the faction names on the left)\");\n\t\t\t\t\t}\n\t\t\t\t\telse popup(\"Are you absolutly sure you want to confirm your fleet setup ?</br>(Right click this to cancel)</br></br><input type='button' class='popupEntryConfirm' onclick='game.doConfirmFleet()' value='Yes, im sure'>\");\n\t\t\t\t},\n\n\t\t\t\tdoConfirmFleet: function(){\n\t\t\t\t\tif  (!this.canConfirm){return;}\n\t\t\t\t\tthis.canConfirm = 0;\n\t\t\t\t\tvar data = [];\n\n\t\t\t\t\tfor (var i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tgame.shipsBought[i].tr = undefined;\n\n\t\t\t\t\t\tvar unit = {\n\t\t\t\t\t\t\ttype: game.shipsBought[i].getUnitClass(),\n\t\t\t\t\t\t\tname:game.shipsBought[i].getUnitName(),\n\t\t\t\t\t\t\tcommand: game.shipsBought[i].command,\n\t\t\t\t\t\t\tcallsign: game.shipsBought[i].callsign,\n\t\t\t\t\t\t\tfaction: game.shipsBought[i].faction,\n\t\t\t\t\t\t\ttotalCost: game.shipsBought[i].totalCost,\n\t\t\t\t\t\t\tmoraleCost: game.shipsBought[i].moraleCost,\n\t\t\t\t\t\t\tupgrades: game.shipsBought[i].getAllUpgrades(),\n\t\t\t\t\t\t\tturn: 1,\n\t\t\t\t\t\t\teta: 0,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push(unit);\n\t\t\t\t\t}\n\n\t\t\t\t\tajax.confirmFleetPurchase(playerid, gameid, data, redirect);\n\t\t\t\t},\n\n\t\t\t\tsetAsCommand: function(purchaseId){\n\t\t\t\t\tfor (let i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tif (game.shipsBought[i].command){\n\t\t\t\t\t\t\tgame.shipsBought[i].command = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tif (game.shipsBought[i].purchaseId == purchaseId){\n\t\t\t\t\t\t\tgame.shipsBought[i].command = 1;\n\t\t\t\t\t\t\t$(game.shipsBought[i].tr).find(\"td\").first().find(\"img\").show();\n\t\t\t\t\t\t} else $(game.shipsBought[i].tr).find(\"td\").first().find(\"img\").hide();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setFocusGain();\n\t\t\t\t},\n\n\t\t\t\tgetCommandUnit: function(){\n\t\t\t\t\tfor (let i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tif (game.shipsBought[i].command){return game.shipsBought[i];}\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t},\n\n\t\t\t\tsetRemPV: function(){\n\t\t\t\t\t$(\"#remPV\").html(\" (\" + (game.settings.pv - this.getFleetCost()) + \" points left)\");\n\t\t\t\t},\n\n\t\t\t\tsetFocusGain: function(){\n\t\t\t\t\tvar unit = this.getCommandUnit();\n\t\t\t\t\tif (unit){\n\t\t\t\t\t\tvar gain = this.getCommandUnit().getFocusIfCommand();\n\t\t\t\t\t\t$(\"#focusGain\").html(\"Focus: \" + (unit.baseFocusRate + unit.modFocusRate) + \" %  / \" + gain + \" points per Turn\");\n\t\t\t\t\t}\n\t\t\t\t\telse $(\"#focusGain\").html(\"\");\n\t\t\t\t},\n\n\t\t\t\tgetSampleSubUnit: function(name){\n\t\t\t\t\tfor (let i = 0; i < this.fighters.length; i++){\n\t\t\t\t\t\tif (this.fighters[i].name == name){return this.fighters[i];}\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < this.ballistics.length; i++){\n\t\t\t\t\t\tif (this.ballistics[i].name == name){return this.ballistics[i];}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tgetUnit: function(id){\n\t\t\t\t\tfor (var i = 0; i < this.shipsBought.length; i++){\n\t\t\t\t\t\tif (this.shipsBought[i].id == id){\n\t\t\t\t\t\t\treturn this.shipsBought[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this.ships[0];\n\t\t\t\t},\n\n\t\t\t\tappendSysDiv: function($element, e){\n\t\t\t\t\t$(document.body).append($element);\n\t\t\t\t\tthis.showHoverElement($element, e);\n\t\t\t\t},\n\n\t\t\t\tshowHoverElement: function($element, e){\n\t\t\t\t\tvar x = e.clientX - 90;\n\t\t\t\t\tvar y = e.clientY + 50;\n\t\t\t\t\t$element.css(\"left\", x).css(\"top\", y).show();\n\t\t\t\t},\n\n\t\t\t\thideSysDiv: function(){\n\t\t\t\t\t$(\"#sysDiv\").remove();\n\t\t\t\t},\n\n\t\t\t\tsetReinforceFaction: function(unit){\n\t\t\t\t\tif (game.faction != \"\"){return;}\n\n\t\t\t\t\tif (unit.ship){game.faction = unit.faction;}\n\t\t\t\t\telse {game.faction = unit.structures[0].faction;}\n\t\t\t\t\t$(\"#reinforceFaction\").removeClass(\"disabled\").html(game.faction);\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tgetFleetCost: function(){\n\t\t\t\t\t//return this.shipsBought.map(x => x.value).reduce((l,r) => l+r, 0);\n\t\t\t\t\tvar cost = 0;\n\t\t\t\t\tfor (var i = 0; i < game.shipsBought.length; i++){\n\t\t\t\t\t\tcost += game.shipsBought[i].totalCost;\n\t\t\t\t\t\tif (game.retrofit == game.shipsBought[i].id){\n\t\t\t\t\t\t\tconsole.log(\"retrofit\");\n\t\t\t\t\t\t\tcost -= game.shipsBought[i].totalCost;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn cost;\n\t\t\t\t},\n\n\t\t\t\thasReinforceFaction: function(){\n\t\t\t\t\tif (game.faction.length > 2){return true;}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\thasCommandUnit: function(){\n\t\t\t\t\tfor (var i = 0; i < window.game.shipsBought.length; i++){\n\t\t\t\t\t\tif (game.shipsBought[i].command){return true;}\n\t\t\t\t\t} return false;\n\t\t\t\t},\n\n\t\t\t\tsetUnitTotal: function(unit){\n\n\t\t\t\t\tif (unit.squad){unit.setSlotUsage();}\n\n\t\t\t\t\t\n\t\t\t\t\tvar table = document.getElementById(\"totalShipCost\");\n\t\t\t\t\t\ttable.innerHTML = \"\";\n\n\t\t\t\t\tunit.upgrades = [];\n\t\t\t\t\tunit.setBuyData();\n\n\t\t\t\t\tvar tr = table.insertRow(-1);\n\t\t\t\t\t\ttr.insertCell(-1).innerHTML = \"<th>Base Unit Cost</th>\";\n\t\t\t\t\t\ttr.insertCell(-1).innerHTML = unit.cost;\n\n\n\t\t\t\t\t$(table)\n\t\t\t\t\t\t.append(unit.getBuyTableData(table))\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t$(\"<tr>\")\n\t\t\t\t\t\t\t.append($(\"<th>\").html(\"Total Unit Cost\").css(\"font-size\", 20))\n\t\t\t\t\t\t\t.append($(\"<th>\").html(unit.totalCost).addClass(\"yellow\").css(\"font-size\", 20)))\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t$(\"<tr>\")\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.attr(\"colSpan\", 2)\n\t\t\t\t\t\t\t\t.append($(\"<input>\")\n\t\t\t\t\t\t\t\t\t.attr(\"type\", \"button\")\n\t\t\t\t\t\t\t\t\t.attr(\"value\", \"Confirm Unit Setup\")\n\t\t\t\t\t\t\t\t\t.click(function(){\n\t\t\t\t\t\t\t\t\t\tgame.tryConfirmUnitPurchase();\n\t\t\t\t\t\t\t\t\t}))))\n\n\t\t\t\t},\n\n\t\t\t\tbuildNotesList: function(data, t){\n\t\t\t\t\tvar div = $(\"<div>\").addClass(\"factionSpecialWrapper\");\n\n\t\t\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\t\t\tdiv.append($(\"<div>\").addClass(\"factionSpecial\")\n\t\t\t\t\t\t\t.append($(\"<div>\").html(data[i][0]))\n\t\t\t\t\t\t\t.append($(\"<div>\").html(data[i][1])))\n\t\t\t\t\t}\n\n\t\t\t\t\t$(t).append(div);\n\t\t\t\t},\n\n\t\t\t\tbuildFactionUnitHeader: function(ele){\n\t\t\t\t\tele.append(\n\t\t\t\t\t\t$(\"<table>\")\n\t\t\t\t\t\t.append($(\"<thead>\")\n\t\t\t\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t\t\t\t.append($(\"<th>\").css(\"width\", 90).html(\"Class\"))\n\t\t\t\t\t\t\t\t.append($(\"<th>\").html(\"\"))\n\t\t\t\t\t\t\t\t.append($(\"<th>\").css(\"width\", 80).html(\"Turning\"))\n\t\t\t\t\t\t\t\t.append($(\"<th>\").css(\"width\", 80).html(\"Sensor\"))\n\t\t\t\t\t\t\t\t.append($(\"<th>\").css(\"width\", 50).html(\"Cost\"))\n\t\t\t\t\t\t\t\t.append($(\"<th>\").html(\"\")\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append($(\"<tbody>\"))\n\t\t\t\t\t)\n\t\t\t\t},\n\n\t\t\t\tbuildShipList: function(data, t){\n\t\t\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\t\t\t$(t).append(\n\t\t\t\t\t\t\t$(\"<tr>\")\n\t\t\t\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t\t\t\t$(this).toggleClass(\"highlight\");\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"display\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(\"\"))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"ep\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"ew\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"value\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t\t.append($(\"<input>\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"type\", \"button\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"value\", \"Select\")\n\t\t\t\t\t\t\t\t\t\t.data(\"name\", data[i][\"name\"])\n\t\t\t\t\t\t\t\t\t\t.data(\"value\", data[i][\"value\"])\n\t\t\t\t\t\t\t\t\t\t.click(function(){requestBaseUnitData($(this).data());})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tbuildSquadList: function(data, t){\n\t\t\t\t\t$(t).append(\n\t\t\t\t\t\t$(\"<tr>\").append($(\"<td>\").css(\"height\", 10).attr(\"colSpan\", 5)))\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t$(\"<tr>\")\n\t\t\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t\t\t$(this).toggleClass(\"highlight\");\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.css(\"border-top\", \"1px solid white\")\n\t\t\t\t\t\t\t.css(\"border-bottom\", \"1px solid white\")\n\t\t\t\t\t\t\t.append($(\"<td>\").html(\"Squadron\"))\n\t\t\t\t\t\t\t.append($(\"<td>\").addClass(\"squadron\")\n\t\t\t\t\t\t\t\t.attr(\"colSpan\", 4))\n\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t.append($(\"<input>\")\n\t\t\t\t\t\t\t\t\t.attr(\"type\", \"button\")\n\t\t\t\t\t\t\t\t\t.attr(\"value\", \"Select\")\n\t\t\t\t\t\t\t\t\t.data(\"name\", \"Squadron\")\n\t\t\t\t\t\t\t\t\t.data(\"value\", 0)\n\t\t\t\t\t\t\t\t\t.click(function(){requestBaseUnitData($(this).data());})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\n\t\t\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\t\t\t$(t).append(\n\t\t\t\t\t\t\t$(\"<tr>\")\n\t\t\t\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t\t\t\t$(this).toggleClass(\"highlight\");\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"name\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"space\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"ep\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"ew\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\").html(data[i][\"value\"]))\n\t\t\t\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t\t\t\t.append($(\"<input>\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"type\", \"button\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"value\", \"Select\")\n\t\t\t\t\t\t\t\t\t\t.data(\"name\", data[i][\"name\"])\n\t\t\t\t\t\t\t\t\t\t.data(\"value\", data[i][\"value\"])\n\t\t\t\t\t\t\t\t\t\t.data(\"space\", data[i][\"space\"])\n\t\t\t\t\t\t\t\t\t\t.click(function(){game.requestSubUnit($(this).data())})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tbuildFighterList: function(data, t){\n\t\t\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\t\t\tvar fighter = initFighter(data[i]);\n\t\t\t\t\t\tthis.fighters.push(fighter);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbuildBallisticList: function(data, t){\n\t\t\t\t\tfor (var i = 0; i < data.length; i++){\n\t\t\t\t\t\tvar ballistic = initBallistic(data[i]);\n\t\t\t\t\t\tthis.ballistics.push(ballistic);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinitPreviewCanvas();\n\t\t\tinitFactionAvail();\n\t\t} else $(\"#game\").hide();\n\t})\n\n\tfunction initFactionAvail(){\n\t\tconsole.log(\"initFactionAvail\");\n\t\tvar icons = [graphics.images.earth, graphics.images.centauri, graphics.images.minbari, graphics.images.narn, graphics.images.vree];\n\t\twindow.isset = [];\n\n\t\tfor (var i = 0; i < factions.length; i++){\n\t\t\tisset[i] = 0;\n\t\t\t$(\".factionAvail\")\n\t\t\t\t.append($(\"<div>\")\n\t\t\t\t\t.addClass(\"factionOption\")\n\t\t\t\t\t.data(\"faction\", i)\n\t\t\t\t\t.hover(function(){\n\t\t\t\t\t\t$(this).toggleClass(\"highlight\");\n\t\t\t\t\t})\n\t\t\t\t\t.click(function(){\n\t\t\t\t\t\tshowFactionData($(this).data(\"faction\"))\n\t\t\t\t\t})\n\t\t\t\t\t.append($(icons[i])))\n\t\t}\n\n\t\tfor (var i = 0; i < factions.length; i++){\n\t\t\t$(\".factionContentWrapper\")\n\t\t\t.append($(\"<div>\")\n\t\t\t\t.hide()\n\t\t\t\t.addClass(\"factionWrapper\" + i)\n\t\t\t\t.append($(\"<div>\")\n\t\t\t\t\t.html(factions[i])\n\t\t\t\t\t.addClass(\"factionName\"))\n\t\t\t\t.append($(\"<div>\")\n\t\t\t\t\t.addClass(\"factionContent\")))\n\n\t\t}\n\t}\n\n\tfunction requestBaseUnitData(data){\n\t\t//console.log(\"requestBaseUnitData\");\n\t\tif (game.retrofit){$(game.getUnit(game.retrofit).tr).removeClass(\"selected\");}\n\t\tgame.retrofit = 0;\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"getGameData.php\",\n\t\t\tdatatype: \"json\",\n\t\t\tdata: {\n\t\t\t\t\ttype: \"unitdata\",\n\t\t\t\t\tunit: \"ship\",\n\t\t\t\t\tpurchases: game.purchases,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\t},\n\t\t\tsuccess: prepShowShipDiv,\n\t\t\terror: ajax.error,\n\t\t});\n\t}\n\n\tfunction prepShowShipDiv(data){\n\t\t$(\".shipDiv\").remove();\n\t\t$(\"#popupWrapper\").hide()\n\t\t$(\"#hangarDiv\").addClass(\"disabled\");\n\t\t$(\"#weaponDiv\").addClass(\"disabled\");\n\t\t$(\"#crewDiv\").addClass(\"disabled\");\n\t\t$(\"#hangarTable\").html(\"\");\n\n\t\tvar ship = window.initUnit(JSON.parse(data));\n\t\t\tgame.ships[0] = ship;\n\t\t\tgame.system = 0;\n\n\t\t\tship.actions.push(new Move(-1, ship.id, 0, \"deploy\", 0, 0, res.x/2, res.y/2, -90, -90, 0, 0, 1, 1, 1));\n\t\t\tship.setUnitState();\n\t\t\tship.setSubSystemState();\n\t\t\tship.create();\n\t\t\tship.setImage();\n\t\t\tship.createBaseDiv();\n\t\t\tship.previewSetup();\n\n\t\tdrawShipPreview();\n\t\tdoShowShipDiv(ship);\n\t}\n\n\tfunction doShowShipDiv(unit){\n\t\tif (unit.squad){$(unit.element).find(\".ep\").html(\"0 / 0\").end().find(\".profile\").html(\"\");}\n\t\taUnit = unit.id;\n\n\t\t$(\"#game\").show();\n\t\t$(unit.element)\n\t\t\t//.css(\"left\", \"450px\").css(\"top\", Math.max(240, $(\".fleetBought\").height()+30))\n\t\t\t.css(\"left\", 850).css(\"top\", 5)\n\t\t\t.removeClass(\"disabled\")\n\t\t\t.find(\".structContainer\").show();\n\n\t\taddNamingDiv(unit);\n\t\taddSquadronSlotsDiv(unit);\n\t\taddCostDiv(unit);\n\t\tgame.setUnitTotal(unit);\n\n\t}\n\n\tfunction addNamingDiv(unit){\n\t\tvar callsign = unit.callsign;\n\n\t\t$(unit.element).append(\n\t\t\t$($(\"<div>\")\n\t\t\t.attr(\"id\", \"nameWrapper\")\n\t\t\t.append($(\"<table>\")\n\t\t\t\t.append($(\"<tr>\")\n\t\t\t\t\t.append($(\"<td>\").css(\"width\", 60).html(\"Name: \"))\n\t\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t\t.append($(\"<input>\").attr(\"type\", \"text\").prop(\"value\", callsign).click(function(e){e.stopPropagation();})))))))\n\t}\n\n\tfunction addSquadronSlotsDiv(unit){\n\t\tif (!unit.squad){return;}\n\n\t\t$(unit.element)\n\t\t\t.prepend($(\"<div>\")\n\t\t\t\t.addClass(\"squadSlots\"))\n\t\tunit.setSlotUsage();\n\t}\n\n\tfunction addCostDiv(unit){\n\t\t$(unit.element).append($(\"<div>\").css(\"border\", \"1px solid white\").append($(\"<table>\").attr(\"id\", \"totalShipCost\")))\n\t}\n\n\tfunction initPreviewCanvas(){\n\t\tvar c = document.getElementsByTagName(\"canvas\");\n\t\tfor (let i = 0; i < c.length; i++){\n\t\t\tc[i].width = res.x;\n\t\t\tc[i].height = res.y;\n\t\t\tc[i].style.width = res.x;\n\t\t\tc[i].style.height = res.y;\n\t\t}\n\n\t\twindow.fxCanvas = document.getElementById(\"fxCanvas\");\n\t\twindow.fxCtx = fxCanvas.getContext(\"2d\");\n\t\twindow.fxCanvas.style.opacity = 0.4;\n\t\twindow.shipCanvas = document.getElementById(\"shipCanvas\");\n\t\twindow.shipCtx = shipCanvas.getContext(\"2d\");\n\t}\n\n\tfunction drawShipPreview(){\n\t\tvar unit = game.getUnit(aUnit);\n\t\tvar size = shipCanvas.width/4;\n\t\t//if (unit.squad && unit.structures.length > 2){size *= 1.25;}\n\n\t\twindow.shipCtx.clearRect(0, 0, res.x, res.y);\n\t\twindow.shipCtx.save();\n\t\twindow.shipCtx.translate(res.x/2, res.y/2);\n\t\twindow.shipCtx.rotate(-90*(Math.PI/180));\n\t\twindow.shipCtx.drawImage(unit.getBaseImage(), -size, -size, size*2, size*2);\n\t\twindow.shipCtx.restore();\n\t}\n\n\tfunction requestFactionData(i, callback){\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"getGameData.php\",\n\t\t\tdatatype: \"json\",\n\t\t\tdata: {\n\t\t\t\t\ttype: \"factiondata\",\n\t\t\t\t\tfaction: factions[i],\n\t\t\t\t\t},\n\t\t\tsuccess: function(data){callback(i, data)},\n\t\t\terror: ajax.error,\n\t\t});\n\t}\n\n\tfunction showFactionData(i){\n\t\tif (isset[i]){\n\t\t\tvar ele = $(\".factionContentWrapper .factionWrapper\" + i);\n\t\t\tif (ele.is(\":visible\")){ele.hide(); return;}\n\n\t\t\t$(\".factionContentWrapper\").children().each(function(){\n\t\t\t\t$(this).hide();\n\t\t\t})\n\t\t\tele.show();\n\t\t}\n\t\telse requestFactionData(i, buildUnitList);\n\t}\n\n\tfunction buildUnitList(i, data){\n\t\tconsole.log(\"buildUnitList\");\n\t\tdata = JSON.parse(data);\n\n\t\twindow.isset[i] = 1;\n\t\tdiv = $(\".factionContentWrapper .factionWrapper\" + i + \" .factionContent\");\n\n\t\tgame.buildNotesList(data[0], div);\n\t\tgame.buildFactionUnitHeader(div);\n\n\t\tvar tbody = div.find(\"table tbody\");\n\t\tgame.buildShipList(data[1], tbody);\n\t\tgame.buildSquadList(data[2], tbody);\n\t\tgame.buildFighterList(data[3], tbody);\n\t\tgame.buildBallisticList(data[4], tbody);\n\n\t\tshowFactionData(i);\n\t}\n\n\n\n\n\tfunction joinGame(){\n\t\tconsole.log(\"joinGame\");\n\t\tajax.joinGame(playerid, gameid, refresh);\n\t}\n\n\tfunction leaveGame(){\n\t\tconsole.log(\"leaveGame\");\n\t\tajax.leaveGame(playerid, gameid, window.goToLobby);\n\t}\n\n</script>",
			"file": "/C/xampp/htdocs/fire/gameSetup.php",
			"file_size": 28006,
			"file_write_time": 132125981499562948,
			"settings":
			{
				"buffer_size": 27047,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 107 files for \"endre\"\n\nC:\\xampp\\htdocs\\fire\\gameSetup.php:\n  359  \n  360  \t\t\t\t\tif (this.retrofit){\n  361: \t\t\t\t\t\tunit.endretrofitMode();\n  362  \t\t\t\t\t}\n  363  \t\t\t\t\telse {\n\nC:\\xampp\\htdocs\\fire\\shipclasses.js:\n  100  \tconsole.log(this);\n  101  \tif (game.retrofit){\n  102: \t\tgame.getUnit(game.retrofit).endretrofitMode();\n  103  \t}\n  104  \n  ...\n  116  }\n  117  \n  118: Ship.prototype.endretrofitMode = function(){\n  119  \t$(this.tr).removeClass(\"selected\");\n  120  \n\n3 matches across 2 files\n\n\nSearching 17 files for \"debug(\"\n\n0 matches\n\nSearching 17 files for \"debug\"\nSearching 17 files for \"debug\"\n\n0 matches",
			"settings":
			{
				"buffer_size": 617,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/ajax.js",
			"settings":
			{
				"buffer_size": 10313,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/tethys.php",
			"settings":
			{
				"buffer_size": 777,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/shokos.php",
			"settings":
			{
				"buffer_size": 726,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/crius.php",
			"settings":
			{
				"buffer_size": 1132,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/game.php",
			"settings":
			{
				"buffer_size": 12608,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/game.js",
			"settings":
			{
				"buffer_size": 129903,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/obstacle.js",
			"settings":
			{
				"buffer_size": 15033,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/Xonn.php",
			"settings":
			{
				"buffer_size": 5816,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/system.php",
			"settings":
			{
				"buffer_size": 7024,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/graphics.js",
			"settings":
			{
				"buffer_size": 20343,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/math.php",
			"settings":
			{
				"buffer_size": 8706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/mathLib.js",
			"settings":
			{
				"buffer_size": 10598,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/cam.js",
			"settings":
			{
				"buffer_size": 3032,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/script.js",
			"settings":
			{
				"buffer_size": 15488,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/flight.php",
			"settings":
			{
				"buffer_size": 4549,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/area.php",
			"settings":
			{
				"buffer_size": 3391,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/hermes.php",
			"settings":
			{
				"buffer_size": 854,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/squaddie.js",
			"settings":
			{
				"buffer_size": 19028,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/dmgcalc.php",
			"settings":
			{
				"buffer_size": 24721,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/dbManager.php",
			"settings":
			{
				"buffer_size": 69159,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/manager.php",
			"settings":
			{
				"buffer_size": 71862,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/mixed.js",
			"settings":
			{
				"buffer_size": 19337,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/postGameData.php",
			"settings":
			{
				"buffer_size": 4012,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/debug.php",
			"settings":
			{
				"buffer_size": 1115,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/lobby.php",
			"settings":
			{
				"buffer_size": 12662,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/squadron.php",
			"settings":
			{
				"buffer_size": 9962,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/squadbuilder.php",
			"settings":
			{
				"buffer_size": 5063,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/squadron.js",
			"settings":
			{
				"buffer_size": 28364,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/dual.php",
			"settings":
			{
				"buffer_size": 2991,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "function Ship(data){\n\t//id, name, x, y, facing, faction, mass, cost, profile, size, userid, available, baseHitChance, baseImpulse\n\n\tthis.id = data.id;\n\tthis.name = data.name;\n\tthis.callsign = data.callsign;\n\tthis.display = data.display;\n\tthis.notes = data.notes;\n\tthis.x = data.x;\n\tthis.y = data.y;\n\tthis.heading = data.heading;\n\tthis.facing = data.facing;\n\tthis.faction = data.faction;\n\tthis.mass = data.mass;\n\tthis.profile = data.profile;\n\tthis.cost = data.cost;\n\tthis.totalCost = data.totalCost;\n\tthis.moraleCost = data.moraleCost;\n\tthis.size = data.size * 0.7;\n\tthis.index = data.index;\n\tthis.userid = data.userid;\n\tthis.available = data.available;\n\tthis.withdraw = data.withdraw;\n\tthis.manual = data.manual;\n\tthis.baseHitChance = data.baseHitChance;\n\tthis.baseImpulse = data.baseImpulse;\n\tthis.traverse = data.traverse;\n\tthis.status = data.status;\n\tthis.rolling = data.rolling;\n\tthis.rolled = data.rolled;\n\tthis.flipping = data.flipping;\n\tthis.flipped = data.flipped;\n\tthis.actions = [];\n\tthis.morale = data.morale;\n\tthis.baseFocusRate = data.baseFocusRate;\n\tthis.modFocusRate = data.modFocusRate;\n\tthis.critEffects = data.critEffects;\n\tthis.carrier = data.carrier;\n\tthis.cc = [];\n\tthis.upgrades = [];\n\tthis.stringHitChance = \"\";\n\n\tthis.slipAngle = data.slipAngle;\n\tthis.turnAngle = data.turnAngle;\n\tthis.turnStep = data.turnStep;\n\tthis.baseTurnDelay = data.baseTurnDelay;\n\tthis.baseImpulseCost = data.baseImpulseCost;\n\tthis.curImp = data.curImp;\n\tthis.remImp = data.remImp;\n\tthis.remDelay = data.remDelay;\n\n\tthis.turnAngles = {};\n\tthis.moveAngles = {};\n\n\tthis.blocks = [];\n\tthis.collisions = [];\n\n\tthis.ship = data.ship;\n\tthis.flight = data.flight;\n\tthis.salvo = data.salvo;\n\tthis.squad = data.squad;\n\tthis.obstacle = data.obstacle;\n\tthis.focus= data.move;\n\tthis.command = data.command;\n\tthis.focus = data.focus;\n\n\tthis.friendly = 0;\n\tthis.deployed = 0;\n\tthis.isReady = 0;\n\tthis.drawFacing = 0;\n\tthis.drawX = 0;\n\tthis.drawY = 0;\n\tthis.toAnimate = 0;\n\tthis.isOffset = 0;\n\n\tthis.highlight = false;\n\tthis.destroyed = false;\n\tthis.disabled = data.disabled;\n\tthis.selected = false;\n\tthis.element;\n\n\tthis.hitTable;\n\tthis.img;\n\tthis.primary = [];\n\tthis.structures = [];\n\tthis.drawImg;\n\tthis.deployAnim = [0, 0];\n\tthis.doDraw = 1;\n\n\tfor (var i = 0; i < data.actions.length; i++){\n\t\tthis.actions.push(new Move(\n\t\t\tdata.actions[i].id, data.actions[i].unitid, data.actions[i].turn, data.actions[i].type, data.actions[i].forced, \n\t\t\tdata.actions[i].dist, data.actions[i].x, data.actions[i].y, data.actions[i].h, data.actions[i].f, \n\t\t\tdata.actions[i].delay, data.actions[i].cost, data.actions[i].costmod, data.actions[i].manual, data.actions[i].resolved\n\t\t));\n\t}\n}\n\nShip.prototype.doretrofit = function(){\n\tconsole.log(this);\n\tif (game.retrofit){\n\t\tgame.getUnit(game.retrofit).endRetrofitMode();\n\t}\n\n\tgame.retrofit = this.id;\n\t$(this.tr).addClass(\"selected\");\n\t$(\".shipDiv\").remove();\n\tif (this.squad){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tthis.structures[i].create();\n\t\t}\n\t}\n\tthis.createBaseDiv();\n\tthis.previewSetup();\n\tdoShowShipDiv(this);\n}\n\nShip.prototype.endRetrofitMode = function(){\n\t$(this.tr).removeClass(\"selected\");\n\n\tif (game.system){\n\t\tthis.doConfirmSystemLoadout();\n\t}\n\n\tvar unit = this;\n\t$(unit.tr).removeClass(\"selected\").find(\"td\").each(function(i){\n\t\tif (i == 2){$(this).html(unit.getPurchaseHeader());}\n\t\telse if (i == 3){$(this).html(unit.totalCost);}\n\t})\n\n\tgame.retrofit = 0;\n},\n\nShip.prototype.getFiringPosition = function(){\n\treturn new Point(\n\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t)\n}\n\nShip.prototype.getTargettingPos = function(){\n\treturn new Point(\n\t\tthis.x + range(size * 0.3 * -1, size * 0.3),\n\t\tthis.y + range(size * 0.3 * -1, size * 0.3)\n\t)\t\t\n}\n\nShip.prototype.getTurnEndPosition = function(){\n\treturn this.actions[this.actions.length-1];\n}\n\nShip.prototype.getAllUpgrades = function(){\n\treturn this.upgrades;\n}\n\nShip.prototype.canDeployFlightHere = function(pos){\n\tvar dist = getDistance({x: this.x, y: this.y}, {x: pos.x, y: pos.y})\n\tif (dist <= game.flightDeploy.range){\n\t\tvar a = getAngleFromTo( {x: this.x, y: this.y}, {x: pos.x, y: pos.y} );\n\t\t\ta = addAngle(this.getDrawFacing(), a);\n\t\tif (isInArc(a, game.flightDeploy.start, game.flightDeploy.end)){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.canDeploy = function(){\n\tif (this.userid == game.userid && game.phase == -1 && (game.turn == 1 || this.id < 0)){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.canDeployHere = function(e, pos){\n\n\tvar p = planCtx.getImageData(e.clientX, e.clientY, 1, 1).data;\n\tvar hex = game.rgbToHex(p[0], p[1], p[2])//.slice(-6);\n\tif (hex == 8100){return true;}\n\treturn false;\n\tconsole.log(hex);\n\tvar valid = false;\t\n\n\tvar deploy = game.getDeployArea();\n\t//console.log(deploy);\n\n\tvar xDist = Math.abs(pos.x - deploy.x);\n\tif (xDist < deploy.deleteW/2){\n\t\treturn false;\n\t}\n\n\t//if (pos.x > deploy.x - deploy.deleteW/2 && pos.x < deploy.x + deploy.deleteW/2){\n\tif (pos.x > deploy.x - deploy.deleteW/2 && pos.x < deploy.x + deploy.deleteW/2){\n\t\treturn false;\n\t}\n\n\tvar a = getCompassHeadingOfPoint(deploy, pos, 0);\n\t//console.log(a);\n\tif (isInArc(a, deploy.start, deploy.end)){\n\t\tvar d = getDistance(pos, deploy);\n\t\t//console.log(d);\n\t\tif (d > deploy.b && d < deploy.s){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.doDeploy = function(pos){\n\tconsole.log(this);\n\tif (this.actions.length){\n\t\tthis.actions[0].x = pos.x;\n\t\tthis.actions[0].y = pos.y;\n\t\tthis.x = pos.x;\n\t\tthis.y = pos.y;\n\t\tthis.drawX = pos.x;\n\t\tthis.drawY = pos.y;\n\t}\n\telse {\n\t\tthis.actions.push(new Move(-1, this.id,  game.turn, \"deploy\", 0, 0, pos.x, pos.y, this.drawFacing, this.drawFacing, 0, 0, 1, 1, 0));\n\t\tthis.deployed = 1;\n\t\tthis.isReady = 1;\n\t\tthis.x = pos.x;\n\t\tthis.y = pos.y;\n\t\tthis.drawX = pos.x;\n\t\tthis.drawY = pos.y;\n\n\t\tvar shipId = this.id;\n\t\tvar table = $(\"#deployTable\").find(\"tr\").each(function(i){\n\t\t\tif ($(this).data(\"unitid\") == shipId){\n\t\t\t\t$(this).remove();\n\t\t\t\treturn;\n\t\t\t}\n\t\t})\n\t\t$(this.element).css(\"left\", res.x - 450).css(\"top\", 50);\n\t}\n\tthis.select();\n\n\tui.deployOverlay.hide();\n\t$(\"#leftUnitWrapper\")\n\t\t\t.find(\"#reinforceBody\").find(\".requestReinforcements\").each(function(){\n\t\t\tif ($(this).hasClass(\"selected\")){\n\t\t\t\t//$(this).find(\".cost\").addClass(\"green\");\n\t\t\t\t$(this).addClass(\"green\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}).end().end()\n\t\t.find(\"#totalRequestCost\").html(\"(\" + game.getRemainingReinforcePoints() + \" points left)\");\n\n\tgame.redraw();\n}\n\nShip.prototype.setHitTable = function(){\n\t//console.log(\"id: \" + this.id);\n\t//this.primary.setRemainingIntegrity();\n\tvar fraction = this.primary.remaining / this.primary.integrity;\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (fraction <= this.hitTable[this.primary.systems[i].name]){\n\t\t\tthis.primary.systems[i].exposed = 1;\n\t\t}\n\t}\n}\n\nShip.prototype.isDestroyed = function(){\n\tif (this.primary.destroyed){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.isDestroyedThisTurn = function(){\n\t//if (this.id == 48){return true;}\n\tif (this.destroyed || this.primary.destroyed || this.getSystemByName(\"Reactor\").destroyed){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.hasHangarSelected = function(){\t\t\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].display == \"Hangar\"){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n\nShip.prototype.hasSystemsSelected = function(){\t\t\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.hasWeaponsSelected = function(){\t\t\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\nShip.prototype.getSelectedWeapons = function(){\n\tvar systems = [];\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].destroyed){continue;}\n\t\t\t\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\t\tsystems.push(this.structures[i].systems[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn systems;\n}\n\nShip.prototype.handleHovering = function(){\n\tthis.drawEW();\n\n\tif (this.ship || this.squad){\n\t\tthis.setMoveTranslation();\n\n\t\tif (!this.isDestroyed()){\n\t\t\tthis.drawMoveArea();\n\t\t\tthis.drawTurnArcs();\n\t\t}\n\t\t\n\t\tthis.drawDirectionIndicator();\n\t\tthis.resetMoveTranslation();\n\t}\n\n\tthis.drawMovePlan();\n\tthis.drawIncomingPreviewMovePlan();\n\tthis.drawTargetMovePlan();\n}\n\nShip.prototype.getActionCost = function(type){\n\tswitch (type){\n\t\tcase 0: return Math.ceil(this.getImpulseChangeCost()*1.5);\n\t\tcase 1: return Math.ceil(this.getImpulseChangeCost()*3);\n\t\tdefault: return 0;\n\t}\n\treturn Math.ceil(this.getImpulseChangeCost()*1.5);\n\treturn Math.ceil(this.getSystemByName(\"Engine\").output * 0.75)*(1-(1-this.getImpulseMod())/2);\n\treturn 1;\n}\n\nShip.prototype.getImpulseChangeCost = function(){\n\treturn Math.ceil(this.baseImpulseCost);\n\treturn Math.ceil(this.baseImpulseCost * (1 + ((this.getImpulseMod()-1) / 2)));\n\treturn Math.ceil(this.baseImpulseCost * (1-((this.getImpulseMod()-1)/2)) * this.getImpulseMod());\n}\n\nShip.prototype.getRealImpulseChangeCost = function(){\n\treturn Math.ceil(this.getImpulseChangeCost() / this.getImpulseMod());\n}\n\nShip.prototype.getBaseImpulse = function(){\n\treturn this.baseImpulse;\n}\n\nShip.prototype.getImpulseStep = function(){\n\treturn Math.floor(this.getBaseImpulse() / 8);\n}\n\nShip.prototype.getTurnCost = function(){\n\tif (this.canTurnFreely()){\n\t\treturn 0;\n\t}\n\treturn round(1*this.getImpulseMod(), 2);\n}\n\nShip.prototype.getTurnDelay = function(){\n\tif (this.canTurnFreely()){\n\t\treturn 0;\n\t}\n\treturn round(this.baseTurnDelay*this.getImpulseMod() / (1+(((turn.mod || 1)-1)*3)), 2);\n}\n\nShip.prototype.drawSystemArcIndicator = function(){\n\treturn;\n\tvar shipPos = this.getGamePos();\n\tvar angle = this.getPlannedFacing();\n\n\tvar p1 = getPointInDir(80, 90+angle, shipPos.x, shipPos.y);\n\tvar p2 = getPointInDir(-80, 90+angle, shipPos.x, shipPos.y);\n\tvar p3 = getPointInDir(80, 180+angle, shipPos.x, shipPos.y);\n\tvar p4 = getPointInDir(-80, 180+angle, shipPos.x, shipPos.y);\n\n\tmoveCtx.beginPath();\n\tmoveCtx.moveTo(p1.x, p1.y);\n\tmoveCtx.lineTo(p2.x, p2.y);\n\tmoveCtx.moveTo(p3.x, p3.y);\n\tmoveCtx.lineTo(p4.x, p4.y);\n\tmoveCtx.closePath();\n\tmoveCtx.stroke();\n}\n\nShip.prototype.setSlipAngle = function(){\n\tif (this.faction[0] == \"V\"){\n\t\tif (this.ship){\n\t\t\tvar graviton = this.getSystemByName(\"GravitonSupressor\");\n\t\t\tif (graviton.isPowered()){\n\t\t\t\tvar mod = 100;\n\t\t\t\t\tmod += 50;\n\t\t\t\t\tmod += graviton.getBoostLevel() * graviton.getBoostEffect(\"Output\");\n\n\t\t\t\t\tthis.slipAngle = Math.floor(15 / 100 * mod)\n\t\t\t}\n\t\t}\n\t\telse if (this.squad){\n\t\t}\n\t}\n\telse {\n\t\tthis.slipAngle = 15;\n\t}\n}\n\nShip.prototype.getSlipAngle = function(){\n\treturn this.slipAngle;\n}\n\nShip.prototype.isRolled = function(){\n\tif (this.rolled){return true;}\n\treturn false;\n}\n\nShip.prototype.isRolling = function(){\n\tif (this.rolling){return true;}\n\treturn false;\n}\n\nShip.prototype.hasStoppedRolling = function(){\n\tif (!this.rolling){\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"roll\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} return false;\n}\n\nShip.prototype.isFlipping = function(){\n\tif (this.flipping){return true;}\n\treturn false;\n}\n\nShip.prototype.hasFlipped = function(){\n\tif (this.flipped && this.flipped == game.turn-1){return true;}\n\treturn false;\n}\n\nShip.prototype.doesContinueRolling = function(){\n\tif (this.rolling){\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"roll\"){return false;}\n\t\t}\n\t\treturn true;\n\t} return false;\n}\n\nShip.prototype.drawImpulseUI = function(){\n\tif (this.disabled){return;}\t\n\n\tvar heading = this.getRealHeading();\n\tvar center = {x: this.drawX, y: this.drawY};\n\tvar p1 = getPointInDir(this.size/2 + 10 + 15, heading + 180, center.x, center.y);\n\n\tif (this.canDoAction(0)){\n\t\tvar roll = getPointInDir(80, heading -220, p1.x, p1.y);\n\t\tvar ox = roll.x * cam.z + cam.o.x - 20;\n\t\tvar oy = roll.y * cam.z + cam.o.y - 20;\n\t\tif (this.isRolling()){\n\t\t\t$($(\"#roll\").children()[1]).show();\n\t\t} else $($(\"#roll\").children()[1]).hide();\n\t\t$(\"#roll\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t} else $(\"#roll\").addClass(\"disabled\");\n\n\t\n\tif (this.canDoAction(1)){\n\t\tvar roll = getPointInDir(80, heading -140, p1.x, p1.y);\n\t\tvar ox = roll.x * cam.z + cam.o.x - 20;\n\t\tvar oy = roll.y * cam.z + cam.o.y - 20;\n\t\t$(\"#flip\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t} else $(\"#flip\").addClass(\"disabled\");\n\t\n\n\tif (this.canUndoLastAction()){\n\t\tvar ox = p1.x * cam.z + cam.o.x - 15;\n\t\tvar oy = p1.y * cam.z + cam.o.y - 15;\n\t\t$(\"#doUndoLastAction\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t} else $(\"#doUndoLastAction\").addClass(\"disabled\");\n\n\tif (this.canAccel()){\n\t\tvar pPlus = getPointInDir(50, heading +90, p1.x, p1.y);\n\t\tvar ox = pPlus.x * cam.z + cam.o.x - 15;\n\t\tvar oy = pPlus.y * cam.z + cam.o.y - 15;\n\t\t$(\"#plusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t} else $(\"#plusImpulse\").addClass(\"disabled\");\n\n\tif (this.canDeccel()){\n\t\tvar mMinus = getPointInDir(50, heading -90, p1.x, p1.y);\n\t\tvar ox = mMinus.x * cam.z + cam.o.x - 15;\n\t\tvar oy = mMinus.y * cam.z + cam.o.y - 15;\n\t\t$(\"#minusImpulse\").css(\"left\", ox).css(\"top\", oy).removeClass(\"disabled\");\n\t} else $(\"#minusImpulse\").addClass(\"disabled\");\n}\n\nShip.prototype.handleMoveAttempt = function(e, pos){\n\tif (!game.movePos){return;}\t\n\tvar dist = Math.floor(getDistance(this.getPlannedPos(), game.movePos));\n\tthis.doIssueMove(game.movePos, dist);\n}\n\n\nShip.prototype.doIssueMove = function(pos, dist){\n\tvar remDelay = this.getRemDelay();\n\n\tthis.actions.push(new Move(-1, this.id, game.turn, \"move\", 0, dist, pos.x, pos.y, 0, 0, 0, 0, 1, 1, 0));\t\n\t\n\t$(\"#popupWrapper\").hide();\n\tthis.unsetMoveMode();\n\tthis.setMoveMode();\n\tthis.doAutoShorten();\n\tthis.setMoveAngles();\n\tgame.updateIntercepts(this.id);\n\tgame.redraw();\n\tif (this.actions[this.actions.length-1].type == \"move\"){\n\t\tgame.setCollisionData(this);\n\t\tthis.alertCollisions();\n\t} else ui.collideWrapper.hide();\n}\n\nShip.prototype.alertCollisions = function(){\n\tif (!this.collisions.length){ \n\t\tui.collideWrapper.hide();\n\t\treturn;\n\t}\n\tvar html = \"Collision Alert for \" + this.name + \" #\" + this.id + \"</br>\";\n\t\t//html += \"<div>\" + getUnitType(this.traverse) + \", size \" + this.traverse + \" - collision multiplier \" + game.getCollisionMod(this.traverse) + \"</div>\";\n\t\t//html += \"<div>\" + getUnitType(this.traverse) + \", size \" + this.traverse + \" - collision multiplier \" + game.getCollisionMod(this.traverse) + \"</div>\";\n\n\tfor (var i = 0; i < this.collisions.length; i++){\n\t\tvar col = this.collisions[i];\n\t\thtml += \"</br><div>Asteroid Field #\" + col.obstacleId + \"</br>\";\n\t\thtml += \"<span class='obstacleWarn yellow'>\" + col.totalDist + \"</span>px distance: \";\n\t\thtml += \"<span class='obstacleWarn yellow'>\" + col.realAttacks + \" </span>attacks @ \";\n\t\thtml += \"<span class='obstacleWarn yellow'>\" + col.realCol + \"%</span> \";\n\t\thtml += \"for <span class='obstacleWarn yellow'>\" + col.damage + \"</span> Damage</br>\";\n\t}\n\tcollide(html);\n}\n\nShip.prototype.doAutoShorten = function(){\n\tif (this.getRemSpeed()){return;}\n\tvar delay = this.getRemDelay();\n\tif (!delay){return;}\n\n\tvar ep = this.getRemEP();\n\tvar turn = this.getLastTurn();\n\tvar mod = this.getImpulseMod();\n\n\tvar maxCut = Math.floor(ep / turn.cost * turn.delay);\n\n\tif (maxCut <= delay){\n\t\tturn.cost += ep;\n\t\tturn.delay -= maxCut;\n\t}\n\telse {\n\t\tvar cost = Math.ceil(delay / turn.delay * turn.cost);\n\t\tturn.cost += cost\n\t\tturn.delay -= Math.min(delay, Math.ceil(cost * this.baseTurnDelay));\n\t}\n}\n\nShip.prototype.canShortenOldTurn = function(move){\n\tif (!this.getRemDelay()){return;}\n\tif (move.costmod < 2 && this.getRemEP() >= this.getShortenOldTurnCost(move)){\n\t\t//console.log(\"can shorten\")\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nShip.prototype.getShortenOldTurnCost = function(move){\n\tvar c = this.getTurnCost();\n\tvar a = Math.abs(move.a);\n\treturn Math.ceil((c * a * (move.costmod + turn.step)) - (c * a * move.costmod));\n\treturn Math.ceil(this.getTurnCost() * Math.abs(move.a) * (move.costmod + turn.step)) - move.cost;\n\treturn (this.getTurnCost() / move.costmod * (move.costmod + turn.step)) * Math.abs(move.a) - move.cost;\n\n\t//return b * a * (m+s) * turn.h * (1+turn.step));\n}\n\nShip.prototype.getLastTurn = function(){\n\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\treturn this.actions[i];\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.canUndoLastAction = function(){\n\tif (this.actions.length){\n\t\tif (this.actions[this.actions.length-1].resolved == 0){\n\t\t\tif (this.actions[this.actions.length-1].type != \"deploy\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.doUndoLastAction = function(pos){\n\tvar update = false;\n\tvar setEW = false;\n\tvar type = this.actions[this.actions.length-1].type\n\tif (type == \"speed\"){\n\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t}\n\telse if (type == \"move\"){\n\t\tthis.actions[this.actions.length-1].dist *= -1;\n\t\tupdate = true;\n\t}\n\telse if (type == \"turn\"){\n\t\tthis.actions[this.actions.length-1].delay *= -1;\n\t\tsetEW = true;\n\t}\n\telse if (type == \"roll\"){\n\t\tthis.rolling = !this.rolling;\n\t\tthis.setNotes();\n\t}\n\telse if (type == \"flip\"){\n\t\tthis.flipping = !this.flipping;\n\t\tthis.setNotes();\n\t}\n\n\tthis.actions.splice(this.actions.length-1, 1);\n\tif (update){game.updateIntercepts(this.id);}\n\tif (setEW){this.getSystemByName(\"Sensor\").setTempEW();}\n\tif (game.mode == 2){this.switchTurnMode();}\n\tthis.setMoveSlipAngles();\n\tgame.redraw();\n\tui.popupWrapper.hide();\n\tgame.setCollisionData(this);\n\tthis.alertCollisions();\n}\n\nShip.prototype.moveInVector = function(){\n\tvar pos = this.getPlannedPos();\n\tvar dist = this.getRemSpeed();\n\tvar goal = getPointInDir(dist, this.getPlannedHeading(), pos.x, pos.y);\n\t\tthis.doIssueMove(goal, dist);\n}\n\nShip.prototype.moveToMaxVector = function(){\n\tvar pos = this.getPlannedPos();\n\tvar dist = this.getRemSpeed();\n\tvar goal = getPointInDir(dist, this.getPlannedHeading(), pos.x, pos.y);\n\t\tthis.doIssueMove(goal, dist);\n}\n\nShip.prototype.moveToMaxTurnVector = function(){\n\tvar pos = this.getPlannedPos();\n\tvar dist = this.getRemDelay();\n\tvar impulse = this.getRemSpeed();\n\tvar goal = getPointInDir(dist, this.getPlannedHeading(), pos.x, pos.y);\n\tthis.doIssueMove(goal, dist);\n}\t\n\nShip.prototype.moveToMaCutVector = function(){\n\tvar pos = this.getPlannedPos();\n\tvar dist = this.getRemDelay();\n\tvar impulse = this.getRemSpeed();\n\tvar goal = getPointInDir(dist, this.getPlannedHeading(), pos.x, pos.y);\n\tthis.doIssueMove(goal, dist);\n}\n\nShip.prototype.canTurn = function(){\n\tif (this.disabled || this.isRolling() || this.isFlipping() || this.lastActionWasTurn()){return false;}\n\tif (this.getRemDelay() == 0){\n\t\tvar min = 3;\n\t\tvar have = this.getRemEP();\n\t\tvar need = this.getTurnCost() * min;\n\t\tif (have >= need){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.lastActionWasTurn = function(){\n\tif (!this.actions.length){return false;}\n\tif (this.actions[this.actions.length-1].type == \"turn\"){return true;}\n\treturn false;\n}\n\t\nShip.prototype.switchTurnMode = function(){\n\tif (game.sensorMode){\n\t\tgame.getUnit(aUnit).getSystemByName(\"Sensor\").select();\n\t}\n\n\tif (game.mode == 2){\n\t\tturn.reset();\n\t\tgame.mode = 0;\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\tthis.drawEW();\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\t$(\"#epButton\").addClass(\"disabled\");\n\t}\t\n\telse if (!this.hasSystemsSelected()){\n\t\tgame.mode = 2;\n\t\tturn.set(this);\n\t\t$(\"#epButton\").removeClass(\"disabled\");\n\t}\n\tthis.setTurnData();\n}\n\nShip.prototype.hasFocus = function(){\n\treturn this.focus;\n}\n\nShip.prototype.handleTurning = function(e, o, f, pos){\n\n\tvar unit = game.getUnitByClick(pos);\n\tvar a = 0;\n\tvar t;\n\n\tif (this.focus == 1 && unit && !unit.focus){\n\t\t//console.log(\"snap\");\n\t\ta = getAngleFromTo(this.getPlannedPos(), unit.getPlannedPos());\n\t\ta = addAngle(f, a);\n\t\tt = unit.getDrawPos();\n\t\tt.x = t.x * cam.z + cam.o.x;\n\t\tt.y = t.y * cam.z + cam.o.y;\n\t\tgame.snapTurn = unit.id;\n\t}\n\telse {\n\t\t//console.log(\"free\");\n\t\tt = {x: e.clientX, y: e.clientY};\n\t\ta = getAngleFromTo(o, pos);\n\t\ta = addAngle(f, a);\n\t\tgame.snapTurn = 0;\n\t}\n\n\tvar max = this.getMaxTurnAngle();\n\n\tif (a > 180){a = (360-a) *-1;}\n\n\tif (a < -max){a = -max;}\n\telse if (a > max){a = max;}\n\n\tvar img = this.getSystemByName(\"Sensor\").img;\n\tif (img != undefined){\n\t\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n\t\tsalvoCtx.translate(cam.o.x, cam.o.y);\n\t\tsalvoCtx.scale(cam.z, cam.z);\n\t\tsalvoCtx.translate(o.x, o.y);\n\t\tsalvoCtx.rotate(a * Math.PI/180);\n\t\tsalvoCtx.drawImage(img, -img.width/2 , -img.height/2, img.width, img.height);\n\t\tsalvoCtx.setTransform(1,0,0,1,0,0);\n\t}\n\n\t//console.log(a)\n\t$(\"#epButton\").css(\"top\", t.y + 25).css(\"left\", t.x - 200).find(\"#impulseCost\").html(round(a, 2))\n\ta = Math.min(Math.abs(a), max);\n\tturn.h = a;\n\t//var c = 1 * a;\n\t//var c = this.getTurnCost() * a;\n\t//$(\"#epButton\").css(\"top\", t.y + 25).css(\"left\", t.x - 200).find(\"#impulseCost\").html(Math.ceil(c, 2) + \" : \" + Math.floor(this.getRemEP() - c));\n\n\n\tthis.drawDelay();\n\tthis.drawMouseVector(o, t);\n\n\tif (game.shortInfo){game.getUnit(game.shortInfo).drawEW();}\n\n\tgame.drawEvents();\n}\n\nShip.prototype.drawMouseVector = function(o, t){\n\tmouseCtx.beginPath();\n\tmouseCtx.moveTo(o.x * cam.z + cam.o.x, o.y * cam.z + cam.o.y);\n\tmouseCtx.lineTo(t.x, t.y);\n\tmouseCtx.closePath();\n\tmouseCtx.strokeStyle = \"lightBlue\";\n\tmouseCtx.lineWidth = 1;\n\tmouseCtx.stroke();\n}\n\nShip.prototype.handleTurnAttempt = function(dest){\n\tif (game.snapTurn){\n\t\tdest = game.getUnit(game.snapTurn).getGamePos();\n\t}\n\tvar origin = this.getPlannedPos();\n\tvar a = getAngleFromTo(origin, dest);\n\t\ta = addAngle(this.getPlannedHeading(), a);\n\tif (a > 180){a -= 360;}\n\tvar max = this.getMaxTurnAngle();\n\n\tif (isInArc(getCompassHeadingOfPoint(origin, dest, 0), this.turnAngles.start, this.turnAngles.end)){\n\t\t//if (Math.abs(a) >= 1){\n\t\t\tthis.issueTurn(a);\n\t\t//}\n\t} else if (a < 0){\n\t\tthis.issueTurn(-max);\n\t} else this.issueTurn(max);\n}\n\nShip.prototype.hasPlannedMoves = function(){\n\tif (game.turn > 1 && this.available == game.turn){\n\t\tfor (let i = this.actions.length-1; i >= 1; i--){\n\t\t\tif (!this.actions[i].resolved){return true;}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfor (let i = this.actions.length-1; i >= 0; i--){\n\t\tif (!this.actions[i].resolved){return true;}\n\t}\n\treturn false;\n}\n\nShip.prototype.canTurnFreely = function(){\n\t//if (game.phase == -1 && this.available == game.turn && this.actions.length == 1){return true;}\n\tif (this.actions.length && this.actions[0].type == \"deploy\" && this.actions[0].turn == game.turn && this.actions[0].resolved == 0){\n\t\tif (game.turn == 1 || (this.available > game.turn)){return true;}\n\t}\n\treturn false;\n}\n\nShip.prototype.issueTurn = function(a){\n\ta = round(a, 2);\n\t//console.log(a)\n\tif (this.canTurnFreely()){\n\t\t//this.actions[0].h += Math.round(a);\n\t\tthis.actions[0].h += a;\n\t\tthis.actions[0].f += a;\n\t\tthis.drawFacing += a;\n\t}\n\telse {\n\t\tvar o = this.getPlannedPos();\n\t\tthis.actions.push(\n\t\t\tnew Move(-1, this.id, game.turn, \"turn\", 0, 0, o.x, o.y, \n\t\t\t\ta, a,\n\t\t\t\tMath.ceil(Math.abs(this.getTurnDelay()*a)),\n\t\t\t\tMath.ceil(Math.abs(this.getTurnCost()*a)),\n\t\t\t\tround(turn.mod, 1), 1, 0\n\t\t\t)\n\t\t);\n\t\t$(ui.turnButton)\n\t\t\t.find(\"#turnCost\").html(\"\").end()\n\t\t\t//.find(\"#turnDelay\").html(\"\");\n\t}\n\n\tif (!this.getRemSpeed() && this.getRemEP()){this.doAutoShorten();}\n\tthis.getSystemByName(\"Sensor\").setTempEW();\n\tif (!this.getRemSpeed()){this.switchTurnMode();}\n\tthis.setMoveAngles();\n\tgame.redraw();\n}\n\nShip.prototype.switchModeAll = function(id){\n\tvar system = this.getSystem(id);\n\tvar name = system.getActiveSystem().name;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].dual || this.structures[i].systems[j].locked || this.structures[i].systems[j].destroyed){continue;}\n\t\t\tif (this.structures[i].systems[j].getLoadLevel() != 1 || this.structures[i].systems[j].getActiveSystem().name != name){continue;}\n\t\t\tthis.structures[i].systems[j].switchMode(id);\n\t\t}\n\t}\n}\n\nShip.prototype.getProfileMod = function(){\n\treturn Math.floor((1+((((this.getBaseImpulse() / this.getCurSpeed())-1)/3)))*100);\n}\n\nShip.prototype.canBoost = function(system){\n\tvar need = system.getEffiency();\n\tvar avail = this.getUnusedPower();\n\n\tif (system.disabled || system.destroyed || system.tiny){\n\t\treturn false;\n\t}\n\telse if (system instanceof Weapon && !system.disabled && !system.destroyed && (system.getLoadLevel() >= 1 || system.getBoostEffect(\"Reload\") && system.getLoadLevel() < 1)){\n\t\tif (system instanceof Launcher){\n\t\t\tif (system.getOutput() < system.getMaxoutput()){\n\t\t\t\tif (system.getRemAmmo() > system.getOutput()){\n\t\t\t\t\treturn true;\n\t\t\t\t} else popup(\"There is not enough ammunition left.\");\n\t\t\t} else popup(\"The launcher is already at maximum capacity.\");\n\t\t}\n\t\telse {\n\t\t\tif (system.getBoostLevel() < system.maxBoost){\n\t\t\t\tif (avail >= need){\n\t\t\t\t\treturn true;\n\t\t\t\t} else popup(\"You have insufficient power remaining.</br>(Need \" + need + \", Have \" + avail +\")\");\n\t\t\t} else popup(\"The selected system cant be boosted further.\");\n\t\t}\n\t}\n\telse if (!(system instanceof Weapon)){\n\t\tif (avail >= need){\n\t\t\treturn true;\n\t\t} else popup(\"You have insufficient power remaining.</br>(Need \" + need + \", Have \" + avail +\")\");\n\t}\n\treturn false;\n}\n\nShip.prototype.getUnusedPower = function(){\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == \"Reactor\"){\n\t\t\treturn this.primary.systems[i].getUnusedPower();\n\t\t}\n\t}\n}\n\nShip.prototype.setTranslation = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\targuments[i].translate(cam.o.x, cam.o.y);\n\t\targuments[i].scale(cam.o.x, cam.o.y);\n\t}\n}\n\nShip.prototype.resetTranslation = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\targuments[i].setTransform(1,0,0,1,0,0);\n\t}\n}\n\nShip.prototype.setMoveTranslation = function(){\n\tmoveCtx.translate(cam.o.x, cam.o.y);\n\tmoveCtx.scale(cam.z, cam.z);\n\tplanCtx.translate(cam.o.x, cam.o.y);\n\tplanCtx.scale(cam.z, cam.z);\n}\n\nShip.prototype.resetMoveTranslation = function(){\n\tmoveCtx.setTransform(1,0,0,1,0,0);\n\tplanCtx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.setMoveMode = function(){\n\tif (this.salvo || this.flight || this.obstacle){return;}\n\telse if (this.focus> game.phase && game.phase > -1){instruct(\"Focus Unit!\");}\n\telse if (this.focus== 0 && game.phase == 1){return;}\n\t//console.log(\"ding!\");\n\tgame.mode = 1;\n\n\tturn.set(this);\n\tthis.setTurnData();\n\tthis.setMoveTranslation();\n\n\tif ((this.available == game.turn && game.turn == 1 || this.id < 0) && game.phase == -1){\n\t\tthis.drawTurnUI();\n\t\t//this.drawMoveArea();\n\t\t//this.drawTurnArcs();\n\t}\n\telse if (game.phase == -1){\n\t\t//this.drawMoveArea();\n\t\tthis.drawMoveUI();\n\t}\n\telse if (game.phase == 0 || game.phase == 1){\n\t\t//this.drawMoveArea();\n\t\tthis.drawMoveUI();\n\t}\n\telse if (game.phase == 2){ // FIRE\n\t}\n\telse if (game.phase == 3){ // Dmg control\n\t}\n\n\tthis.resetMoveTranslation();\n\tthis.checkSensorHighlight();\n\tthis.updateDiv();\n}\n\nShip.prototype.unsetMoveMode = function(){\n\t//console.log(\"unsetMoveMode\");\n\tgame.mode = 0;\n\t$(\"#vectorDiv\").addClass(\"disabled\");\n\t$(\"#impulseGUI\").addClass(\"disabled\");\n\t$(\".turnEle\").addClass(\"disabled\");\n\t$(\".ui\").addClass(\"disabled\");\n\tif (game.mode == 2){this.switchTurnMode();}\n\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\tplanCtx.clearRect(0, 0, res.x, res.y);\n\tsalvoCtx.clearRect(0, 0, res.x, res.y);\n}\n\nShip.prototype.isInEWArc = function(origin, target, sensor, ew){\t\t\n\tvar str = sensor.getOutput();\n\tvar\tw = Math.min(180, game.const.ew.len * Math.pow(str/ew.dist, game.const.ew.p));\n\tvar start = addAngle(0 + w, ew.angle);\n\tvar end = addAngle(360 - w, ew.angle);\n\treturn isInArc(getCompassHeadingOfPoint(origin,  target, this.getPlannedHeading()), start, end);\n}\n\nShip.prototype.canSetSensor = function(sensor){\n\tif (this.flight || this.salvo){return false;}\n\tif (sensor.selected && !sensor.locked){\n\t\treturn true;\n\t} return false;\n}\n\nShip.prototype.unselectSystems = function(){\n\tfxCtx.clearRect(0, 0, res.x, res.y);\n\t$(\"#aimDiv\").hide();\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].selected){\n\t\t\t\tthis.structures[i].systems[j].select();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.ship || this.squad){\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (this.primary.systems[i].selected){\n\t\t\t\tthis.primary.systems[i].select();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.getFireOrders = function(){\n\tvar fires = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].fireOrders.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].fireOrders[k].id == 0){\n\t\t\t\t\tfires.push(this.structures[i].systems[j].fireOrders[k]);\n\t\t\t\t} else break;\n\t\t\t}\n\t\t}\n\t}\n\treturn fires;\n}\n\nShip.prototype.getAllPowerOrders = function(){\n\tvar powers = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var k = 0; k < this.structures[i].powers.length; k++){\n\t\t\tif (this.structures[i].powers[k].new){\n\t\t\t\tpowers.push(this.structures[i].powers[k]);\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tpowers = powers.concat(this.structures[i].systems[j].getPowerOrders());\n\t\t}\n\t}\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = 0; j < this.primary.systems[i].powers.length; j++){\n\t\t\tif (this.primary.systems[i].powers[j].new){\n\t\t\t\tpowers.push(this.primary.systems[i].powers[j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn powers;\n}\n\nShip.prototype.switchDiv = function(e = false){\n\tvar\tcheckPos = false;\n\tvar $element = $(this.element);\n\n\tif (this.selected){\n\t\tgame.zIndex++;\n\t\t$element.removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t\tcheckPos = true;\n\t}\n\telse if ($(this.element).hasClass(\"disabled\")){\n\t\tgame.zIndex++;\n\t\t$element.removeClass(\"disabled\").css(\"zIndex\", game.zIndex);\n\t\tcheckPos = true;\n\t}\n\telse {\n\t\tgame.zIndex--;\n\t\t$element.addClass(\"disabled\").css(\"zIndex\", 10);\n\t}\n\n\tif (checkPos){\n\t\tvar pos = $element.position();\n\t\tvar click = {x: e.clientX, y: e.clientY};\n\t\tvar w = $element.width();\n\t\tvar h = $element.height();\n\n\t\tif (click.x > pos.left && click.x < pos.left + w &&\n\t\t\tclick.y > pos.top && click.y < pos.top + h){\n\t\t\tconsole.log(\"d\");\n\n\t\t\tif (click.x > w){\n\t\t\t\t$element.css(\"left\", Math.max(10, click.x - w - 400));\n\t\t\t} else if (click.x < w){\n\t\t\t\t$element.css(\"left\", Math.min(click.x + 400, res.y - 20 - w));\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nShip.prototype.toggleDivSize = function(){\n\tif ($(this.element).find(\".structContainer\").is(\":visible\")){\n\t\t$(this.element).find(\".structContainer\").hide();\n\t} else $(this.element).find(\".structContainer\").show();\n}\n\nShip.prototype.setPreMoveFaceHead = function(){\n\t//console.log(\"setPreMoveFaceHead #\"+this.id);\n\tthis.drawFacing = this.facing;\n\n\tif (game.phase == -1){return;}\n\n\tif (this.available == game.turn){\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"deploy\" || this.actions[i].type == \"jumpIn\"){\n\t\t\t\tthis.drawFacing += this.actions[i].f;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.faction[0] == \"V\"){\n\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\tif (this.actions[i].type == \"rotate\"){\n\t\t\t\tthis.drawFacing += this.actions[i].f;\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.setPostMoveFaceHead = function(){\n\t//console.log(\"setPostMoveFaceHead #\"+this.id);\n\t//if (this.faction[0] == \"V\"){console.log(\"ding\");}\n\tthis.drawFacing = this.facing;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tthis.drawFacing += this.actions[i].f;\n\t}\n}\n\nShip.prototype.setPreMovePosition = function(){\n\t//console.log(\"setPreMovePosition #\"+this.id);\n\n\tif (this.available == game.turn){\n\t\tif ((this.flight || this.salvo) && game.phase <= 2){\n\t\t\tthis.x = this.actions[0].x;\n\t\t\tthis.y = this.actions[0].y;\n\t\t}\n\t\telse {\n\t\t\tthis.x = this.actions[1].x;\n\t\t\tthis.y = this.actions[1].y;\n\t\t}\n\t}\n\tthis.drawX = this.x;\n\tthis.drawY = this.y;\n}\n\nShip.prototype.setPostMovePosition = function(){\n\t//console.log(\"setPostMovePosition #\"+this.id);\n\tif (!this.actions.length){return;}\n\n\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\tif (this.actions[i].resolved){\n\t\t\tthis.drawX = this.actions[i].x;\n\t\t\tthis.drawY = this.actions[i].y;\n\t\t\treturn;\n\t\t}\n\t}\n\t//this.drawX = this.actions[this.actions.length-1].x;\n\t//this.drawY = this.actions[this.actions.length-1].y;\n}\n\nShip.prototype.animatesThisSegment = function(){\n\tif (!this.toAnimate){return false;}\n\tif (this.focus && !game.animFocus){return false;}\n\tif ((this.ship || this.squad) && !game.animShip){return false;}\n\tif (this.flight && !game.animFlight){return false;}\n\tif (this.salvo && !game.animSalvo){return false;}\n\tif (this.obstacle && !game.animObstacles){return false;}\n\treturn true;\n}\n\nShip.prototype.movesThisPhase = function(){\n\tif ((this.ship || this.squad) && game.phase > this.focus){return false;}\n\tif ((this.flight || this.salvo) && game.phase != 2){return false;}\n\treturn true;\n}\n\nShip.prototype.hasMoved = function(){\n\tif (this.actions.length && this.actions[this.actions.length-1].resolved){return true;}\n\treturn false;\n}\n\nShip.prototype.setDrawData = function(){\n\t//console.log(\"SHIP setDrawData\");\n\tif (this.available > game.turn || !this.available || game.turn == 1 && game.phase == -1){\n\t\tif (this.friendly && this.isReady){\n\t\t\tthis.setPostMovePosition();\n\t\t\tthis.setPostMoveFaceHead();\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!this.deployed){return;}\n\n\tif (game.phase == -1 || game.phase == 0){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFaceHead();\n\t}\n\telse if (this.focus == game.phase-1){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFaceHead();\n\t}\n\telse if (this.focus == game.phase){\n\t\tthis.setPreMovePosition();\n\t\tthis.setPreMoveFaceHead();\n\t}\n\telse if (this.focus < game.phase){\n\t\tthis.setPostMovePosition();\n\t\tthis.setPostMoveFaceHead();\n\t}\n\telse if (game.phase > 2){\n\t\tthis.setPostMovePosition();\n\t\tthis.setPostMoveFaceHead();\n\t}\n}\n\nShip.prototype.setUnitSelector = function(){\n\tvar id = this.id;\n\tui.unitSelector.find(\"div\").each(function(){\n\t\tif ($(this).data(\"id\") == id){\n\t\t\t$(this).toggleClass(\"selected\"); return;\n\t\t}\n\t});\n\t$(this.element).toggleClass(\"selection\");\n}\n\nShip.prototype.getArmourString = function(a){\n\treturn this.getStructureFromAngle(a).getArmourString();\n}\n\nShip.prototype.getSectionString = function(a){\n\treturn this.getStructureFromAngle(a).type + (this.rolled ? \"<span class='yellow'> (rolled)</span>\" : \"\");\n\tif (this.rolled){\n\t\tvar val = this.getStructureFromAngle(a).type;\n\t\treturn val + \"<span class='yellow'> (rolled)</span>\";\n\t} else return this.getStructureFromAngle(a).type;\n}\n\nShip.prototype.getStructureFromAngle = function(a){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tvar\tstart; var end;\n\n\t\tif (this.rolled){\n\t\t\tif (this.structures[i].start < this.structures[i].end){\n\t\t\t\tstart = 360 - this.structures[i].end;\n\t\t\t\tend = 360 - this.structures[i].start;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = 360 - this.structures[i].start;\n\t\t\t\tstart = 360 -this.structures[i].end;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstart = this.structures[i].start;\n\t\t\tend = this.structures[i].end\n\t\t}\n\n\t\tif (isInArc(a, start, end)){return this.structures[i];}\n\t}\n}\n\nShip.prototype.getColor = function(){\n\treturn (this.friendly ? \"#00ea00\" : \"red\");\n}\n\nShip.prototype.drawMovePlan = function(){\n\t//console.log(\"draw moves for #\" + this.id);\n\tif (!this.selected && (!this.actions.length || !this.deployed)){return;}\n\n\tvar color = this.getColor();\n\t\n\tplanCtx.translate(cam.o.x, cam.o.y);\n\tplanCtx.scale(cam.z, cam.z);\n\tplanCtx.strokeStyle = color;\n\n\tplanCtx.globalAlpha = 0.7;\n\n\tvar start = this.getTurnStartPos();\n\tplanCtx.beginPath();\n\tplanCtx.moveTo(start.x, start.y);\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"move\"){\n\t\t\tplanCtx.lineTo(this.actions[i].x, this.actions[i].y);\n\t\t\tplanCtx.stroke();\n\t\t}\n\t\telse if (this.actions[i].type == \"turn\"){\n\t\t\tplanCtx.beginPath();\n\t\t\tplanCtx.arc(this.actions[i].x, this.actions[i].y, 5, 0, 2*Math.PI, false);\n\t\t\tplanCtx.stroke();\n\t\t\tplanCtx.moveTo(this.actions[i].x, this.actions[i].y);\n\t\t}\n\t}\n\n\t//if (!this.hasMoved() && this.actions.length){this.drawMarker(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y, planCtx.strokeStyle, planCtx);}\n\n\tplanCtx.closePath();\n\tplanCtx.globalAlpha = 1;\n\tplanCtx.strokeStyle = \"black\";\n\tplanCtx.setTransform(1,0,0,1,0,0);\n\n\n}\n\nShip.prototype.getHeader = function(){\n\tvar div = $(\"<div>\");\n\tdiv\n\t.append($(\"<div>\")\n\t\t.append($(\"<div>\").css(\"display\", \"inline\").html(this.display + \" #\" + this.id))\n\t\t.append($(\"<div>\").css(\"display\", \"inline\").css(\"margin-left\", 30).html(\"(\" + this.getFocusCost() + \")\")))\n\n\tvar html = \"\";\n\tif (this.command && this.focus){html = \"<div class='yellow'>-CMD-  &  -FOCUS-</div>\";}\n\telse if (this.command){html = \"<div class='yellow'>-CMD-</div>\";}\n\telse if (this.focus){html = \"<div class='yellow'>-FOCUS-</div>\";}\n\n\tdiv.append($(\"<div>\").html(html));\n\n\treturn div;\n}\n\nShip.prototype.getShortInfo = function(){\n\tvar ele = ui.shortInfo;\n\tif (this.userid == game.userid){\n\t\t$(ele).attr(\"class\", \"friendly\");\n\t} else $(ele).attr(\"class\", \"hostile\");\n\n\tvar impulse = this.getCurSpeed();\n\n\tele\n\t.append(this.getHeader())\n\n\tif (this.isRolled()){ele.append($(\"<div>\").addClass(\"yellow\").html(\"!-ROLLED-!\"));}\n\tif (this.isRolling()){ele.append($(\"<div>\").addClass(\"yellow\").html(\"!-ROLLING-!\"));}\n\tif (this.isFlipping()){ele.append($(\"<div>\").addClass(\"yellow\").html(\"!-FLIPPING-!\"));}\n\n\tele\n\t.append($(\"<div>\").html(\"Speed: \" + impulse + \" (\" + round(impulse / this.getBaseImpulse(), 2) + \")\"))\n\t.append($(\"<div>\").html(\"Base To-Hit: \" + this.getStringHitChance()))\n\n\tthis.appendCollisions(ele);\n}\n\nShip.prototype.appendCollisions = function(ele){\n\tif (!this.collisions.length){return;}\n\n\tele.append($(\"<div>\").addClass(\"yellow\").html(\"Collisions\"))\n\tfor (var i = 0; i < this.collisions.length; i++){\n\t\tvar html = this.collisions[i].realAttacks +\"x \" + this.collisions[i].damage + \" @ \" + this.collisions[i].realCol + \"%</br>\";\n\t\tele.append($(\"<div>\").html(html))\n\t}\n}\n\nShip.prototype.getParent = function(){\n\treturn this;\n}\n\nShip.prototype.setUnitState = function(){\n\t//console.log(\"setUnitState \" + this.id)\n\tif (this.userid == game.userid){\n\t\tthis.friendly = 1;\n\t}\n\n\tif (this.available < game.turn){\n\t\tthis.deployed = 1;\n\t} else if (this.friendly && this.actions.length){\n\t\tthis.deployed = 1;\n\t} else if (!this.friendly && this.actions.length && this.actions[0].resolved){\n\t\tthis.deployed = 1;\n\t}\n\n\tif (this.available < game.turn){\n\t\tthis.isReady = 1;\n\t}\n\telse if (this.available == game.turn && game.turn > 1){\n\t\tthis.isReady = 1;\n\t}\n\telse if (this.available == game.turn && game.phase > 0){\n\t\tthis.isReady = 1;\n\t}\n\telse if (this.available > game.turn && this.actions.length == 1 && !this.actions[0].resolved){\n\t\tthis.isReady = 1;\n\t}\n}\n\nShip.prototype.setNextMove = function(){\n\treturn;\n}\n\nShip.prototype.select = function(e){\n\tif (!this.selected){\n\t\tthis.doSelect(e);\n\t} else this.switchDiv(e);\n}\n\nShip.prototype.doSelect = function(e){\n\tconsole.log(this);\n\taUnit = this.id;\n\tthis.selected = true;\n\tthis.setUnitSelector();\n\tgame.redraw()\n\tthis.switchDiv(e);\n\tthis.setMoveMode();\n}\n\nShip.prototype.doUnselect = function(e){\n\tthis.unselectSystems();\n\taUnit = false;\n\tthis.selected = false;\n\tthis.setUnitSelector();\n\tif (game.deploying){game.disableDeployment();}\n\telse if (game.flightDeploy){game.flightDeploy = false;}\n\telse if (game.mission){this.disableMissionMode()}\n\tthis.switchDiv(e);\n\tthis.unsetMoveMode();\n\t$(\"#hangarDiv\").addClass(\"disabled\");\n\t$(\"#popupWrapper\").hide();\n\t$(\"#instructWrapper\").hide();\n\t$(\"#collideWrapper\").hide();\n\t$(\"#sysDiv\").remove();\n\t$(ui.doShorten).empty();\n\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\tgame.redraw();\n}\n\nShip.prototype.doHighlight = function(){\n\tif (this.highlight){\n\t\tthis.highlight = false;\n\t\tgame.draw();\n\t}\t\n\telse {\n\t\tthis.highlight = true;\n\t\tctx.translate(cam.o.x, cam.o.y);\n\t\tctx.scale(cam.z, cam.z);\n\t\tctx.beginPath();\n\t\tctx.arc(this.drawX, this.drawY, this.size/2, 0, 2*Math.PI, false);\n\t\tctx.closePath();\n\t\tctx.lineWidth = 3;\n\t\tctx.globalAlpha = 1;\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t\tctx.setTransform(1,0,0,1,0,0);\n\t}\n}\n\nShip.prototype.drawTrajectory = function(){\n\tif (!this.salvo || !this.mission.arrived){return;}\n\tvar t = this.getTarget().getPlannedPos();\n\n\tplanCtx.globalAlpha = 1;\n\tplanCtx.translate(cam.o.x, cam.o.y);\n\tplanCtx.scale(cam.z, cam.z);\n\tplanCtx.beginPath();\n\tplanCtx.moveTo(this.x, this.y);\n\tplanCtx.lineTo(t.x, t.y);\n\tplanCtx.closePath();\n\tplanCtx.strokeStyle = \"white\";\n\tplanCtx.stroke();\n\tplanCtx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.setMoveSlipAngles = function(){\n\tthis.setSlipAngle();\n\tthis.setMoveAngles();\n}\n\nShip.prototype.create = function(){\n\t//console.log(\"create \"+this.id);\n\tthis.setUnitState();\n\tthis.setSubSystemState();\n\tthis.setStringHitChance();\n\tthis.setMoveSlipAngles();\n}\n\nShip.prototype.setSubSystemState = function(){\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tthis.primary.systems[i].setState();\n\t}\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tthis.structures[i].setStructState();\n\t\tthis.structures[i].setBonusNegation();\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tthis.structures[i].systems[j].setState();\n\t\t\tthis.structures[i].systems[j].setBonusNegation(this.structures[i].bonusNegation);\n\t\t}\n\n\t\tif (this.structures[i].turret){this.structures[i].setLayout(this.size);}\n\t}\n}\n\nShip.prototype.setStringHitChance = function(){\n\tif (this.profile[0] != this.profile[1]){\n\t\tstring = Math.floor(this.baseHitChance * this.profile[0]) + \" - \" + Math.floor(this.baseHitChance * this.profile[1]);\n\t}\n\telse string = Math.floor(this.baseHitChance * this.profile[0]);\n\tthis.stringHitChance = (string + \"%\");\n}\n\nShip.prototype.getStringHitChance = function(){\n\t//console.log(\"getStringHitChance #\" + this.id);\n\treturn this.stringHitChance;\n}\n\nShip.prototype.setSize = function(){\n\treturn;\n}\n\nShip.prototype.setLayout = function(){\n\treturn;\n}\n\nShip.prototype.setImage = function(){\n\tthis.img = graphics.images[this.name.toLowerCase()];\n}\n\nShip.prototype.getCodeColor = function(){\n\tif (this.friendly){return \"#27e627\"}\n\telse return \"#ff3d00\";\n}\n\nShip.prototype.attachLogEntry = function(html){\n\t$(\"#combatLog\").find(\"tbody\")\n\t\t.append($(\"<tr>\")\n\t\t\t.data(\"unitid\", this.id)\n\t\t\t.hover(\n\t\t\t\tfunction(){\n\t\t\t\t\tvar data = $(this).data();\n\t\t\t\t\tgame.getUnit($(this).data(\"unitid\")).doHighlight()\n\t\t\t\t},\n\t\t\t\tfunction(){\n\t\t\t\t\tvar data = $(this).data();\n\t\t\t\t\tgame.getUnit($(this).data(\"unitid\")).highlight = 0;\n\t\t\t\t\tgame.redraw();\n\t\t\t\t}\n\t\t\t)\n\t\t\t.html(html));\n}\n\nShip.prototype.createCritLogEntry = function(){\n\tif (!this.ship){return false;}\n\t\n\tvar html = \"<th style='padding: 10px' colSpan=4><span style='font-size: 12px; font-weight: bold'>\" + this.getLogTitleSpan() + \"</span> is subject to critical effects.</th><td colSpan=5>\";\n\tvar expand = \"\";\n\n\tfor (let i = 0; i < this.primary.systems.length; i++){\n\t\texpand += this.primary.systems[i].getCritLogString();\n\t}\n\tif (expand.length > 2){\n\t\texpand += \"</td>\";\n\t\tthis.attachLogEntry(html + expand);\n\t\treturn true;\n\t}\n\treturn false;\n}\nShip.prototype.createMoraleLogEntry = function(){\n\tif (!this.notes || this.flight || this.salvo || this.obstacle){return false;}\n\t//var data = this.notes.slice(0, this.notes.length-1).split(\";\");\n\t//var morale = \"\";\n\t//for (var i = 0; i < data.length; i++){if (data[i][0] == \"m\"){morale = data[i].slice(1, data[i].length); break;}}\n\tvar type = this.notes[0];\n\tvar numbers = this.notes.slice(2, this.notes.length).split(\";\");\n\n\tif (numbers[0] == 100){return;}\n\n\t//var html = \"<td colSpan=9 style='padding: 5px'><span style='font-size: 12px; font-weight: bold'>Severe damage (> 15%) forces a morale check from \" + this.getLogTitleSpan() + \"</br>\";\n\t\t//html += \"CLIENT: \" + this.getRecentMoraleCheckDamage() + \" %</br>\";\n\tvar html = \"<td colSpan=9 style='padding: 5px'><span style='font-size: 12px; font-weight: bold'>\";\n\t\thtml += this.getLogTitleSpan() + \" lost \" + this.getRecentMoraleCheckDamage() + \"% of its remaining health, causing a morale check.</br>\";\n\t//html += \"Initial chance to fail: \" + numbers[0] + \"%, rolled: \" + numbers[1] + \" - \";\n\t//html += \"<span class='yellow'>\" + ((type == \"p\") ? \" Passed ! (-30 on final severity)\" : \" Failed !\") +\"</span></br>\";\n\t//html +=\t\"The unit rolled <span class='yellow'>\" + numbers[2] + \"</span> for effect, in addition to its existing total penalties of <span class='yellow'>\" + (numbers[3]-numbers[2]) + \"</span> for a total of <span class='yellow'> \" + numbers[3] +\".</span></br>\";\n\n\tvar effect = 0;\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"jumpOut\"){\n\t\thtml += \"The unit <span class='yellow'> is routed</span>.\";\n\t\teffect = 1;\n\t}\n\telse {\n\t\tvar command = this.getSystemByName(\"Command\");\n\t\tfor (var i = 0; i < command.crits.length; i++){\n\t\t\tif (command.crits[i].turn != game.turn || command.crits[i].duration != -2){continue;}\n\t\t\thtml += \"The unit is subject to <span class='yellow'>\" + command.crits[i].value + \"% \" + command.crits[i].type + \"</span>.\";\n\t\t\teffect = 1;\n\t\t}\n\t}\n\n\tif (!effect){\n\t\thtml += \"Just a normal day in space.\";\n\t}\n\n\thtml += \"</td>\";\n\n\tthis.attachLogEntry(html);\n\treturn true;\n}\n\nShip.prototype.getCallSign = function(){\n\tif (this.callsign.length >= 3){\n\t\treturn \" - \" + this.callsign + \" - \";\n\t}\n\treturn this.callsign;\n}\n\nShip.prototype.getLogTitleSpan = function(){\n\treturn \"<span style='color: \" + this.getCodeColor() + \"'>\" + this.name + \" #\" + this.id + this.getLogNameEntry() + \" </span>\";\n}\n\nShip.prototype.getLogNameEntry = function(){\n\tif (this.callsign.length >= 3){\n\t\treturn this.getCallSign();\n\t}\n\treturn \"\";\n}\n\nShip.prototype.createDeployEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" jumps into local space.</span></th>\");\n\t$(\"#combatLog\").find(\"tbody tr\").last()\n\t\t.hover(\n\t\t\tfunction(){game.getUnit($(this).data(\"unitid\")).highlightJumpShift();},\n\t\t\tfunction(){game.redraw()}\n\t\t)\n}\n\nShip.prototype.createPrepareJumpEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" is preparing to jump into hyperspace.</span></th>\");\n}\n\nShip.prototype.createUndeployEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" jumps into hyperspace and leaves the battlefield.</span></th>\");\n}\n\nShip.prototype.createCommandTransferEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span class='yellow'>Fleet Command</span> has been transfered to \" + this.getLogTitleSpan() + \"</th>\");\n}\n\nShip.prototype.createMoveStartEntry = function(type){\n\tswitch (type){\n\t\tcase \"roll\":\n\t\t\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" has completed a full roll but is still rolling.</span></th>\");\n\t\t\treturn;\n\t\tcase \"flip\":\n\t\t\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" has completed a full flip.</span></th>\");\n\t\t\treturn;\n\t}\n}\n\nShip.prototype.createActionEntry = function(){\n\tif (this.isRolling()){\n\t\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" is initiating a ROLL manover.</span></th>\");\n\t}\n\telse if (this.hasStoppedRolling()){\n\t\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" has canceled its ongoing ROLL manover.</span></th>\");\n\t}\n\telse if (this.isFlipping()){\n\t\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" is initiating a FLIP manover.</span></th>\");\n\t}\n}\n\nShip.prototype.createStillRollingEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" is continueing its roll manover.</span></th>\");\t\t\t\t\t\t\t\n}\n\nShip.prototype.createMoveEndEntry = function(){\n\tthis.attachLogEntry(\"<th colSpan=9><span>\" + this.getLogTitleSpan() + \" has completed a full roll.</span></th>\")\n}\n\nShip.prototype.getCost = function(){\n \treturn this.structures.map(x => x.cost).reduce((a, b) => a+b, 0);\n}\n\nShip.prototype.animateSelfDeployIn = function(){\n\n\tif (this.deployAnim[0] == this.deployAnim[1]){\n\t\tthis.deployed = 1;\n\t\tthis.isReady = 1;\n\t\tctx.translate(this.drawX, this.drawY);\n\t\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tthis.drawSelf();\n\t\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\t\tctx.translate(-this.drawX, -this.drawY);\n\t\tthis.createDeployEntry();\n\t\treturn;\n\t}\n\n\tthis.deployAnim[0] += 1;\n\n\tvar fraction = this.deployAnim[0] / this.deployAnim[1];\n\tvar sin = Math.sin(Math.PI*fraction);\n\tvar s = this.size*2.5*sin;\n\n\tctx.globalAlpha = sin;\n\tctx.drawImage(graphics.images.blueVortex, this.drawX-s/2, this.drawY-s/2, s, s);\n\n\tif (fraction > 0.5){\n\t\tctx.globalAlpha = fraction;\n\t\tctx.translate(this.drawX, this.drawY);\n\t\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tthis.drawSelf();\n\t\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\t\tctx.translate(-this.drawX, -this.drawY);\n\t}\n}\n\nShip.prototype.animateDeployOut = function(){\n\tif (this.deployAnim[0] == this.deployAnim[1]){\n\t\tthis.deployed = 0;\n\t\tthis.isReady = 0;\n\t\tthis.createUndeployEntry();\n\t\treturn;\n\t}\n\n\tthis.deployAnim[0] += 1;\n\n\tvar fraction = 1-this.deployAnim[0] / this.deployAnim[1];\n\tvar sin = Math.sin(Math.PI*fraction);\n\tvar s = this.size*2.5*sin;\n\n\t//console.log(fraction)\n\n\tctx.globalAlpha = sin;\n\tctx.drawImage(graphics.images.redVortex, this.drawX-s/2, this.drawY-s/2, s, s);\n\n\tif (fraction > 0.5){\n\t\tctx.globalAlpha = 1;\n\t} else ctx.globalAlpha = fraction * 2;\n\n\tctx.translate(this.drawX, this.drawY);\n\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\tthis.drawSelf();\n\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\tctx.translate(-this.drawX, -this.drawY);\n}\n\nShip.prototype.draw = function(){\n\tif (!this.isReady){return;}\n\n \tif (this.doDraw){this.drawPositionMarker();}\n\n\tctx.translate(this.drawX, this.drawY);\n\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\n\tif (this.doDraw){this.drawSelf();}\n\n\tthis.drawEscort();\n\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\tctx.translate(-this.drawX, -this.drawY);\n}\n\nShip.prototype.drawIncomingPreview = function(){\n\tctx.translate(this.drawX, this.drawY);\n\n\tctx.beginPath();\n\tctx.arc(0, 0, (this.friendly ? this.size/2 : 50), 0, 2*Math.PI, false);\n\tctx.closePath();\n\n\t//ctx.font = \"26px Arial\";\n\tctx.fillStyle = \"lightBlue\";\n\tctx.globalAlpha = 0.2;\n\tctx.fill();\n\tctx.globalAlpha = 1;\n\tctx.textAlign = \"center\";\n\n\tif (this.friendly){\n\t\tctx.rotate(this.getDrawFacing() * Math.PI/180);\n\t\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n\t\tctx.rotate(-this.getDrawFacing() * Math.PI/180);\n\t\tctx.fillStyle = \"green\";\n\t\tctx.font = \"20px Arial\";\n\t\tctx.fillText(\"ETA \" + (this.available - game.turn), 0, +40);\n\t\t//ctx.fillText(this.available != game.turn ? \"ETA \" + (this.available - game.turn) : \"NOW\", 0, +40);\n\t}\n\telse {\n\t\tctx.fillStyle = \"red\";\n\t\tctx.font = \"50px Arial\";\n\t\tctx.fillText(\"?\", 0, 0);\n\t\tctx.font = \"20px Arial\";\n\t\tctx.fillText(\"ETA \" + (this.available - game.turn), 0, +30);\n\t}\n\tctx.translate(-this.drawX, -this.drawY);\n}\n\nShip.prototype.highlightJumpShift = function(){\n\tctx.translate(cam.o.x, cam.o.y);\n\tctx.scale(cam.z, cam.z);\n\tctx.translate(this.actions[0].x, this.actions[0].y);\n\tctx.globalAlpha = 1;\n\n\tctx.beginPath();\n\tctx.arc(0, 0, 10, 0, 2*Math.PI, false);\n\tctx.closePath();\n\tctx.fillStyle = \"yellow\";\n\tctx.fill();\n\n\tvar p = getPointInDir(100, this.actions[0].h, 0, 0);\n\t//console.log(p);\n\tctx.beginPath();\n\tctx.moveTo(0, 0)\n\tctx.lineTo(p.x, p.y);\n\tctx.closePath();\n\tctx.strokeStyle = \"yellow\";\n\tctx.stroke();\n\n\tctx.translate(-this.drawX, -this.drawY); return;\n}\n\nShip.prototype.drawPositionMarker = function(){\n\tif (!game.drawCircle){return;}\n\tvar color = \"\";\n\tif (this.selected){color = \"yellow\"}\n\telse color = this.getCodeColor();\n\tthis.drawMarker(this.drawX, this.drawY, color, ctx);\n}\n\nShip.prototype.drawSelf = function(){\n\tctx.drawImage(this.img, -this.size/2, -this.size/2, this.size, this.size);\n}\n\nShip.prototype.drawEscort = function(){\n\tif (this.cc.length && this.drawImg != undefined){\n\t\tvar s = this.drawImg.width/2;\n\t\tctx.drawImage(this.drawImg, -s/2, -s/2, s, s);\n\t}\n}\n\nShip.prototype.drawMarker = function(x, y, c, context){\n\tcontext.beginPath();\n\tcontext.arc(x, y, (this.size-2)/2, 0, 2*Math.PI, false);\n\tcontext.closePath();\n\tcontext.lineWidth = 1 + Math.floor(this.selected*2 + (this.focus == 1)*2);\n\tcontext.globalAlpha = 0.7 + (this.focus == 1) * 0.1;\n\tcontext.globalCompositeOperation = \"source-over\";\n\tcontext.strokeStyle = c;\n\tcontext.stroke();\n\tcontext.globalAlpha = 1;\n\tcontext.lineWidth = 1;\n\tcontext.strokeStyle = \"black\";\n}\n\nShip.prototype.getPlannedHeading = function(){\n\tvar adjust = 0;\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tadjust += this.actions[i].h;\n\t}\n\treturn this.heading + adjust;\n}\n\nShip.prototype.getPlannedFacing = function(){\n\tvar adjust = 0;\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tadjust += this.actions[i].f;\n\t}\n\treturn this.facing + adjust;\n}\n\nShip.prototype.getDrawFacing = function(){\n\treturn this.drawFacing;\n}\n\nShip.prototype.getRealHeading = function(){\n\tvar heading = 0;\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].resolved){\n\t\t\theading += this.actions[i].h;\n\t\t}\n\t}\n\treturn this.heading + heading;\n}\n\nShip.prototype.getImpulseMod = function(){\n\treturn this.getCurSpeed() / this.getBaseImpulse();\n}\n\nShip.prototype.getBaseHitChance = function(){\n\treturn this.baseHitChance;\n}\n\nShip.prototype.getAngledHitChance = function(angle){\n\t//console.log(angle);\n\tvar a, b, c, base;\n\t\n\twhile (angle > 90){\n\t\tangle -= 180;\n\t}\n\tif (angle < 0){\n\t\tangle *= -1;\n\t}\n\n\tbase = this.getBaseHitChance();\n\ta = base * this.profile[0];\n\tb = base * this.profile[1];\n\tsub = ((90 - angle) * a) + ((angle - 0) * b);\n\tsub /= (90 - 0);\n\treturn Math.ceil(sub);\n}\n\nShip.prototype.getDmgsByFire = function(fire){\n\t//console.log(fire.hits);\n\tvar dmgs = [];\n\tvar lookup = 0;\n\n\tfor (var i = 0; i < fire.hits.length; i++){\n\t\tlookup += fire.hits[i] * fire.weapon.getDmgsPerShot(fire);\n\t}\n\n\tif (!lookup){return dmgs;}\n\n\tfor (var i = this.primary.damages.length-1; i >= 0; i--){\n\t\tif (this.primary.damages[i].fireid == fire.id){\t\t\t\t\t\n\t\t\tdmgs.push(this.primary.damages[i]);\n\t\t\tdmgs[dmgs.length-1].system = this.primary.display;\n\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(-1, this.primary.name);\n\t\t\t//if (this.primary.damages[i].systemid == 1){lookup--;}\n\t\t\tif (!lookup){return dmgs};\n\t\t}\n\t\telse if (this.primary.damages[i].turn < fire.turn){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tfor (var j = this.primary.systems[i].damages.length-1; j >= 0; j--){\n\t\t\tif (this.primary.systems[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.primary.systems[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.primary.systems[i].display;\n\t\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(-1, this.primary.systems[i].name);\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t\telse if (this.primary.systems[i].damages[j].turn < fire.turn){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].damages.length; j++){\n\t\t\tif (this.structures[i].damages[j].fireid == fire.id){\n\t\t\t\tdmgs.push(this.structures[i].damages[j]);\n\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].display;\n\t\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(-1, \"Main Structure\");\n\t\t\t\tlookup--;\n\t\t\t\tif (!lookup){return dmgs};\n\t\t\t}\n\t\t}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tfor (var k = this.structures[i].systems[j].damages.length-1; k >= 0; k--){\n\t\t\t\tif (this.structures[i].systems[j].damages[k].fireid == fire.id){\n\t\t\t\t\tdmgs.push(this.structures[i].systems[j].damages[k]);\n\t\t\t\t\tdmgs[dmgs.length-1].system = this.structures[i].systems[j].display\n\t\t\t\t\tdmgs[dmgs.length-1].loc = this.getSystemLocation(i, this.structures[i].systems[j].name);\n\t\t\t\t\tlookup--;\n\t\t\t\t\tif (!lookup){return dmgs};\n\t\t\t\t} else if (this.structures[i].systems[j].damages[k].turn < fire.turn){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dmgs;\n}\n\nShip.prototype.getFlashHitSection = function(fire){\n\tvar o = fire.shooter.getPlannedPos();\n\tvar t = this.getPlannedPos();\n\tvar a = getAngleFromTo(o, t) + range(-5, 5);\n\tvar d = -this.size/3;\n\treturn getPointInDir(d, a, 0, 0);\n}\n\nShip.prototype.getFireDest = function(fire, isHit, num){\n\tif (isHit){return fire.damages[num].loc;}\n\telse {\n\t\tvar o = fire.shooter.getPlannedPos();\n\t\tvar t = this.getPlannedPos();\n\t\tvar a = getAngleFromTo(o, t)// + range(-3, 3);\n\t\tvar d = this.size * range(7, 13) / 10;\n\t\treturn getPointInDir(d, a, 0, 0);\n\t\treturn rotate(0, 0, getPointInDir(d, a, 0, 0), this.getDrawFacing());\n\t}\n}\n\nShip.prototype.getSystemLocation = function(i, name){\n\tvar p;\n\tif (i == -1){\n\t\tswitch (name){\n\t\t\tcase \"Main Structure\": p = getPointInDir(this.size/6, this.getDrawFacing()+range(0, 359), 0, 0); break;\n\t\t\tcase \"Command\": p = getPointInDir(this.size/6, this.getDrawFacing()+range(-10, 10), 0, 0); break;\n\t\t\tcase \"Reactor\": p = getPointInDir(-this.size/4, this.getDrawFacing()+range(-15, 15), 0, 0); break;\n\t\t\tcase \"Sensor\": p = getPointInDir(this.size/3, this.getDrawFacing()+range(-15, 15), 0, 0); break;\n\t\t\tcase \"Engine\": p = getPointInDir(-this.size/4, this.getDrawFacing()+range(-15, 15), 0, 0); break;\n\t\t\tcase \"Jammer\": p = getPointInDir(-this.size/4, this.getDrawFacing()+range(-15, 15), 0, 0); break;\n\t\t\tcase \"GravitonSupressor\": p = getPointInDir(-this.size/4, this.getDrawFacing()+range(-15, 15), 0, 0); break;\n\t\t}\n\t}\n\telse {\n\t\tp = getPointInDir(this.size/4, getSystemArcDir(this.structures[i]) + this.getDrawFacing() + range(-10, 10), 0, 0);\n\t}\n\tp.x += range(-8, 8);\n\tp.y += range(-8, 8);\n\treturn p;\n}\n\nShip.prototype.getWeaponOrigin = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (i == this.structures.length-1 || id > this.structures[i].id && id < this.structures[i+1].id){\n\t\t\treturn this.structures[i].getWeaponPosition(this.size, this.getDrawFacing());\n\t\t}\n\t}\n\tconsole.log(\"lacking gun origin\");\n\treturn this.getSystem(id);\n}\n\nShip.prototype.jumpIsImminent = function(){\n\tif (this.withdraw == game.turn+1){return true;}\n\t//if (this.actions.length && this.actions[this.actions.length-1].type == \"jumpOut\"){return true;}\n\treturn false;\n}\n\nShip.prototype.isPreparingJump = function(){\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"jumpOut\"){return true;}\n\tif (this.withdraw){return true;}\n\treturn false;\n}\n\nShip.prototype.resetMoveMode = function(){\n\tvar turnMode = game.mode == 2;\n\n\tthis.unsetMoveMode();\n\tthis.setMoveMode();\n\tif (turnMode && this.canTurn()){\n\t\tthis.switchTurnMode();\n\t}\n}\n\nShip.prototype.getCurSpeed = function(){\n\tif (game.phase >= 1 && (this.hasMoved())){return this.curImp;}\n\tvar step = this.getImpulseStep();\n\tvar amount = 0;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type != \"speed\"){continue;}\n\t\tamount += this.actions[i].dist;\n\t}\n\treturn this.curImp + step*amount;\n}\n\nShip.prototype.getRemSpeed = function(){\n\tif (game.phase > this.focus){return 0;}\t\n\tvar impulse = this.getCurSpeed();\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].turn == game.turn){\n\t\t\tif (this.actions[i].type == \"flip\"){\n\t\t\t\timpulse = Math.floor(impulse/2);\n\t\t\t}\n\t\t\telse if (this.actions[i].type == \"move\"){\n\t\t\t\timpulse -= this.actions[i].dist;\n\t\t\t}\n\t\t}\n\t}\n\treturn impulse;\n}\n\nShip.prototype.getFacingSectionPoint = function(fire){\n\tvar o = fire.shooter.getPlannedPos();\n\tvar t = this.getPlannedPos();\n\tvar a = getAngleFromTo(o, t) + range(-5, 5);\n\t//var d = getDistance(o, t);\n\treturn getPointInDir(-this.size/4, a, 0, 0);\n}\n\nShip.prototype.getExploSize = function(i){\n\tif (this.ship){return this.size;}\n\telse if (this.squad){return this.structures[i].size/2;}\n\telse if (this.flight){return this.structures[i].mass*0.4;}\n\telse if (this.salvo){return 10;}\n}\n\nShip.prototype.setMoveAngles = function(){\n\t//console.log(\"setMoveAngles\");\n\tvar angle = this.getPlannedHeading();\n\tvar slipAngle = this.getSlipAngle();\t\n\tthis.moveAngles = {start: addAngle(0 + slipAngle, angle), end: addAngle(360 - slipAngle, angle)};\n}\n\nShip.prototype.drawMoveArea = function(){\n\t//console.log(\"drawMoveArea\");\n\n\tthis.drawTurnDelayIndicator();\n\treturn;\n\n\tvar center = this.getPlannedPos();\t\n\tvar rem = this.getRemSpeed();\n\tvar p1 = getPointInDir(rem, this.moveAngles.start, center.x, center.y);\n\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\tvar rad1 = degreeToRadian(this.moveAngles.start);\n\tvar rad2 = degreeToRadian(this.moveAngles.end);\n\tvar delay = this.getRemDelay();\n\t\n\tif (delay > 0){\n\t\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\t\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\tmoveCtx.lineWidth = 2\n\t\tmoveCtx.stroke();\n\t\tmoveCtx.strokeStyle = \"black\";\t\n\t\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\t\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\t\tmoveCtx.fill();\n\t\tmoveCtx.globalCompositeOperation = \"source-over\";\n\t}\n\n\tmoveCtx.beginPath();\t\t\t\n\tmoveCtx.moveTo(center.x, center.y);\n\tmoveCtx.lineTo(p1.x, p1.y); \n\tmoveCtx.arc(center.x, center.y, dist, rad1, rad2, false);\n\tmoveCtx.closePath();\n\tmoveCtx.globalAlpha = 0.15;\n\tmoveCtx.fillStyle = \"white\";\n\tmoveCtx.fill();\n\tmoveCtx.globalAlpha = 1;\n}\n\n\nShip.prototype.drawMoveArea = function(){\n\tvar delay = this.getRemDelay();\n\tif (!delay){return;}\n\n\tvar center = this.getPlannedPos();\t\n\tvar rem = this.getRemSpeed();\n\tvar p1 = getPointInDir(rem, this.moveAngles.start, center.x, center.y);\n\tvar dist = getDistance( {x: center.x, y: center.y}, p1);\n\t\n\tvar delayRad1 = degreeToRadian(this.moveAngles.start-45);\n\tvar delayRad2 = degreeToRadian(this.moveAngles.end+45);\n\tmoveCtx.beginPath();\t\t\t\n\tmoveCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\tmoveCtx.closePath();\n\tmoveCtx.strokeStyle = \"yellow\";\n\tmoveCtx.lineWidth = 2\n\tmoveCtx.stroke();\n\tmoveCtx.strokeStyle = \"black\";\t\n\tmoveCtx.arc(center.x, center.y, Math.max(0,delay-3), 0, 2*Math.PI, false);\n\tmoveCtx.globalCompositeOperation = \"destination-out\";\n\tmoveCtx.fill();\n\tmoveCtx.globalCompositeOperation = \"source-over\";\n}\n\n\nShip.prototype.getEngineOutput = function(){\n\tvar ep = 0;\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == \"Engine\"){\n\t\t\tep += this.primary.systems[i].getOutput();\n\t\t}\n\t}\n\treturn ep;\n}\n\nShip.prototype.getEffEP = function(){\n\treturn Math.floor(this.getEngineOutput() / this.getImpulseMod());\n}\n\nShip.prototype.getRemEP = function(){\n\tvar ep = this.getEffEP();\n\t\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].turn == game.turn){\n\t\t\tif (this.actions[i].cost != 0){\n\t\t\t\tep -= this.actions[i].cost / this.getImpulseMod() * this.actions[i].costmod;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (ep < 0){return 0;}\n\treturn Math.ceil(ep);\n}\n\nShip.prototype.getRemDelay = function(){\n\tvar delay = this.remDelay;\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].type == \"turn\"){\n\t\t\tdelay += Math.ceil(this.actions[i].delay/this.actions[i].costmod);\n\t\t\t//delay += this.actions[i].delay;\n\t\t}\n\t\telse if (this.actions[i].type == \"move\"){\n\t\t\tdelay = Math.max(0, delay - this.actions[i].dist);\n\t\t}\n\t}\n\treturn Math.ceil(delay);\n}\t\n\nShip.prototype.getRemDelaya = function(){\n\treturn this.remDelay;\n}\n\nShip.prototype.getTurnStartPos = function(){\n\tif (this.available == game.turn){\n\t\tif (this.ship || this.squad){\n\t\t\tvar l = game.phase == -1 ? 0 : 1;\n\t\t\treturn {x: this.actions[l].x, y: this.actions[l].y};\n\t\t}\n\t\telse {\n\t\t\treturn {x: this.actions[0].x, y: this.actions[0].y};\n\t\t}\n\t}\n\treturn new Point(this.x, this.y);\n}\n\nShip.prototype.getCameraStartPos = function(){\n\tif (this.focus && game.phase == 2){\n\t\treturn new Point(this.x, this.y);\n\t}\n\treturn this.getPlannedPos();\n}\n\nShip.prototype.getTurnStartFacing = function(){\n\treturn this.facing;\n}\n\nShip.prototype.getPlannedPos = function(){\n\tif (this.actions.length){\n\t\treturn new Point(this.actions[this.actions.length-1].x, this.actions[this.actions.length-1].y);\n\t}\n\treturn new Point(this.x, this.y);\n}\n\t\nShip.prototype.getGamePos = function(){\n\tif (this.actions.length){\n\t\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\t\tif (this.actions[i].resolved == 1){\n\t\t\t\treturn {x: this.actions[i].x, y: this.actions[i].y};\n\t\t\t}\n\t\t}\n\t}\n\treturn {x: this.x, y: this.y};\n}\n\nShip.prototype.getDrawPos = function(){\n\treturn {x: this.drawX, y: this.drawY};\n}\n\nShip.prototype.unpowerAllSystems = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].destroyed){\n\t\t\t\tthis.structures[i].systems[j].disabled = 1;\n\t\t\t\tthis.structures[i].systems[j].setTableRow();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.getIntactElements = function(){\n\tvar alive = 0;\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].destroyed){\n\t\t\talive++;\n\t\t}\n\t}\n\treturn alive;\n}\n\nShip.prototype.getCurMorale = function(){\n\treturn this.morale.current;\n}\n\nShip.prototype.getRelativeMoraleValue = function(){\n\tif (game.playerstatus){\n\t\treturn (this.moraleCost);\n\t} else return \"\";\n\t\n\tif (game.playerstatus){\n\t\treturn (this.moraleCost + \" / \" + Math.floor((this.moraleCost / game.getPlayerStatus(this.userid).morale)*100) + \"%\");\n\t} else return \"\";\n}\n\nShip.prototype.showUnitMoraleDiv = function(e){\n\tvar div = $(\"<div>\")\n\t\t.css(\"left\", e.clientX - 90)\n\t\t.css(\"top\", e.clientY + 40)\n\t\t.attr(\"id\", \"sysDiv\")\n\t\t.append($(\"<table>\")\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<th>\").attr(\"colSpan\", 2).html(\"Morale Overview\")))\n\t\t//\t.append($(\"<tr>\")\n\t\t//\t\t.append($(\"<td>\").html(\"Morale Value\"))\n\t\t//\t\t.append($(\"<td>\").html(this.getRelativeMoraleValue())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Base Morale\"))\n\t\t\t\t.append($(\"<td>\").html(this.getBaseMorale())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Flagship Bonus\"))\n\t\t\t\t.append($(\"<td>\").html(this.getFlagshipMoraleBonus())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Officer Bonus\"))\n\t\t\t\t.append($(\"<td>\").html(this.getOfficerMoraleBonus())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Critical Malus\"))\n\t\t\t\t.append($(\"<td>\").html(this.getCriticalMoraleMalus())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Damage Malus\"))\n\t\t\t\t.append($(\"<td>\").html(this.getDamageMoraleMalus())))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").attr(\"colSpan\", 2).css(\"height\", 6)))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\"Current Morale\"))\n\t\t\t\t//.append($(\"<td>\").html(\"Current Morale\"))\n\t\t\t\t.append($(\"<td>\").html(\"<span class='yellow'>\"+this.getSumMoraleModifers()+\"</span>\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").attr(\"colSpan\", 2).css(\"height\", 12)))\n\t\t\t.append($(\"<tr>\")\n\t\t\t//\t.append($(\"<td>\").attr(\"colSpan\", 2).html(\"Morale test triggered if damaged for more than 15% of remaining HP.</br>Rolls D100, adds 100, subtracts morale.\")))\n\t\t\t\t.append($(\"<td>\").attr(\"colSpan\", 2).html(\"Morale test if damaged > 10 % in a turn.</br>Current Morale - D30 - damage suffered.\")))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").attr(\"colSpan\", 2).css(\"height\", 6)))\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<th>\").attr(\"colSpan\", 2).html(\"Possible Effects\"))))\n\n\n\t\tfor (var i = 0; i < this.critEffects.length; i++){\n\t\t\tdiv.find(\"table\")\t\t\t\n\t\t\t.append($(\"<tr>\")\n\t\t\t\t.append($(\"<td>\").html(\">= \" + this.critEffects[i][1]))\n\t\t\t\t.append($(\"<td>\").html(this.critEffects[i][0] + \" \" + (this.critEffects[i][3] ? this.critEffects[i][3] : \"\"))))\n\t\t}\n\n\t$(document.body).append(div);\n\n}\n\nShip.prototype.hideMoraleDiv = function(){\n\t$(\"#sysDiv\").remove();\n}\n\nShip.prototype.getMoraleTrigger = function(){\n\treturn this.morale.trigger;\n}\n\nShip.prototype.getFlagshipMoraleBonus = function(){\n\treturn this.command ? \"+10\" : \"\";\n}\n\nShip.prototype.getOfficerMoraleBonus = function(){\n\tvar mod = this.getCrewLevel(0) * this.getSystemByName(\"Command\").crewEffect;\n\tif (mod){return \"+\" + mod;}\n\treturn \"\";\n}\n\nShip.prototype.getCriticalMoraleMalus = function(){\n\tvar mod = this.getSystemByName(\"Command\").getCritMod(\"Morale\");\n\tif (mod){return mod;}\n\treturn \"\";\n}\n\nShip.prototype.getDamageMoraleMalus = function(){\n\treturn this.morale.damage;\n\tvar dmg = (100 - Math.floor(this.primary.remaining / this.primary.integrity * 100))*-1;\n\t//if (!dmg){return \"\"}\n\treturn dmg;\n}\n\nShip.prototype.getBaseMorale = function(){\n\treturn this.morale.baseMorale;\n\treturn 100 + (this.faction == \"Narn Regime\" ? 50 : 0);\n}\n\nShip.prototype.getSumMoraleModifers = function(){\n\tvar baseMorale = this.getBaseMorale();\n\tvar cmd = this.getSystemByName(\"Command\");\n\tvar flagship = this.command ? 10 : 0;\n\tvar upgrade = this.getCrewLevel(0) * cmd.crewEffect;\n\tvar crits = cmd.getCritMod(\"Morale\");\n\tvar dmg = this.getDamageMoraleMalus();\n\treturn baseMorale + Math.floor(flagship + upgrade + crits + dmg);\n}\n\nShip.prototype.getRemMorale = function(){\n\tvar baseMorale = this.getBaseMorale();\n\tvar cmd = this.getSystemByName(\"Command\");\n\tvar flagship = this.command == true ? 10 : 0;\n\tvar upgrade = this.getCrewLevel(0) * cmd.crewEffect;\n\tvar crits = cmd.getCritMod(\"Morale\");\n\tvar dmg = this.getDamageMoraleMalus();\n\n\treturn baseMorale + Math.floor(flagship + upgrade + crits + dmg);\n}\n\nShip.prototype.getModifiedRoutChance = function(){\n\treturn this.morale.baseChance + \"%\";\n\tif (this.morale.bonusChance){\n\t\tif (this.morale.bonusChance > 0){\n\t\t\treturn this.morale.baseChance + \" +\" + this.morale.bonusChance + \"%\";\n\t\t} else return this.morale.baseChance + \" \" + this.morale.bonusChance + \"%\";\n\t}\n\telse return this.morale.baseChance + \"%\";\n}\n\nShip.prototype.getEffectiveRoutChance = function(){\n\tif (this.morale.effChance < 1 || this.morale.current >= this.morale.trigger){\n\t\treturn 0;\n\t}\n\telse return this.morale.effChance;\n}\n\nShip.prototype.createBaseDiv = function(){\n\tvar className = \"shipDiv\";\n\tif (this.squad){className += \" squad\";}\n\tif (game.phase > -2){\n\t\tif (this.userid != game.userid){className += \" hostile\";}\n\t\telse className += \" friendly\";\n\t}\n\n\tvar div = $(\"<div>\").addClass(className).data(\"shipId\", this.id)\n\n\tthis.element = div[0];\n\n\tvar topDiv = $(\"<div>\").addClass(\"topDiv\");\n\tvar subDiv = $(\"<div>\").addClass(\"header\");\n\tvar table = $(\"<table>\")\n\tvar headerC = \"red\";\n\tif (this.friendly){headerC = \"green\";}\n\n\t$(table)\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<th>\").html(this.getHeader()).attr(\"colSpan\", 2).addClass(\"name \" + headerC)))\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopPropagation(); e.preventDefault();\n\t\t\t\tvar unit = game.getUnit($(this).parent().parent().parent().data(\"shipId\"));\n\t\t\t\tunit.toggleDivSize();\n\t\t\t})\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<th>\").html(this.getCallSign()).attr(\"colSpan\", 2).addClass(headerC)))\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Type / Size\").css(\"width\", \"50%\"))\n\t\t\t.append($(\"<td>\").html(getUnitType(this.traverse) + \" / \" + this.traverse)))\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Base to-Hit\"))\n\t\t\t.append($(\"<td>\").html(this.getStringHitChance()).addClass(\"profile\")))\n\t\t//.append($(\"<tr>\")\n\t\t//\t.append($(\"<td>\").html(\"Focus Gain\"))\n\t\t//\t.append($(\"<td>\").addClass(\"focusGain\").html((this.getFocusString()))))\n\t\t//.append(this.getMoraleDiv())\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Current Speed\"))\n\t\t\t.append($(\"<td>\").html(this.getCurSpeed()).addClass(\"speed\")))\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Maneuverability\"))\n\t\t\t.append($(\"<td>\").html(this.getRemEP() + \" / \" + this.getEffEP()).addClass(\"ep\")))\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Accel, Roll, Flip\"))\n\t\t\t.append($(\"<td>\").html(this.getImpulseChangeCost() + \", \" + this.getActionCost(0) + \", \" + this.getActionCost(1)).addClass(\"change\")))\n\t\t//.append($(\"<tr>\")\n\t\t//\t.append($(\"<td>\").html(\"Delay / 1\\xB0\"))\n\t\t//\t.append($(\"<td>\").html(round(this.getTurnDelay(), 2) + \" px\")))\n\t//\t.append($(\"<tr>\")\n\t//\t\t.append($(\"<td>\").html(\"Active Turn Delay\"))\n\t//\t\t.append($(\"<td>\").html(this.getRemDelay()).addClass(\"delay\")))\n\t\t.append($(\"<tr>\")\n\t\t\t.append($(\"<td>\").html(\"Current Morale\"))\n\t\t\t.append(\n\t\t\t\t$(\"<td>\")\n\t\t\t\t\t.addClass(\"curMorale\")\n\t\t\t\t\t.html(this.getSumMoraleModifers()))\n\t\t\t\t\t.hover(\n\t\t\t\t\t\tfunction(e){\n\t\t\t\t\t\t\tgame.getUnit($(this).parent().parent().parent().parent().parent().data(\"shipId\")).showUnitMoraleDiv(e);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction(e){\n\t\t\t\t\t\t\tgame.getUnit($(this).parent().parent().parent().parent().parent().data(\"shipId\")).hideMoraleDiv(e);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\n\tsubDiv.append(table);\n\ttopDiv.append(subDiv)\n\tdiv.append(topDiv);\n\n\t$(this.expandDiv($(div[0])))\n\t\t.find(\".structContainer\")\n\t\t\t//.contextmenu(function(e){e.stopPropagation(); e.preventDefault()})\n\t\t\t.end()\n\t\t.find(\".header\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\t//e.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\t$(this).parent().find($(\".structContainer\")).toggle();\n\t\t\t})\n\t\t\t.end()\n\t\t.find(\".iconContainer\")\n\t\t\t.contextmenu(function(e){\n\t\t\t\te.stopImmediatePropagation(); e.preventDefault();\n\t\t\t\tif ($(this).parent().parent().data(\"shipId\") != aUnit){\n\t\t\t\t\tgame.zIndex--;\n\t\t\t\t\t$(this).parent().parent().addClass(\"disabled\");\n\t\t\t\t}\n\t\t\t})\n\n\tif (game.turn){div.drag();}\n\n\tif (game.phase == 2){\n\t\t$(div).find(\".structContainer\").show();\n\t}\n\n\t$(this.addFocusDiv($(div[0])))\n\t$(this.addCommandDiv($(div[0])))\n}\n\nShip.prototype.getFocusString = function(){\n\treturn this.baseFocusRate + \"%\" + \" => \" + this.getFocusIfCommand();\n\treturn this.baseFocusRate + \" + \" + this.modFocusRate + \"%\" + \" / \" + this.getFocusIfCommand();\n}\n\nShip.prototype.addFocusDiv = function(shipDiv){\n\tif (this.isJumpingOut() || this.isDestroyed() || game.phase != 3){return;}\n\n\tshipDiv.append(\n\t\t$(\"<div>\")\n\t\t.addClass(\"focusContainer\")\n\t\t.append(\n\t\t\t$(\"<input>\")\n\t\t\t.mousemove(function(e){e.preventDefault(); e.stopPropagation();})\n\t\t\t.attr(\"type\", \"button\")\n\t\t\t.attr(\"value\", \"Assign Focus (\" + this.getFocusCost() + \" Focus)\")\n\t\t\t.hide()\n\t\t\t.click(function(){\n\t\t\t\tgame.getUnit($(this).parent().parent().data(\"shipId\")).toggleFocus();\n\t\t\t})\n\t\t)\n\t\t.append(\n\t\t\t$(\"<div>\")\n\t\t\t.html(\"Has Focus (\" + this.getFocusCost()+\")\")\n\t\t\t.addClass(\"focusEntry\")\n\t\t\t.hide()\n\t\t\t.click(function(){\n\t\t\t\tgame.getUnit($(this).parent().parent().data(\"shipId\")).toggleFocus();\n\t\t\t})\n\t\t)\n\t)\n\n\tif (this.focus){$(shipDiv).find(\".focusContainer .focusEntry\").show();}\n\telse $(this.element).find(\".focusContainer input\").show();\n}\n\nShip.prototype.addCommandDiv = function(shipDiv){\n\tif (this.isJumpingOut() || this.isDestroyed()){return;}\n\n\t$(shipDiv).append(\n\t\t$(\"<div>\")\n\t\t.addClass(\"commandContainer\")\n\t\t\t.append(\n\t\t\t\t$(\"<input>\")\n\t\t\t\t.mousemove(function(e){e.preventDefault(); e.stopPropagation();})\n\t\t\t\t.attr(\"type\", \"button\")\n\t\t\t\t.attr(\"value\", \"Assign Fleet Command (+\" + this.getFocusIfCommand() + \" / turn)\")\n\t\t\t\t.hide()\n\t\t\t\t.click(function(){\n\t\t\t\t\tgame.getUnit(aUnit).trySetCommand()\n\t\t\t\t})\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(\"<div>\")\n\t\t\t\t.html(\"Active Fleet Command (+\" + this.getFocusIfCommand() + \" / turn)\")\n\t\t\t\t.addClass(\"commandEntry\")\n\t\t\t\t.hide()\n\t\t\t)\n\t)\n\n\tif (this.command){shipDiv.find(\".commandContainer .commandEntry\").show();}\n\telse if (game.phase == 3 && game.canSetNewCommandUnit()){shipDiv.find(\".commandContainer input\").show();}\n\telse shipDiv.find(\".commandContainer\").hide();\n}\n\nShip.prototype.getUnmoddedFocusGain = function(){\n\treturn this.baseFocusRate + \"% / \" + Math.floor(game.settings.pv / 100 * (this.baseFocusRate + this.modFocusRate));\n}\n\nShip.prototype.getFocusIfCommand = function(){\n\tvar command = this.getSystemByName(\"Command\");\n\t\tcommand.output = 100;\n\tvar gain = Math.floor(game.settings.pv / 100 * command.getOutput() / 100 * (this.baseFocusRate + this.modFocusRate) * (this.faction == \"Minbari Federation\" ? 1.3 : 1));\n\t\tcommand.output = 0;\n\treturn gain;\n}\n\nShip.prototype.getUnitClass = function(){\n\tif (this.ship){return \"Ship\";\n\t} else return \"Squadron\";\n}\n\nShip.prototype.getUnitName = function(){\n\tif (this.ship){return this.name;\n\t} else return \"Squadron\";\n}\n\nShip.prototype.trySetCommand = function(){\n\tif (!this.friendly){return false;}\n\telse if (this.isJumpingOut()){popup(\"This unit is jumping to hyperspace.\");}\n\telse if (this.id == game.commandChange.original){\n\t\tthis.doSetCommand();\n\t}\n\telse {\n\t\tvar html = \"Transfering Fleet Command will incur the following penalties:</br></br>\";\n\t\t\thtml += \"- No Focus income at end of this turn</br>\";\n\t\t\thtml += \"- Focus cant be spend until the beginning of next turn</br></br>\";\n\t\t\thtml += \"<input type='button' class='popupEntryConfirm' value='Confirm Transfer' onclick='game.getUnit(aUnit).doSetCommand()'>\";\n\t\t\tpopup(html);\n\t\t\t//popup(\"Relocating Fleet Command will set saved Focus Points to 0 at end of turn</br>(after Focus is spend, before Focus is gained).</br></br>Please confirm your order.</br><input type='button' class='popupEntryConfirm' value='Confirm Transfer' onclick='game.getUnit(aUnit).doSetCommand()'>\");\n\t}\n}\n\nShip.prototype.doSetCommand = function(){\n\t//console.log(\"setCommand\");\n\n\tfor (var i = 0; i < game.ships.length; i++){\n\t\tif (!game.ships[i].friendly || game.ships[i].flight || game.ships[i].salvo || !game.ships[i].command){continue;}\n\t\tgame.ships[i].command = 0;\n\t\tgame.commandChange.old = game.ships[i].id;\n\n\t\t$(game.ships[i].element)\n\t\t\t.find(\".name\").html(this.getHeader()).end()\n\t\t\t.find(\".commandContainer\")\n\t\t\t.find(\"input\").show().end()\n\t\t\t.find(\".commandEntry\").hide().end();\n\n\t\tif (!game.commandChange.original){\n\t\t\tgame.commandChange.original = game.ships[i].id;\n\t\t\t$(game.ships[i].element).find(\".commandContainer input\").attr(\"value\", \"Retain Fleet Command\");\n\t\t}\n\t}\n\n\tfor (var i = 0; i < game.ships.length; i++){\n\t\tif (!game.ships[i].friendly || game.ships[i].flight || game.ships[i].salvo || !game.ships[i].focus){continue;}\n\t\t//console.log(\"focus for #\" + game.ships[i].id);\n\t\tgame.ships[i].unsetUnitFocus();\n\t}\n\n\tif (game.commandChange.original == this.id){\n\t\tthis.command = game.turn;\n\t\tgame.commandChange.old = 0; game.commandChange.new = 0; game.commandChange.original = 0; \n\t}\n\telse {\n\t\tthis.command = game.turn + 1;\n\t\tgame.commandChange.new = this.id;\n\t}\n\t\n\t$(this.element)\n\t\t.find(\".commandContainer\")\n\t\t.find(\"input\").hide().end()\n\t\t.find(\".commandEntry\").show();\n\n\tfor (let i = 0; i < game.playerstatus.length; i++){\n\t\tif (game.playerstatus[i].userid == game.userid){\n\t\t\tgame.playerstatus[i].gainFocus = this.getFocusIfCommand();\n\t\t\t//game.playerstatus[i].gainFocus = Math.floor(game.settings.pv / 100 * game.settings.focusMod / 10 * (this.baseFocusRate + this.modFocusRate) * (game.playerstatus[i].faction == \"Minbari Federation\" ? 1.3 : 1));\n\t\t\tgame.playerstatus[i].maxFocus = game.playerstatus[i].gainFocus * 4;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$(\"#popupWrapper\").hide();\n\t$(this.element).find(\".name\").html(this.getHeader());\n\tgame.setFocusInfo();\n\tgame.redraw();\n}\n\nShip.prototype.getFocusCost = function(){\n\treturn Math.ceil(this.moraleCost);\n}\n\nShip.prototype.toggleFocus = function(){\n\tif (this.focus){this.unsetUnitFocus();}\n\telse this.setUnitFocus();\n}\n\nShip.prototype.setUnitFocus = function(){\n\tif (!this.friendly){return;}\n\tif (game.phase != 3){popup(\"Focus can only be issued in Phase 3 - Damage Control\"); return;}\n\tif (game.userHasTransferedCommand()){popup(\"Ongoing Fleet Command transfer prohibits Focus\"); return;}\n\tif (this.isJumpingOut()){popup(\"This unit is jumping to hyperspace.\"); return;}\n\tif (!this.canAffordFocus()){popup(\"Insufficient Focus this action.</br>Have: \" + game.getRemFocus() + \"</br>Spending: \" + game.getTotalFocusSpending() + \"</br>Need: \" + this.getFocusCost()); return;}\n\tif (!this.focus){\n\t\tthis.focus = 1;\n\t\t$(this.element).find(\".focusContainer\").find(\"input\").attr(\"value\", \"Has Focus (\" + this.getFocusCost() + \" Focus)\");\n\t\t$(this.element).find(\".name\").html(this.getHeader());\n\t\tgame.setFocusSpendingInfo(this.userid);\n\t}\n}\n\nShip.prototype.unsetUnitFocus = function(){\n\tif (this.focus){\n\t\tthis.focus = 0;\n\t\t$(this.element).find(\".focusContainer\").find(\"input\").attr(\"value\", \"Assign Focus (\" + this.getFocusCost() + \" Focus)\");\n\t\t$(this.element).find(\".name\").html(this.getHeader());\n\t\tgame.setFocusSpendingInfo(this.userid);\n\t}\n}\n\nShip.prototype.canAffordFocus = function(){\n\tif (game.getRemFocus() - game.getTotalFocusSpending() - this.getFocusCost() >= 0){\n\t\treturn true;\n\t} return false;\n}\n\nShip.prototype.getJumpDiv = function(){\n\n\tvar name = this.squad ? \"system jumpDiv\" : \"jumpDiv\";\n\tvar jumpDiv = \n\t\t$(\"<div>\").addClass(name)\n\t\t\t.append($(\"<img>\")\n\t\t\t\t.addClass(\"jumpOutButton\")\n\t\t\t\t.attr(\"src\", \"varIcons/redVortex.png\"))\n\t\t\t.append($(\"<div>\")\n\t\t\t\t.addClass(\"outputMask\")\n\t\t\t\t.attr(\"src\", \"varIcons/redVortex.png\"))\n\n\tif (this.needsWithdrawClickEvent()){\n\t\tjumpDiv.find(\"img\")\n\t\t.click(function(){game.getUnit($(this.closest(\".shipDiv\")).data(\"shipId\")).requestJumpOut();\n\t\t})\n\t}\n\telse if (this.isJumpingOut()){\n\t\tjumpDiv.find(\"img\").toggleClass(\"selected\");\n\t}\n\treturn jumpDiv.hide();\n}\n\nShip.prototype.addQuickFireEvents = function(div){\n\tif (!game.turn){return;}\n\n\tdiv.find(\".iconContainer\")\n\t\t.hover(function(e){\n\t\t\tif (aUnit){\n\t\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\t\tif (!shooter.hasWeaponsSelected()){return;}\n\t\t\t\tvar target = game.getUnit($(this).parent().parent().data(\"shipId\"));\n\t\t\t\tif (shooter.id == target.id || shooter.userid == target.userid){return;}\n\t\t\t\thandleWeaponAimEvent(shooter, target, e);\n\t\t\t}\n\t\t})\n\t\t.click(function(e){\n\t\t\tif (!game.turn){return;}\n\t\t\tvar shooter = game.getUnit(aUnit);\n\t\t\tif (!shooter.hasWeaponsSelected()){return;}\n\t\t\tvar target = game.getUnit($(this).parent().parent().data(\"shipId\"));\n\t\t\tif (shooter.id == target.id || shooter.userid == target.userid){return;}\n\t\t\t\tfirePhase(e, {x: 0, y: 0}, shooter, target.id);\n\t\t})\n}\n\nShip.prototype.expandDiv = function(div){\n\n\tdiv\n\t.find(\".topDiv\")\n\t.append($(\"<div>\")\n\t\t.addClass(\"iconContainer\"));\n\n\tthis.addQuickFireEvents(div);\n\n\t$(document.body).append(div);\n\t\n\t//$(div).css(\"position\", \"absolute\").css(\"top\", 300);\n\n\tstructContainer = $(\"<div>\").addClass(\"structContainer\");\n\tdiv.append(structContainer);\n\n\tvar noFront = true;\n\tvar noAft = true;\n\tvar sides = 0;\n\tvar widen = 0;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].turret){continue;} // turret\n\t\tthis.structures[i].direction = getLayoutDir(this.structures[i]);\n\t\tif (this.structures[i].direction == 0 || this.structures[i].direction == 360){\n\t\t\tnoFront = false;\n\t\t}\n\t\telse if (this.structures[i].direction == 180){\n\t\t\tnoAft = false;\n\t\t}\n\t\telse if (this.structures[i].direction > 0 && this.structures[i].direction < 180 || this.structures[i].direction > 180 && this.structures[i].direction < 360){\n\t\t\tsides++;\n\t\t}\n\t}\n\tsides /= 2;\n\n\tvar conWidth = structContainer.width();\n\tvar conHeight = structContainer.height();\n\n\tvar globalShiftY = 0;\n\n\n\t// OUTER STRUCTS\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].turret){continue;}\n\n\t\tvar structDiv = $(\"<div>\").addClass(\"structDiv\");\n\t\tstructContainer.append(structDiv);\n\t\t\t\n\t\tvar structTable = $(\"<table>\").addClass(\"structTable\");\n\t\tstructDiv.append(structTable);\n\n\t\tvar armour = this.structures[i].getTableData();\n\n\t\tif ((game.phase == -1) && this.structures[i].getBoostEffect(\"Armour\")){\n\t\t\t{armour.append(this.structures[i].getBoostDiv())};\n\t\t}\n\n\t\tvar tr = document.createElement(\"tr\");\n\t\t\t$(tr).append(armour);\n\t\tstructTable.append(tr);\n\n\n\t\tvar col = 0;\n\t\tvar max = this.structures[i].width;\n\t\tvar w;\n\t\tvar a = this.structures[i].direction; if (a == 360){a = 0;}\n\t\tvar extraWidth = 0;\n\n\t\tif (this.structures[i].getBoostEffect(\"Armour\")){extraWidth = 1;}\n\n\t\tif (max == 1){\n\t\t\tif (extraWidth){ // EA\n\t\t\t\tif (a == 0 || a == 180){\n\t\t\t\t\tarmour.css(\"width\", 40);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tarmour.css(\"width\", 50);\n\t\t\t\t\tarmour.css(\"height\", 42);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (a == 0 || a == 180){\n\t\t\t\t\tarmour.css(\"width\", 55);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tarmour.css(\"width\", 50);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (max == 2){\n\t\t\tif (extraWidth){\n\t\t\t\tif (a == 0 || a == 180){\n\t\t\t\t\tarmour.css(\"width\", 70);\n\t\t\t\t\tarmour.css(\"height\", 25);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tarmour.css(\"width\", 40);\n\t\t\t\t\tarmour.css(\"height\", 42);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// SYSTEMS\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (col == 0){\n\t\t\t\ttr = document.createElement(\"tr\");\n\t\t\t}\n\n\t\t\tvar td = this.structures[i].systems[j].getTableData();\n\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\tcol+= this.structures[i].systems[j].width;\n\t\t\ttr.appendChild(td);\n\n\t\t\tif (this.id > 0 || game.turn == 1){\n\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv);}\n\n\t\t\t\tvar powerDiv = this.structures[i].systems[j].getPowerDiv();\n\t\t\t\tif (powerDiv){td.appendChild(powerDiv);}\n\n\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\tif (modeDiv){td.appendChild(modeDiv);}\n\t\t\t}\n\n\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t}\n\n\t\t\tif (col == max || j == this.structures[i].systems.length-1){\n\t\t\t\tstructTable.append(tr);\n\t\t\t\tcol = 0;\n\t\t\t}\n\n\n\t\t}\n\n\t\tif (!this.structures[i].systems.length){\n\t\t\tif (a != 0 && a != 180){\n\t\t\t\tstructTable.childNodes[0].childNodes[0].style.width = \"23px\";\n\t\t\t}\n\t\t}\n\n\t\tvar offsetX = 0;\n\t\tvar offsetY = -20;\n\n\t\t// STRUCT X\n\n\t\tif (a == 90 || a == 270){\n\t\t\tif (max == 2){\n\t\t\t\toffsetX += 25;\n\t\t\t\toffsetY -= 20;\n\t\t\t}\n\t\t\telse if (max == 1){\n\t\t\t\toffsetX += 30;\n\t\t\t}\n\t\t}\n\t\telse if (this.structures.length == 5 && (a == 78 || a == 282)){\n\t\t\toffsetX += 25; offsetY -= 30;\n\t\t}\n\t\telse if (a == 60 || a == 300 || noAft){\n\t\t\toffsetX += 10;\n\t\t}\n\n\t\tif (this.faction[0] == \"V\" && i % 2 != 0 && this.structures[i].systems.length >= 5){\n\t\t\toffsetX -= 10;\n\t\t}\n\t\t\n\t\tvar pos = getPointInDir(130 - offsetX, a-90, conWidth/2, conHeight/2-40);\n\t\tvar w = $(structDiv).width();\n\t\tvar h = $(structDiv).height();\n\n\t\t// STRUCT Y\n\t\tif (noFront){\n\t\t\toffsetY -= 60;\n\t\t}\n\n\t\tif (a == 0){\n\t\t\tif (!noAft && this.structures[i].systems.length <= 3){\n\t\t\t\toffsetY += 10;\n\t\t\t} else if (this.structures[i].systems.length > 6){\n\t\t\t\tglobalShiftY = 5;\n\t\t\t}\n\t\t}\n\t\telse if (noAft){\n\t\t\tif (sides > 1){ // Octurion\n\t\t\t} else offsetY -= 60 + this.structures.length*12;\n\t\t}\n\t\telse if (a == 180){\n\t\t\tif (noFront){offsetY -= 20;}\n\t\t\telse if (globalShiftY){offsetY -= 20;}\n\t\t\telse offsetY -= 40;\n\t\t}\n\t\telse if (sides >= 2 && a-90 != 0 && a-90 != 180){\n\t\t\toffsetY += 0;\n\t\t}\n\t\telse if (this.faction[0] == \"V\" && i % 2 != 0){\n\t\t\toffsetY = -(structDiv.height()/2) - 10;\n\t\t}\n\t\telse if (!noFront && !noAft){\n\t\t\toffsetY -= 30;\n\t\t}\n\n\t\t\n\t\t$(structDiv)\n\t\t\t.data(\"id\", this.structures[i].id)\n\t\t\t.css(\"left\", pos.x + -w/2)\n\t\t\t.css(\"top\", pos.y + offsetY)\n\n\t\tif (a >= 120 && a <= 240){\n\t\t\t//console.log(\"dign\");\n\t\t\tlet armour = $($(structTable).children().children()[0]);\n\t\t\tstructTable.children().append(armour);\n\t\t}\n\t}\n\n\n\n\t// PRIMARY\n\tvar primaryDiv = document.createElement(\"div\");\n\t\tprimaryDiv.className = \"primaryDiv\";\n\tvar primaryTable = document.createElement(\"table\");\n\t\tprimaryTable.className = \"PrimaryTable\";\n\t\tprimaryTable.appendChild(this.primary.getTableData());\n\n\t\tvar systems = 0;\n\t\tvar max = 3;\n\t\tprimaryTable.childNodes[0].childNodes[0].colSpan = max;\n\n\t\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\t\tif (systems == 0){\n\t\t\t\tvar tr = document.createElement(\"tr\");\n\t\t\t}\n\n\t\t\tvar td = this.primary.systems[i].getTableData();\n\t\t\t\ttd = this.attachEvent(td);\n\n\t\t\tif (this.id > 0 || game.turn == 1){\n\t\t\t\tvar boostDiv = this.primary.systems[i].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv)};\n\n\t\t\t\tvar powerDiv = this.primary.systems[i].getPowerDiv();\n\t\t\t\tif (powerDiv){\n\t\t\t\t\ttd.appendChild(powerDiv);\n\t\t\t\t}\n\t\t\t\tvar modeDiv = this.primary.systems[i].getModeDiv();\n\t\t\t\tif (modeDiv){\n\t\t\t\t\ttd.appendChild(modeDiv);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsystems++;\n\t\t\ttr.appendChild(td);\n\n\n\t\t\tif (systems == max || i == this.primary.systems.length-1 ){\n\t\t\t\tprimaryTable.appendChild(tr);\n\t\t\t\tsystems = 0;\n\t\t\t}\n\t\t}\n\n\t// PRIMARY OFFSET\n\tvar offsetX = 0;\n\tvar offsetY = -50;\n\tif (noFront){\n\t\toffsetY -= 40;\n\t} else if (noAft){\n\t\toffsetY += 20;\n\t} else offsetY += globalShiftY *4;\n\n\tprimaryDiv.appendChild(primaryTable);\n\tstructContainer.append(primaryDiv);\n\tvar w = $(primaryDiv).width();\n\tvar h = $(primaryDiv).height();\n\tvar primX = conWidth/2 - w/2;\n\tvar primY = conHeight/2 - h/2 + offsetY;\n\t$(primaryDiv)\n\t\t.css(\"left\", primX)\n\t\t.css(\"top\", primY);\n\n\tthis.addTurrets(div);\n\n\tvar width = 0;\n\tvar height = 0;\n\t$(div).find(\".structDiv\").each(function(){\n\t\tvar x = $(this).position().left + $(this).width();\n\t\tif (x > width){\n\t\t\twidth = x;\n\t\t}\n\t\tvar y = $(this).position().top + $(this).height();\n\t\tif (y > height){\n\t\t\theight = y;\n\t\t}\n\t})\n\n\tstructContainer.css(\"height\", Math.max($(primaryDiv).position().top + $(primaryDiv).height(), height) + 10);\n\n\tvar top = 0;\n\tvar left = structContainer.width() - 45;\n\tif (this.structures.length == 3 && this.structures[0].start == 0){\n\t\ttop = structContainer.height() - 65;\n\t}\n\t// POWER\n\tstructContainer\n\t\t.append($(\"<div>\").addClass(\"unusedPowerDiv\").css(\"top\", top + 5)\n\t\t\t.append($(\"<img>\").attr(\"src\", \"varIcons/powerIcon.png\")\n\t\t\t\t.addClass(\"unusedPowerIcon\"))\n\t\t\t.append($(\"<div>\")\n\t\t\t\t.addClass(\"unusedPower\")\n\t\t\t\t.html(this.getSystemByName(\"Reactor\").getOutput())))\n\n\t// JUMP OUT\n\t$(structContainer).append(this.getJumpDiv().css(\"top\", top+5).css(\"left\", left));\n\n\n\t// System options positioning\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\t//if (this.structures[i].turret){continue;}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tvar s = $(this.structures[i].systems[j].element)\n\t\t\tvar w = s.width();\n\t\t\tvar h = s.height();\n\n\t\t\ts\n\t\t\t.find(\".boostDiv\").css(\"left\", -16).css(\"top\", -4).end()\n\t\t\t.find(\".powerDiv\").css(\"left\", w).css(\"top\", -4).end()\n\t\t\t.find(\".modeDiv\").css(\"left\", w/2 - 9).css(\"top\", h);\n\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tvar s = $(this.primary.systems[i].element)\n\t\tvar w = s.width();\n\t\tvar h = s.height();\n\n\t\ts\n\t\t.find(\".boostDiv\").css(\"left\", -16).css(\"top\", 0).end()\n\t\t.find(\".powerDiv\").css(\"left\", w).css(\"top\", 0).end()\n\t\t.find(\".modeDiv\").css(\"left\", w/2 - 9).css(\"top\", h);\n\t}\n\n\n\n\tvar con = $(div).find(\".topDiv\").find(\".iconContainer\")\n\tvar leftWidth = $(div).find(\".header\").width()\n\tif (widen){$(con).css(\"width\", widen-leftWidth-4)}\n\tvar conW = con.width()\n\tvar conH = con.height();\n\n\t//var goal = conW * 0.8;\n\t\t\n\t// notes\n\t$(con)\n\t\t.append(\n\t\t\t$(this.getBaseImage().cloneNode(true))\n\t\t\t\t.addClass(\"rotate270\")\n\t\t\t\t.css(\"width\", \"100%\")\n\t\t)\n\t\t.append($(\"<div>\")\n\t\t\t.addClass(\"notes\")\n\t\t\t\t//.hide()\n\t\t\t)\n\t//rolling ?\n\n\t$(div).addClass(\"disabled\");\n\treturn div;\n}\n\nShip.prototype.setNotes = function(){\n\t$(this.element).find(\".notes\").children().remove();\n\tif (this.isRolled()){this.addNoteEntry(\"ROLLED\");}\n\tif (this.isRolling()){this.addNoteEntry(\"ROLLING\");}\n\tif (this.isFlipping()){this.addNoteEntry(\"FLIPPING\");}\n\tif (this.isPreparingJump()){this.addNoteEntry(\"Preparing Jump\");}\n}\n\nShip.prototype.needsWithdrawClickEvent = function(){\n\t//console.log(\"needsWithdrawClickEvent\");\n\tif (!this.destroyed && game.turn && game.phase == 3 && this.friendly && this.actions[this.actions.length-1].type != \"jumpOut\"){return true;}\n\treturn false;\n}\n\nShip.prototype.isJumpingOut = function(){\n\t//console.log(\"isJumpingOut\");\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"jumpOut\" || this.withdraw){return true;}\n\treturn false;\n}\n\nShip.prototype.requestJumpOut = function(){\n\n\tif (this.isJumpingOut()){\n\t\tvar last = this.actions[this.actions.length-1];\n\t\tif (last.type == \"jumpOut\" && !last.forced){\n\t\t\tthis.undoJumpOut();\n\t\t}\n\t}\n\telse instruct(\"Confirm if you really want to withdraw this unit from combat</p></p><div class='popupEntry buttonTD' style='font-size: 20px; width: 200px' onclick='game.getUnit(\" + this.id + \").doJumpOut()'>Confirm Withdrawal</div>\");\n}\n\nShip.prototype.doJumpOut = function(){\n\tvar p = this.getPlannedPos();\n\tthis.actions.push(new Move(-1, this.id, game.turn,  \"jumpOut\", 0, 0, p.x, p.y, 0, 0, 0, 0, 1, 1, 0));\n\tthis.withdraw = game.turn + 2;\n\tthis.setJumpOutTimer();\n\tthis.setNotes();\n\t//if (this.hasFocus()){this.unsetUnitFocus();}\n\t$(this.element).find(\".jumpDiv\").addClass(\"active\");\n\t$(\"#instructWrapper\").hide();\n}\n\nShip.prototype.undoJumpOut = function(){\n\tthis.actions.splice(this.actions.length-1, 1)\n\tthis.withdraw = 0;\n\tthis.setJumpOutTimer();\n\tthis.setNotes();\n\t$(this.element).find(\".jumpDiv\").removeClass(\"active\");\n}\n\nShip.prototype.setJumpOutTimer = function(){\n\t$(this.element).find(\".jumpDiv\").find(\".outputMask\").html(this.withdraw ? \"ETA \" + (this.withdraw - game.turn) : \"\");\n}\n\nShip.prototype.setFlipState = function(){\n}\n\nShip.prototype.setVarious = function(){\n\tif (this.isPreparingJump()){\n\t\tif (!this.withdraw){this.withdraw = game.turn+2;}\n\t\tthis.setJumpOutTimer();\n\t\t$(this.element).find(\".jumpDiv\").addClass(\"active\");\n\t}\n\tthis.setNotes();\n}\n\nShip.prototype.addNoteEntry = function(val){\n\t$(this.element).find(\".notes\")\n\t\t.show()\n\t\t.append($(\"<span>\").html(val + \"</br>\"));\n}\n\nShip.prototype.doRandomOffset = function(shift){\n\tif (this.ship || this.squad){return;}\n\tif (!this.doDraw){return;}\n\tif (this.mission.arrived){return;}\n\t//console.log(\"doOffset #\" + this.id);\n\tvar o = this.getGamePos();\n\tvar t = this.getTarget();\n\tvar tPos;\n\tif (t){\n\t\tvar tPos = t.getGamePos();\n\t} else tPos = {x: this.mission.x, y: this.mission.y};\n\n\tvar a = getAngleFromTo(o, tPos);\n\t//if (t){\n\t\t//a = addAngle(range(-90, 90), getAngleFromTo(o, this.getTarget().getPlannedPos()));\n\t\ta += 90 * shift + range (-5, 5);\n\t//} else a = range(0, 360);\n\t\n\tvar p = getPointInDir(25 + range(-5, 5), a, o.x, o.y);\n\t//console.log(p);\n\n\tthis.drawX = p.x;\n\tthis.drawY = p.y;\n\tthis.isOffset = 1;\n}\n\nShip.prototype.getAttachDivs = function(){\n\tif (this.cc.length){\n\t\t$(this.element).find(\".ccContainer\").remove();\n\t\tvar attach = [];\n\t\tvar valid = 0;\n\t\tif (this.ship || this.squad){valid = true;}\n\n\t\tfor (var i = 0; i < this.cc.length; i++){\n\t\t\tattach.push(game.getUnit(this.cc[i]));\n\t\t}\n\n\t\tif (!valid){\n\t\t\tvalid = 1;\n\t\t\tfor (var i = 0; i < attach.length; i++){\n\t\t\t\tif (attach[i].ship || attach[i].squad){\n\t\t\t\t\tvalid = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (valid){\n\t\t\tvar ccContainer = $(\"<div>\").addClass(\"ccContainer\")\n\t\t\t\t.append(($(\"<div>\").addClass(\"general\")\n\t\t\t\t\t.append($(\"<span>\").addClass(\"center15\").html(\"Local Units\"))));\n\n\t\t\tattach.sort(function(a, b){\n\t\t\t\treturn b.friendly - a.friendly;\n\t\t\t});\n\n\t\t\tvar pWidth = $(this.element).width();\n\t\t\t//console.log(pWidth);\n\n\t\t\tfor (var i = 0; i < attach.length; i++){\n\t\t\t\tif (attach[i].ship || attach[i].squad){continue;}\n\n\t\t\t\tccContainer = attach[i].supplyAttachDiv(ccContainer);\n\t\t\t}\n\n\t\t\t$(this.element).append($(ccContainer).css(\"width\", pWidth));\n\t\t}\n\t}\n}\n\nShip.prototype.previewSetup = function(){\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].loadout){\n\t\t\t$(this.primary.systems[i].element).addClass(\"hasOptions\");\n\t\t}\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].loadout){\n\t\t\t\t$(this.structures[i].systems[j].element).addClass(\"hasOptions\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.squad && !this.structures.length){\n\t\t$(this.element).find(\".coreContainer .system .outputMask\").hide();\n\t} else $(this.element).find(\".coreContainer .system .outputMask\").show();\n\n\n\t//if (this.squad){\n\t\tfor (var i = 0; i < this.structures.length; i++){\n\t\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\t\t$(this.structures[i].systems[j].element).find(\".outputMask\").hide();\n\t\t\t}\n\t\t}\n\t//}\n}\n\nShip.prototype.updateDiv = function(){\n\t$(this.element)\n\t\t.find(\".thrust\").html(this.getRemSpeed() + \" / \" + this.getCurSpeed()).end()\n\t\t.find(\".ep\").html(this.getRemEP() + \" / \" + this.getEffEP()).end()\n\t\t.find(\".change\").html(this.getImpulseChangeCost() + \", \" + this.getActionCost(0) + \", \" + this.getActionCost(1)).end()\n\t\t.find(\".delay\").html(this.getRemDelay()).end()\n}\n\nShip.prototype.doDestroy = function(){\n\tthis.doDraw = false;\n\tthis.destroyed = true;\n}\n\nShip.prototype.detachUnit = function(id){\n\tfor (var i = this.cc.length-1; i >= 0; i--){\n\t\tif (this.cc[i] == id){\n\t\t\tthis.cc.splice(i, 1);\n\t\t} else {\n\t\t\tvar attach = game.getUnit(this.cc[i]);\n\t\t\tif (!attach.ship && !attach.squad && attach.mission.targetid == id){\n\t\t\t\tthis.cc.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(this.element).find(\".ccContainer\").find(\".attachDiv\").each(function(i){\n\t\t$(this).remove();\n\t});\n\n\tthis.getAttachDivs();\n\tthis.setSupportImage();\n}\n\nShip.prototype.attachUnit = function(unit){\n\t$(this.element).find(\".ccContainer\").remove();\n\tthis.cc.push(unit.id);\n\tfor (var i = 0; i < unit.cc.length; i++){\n\t\tthis.cc.push(unit.cc[i]);\n\t}\n\tunit.cc.push(this.id);\n\tthis.getAttachDivs();\n}\n\nShip.prototype.setPostFireImage = function(){\n\tif (this.ship){return;}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].doDraw && (this.structures[i].destroyed || this.structures[i].disabled)){\n\t\t\tthis.structures[i].doDraw = 0;\n\t\t}\n\t}\n\tthis.resetImage();\n}\n\nShip.prototype.resetImage = function(){\n\t//if (this.salvo){return;}\n\tthis.img = undefined;\n\tthis.setImage();\n}\n\nShip.prototype.getBaseImage = function(){\n\treturn graphics.images[this.name.toLowerCase()];\n}\n\nShip.prototype.getUnitSelectorIcon = function(){\n\treturn this.getBaseImage();\n}\n\nShip.prototype.setPreFireImage = function(){\n\treturn;\n}\n\nShip.prototype.setSupportImage = function(){\n\t//console.log(\"setSupportImage #\" + this.id);\n\tif (!this.doDraw){return;}\n\tvar friendlies = [];\n\tvar hostiles = [];\n\tvar friendly = [];\n\tvar hostile = [];\n\n\tvar hasShip = 0;\n\n\tfor (var i = 0; i < this.cc.length; i++){\n\t\tif (game.getUnit(this.cc[i]).ship){hasShip = 1; break;}\n\t}\n\n\tif (hasShip){return;}\n\n\tfor (var i = 0; i < this.cc.length; i++){\n\t\tvar u = game.getUnit(this.cc[i]);\n\t\tvar add = 0;\n\n\t\t//if (!u.doDraw){continue;}\n\t\tif (this.ship || this.squad){add = 1;}\n\t\telse if (u.salvo && u.mission.arrived && u.mission.targetid == this.id){add = 1;}\n\t\telse if (!this.ship && !this.mission.arrived && u.mission.arrived && u.mission.targetid == this.id){add = 1;}\n\n\t\tif (!add){continue;}\n\t\telse u.doDraw = 0;\n\n\t\tif (this.userid == u.userid){\n\t\t\tfriendlies.push(u);\n\t\t}\n\t\telse hostiles.push(u);\n\t\tfor (var j = 0; j < u.structures.length; j++){\n\t\t\t//if (!u.structures[j].doDraw){continue;}\n\t\t\tif (this.userid == u.userid){\n\t\t\t\tfriendly.push(u.structures[j]);\n\t\t\t} else hostile.push(u.structures[j]);\n\t\t}\n\t}\n\n\tif (!friendlies.length && !hostiles.length){this.drawImg = undefined; return;}\n\tthis.setEscortImage(friendly, friendlies, hostile, hostiles);\n}\n\nShip.prototype.setEscortImage = function(friendly, friendlies, hostile, hostiles){\n\t//console.log(\"setEscortImage #\" + this.id);\n\tvar size = this.size;\n\tvar fSize = 26;\n\tvar tresh = fSize-2;\n\tvar drawFacing = 0; this.getDrawFacing() / 2;\n\n\tvar t = document.createElement(\"canvas\");\n\t\tt.width = 300;\n\t\tt.height = 300;\t\t\t\n\tvar ctx = t.getContext(\"2d\");\n\tvar shipFriendly = true;\n\tvar flightFriendly = true;\n\n\tif (this.userid != game.userid){\n\t\tshipFriendly = false;\n\t}\n\n\tif (friendly.length){\n\t\tfor (var i = 0; i < friendlies.length; i++){\n\t\t\tfriendlies[i].size = size + tresh;\n\t\t}\n\t\t\n\t\tvar color = \"#27e627\";\n\t\tif (!shipFriendly){color = \"red\";}\n\n\t\tctx.translate(t.width/2, t.height/2);\n\t\tctx.globalAlpha = 0.8;\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n\t\tctx.closePath();\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = 2;\n\t\tctx.stroke();\n\t\tctx.globalAlpha = 1;\n\t\tctx.lineWidth = 1;\n\t\t\n\t\t//var rota = range(0, 360);\n\t\t\n\t\tvar split = Math.floor(360/friendly.length);\n\n\t\t//ctx.rotate(rota*(Math.PI/180));\n\t\tfor (var i = 0; i < friendly.length; i++){\n\t\t\tif (!friendly[i].doDraw){continue;}\n\t\t\tvar a = split*i + drawFacing;\n\t\t\tvar drawPos = getPointInDir(size+tresh - fSize/2, a, 0, 0);\n\t\t\t//var aPos = getPointInDir(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t//console.log(a); \n\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\tfriendly[i].layout = drawPos;\n\t\t\tctx.translate(drawPos.x, drawPos.y);\n\t\t\tctx.rotate((a)*(Math.PI/180));\n\t\t\tctx.drawImage(\n\t\t\t\tfriendly[i].getBaseImage(),\n\t\t\t\t-fSize/2,\n\t\t\t\t-fSize/2,\n\t\t\t\tfSize, \n\t\t\t\tfSize\n\t\t\t);\n\t\t\tctx.rotate(-((a)*(Math.PI/180)));\n\t\t\tctx.translate(-drawPos.x, -drawPos.y);\n\n\t\t}\n\t\t//ctx.rotate(-rota*(Math.PI/180));\n\t\tctx.translate(-t.width/2, -t.height/2);\n\t\ttresh *= 2;\n\t}\n\n\tif (hostile.length){\n\t\tfor (var i = 0; i < hostiles.length; i++){\n\t\t\thostiles[i].size = size + tresh;\n\t\t}\n\t\t\t\n\t\tvar color = \"red\";\n\t\tif (!shipFriendly){color = \"#27e627\";}\n\n\t\tctx.translate(t.width/2, t.height/2);\n\t\tctx.globalAlpha = 0.8;\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, size + tresh, 0, 2*Math.PI);\n\t\tctx.closePath();\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = 2;\n\t\tctx.stroke();\n\t\tctx.globalAlpha = 1;\n\t\tctx.lineWidth = 1;\n\t\t\n\t\tvar split = Math.floor(360/hostile.length);\n\n\t\tfor (var i = 0; i < hostile.length; i++){\n\t\t\tif (!hostile[i].doDraw){continue;}\n\t\t\tvar a = split*i + drawFacing;\n\t\t\tvar drawPos = getPointInDir(size+tresh - fSize/2, a, 0, 0);\n\t\t\t//var aPos = getPointInDir(size/2+tresh - fSize/2, a, 0, 0);\n\t\t\t//console.log(a); \n\t\t\t//console.log(\"figher at \" +(this.drawX+pos.x)+\"/\"+(this.drawY + pos.y));\n\t\t\thostile[i].layout = drawPos;\n\t\t//\tif (hostile[i].isDestroyedThisTurn()){\n\t\t\t//\tconsole.log(hostile[i].id)\n\t\t//\t\tconsole.log(hostile[i].layout);\n\t\t//\t}\n\t\t\tctx.translate(drawPos.x, drawPos.y);\n\t\t\tctx.rotate((a-180)*(Math.PI/180));\n\t\t\tctx.drawImage(\n\t\t\t\thostile[i].getBaseImage(),\n\t\t\t\t-fSize/2,\n\t\t\t\t-fSize/2,\n\t\t\t\tfSize, \n\t\t\t\tfSize\n\t\t\t);\n\t\t\tctx.rotate(-((a-180)*(Math.PI/180)));\n\t\t\tctx.translate(-drawPos.x, -drawPos.y);\n\n\t\t}\n\t\tctx.translate(-t.width/2, -t.height/2);\n\t}\n\n\tthis.drawImg = t;\n\tctx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.willBeAnimated = function(){\n\tif (game.phase == -1 && this.faction[0] == \"V\"){\n\t\treturn true;\n\t}\n\telse if (game.phase == 1){\n\t\tif (this.focus){return false;}\n\t\treturn true;\n\t}\n\telse if (game.phase == 2){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.readyForAnim = function(){\n\tthis.setPreMovePosition();\n\tthis.setPreMoveFaceHead();\n\tvar frameMod = (game.phaseDelay * 2) / window.fpsTicks / this.getCurSpeed();\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tvar t = [0, 0, 0];\n\t\tvar v = false;\n\n\t\tif (this.actions[i].type == \"roll\" || this.actions[i].type == \"flip\" || this.actions[i].type == \"deploy\" || this.actions[i].type[0] == \"j\"){ //roll, flip, deploy, jump\n\t\t}\n\t\telse if (this.actions[i].type == \"turn\"){ // turn\n\t\t\tt = [0, Math.abs(this.actions[i].h*2), this.actions[i].h/Math.abs(this.actions[i].h*2)];\n\t\t\tif (game.phaseDelay == 100){t = [0, 1, this.actions[i].h];}\n\t\t}\n\t\telse if (this.actions[i].type == \"pivot\"){ // pivot\n\t\t\tt = [0, Math.abs(this.actions[i].f*2), this.actions[i].f/Math.abs(this.actions[i].f*2)];\n\t\t}\n\t\telse if (game.phase == -1 && this.actions[i].type == \"rotate\"){ // rotate\n\t\t\tt = [0, Math.abs(this.actions[i].f*2), this.actions[i].f/Math.abs(this.actions[i].f*2)];\n\t\t}\n\t\telse if (this.actions[i].type == \"move\"){ // move\n\t\t\tif (i == 0){\n\t\t\t\tvar v = new MoveVector({x: this.x, y: this.y}, {x: this.actions[i].x, y: this.actions[i].y});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar v = new MoveVector({x: this.actions[i-1].x, y: this.actions[i-1].y}, {x: this.actions[i].x, y: this.actions[i].y});\n\t\t\t}\n\t\t\t//t = [0, this.actions[i].dist * frameMod];\n\t\t\tt = [0, this.actions[i].dist * frameMod];\n\t\t}\n\t\t//if (this.actions[i].type == \"turn\"){console.log(t);}\n\t\tthis.actions[i].t = t;\n\t\tthis.actions[i].v = v;\n\t}\n}\n\nShip.prototype.getSensorSizeRating = function(){\n\treturn (this.traverse-4);\n\treturn (this.faction == \"Minbari Federation\" ? this.traverse -1 : this.traverse-4);\n}\n\nShip.prototype.getLockEffect = function(target, targetPos, shooterPos, dist){\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tvar ew = sensor.getEW();\n\tif (sensor.disabled || sensor.destroyed || ew.type == 1){return 0;}\n\n\tvar multi = 0;\n\n\tif (target.ship || target.squad){\n\t\tmulti += 0.5 + (0.6 / 10 * (this.getSensorSizeRating()));\n\t}\n\telse if (target.flight){\n\t\tmulti = 1;\n\t}\n\telse if (target.salvo){\n\t\tmulti = 3;\n\t}\n\n\tif (game.isCloseCombat(this, target)){\n\t\tif (target.salvo && this.isInEWArc(shooterPos, target.getTrajectory(), sensor, ew)){\n\t\t\treturn multi;\n\t\t}\n\t\telse if (target.flight){\n\t\t\tif (ew.angle == -1){return multi;}\n\t\t\telse return Math.round(multi / 180 * (Math.min(180, game.const.ew.len * Math.pow(sensor.getOutput()/ew.dist, game.const.ew.p)))*100)/100;\n\t\t}\n\t}\n\telse if (dist <= ew.dist && this.isInEWArc(shooterPos, targetPos, sensor, ew)){\n\t\treturn multi;\n\t}\n\telse return 0;\n}\n\nShip.prototype.getMaskEffect = function(shooter, shooterPos, targetPos, dist){\n\tif (this.flight || this.salvo || shooter.flight){return 0;}\n\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tvar ew = sensor.getEW();\n\tif (sensor.disabled || sensor.destroyed || ew.type == 0){return 0;}\n\tvar multi = 0;\n\n\tif (shooter.ship || shooter.squad){\n\t\tmulti = 0.5 + (0.6 / 10 * (this.getSensorSizeRating()));\n\t}\n\telse if (shooter.flight){\n\t\treturn 0;\n\t}\n\telse if (shooter.salvo){\n\t\treturn 0;\n\t\tmulti = 0.5;\n\t}\n\n\tif (dist == 0 && game.isCloseCombat(this, shooter) && this.isInEWArc(shooterPos, shooter.getTrajectory(), sensor, ew)){\n\t\tif (shooter.salvo){\n\t\t\treturn multi;\n\t\t}\n\t}\n\telse if (dist <= ew.dist && this.isInEWArc(targetPos, shooterPos, sensor, ew)){\n\t\treturn multi;\n\t}\n\telse return 0;\n}\n\n\nShip.prototype.drawTargetMovePlan = function(){\n\treturn;\n}\n\nShip.prototype.drawIncomingPreviewMovePlan = function(){\n\tfor (var i = 0; i < game.ships.length; i++){\n\t\tif (game.ships[i].flight || game.ships[i].salvo){\n\t\t\tif (game.ships[i].mission.arrived){continue;}\n\t\t\tif (game.ships[i].mission.targetid == this.id){\n\t\t\t\tgame.ships[i].drawMovePlan();\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.drawEW = function(){\n\tif (game.shortInfo == this.id || this.selected || game.showFriendlyEW && this.friendly || game.showHostileEW && !this.friendly){\n\t\tvar s = this.getSystemByName(\"Sensor\");\n\t\tif (s){s.drawEW();}\n\t}\n}\n\nShip.prototype.checkSensorHighlight = function(){\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tif (sensor.selected || sensor.highlight){sensor.drawEW()}\n}\n\nShip.prototype.hasSystemSelected = function(name){\t\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == name && this.primary.systems[i].selected){\n\t\t\treturn this.primary.systems[i];\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.getSystem = function(id){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (this.structures[i].id == id){return this.structures[i];}\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].id == id){\n\t\t\t\treturn this.structures[i].systems[j];\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].id == id){return this.primary.systems[i];}\n\t}\n}\n\nShip.prototype.highlightSingleSystem = function(system){\n\tvar angle = this.getPlannedFacing();\n\tvar pos = this.getPlannedPos();\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\tthis.structures[i].systems[j].drawSystemArc(angle, this.rolled, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.highlightAllSelectedWeapons = function(){\n\t//mouseCtx.clearRect(0, 0, res.x, res.y);\n\tfxCtx.clearRect(0, 0, res.x, res.y);\n\tfxCtx.translate(cam.o.x, cam.o.y);\n\tfxCtx.scale(cam.z, cam.z);\n\n\t//$(fxCanvas).css(\"opacity\", 1);\n\tvar angle = this.getPlannedFacing();\n\tvar pos = this.getPlannedPos();\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].highlight || this.structures[i].systems[j].selected){\n\t\t\t\t\tthis.structures[i].systems[j].drawSystemArc(angle, this.rolled, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfxCtx.setTransform(1,0,0,1,0,0);\n}\n\nShip.prototype.weaponHighlight = function(weapon){\n\tif (weapon.highlight){\n\t\t$(\"#weaponTable\" + weapon.id).addClass(\"disabled\");\n\t\tfxCtx.clearRect(0, 0, res.x, res.y);\t\n\t\tweapon.highlight = false;\n\t}\n\telse {\n\t\t$(\"#weaponTable\" + weapon.id).removeClass(\"disabled\");\t\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar shipPos = this.getPlannedPos();\n\t\tweapon.highlight = true;\t\t\n\t\tweapon.drawSystemArc(angle, this.rolled, shipPos);\n\t}\n}\n\nShip.prototype.setBuyData = function(){\n\tthis.totalCost = this.cost;\n\tthis.moraleCost = this.cost;\n\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (!this.primary.systems[i].cost){continue;}\n\t\tthis.moraleCost += this.primary.systems[i].cost;\n\t\tthis.upgrades.push(this.primary.systems[i].getUpgradeData());\n\t}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].cost){continue;}\n\t\t\tthis.upgrades.push(this.structures[i].systems[j].getUpgradeData());\n\t\t}\n\t}\n}\n\nShip.prototype.getBuyTableData = function(table){\n\tfor (var i = 0; i < this.upgrades.length; i++){\n\t\tthis.totalCost += this.upgrades[i].cost;\n\n\t\t$(table)\n\t\t.append(\n\t\t\t$(\"<tr>\")\n\t\t\t.append($(\"<td>\").addClass(\"font14\").html(this.upgrades[i].text))\n\t\t\t.append($(\"<td>\").html(this.upgrades[i].cost))\n\t\t\t.data(\"systemid\", this.upgrades[i].systemid)\n\t\t\t.hover(function(){\n\t\t\t\t$(this).toggleClass(\"rowHighlight\");\n\t\t\t\t$(game.getUnit(aUnit).getSystem($(this).data(\"systemid\")).element).toggleClass(\"borderHighlight\");\n\t\t\t})\n\t\t)\n\t}\n}\n\nShip.prototype.getDeployImg = function(){\n\treturn graphics.images[this.name.toLowerCase()].cloneNode(true);\n}\n\nShip.prototype.updateShipPower = function(system){\n\tif (this.flight){return;}\n\tvar reactor = this.getSystemByName(\"Reactor\");\n\tvar s = reactor.getOutput();\n\t$(reactor.element).find(\".outputMask\").html(s);\n\t$(this.element).find(\".unusedPower\").html(s).end();\n\tsystem.update();\n\n\tif (system instanceof Engine){\n\t\t$(this.element).find(\".ep\").html(this.getRemEP() + \" / \" + this.getEffEP()).end();\n\t}\n}\n\nShip.prototype.updateNonPowerOutput = function(system){\n\tvar divs = document.getElementsByClassName(\"shipDiv\");\n\tfor (var i = 0; i < divs.length; i++){\n\t\tif ($(divs[i]).data(\"shipId\") == this.id){\n\t\t\tvar divs = divs[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$(divs).find(\".system\").each(\n\t\tfunction(){\n\t\t\tif ($(this).data(\"systemId\") == system.id){\n\t\t\t\t$(this).find(\".outputMask\").html(system.getOutput());\n\t\t\t\tsystem.update();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t)\n}\n\n\nShip.prototype.handleCrewDiv = function(command){\n\tif (command.selected){\n\t\tgame.system = 0;\n\t\tcommand.selected = false;\n\t\tthis.disableCrewPurchase();\n\t}\n\telse {\n\t\tcommand.selected = true;\n\t\tgame.system = command.id;\n\t\tthis.enableCrewPurchase(command);\n\t}\n\tcommand.setSystemBorder();\n}\n\nShip.prototype.disableCrewPurchase = function(){\n\t$(\"#crewDiv\").addClass(\"disabled\");\n\tif (game.turn == 0){game.setUnitTotal(this);}\n}\n\nShip.prototype.enableCrewPurchase = function(command){\n\tvar div = $(\"#crewDiv\");\n\t$(div).data(\"systemid\", this.id).css(\"left\", 750).css(\"top\", 400).removeClass(\"disabled\");\n\tvar table = div.find(\"#crewTable\");\n\n\ttable\n\t\t.empty()\n\t\t.append($(\"<thead>\")\n\t\t\t.append(\n\t\t\t\t$($(\"<tr>\")\n\t\t\t\t\t.append($(\"<th>\").html(\"Type\").css(\"width\", \"18%\"))\n\t\t\t\t\t.append($(\"<th>\").html(\"Effect / lvl\").css(\"width\", \"40%\"))\n\t\t\t\t\t.append($(\"<th>\").html(\"Cost\").css(\"width\", \"8%\"))\n\t\t\t\t\t.append($(\"<th>\").attr(\"colSpan\", 3).html(\"Level\").css(\"width\", \"15%\"))\n\t\t\t\t\t.append($(\"<th>\").html(\"Total Cost\")))))\n\t\n\ttable.append($(\"<tbody>\"));\n\n\tfor (var i = 0; i < command.loads.length; i++){\n\t\ttable\n\t\t.append(\n\t\t\t$($(\"<tr>\")\n\t\t\t\t.mousemove(function(e){e.stopPropagation()})\n\t\t\t\t.append($(\"<td>\").html(command.loads[i].name + \"</br>Officer\"))\n\t\t\t\t.append($(\"<td>\").html(this.getCrewEffect(i)))\n\t\t\t\t.append($(\"<td>\").html(this.getCrewAddCost(i)))\n\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t.append($(\"<img>\")\n\t\t\t\t\t\t.attr(\"src\", \"varIcons/plus.png\").addClass(\"size25\")\n\t\t\t\t\t\t.data(\"type\", i)\n\t\t\t\t\t\t.click(function(){game.getUnit(aUnit).plusCrewLevel($(this).data(\"type\"))})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.append($(\"<td>\").html(this.getCrewLevel(i)))\n\t\t\t\t.append($(\"<td>\")\n\t\t\t\t\t.append($(\"<img>\")\n\t\t\t\t\t\t.attr(\"src\", \"varIcons/minus.png\").addClass(\"size25\")\n\t\t\t\t\t\t.data(\"type\", i)\n\t\t\t\t\t\t.click(function(){game.getUnit(aUnit).minusCrewLevel($(this).data(\"type\"))})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.append($(\"<td>\").html(this.getTotalCrewCost(i)))\n\t\t\t)\n\t\t)\n\t}\n\n\ttable\n\t\t.append($(\"<tr>\")\n\t\t\t.css(\"fontSize\", 18).css(\"height\", 30)\n\t\t\t.append($(\"<th>\").attr(\"colSpan\", 6).html(\"Grand Total\"))\n\t\t\t.append($(\"<th>\").addClass(\"systemTotal\")));\n\n\tcommand.setTotalBuyData();\n}\n\nShip.prototype.plusCrewLevel = function(i){\n\tvar command = this.getSystemByName(\"Command\");\n\tif (command.loads[i].amount == 3){return;}\n\tcommand.loads[i].amount++;\n\tcommand.loads[i].cost = this.getTotalCrewCost(i);\n\tvar system = this.getSystemByName(command.loads[i].name);\n\t\tsystem.powers.push({\n\t\t\tid: system.powers.length+1, unitid: system.parentId, systemid: system.id,\n\t\t\tturn: game.turn,type: 2, cost: 0, new: 1\n\t\t})\n\t\tsystem.update();\n\tthis.updateCrewDiv(i);\n}\n\nShip.prototype.minusCrewLevel = function(i){\n\tvar command = this.getSystemByName(\"Command\");\n\tif (!command.loads[i].amount){return;}\n\tcommand.loads[i].amount--;\n\tcommand.loads[i].cost = this.getTotalCrewCost(i);\n\tvar system = this.getSystemByName(command.loads[i].name);\n\t\tsystem.doUnboost();\n\t\tsystem.update();\n\tthis.updateCrewDiv(i);\n}\n\nShip.prototype.updateCrewDiv = function(i){\n\tvar tr = $($(\"#crewDiv\").find(\"#crewTable\").children().find(\"tr\")[i+1]);\n\t$(tr.children()[2]).html(this.getCrewAddCost(i));\n\t$(tr.children()[4]).html(this.getCrewLevel(i));\n\t$(tr.children()[6]).html(this.getTotalCrewCost(i));\n\n\tthis.getSystemByName(\"Command\").setTotalBuyData();\n\tif (this.command){\n\t\t$(this.element).find(\".commandContainer .commandEntry\")\n\t\t\t.html(\"Active Fleet Command (+\" + this.getFocusIfCommand() + \" / turn)\")\n\t\tgame.setFocusGain();\n\t}\n}\n\nShip.prototype.getCrewEffect = function(i){\n\tvar command = this.getSystemByName(\"Command\");\n\tvar type = command.loads[i];\n\tvar name = type.name;\n\tvar value = command.crewEffect;\n\n\tif (name == \"Command\"){\n\t\treturn \"+\" + value + \"% Unit Morale</br>+\" + value + \"% Focus Generation\";\n\t}\n\telse return \"+\" + this.getSystemByName(name).crewEffect + \"% \" + name + \" Output\";\n}\n\nShip.prototype.getCrewAddCost = function(i){\n\tvar type = this.getSystemByName(\"Command\").loads[i];\n\tvar name = type.name;\n\n\t//console.log(\"getCrewAddCost \" + name);\n\tif (game.phase > -2){return \"\";}\n\tvar baseCost = this.getCrewBaseCost(i);\n\tvar level = this.getCrewLevel(i);\n\tvar add = 0.3;\n\treturn Math.ceil(baseCost * (1 + (level*add)));\n}\n\nShip.prototype.getCrewBaseCost = function(i){\n\treturn this.getSystemByName(\"Command\").loads[i].baseCost;\n}\n\nShip.prototype.getCrewLevel = function(i){\n\treturn this.getSystemByName(\"Command\").loads[i].amount;\n}\n\nShip.prototype.getTotalCrewCost = function(i){\n\tvar baseCost = this.getCrewBaseCost(i);\n\tvar level = this.getCrewLevel(i);\n\tvar cost = 0;\n\tvar add = 0.3;\n\n\tfor (j = 0; j < level; j++){\n\t\tcost += baseCost * (1 + add*j)\n\t}\n\treturn Math.ceil(cost);\n}\n\nShip.prototype.updateCrdewTotals = function(){\n\tvar command = this.getSystemByName(\"Command\");\n\tvar total = 0;\n\tfor (var i = 0; i < command.loads.length; i++){\n\t\ttotal += this.getTotalCrewCost(i);\n\t}\n\tcommand.cost = total;\t\n\t$(\"#crewDiv\").find(\"#crewTable\").children().children().children().last().html(total);\n}\n\n\nShip.prototype.getSystemByName = function(name){\n\tfor (var i = 0; i < this.primary.systems.length; i++){\n\t\tif (this.primary.systems[i].name == name){\n\t\t\treturn this.primary.systems[i];\n\t\t}\n\t}\n\treturn false;\n}\n\nShip.prototype.attachEvent = function(td){\n\t$(td).data(\"shipId\", this.id);\n\t$(td).hover(\n\t\tfunction(e){\n\t\t\te.stopPropagation();\n\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystem($(this).data(\"systemId\")).hover(e);\n\t\t}\n\t)\n\t.click(\n\t\tfunction(e){\n\t\t\te.stopPropagation();\n\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystem($(this).data(\"systemId\")).select(e);\n\t\t}\n\t)\n\t.mousedown(function(e){e.stopPropagation();})\n\t.contextmenu(\n\t\tfunction(e){\n\t\t\te.preventDefault();\n\t\t\tif (!game.sensorMode){game.getUnit($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));}\n\t\t}\n\t);\n\treturn td;\n}\n\nShip.prototype.attachTurretEvent = function(td){\n\t$(td).data(\"shipId\", this.id);\n\t$(td).hover(\n\t\tfunction(e){\n\t\t\te.stopPropagation();\n\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystem($(this).data(\"systemId\")).hover(e);\n\t\t}\n\t)\n\t.click(\n\t\tfunction(e){\n\t\t\te.stopPropagation();\n\t\t\tgame.getUnit($(this).data(\"shipId\")).getSystem($(this).data(\"turretId\")).select(e);\n\t\t}\n\t)\n\t.mousedown(function(e){e.stopPropagation();})\n\t.contextmenu(\n\t\tfunction(e){\n\t\t\te.preventDefault();\n\t\t\tif (!game.sensorMode){game.getUnit($(this).data(\"shipId\")).selectAll(e, $(this).data(\"systemId\"));}\n\t\t}\n\t);\n\treturn td;\n}\n\nShip.prototype.undoPlannedMovement = function(){\n\tvar redraw = 0;\n\n\tfor (var i = this.actions.length-1; i >= 0; i--){\n\t\tif (this.actions[i].resolved){continue;}\n\t\tthis.actions.splice(i, 1);\n\t\tredraw = 1;\n\t}\n\n\tif (!redraw){return;}\n\tgame.redraw();\n}\n\nShip.prototype.selectAll = function(e, id){\n\tvar s = this.getSystem(id);\n\tif (!s.weapon){return;}\n\tvar w = s.getActiveSystem();\n\tvar name = w.name;\n\tvar hasFire = s.hasUnresolvedFireOrder();\n\tif (name == \"Hangar\"){return;}\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].destroyed){continue;}\n\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\tif (this.structures[i].systems[j].hasUnresolvedFireOrder() == hasFire){\n\t\t\t\t\tthis.structures[i].systems[j].select(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nShip.prototype.doUnpowerAll = function(id){\n\tvar system = this.getSystem(id);\n\t\t$(system.element).find(\".powerDiv\").find(\".unpower\").hide().end().find(\".power\").show();\n\tvar name = system.getActiveSystem().name;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].isPowered()){\n\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\tthis.structures[i].systems[j].doUnpower();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.doPowerAll = function(id){\n\tvar system = this.getSystem(id);\n\t\t$(system.element).find(\".powerDiv\").find(\".power\").hide().end().find(\".unpower\").show();\n\tvar name = system.getActiveSystem().name;\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].isPowered()){\n\t\t\t\tif (this.structures[i].systems[j].getActiveSystem().name == name){\n\t\t\t\t\t//this.structures[i].systems[j].highlight = 1;\n\t\t\t\t\tthis.structures[i].systems[j].doPower();\n\t\t\t\t\t//this.structures[i].systems[j].highlight = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nShip.prototype.drawTurnUI = function(){\n\tvar center = this.getGamePos();\n\t//var angle = this.getPlannedFacing();\n\n\t//var center = {x: this.x, y: this.y};\n\tvar angle = this.getDrawFacing();\n\tvar p1 = getPointInDir(150/cam.z, addToDirection(angle, -90), center.x, center.y);\n\t$(ui.turnButton)\n\t\t.removeClass(\"disabled\")\n\t\t.css(\"left\", p1.x * cam.z + cam.o.x - $(ui.turnButton).width()/2)\n\t\t.css(\"top\", p1.y * cam.z + cam.o.y - $(ui.turnButton).height()/2)\n\t\t.find(\"#impulseMod\").html(\"x \" +turn.dif).end()\n\t\t//.find(\"#remEP\").html(this.getRemEP() + \" / \" + this.getEffEP()).addClass(\"green\").end()\n}\n\nShip.prototype.issuedActionThisTurn = function(type){\n\tvar type = \"\";\n\tswitch (type){\n\t\tcase 0: type = \"roll\"; break;\n\t\tcase 1: type = \"flip\"; break;\n\t\tdefault: return;\n\t}\n\n\tfor (var i = 0; i < this.actions.length; i++){\n\t\tif (this.actions[i].turn == game.turn && this.actions[i].type == type){return true;}\n\t}\n\treturn false;\n}\n\nShip.prototype.canDoAction = function(type){\n\tif (this.getRemEP() >= this.getActionCost(type)){\n\t\tif (this.issuedActionThisTurn(type)){return false;} // instead UNDO iit\n\t\telse if (this.isRolling() && type == 1){return false;} // cant flip while you are rolling\n\t\telse {\n\t\t\tfor (var i = 0; i < this.actions.length; i++){\n\t\t\t\tif (this.actions[i].type != \"speed\" && this.actions[i].type != \"turn\"){return false;}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.canAccel = function(){\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\treturn true;\n\t}\n\telse if (this.getRemEP() >= this.getImpulseChangeCost() / this.getImpulseMod()){\n\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == 2){ // 2- deploy, jump\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[0].type == \"deploy\" && this.actions.length == 1 && game.turn > 1 && this.available == game.turn){\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[0].type == \"rotate\" && this.actions.length == 1){\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nShip.prototype.canDeccel = function(){\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\treturn true;\n\t}\n\telse if (this.getCurSpeed() <= 30){return false;}\n\telse if (this.getRemEP() >= this.getImpulseChangeCost() / this.getImpulseMod()){\n\t\tif (!this.actions.length || this.available == game.turn && this.actions.length == 2){ // 2- deploy, jump\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[0].type == \"deploy\" && this.actions.length == 1 && game.turn > 1 && this.available == game.turn){\n\t\t\treturn true;\n\t\t}\n\t\telse if (this.actions[0].type == \"rotate\" && this.actions.length == 1){\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nShip.prototype.setTurnData = function(){\n\tvar vector = $(\"#vectorDiv\")\n\t\n\t$(ui.turnButton)\n\t\t.find(\"#turnMode\").html(\"ON\").addClass(\"on\").end().find(\"#turnCost\").html(this.getTurnCost()).end()\n\t\t//.find(\"#turnDelay\").html(this.getTurnDelay() + \" px\").end()\n\t\t.find(\"#turnMod\").html(turn.mod).end()\n\n\tif (game.mode == 2){\n\t\t$(ui.turnButton)\n\t\t\t$(\"#epButton\")\n\t\t\t.find(\"#remEP\").html(this.getRemEP() + \" / \" + this.getEffEP()).addClass(\"green\").end()\n\t\t\t.find(\"#impulseText\").find(\"#impulseCost\").html(\"\");\n\n\t\tthis.drawDelay();\n\t\tthis.adjustMaxTurn()\n\t}\n\telse {\n\t\t$(ui.turnButton)\n\t\t\t.find(\"#turnMode\").html(\"OFF\").removeClass(\"on\").end()\n\t\t$(\"#epButton\")\n\t\t\t.find(\"#remEP\").html(this.getRemEP() + \" / \" + this.getRemEP()).addClass(\"green\").end()\n\t\t\t.find(\"#impulseText\").find(\"#impulseCost\").html(\"\");\n\t\t$(vector).addClass(\"disabled\")\n\t}\n\n\t//this.drawEW();\n}\n\nShip.prototype.adjustMaxTurn = function(){\n\tif (this.getMaxTurnAngle() < turn.max){\n\t\tmoveCtx.clearRect(0, 0, res.x, res.y);\n\t\tthis.setMoveTranslation();\n\t\tthis.drawTurnArcs();\n\t\tthis.drawDirectionIndicator();\n\t\tthis.resetMoveTranslation();\n\t}\n}\n\nShip.prototype.addTurrets = function(shipDiv){\n\n\tvar turretDivs = [];\n\n\t//TURRETS\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tif (!this.structures[i].turret){continue;}\n\t\tvar width = Math.max(90, this.structures[i].systems.length*30)\n\t\tvar turretDiv = $(\"<div>\").addClass(\"structDiv turretDiv\").css(\"width\", width).css(\"height\", 90);\n\t\tvar turretTable = $(\"<table>\").addClass(\"structTable\");\n\t\tturretDiv.append(turretTable);\n\n\t\tvar core = $(this.structures[i].getCoreData());\n\t\t\tcore.attr(\"colSpan\", this.structures[i].systems.length);\n\t\t\tcore.append(this.structures[i].getPowerDiv())\n\t\tturretTable.append($(\"<tr>\").append(core));\n\t\tvar armour = $(this.structures[i].getArmourData());\n\t\t\tarmour.attr(\"colSpan\", this.structures[i].systems.length)\n\t\tturretTable.append($(\"<tr>\").append(armour));\n\n\t\ttr = document.createElement(\"tr\");\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tvar td = this.structures[i].systems[j].getTableData();\n\t\t\t\tif (game.phase == -2){this.attachEvent(td);}\n\t\t\t\telse {td = this.attachTurretEvent(td);}\n\t\t\t\t$(td)\n\t\t\t\t.data(\"turretId\", this.structures[i].id)\n\t\t\t\t.find(\".integrityNow\").remove().end().find(\".integrityFull\").remove();\n\n\t\t\ttr.appendChild(td);\n\t\t\t\n\t\t\tif (this.id > 0 || game.turn == 1){\n\t\t\t\tvar boostDiv = this.structures[i].systems[j].getBoostDiv();\n\t\t\t\tif (boostDiv){td.appendChild(boostDiv);}\n\n\t\t\t\tvar modeDiv = this.structures[i].systems[j].getModeDiv();\n\t\t\t\tif (modeDiv){td.appendChild(modeDiv);}\n\t\t\t}\n\n\t\t\tif (this.structures[i].systems[j].dual && !this.structures[i].systems[j].effiency){\n\t\t\t\t$(td).find(\".outputMask\").hide();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tturretTable.append(tr);\n\n\t\tturretDivs.push(turretDiv);\n\t}\n\n\tif (!turretDivs.length){return;} // no turrets\n\tvar turretContainer = $(\"<div>\").addClass(\"turretContainer\");\n\tshipDiv.append(turretContainer);\n\tvar spacing = shipDiv.width() / turretDivs.length;\n\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < turretDivs.length; i++){ // set turret width\n\t\tvar maxHeight = turretDivs[i].width();\n\t\tmaxHeight = Math.max(maxHeight, maxHeight)\n\t\tturretDivs[i]\n\t\t\t.css(\"left\", spacing*(i+1) - spacing/2 - maxHeight/2)\n\t\tturretContainer.append(turretDivs[i])\n\t}\n\n\tturretContainer.css(\"height\", maxHeight+10);\n\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < turretDivs.length; i++){ // adjust armour TD width\n\t\tvar armour = turretDivs[i].find(\".armour\");\n\t\tif (armour.width() < 70){\n\t\t\tarmour.css(\"width\", 70);\n\t\t}\n\n\t\tvar conWidth = turretDivs[i].width();\n\t\tvar conHeight = turretDivs[i].height();\n\n\t\tvar table = turretDivs[i].children(); // center turret table in wrapper div\n\t\tvar width = table.width();\n\t\tvar height = table.height();\n\n\t\ttable\n\t\t.css(\"position\", \"absolute\")\n\t\t.css(\"left\", conWidth / 2 - width/2)\n\t\t.css(\"top\", conHeight / 2 - height/2)\n\t}\n}\n\nShip.prototype.doRoll = function(){\n\tvar shipPos = this.getPlannedPos();\n\tthis.actions.push(new Move(-1, this.id, game.turn, \"roll\", 0, 1, shipPos.x, shipPos.y, 0, 0, 0, this.getActionCost(0), 1, 1, 0));\n\tthis.rolling = !this.rolling;\n\tthis.setNotes();\n\tthis.resetMoveMode();\n\tgame.redraw();\n}\n\nShip.prototype.doFlip = function(){\n\tvar shipPos = this.getPlannedPos();\n\tthis.actions.push(new Move(-1, this.id, game.turn, \"flip\", 0, 1, shipPos.x, shipPos.y, 0, 0, 0, this.getActionCost(1), 1, 1, 0));\n\tthis.flipping = !this.flipping;\n\tthis.setNotes();\n\tthis.resetMoveMode();\n\tgame.redraw();\n}\n\nShip.prototype.doAccel = function(){\n\tvar shipPos = this.getPlannedPos();\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == -1){\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t}\n\telse {\n\t\tvar action = new Move(-1, this.id, game.turn, \"speed\", 0, 1, shipPos.x, shipPos.y, 0, 0, 0, this.getImpulseChangeCost(), 1, 1, 0);\n\t\tthis.actions.push(action);\n\t}\n\t$(this.element).find(\".speed\").html(this.getCurSpeed());\n\tthis.resetMoveMode();\n\tgame.redraw();\n}\n\nShip.prototype.doDeccel = function(){\n\tvar shipPos = this.getPlannedPos();\n\tif (this.actions.length && this.actions[this.actions.length-1].type == \"speed\" && this.actions[this.actions.length-1].dist == 1){\n\t\tthis.actions.splice(this.actions.length-1, 1);\n\t}\n\telse {\n\t\tvar action = new Move(-1, this.id, game.turn, \"speed\", 0, -1, shipPos.x, shipPos.y, 0, 0, 0, this.getImpulseChangeCost(), 1, 1, 0);\n\t\tthis.actions.push(action);\n\t}\n\t$(this.element).find(\".speed\").html(this.getCurSpeed());\n\tthis.resetMoveMode();\n\tgame.redraw();\n}\n\nShip.prototype.drawMoveUI = function(){\n\tthis.drawImpulseUI();\n\tthis.drawVectorUI();\n\tif (this.canTurn()){\n\t\tthis.drawTurnUI();\n\t\tthis.updateDiv();\n\t}\n\tthis.drawShortenTurnUI();\n}\n\nShip.prototype.drawShortenTurnUI = function(){\n\treturn;\n\t//console.log(\"drawShortenTurnUI\");\n\tvar remDelay = this.getRemDelay();\n\tvar remSpeed = this.getRemSpeed();\n\tvar center = this.getPlannedPos();\n\n\tif (!remDelay || !this.getRemEP()){$(ui.doShorten).addClass(\"disabled\");}\n\telse {\n\t\tvar o = this.getGamePos()\n\t\tvar angle = this.getPlannedFacing();\n\t\tvar p = getPointInDir(100, angle-180, o.x, o.y);\n\t\tvar left = p.x * cam.z  + cam.o.x - $(ui.doShorten).width()/2;\n\t\tvar top = p.y * cam.z  + cam.o.y - $(ui.doShorten).height()/2;\n\n\t\t$(ui.doShorten)\n\t\t.css(\"left\", left)\n\t\t.css(\"top\", top)\n\t\t.data(\"shipId\", this.id)\n\t\t.removeClass(\"disabled\");;\n\n\t}\n\n\tif (remDelay && remSpeed >= remDelay){ // normal turn point\n\t\tele = document.getElementById(\"maxTurnVector\");\n\t\tvar p = getPointInDir(remSpeed + 60, angle, center.x, center.y);\n\t\tvar left = p.x  * cam.z  + cam.o.x - $(ele).width()/2;\n\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t$(ele)\n\t\t\t.data(\"unitid\", this.id)\n\t\t\t.data(\"dist\", remDelay)\n\t\t\t.html(\"<div>\"+remDelay+\"<div>\")\n\t\t\t.css(\"left\", left)\n\t\t\t.css(\"top\", top)\n\t\t\t.removeClass(\"disabled\");\n\t}\n}\n\nShip.prototype.doShortenTurn = function(){\n\tvar data = $(ui.doShorten).data();\n\n\tif (data.shipId == this.id && data.cost <= this.getRemEP()){\n\t\tvar turn = this.getLastTurn();\n\t\t\tturn.cost += data.cost;\n\t\t\tturn.delay -= data.delay;\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t\tgame.redraw();\n\t\tconsole.log(this.getLastTurn());\n\t}\n}\n\nShip.prototype.doUndoShortenTurn = function(){\n\tvar turn = this.getLastTurn();\n\tif (turn.costmod != 1){\n\t\tturn.costmod = 1;\n\t\tthis.unsetMoveMode();\n\t\tthis.setMoveMode();\n\t\tgame.redraw();\n\t}\n\treturn;\n}\n\nShip.prototype.getShortenTurnCost = function(delay){\n\tvar turn = this.getLastTurn();\n\t//var multi = ((turn.delay - delay) - turn.delay/2) / (turn.delay/2);\n\t//var multi = round((Math.ceil(((turn.delay - delay) / turn.delay) * 100)/100), 2);\n\t//var multi = round(Math.ceil(delay / turn.delay*2*100)/100, 2)\n\tvar multi = round(Math.ceil(delay / turn.delay *100)/100, 2)*2\n\tconsole.log(multi);\n\treturn multi;\n\t//var multi = (turn.delay - delay) / turn.delay;\n\treturn 1-multi;\n\treturn turn.cost * (1-multi);\n}\n\nShip.prototype.drawVectorUI = function(){\n\tvar center = this.getPlannedPos();\n\tvar angle = this.getPlannedHeading();\n\tvar remSpeed = this.getRemSpeed();\n\tvar remDelay = this.getRemDelay();\n\tvar ele;\n\n\tif (remSpeed){\n\t\tele = document.getElementById(\"maxVector\");\n\t\tvar p = getPointInDir(remSpeed + 90, angle, center.x, center.y);\n\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t$(ele)\n\t\t\t.html(\"<div>\"+remSpeed+\"</div>\")\n\t\t\t.css(\"left\", left)\n\t\t\t.css(\"top\", top)\n\t\t\t.removeClass(\"disabled\");\n\t}\n\n\tif (remDelay && remSpeed >= remDelay){\n\t\tele = document.getElementById(\"maxTurnVector\");\n\t\tvar p = getPointInDir(remSpeed + 60, angle, center.x, center.y);\n\t\tvar left = p.x * cam.z  + cam.o.x - $(ele).width()/2;\n\t\tvar top = p.y * cam.z  + cam.o.y - $(ele).height()/2;\n\n\t\t$(ele)\n\t\t\t.html(\"<div>\"+remDelay+\"</div>\")\n\t\t\t.css(\"left\", left)\n\t\t\t.css(\"top\", top)\n\t\t\t.removeClass(\"disabled\");\n\t}\n}\n\nShip.prototype.drawDirectionIndicator = function(){\n\tvar center = this.getPlannedPos();\n\tvar heading = this.getPlannedHeading();\n\tvar facing = this.getPlannedFacing();\n\tvar pA = getPointInDir(this.getRemSpeed(), heading, center.x, center.y);\n\tvar pB = getPointInDir(200, heading, pA.x, pA.y);\n\t\n\tmoveCtx.globalAlpha = 0.25;\n\n\tmoveCtx.beginPath();\t\t\t\n\tmoveCtx.moveTo(center.x, center.y);\n\tmoveCtx.lineTo(pA.x, pA.y);\n\tmoveCtx.closePath();\n\tmoveCtx.lineWidth = 15;\n\tmoveCtx.strokeStyle = \"white\";\n\tmoveCtx.stroke();\n\n\tmoveCtx.globalAlpha = 0.5;\n\n\tmoveCtx.beginPath();\t\t\n\tmoveCtx.moveTo(pA.x, pA.y);\t\n\tmoveCtx.lineTo(pB.x, pB.y);\n\tmoveCtx.closePath();\n\tmoveCtx.lineWidth = 1;\n\tmoveCtx.strokeStyle = \"yellow\";\n\tmoveCtx.stroke();\n\n\tif (facing != heading){\n\t\tvar p = getPointInDir(100, facing, center.x, center.y);\n\t\t\n\t\tmoveCtx.beginPath();\t\t\t\n\t\tmoveCtx.moveTo(center.x, center.y);\n\t\tmoveCtx.lineTo(p.x, p.y);\n\t\tmoveCtx.closePath();\n\t\tmoveCtx.lineWidth = 2;\n\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\tmoveCtx.stroke();\n\t}\n\n\tmoveCtx.globalAlpha = 1;\n\tmoveCtx.strokeStyle = \"black\";\n}\n\nShip.prototype.getTurnAngle = function(){\n\tif (game.phase == -1 && (game.turn == 1 || this.id < 0)){\n\t\treturn 180;\n\t}\n\treturn this.turnAngle;\n}\n\nShip.prototype.getTurnStep = function(){\n\treturn this.turnStep;\n}\n\nShip.prototype.getMaxTurnAngle = function(){\n\tif (this.canTurnFreely()){return 180;}\n\n\tvar ep = this.getRemEP();\n\tvar limit = this.getTurnAngle();\n\tvar c = this.getTurnCost();\n\t\tc = 1;\n\n\treturn Math.min(limit, Math.floor(ep/c));\n}\n\nShip.prototype.drawTurnArcs = function(){\n\tvar turnAngle = this.hasMoved() ? this.getTurnAngle() : this.getMaxTurnAngle();\n\tif (!turnAngle){return;}\n\tvar angle = this.getPlannedHeading();\n\t\n\tthis.turnAngles = {start: addAngle(0 + turnAngle, angle), end: addAngle(360 - turnAngle, angle)};\n\n\tvar center = this.getPlannedPos();\n\tvar w = this.getTurnStep();\n\t\n\tfor (var j = 1; j >= -1; j = j-2){\n\t\tfor (var i = 1; i <= w; i++){\t\t\t\n\t\t\tvar modAngle = turnAngle * i * j;\n\t\t\tvar newAngle = addToDirection(angle, modAngle);\n\t\t\tvar p = getPointInDir(75, newAngle, center.x, center.y);\n\t\t\tmoveCtx.beginPath();\n\t\t\tmoveCtx.moveTo(center.x, center.y);\n\t\t\tmoveCtx.lineTo(p.x, p.y);\n\t\t\tmoveCtx.closePath();\n\t\t\tmoveCtx.globalAlpha = 0.5;\n\t\t\tmoveCtx.strokeStyle = \"yellow\";\n\t\t\tmoveCtx.lineWidth = 1;\n\t\t\tmoveCtx.stroke();\n\t\t\tmoveCtx.globalAlpha = 1;\n\t\t}\n\t}\n}\n\nShip.prototype.drawDelay = function(){\n\tif (game.phase == -1 && game.turn == 1){\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\treturn;\n\t}\n\telse if (this.actions.length == 1){\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t}\n\tvar delay = turn.h * this.getTurnDelay();\n\tif (delay){\n\t\tvar angle = this.getPlannedHeading();\n\t\tvar center = this.getPlannedPos();\n\t\tvar delayRad1 = degreeToRadian(angle-45);\n\t\tvar delayRad2 = degreeToRadian(angle+45);\n\n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n\t\tmouseCtx.translate(cam.o.x, cam.o.y);\n\t\tmouseCtx.scale(cam.z, cam.z);\n\t\tmouseCtx.beginPath();\t\t\t\n\t\tmouseCtx.arc(center.x, center.y, delay, delayRad1, delayRad2, false);\n\t\tmouseCtx.closePath();\n\t\tmouseCtx.strokeStyle = \"red\";\n\t\tmouseCtx.lineWidth = 3;\n\t\tmouseCtx.stroke();\n\t\tmouseCtx.arc(center.x, center.y, delay, 0, 2*Math.PI, false);\n\t\tmouseCtx.globalCompositeOperation = \"destination-out\";\n\t\tmouseCtx.fill();\n\t\tmouseCtx.globalCompositeOperation = \"source-over\";\n\t\tmouseCtx.setTransform(1,0,0,1,0,0);\n\t} else \n\t\tmouseCtx.clearRect(0, 0, res.x, res.y);\n}\n\nShip.prototype.hasNoFireOrders = function(){\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].destroyed){continue;}\n\t\t\tif (this.structures[i].systems[j].weapon){\n\t\t\t\tif (this.structures[i].systems[j].isPowered() && this.structures[i].systems[j].getLoadLevel() >= 1){\n\t\t\t\t\tif (this.structures[i].systems[j].hasFireOrder()){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nShip.prototype.unitGetAllResolvingFireOrders = function(){\n\tvar fires = [];\n\n\tfor (var j = 0; j < this.structures.length; j++){\n\t\tfor (var k = 0; k < this.structures[j].systems.length; k++){\n\t\t\tvar fire = this.structures[j].systems[k].getResolvingFireOrders();\n\t\t\tif (fire){fires.push(fire);}\n\t\t}\n\t}\n\treturn fires;\n}\n\nShip.prototype.hasInvalidPower = function(){\n\tvar reactor = this.getSystemByName(\"Reactor\");\n\tif (reactor.getUnusedPower() < 0){\n\t\treturn true;\n\t}\n}\n\nShip.prototype.hasBasicEW = function(){\n\tvar sensor = this.getSystemByName(\"Sensor\");\n\tif (sensor.disabled || sensor.destroyed || sensor.used){return false;}\n\treturn true;\n}\n\nShip.prototype.doConfirmSystemLoadout = function(){\n\tvar system = this.getSystem(game.system);\n\tif (system.launcher){system.setAmmo();}\n\tsystem.select();\n}\n\nShip.prototype.getEvents = function(){\n\tvar data = [];\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (this.structures[i].systems[j].hasEvent()){\n\t\t\t\tdata.push(this.structures[i].systems[j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn data;\n}\n\nShip.prototype.getSelfExplo = function(){\n\n\tvar data = {\n\t\tentries: [],\n\t\tanimated: 0,\n\t\tanimating: 0,\n\t\tid: this.id,\n\t\tpos: this.getDrawPos(),\n\t\thtml: \"\"\n\t}\n\n\tif (this.isDestroyedThisTurn()){\n\n\t\tvar base = {x: this.drawX, y: this.drawY};\n\n\t\tvar color = \"red\";\n\t\tif (this.friendly){\n\t\t\tcolor = \"green\";\n\t\t}\n\n\t\tif (this.command){\n\t\t\tdata.html += \"<span class='yellow'>Command </span>\";\n\t\t}\n\n\t\tdata.html += \"<span class='\" + color + \"'>\" + this.name + \" #\" + this.id + \" \" + this.getCallSign() + \"</span>\";\n\t\tif (this.getSystemByName(\"Reactor\").destroyed){\n\t\t\tdata.html += \"<span> suffered critical reactor damage and was destroyed.\";\n\t\t}\n\t\telse data.html += \"<span> suffered catastrophic hull damage and was destroyed.\";\n\n\t\tdata.html += \"</span>\"\n\n\t\tvar explos = {u: this, anims: []};\n\n\t\tvar amount = 8 + (this.traverse * 3);\n\n\t\tfor (var j = 0; j < amount; j++){\n\t\t\texplos.anims.push({\n\t\t\t\tt: [0 - (j*1)-40, 60 + range (-20, 20)],\n\t\t\t\ts: range (5, this.size*0.8),\n\t\t\t\tx: base.x + (range(-1, 1) * range(0, this.size / 3)),\n\t\t\t\ty: base.y + (range(-1, 1) * range(0, this.size / 3)),\n\t\t\t})\n\t\t}\n\t\tdata.entries.push(explos);\n\t}\n\n\treturn data;\n}\n\nShip.prototype.hasUnsetupedSystems = function(){\n\tif (this.flight || this.salvo){return false;}\n\n\tvar html = \"\";\n\n\tfor (var i = 0; i < this.structures.length; i++){\n\t\tfor (var j = 0; j < this.structures[i].systems.length; j++){\n\t\t\tif (!this.structures[i].systems[j].loadout){continue;}\n\t\t\tvar set = false;\n\t\t\tfor (var k = 0; k < this.structures[i].systems[j].loads.length; k++){\n\t\t\t\tif (this.structures[i].systems[j].loads[k].amount){\n\t\t\t\t\tset = true; \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!set){\n\t\t\t\thtml += this.structures[i].systems[j].display + \"</br>\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (html.length){\n\t\tpopup (\"The following systems lack a complete setup:</br></br>\" + html + \"<input type='button' class='popupEntryConfirm' value='Confirm Purchase' onclick='game.doConfirmUnitPurchase(game.getUnit(aUnit))'>\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nShip.prototype.disableMissionMode = function(){\n\tgame.flightDeploy = 0;\n\tgame.mission = 0;\n\tgame.flightDeploy = false;\n\t$(this.element)\n\t\t.find(\"input[name=mission]:checked\").each(function(){$(this).prop(\"checked\", false)}).end()\n\t\t.find(\".missionOption\").addClass(\"disabled\");\n}\n\nShip.prototype.enableMissionMode = function(){\n\tgame.flightDeploy = 1;\n\tgame.deploySpeed = this.baseImpulse\n\t$(this.element).find(\".missionOption\").removeClass(\"disabled\");\n}\n\nShip.prototype.getPurchaseHeader = function(){\n\t//return \"this\";\n\treturn \"<span style='font-size: 16px;'>\" + this.name + \"</span>\" + (this.callsign ? \"<span class='green'> -- \" + this.callsign + \" -- </span>\" : \"<span class='green'></span>\");\n}\n\nShip.prototype.getIncomingHeader = function(){\n\treturn this.name + (this.notes ? \"</br>\" + this.notes : \"\");\n}\n\nShip.prototype.hasPassiveJamming = function(){\n\tvar jammer = this.getSystemByName(\"Jammer\");\n\tif (!jammer || jammer.destroyed || jammer.disabled){\n\t\treturn false;\n\t} return true;\n}\n\nShip.prototype.getJammingString = function(){\n\treturn (\"---- Passing jamming detected (<span class='yellow'>\" + this.getJammerStrength() + \"% chance to miss</span>) ----\");\n}\n\nShip.prototype.getJammerStrength = function(){\n\tvar jammer = this.getSystemByName(\"Jammer\");\n\treturn jammer.getOutput();\n}\n\nShip.prototype.getRecentMoraleCheckDamage = function(){\n\treturn this.primary.getRecentDmgInt();\n}",
			"file": "/C/xampp/htdocs/fire/shipclasses.js",
			"file_size": 143308,
			"file_write_time": 132125973569219358,
			"settings":
			{
				"buffer_size": 138475,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/structure.js",
			"settings":
			{
				"buffer_size": 11487,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/flights.js",
			"settings":
			{
				"buffer_size": 15401,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ship.php",
			"settings":
			{
				"buffer_size": 45412,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/mixed.php",
			"settings":
			{
				"buffer_size": 9067,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/linked.php",
			"settings":
			{
				"buffer_size": 4256,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
			"settings":
			{
				"buffer_size": 7551,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/am.php",
			"settings":
			{
				"buffer_size": 2816,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/squaddie.php",
			"settings":
			{
				"buffer_size": 2946,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/obstacle.php",
			"settings":
			{
				"buffer_size": 5192,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/salvo.php",
			"settings":
			{
				"buffer_size": 3400,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/salvo.js",
			"settings":
			{
				"buffer_size": 9266,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/olympus.php",
			"settings":
			{
				"buffer_size": 3002,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/avenger.php",
			"settings":
			{
				"buffer_size": 3692,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/battlecrab.php",
			"settings":
			{
				"buffer_size": 1189,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/artemis.php",
			"settings":
			{
				"buffer_size": 1996,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/saggitarius.php",
			"settings":
			{
				"buffer_size": 4133,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/nonweapon.php",
			"settings":
			{
				"buffer_size": 9791,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
			"settings":
			{
				"buffer_size": 8062,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/plasma.php",
			"settings":
			{
				"buffer_size": 3796,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
			"settings":
			{
				"buffer_size": 2071,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/pulse.php",
			"settings":
			{
				"buffer_size": 6768,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
			"settings":
			{
				"buffer_size": 5640,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/hyperion.php",
			"settings":
			{
				"buffer_size": 2861,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/primus.php",
			"settings":
			{
				"buffer_size": 2996,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapon.php",
			"settings":
			{
				"buffer_size": 7473,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
			"settings":
			{
				"buffer_size": 7163,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
			"settings":
			{
				"buffer_size": 3100,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/getGameData.php",
			"settings":
			{
				"buffer_size": 1845,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/structure.php",
			"settings":
			{
				"buffer_size": 9538,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/single.php",
			"settings":
			{
				"buffer_size": 6840,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/xill.php",
			"settings":
			{
				"buffer_size": 3772,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/zaatrr.php",
			"settings":
			{
				"buffer_size": 2652,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/systems/weapons/em.php",
			"settings":
			{
				"buffer_size": 11,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/octurion.php",
			"settings":
			{
				"buffer_size": 3317,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/gsten.php",
			"settings":
			{
				"buffer_size": 3269,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/katoc.php",
			"settings":
			{
				"buffer_size": 2412,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/tigara.php",
			"settings":
			{
				"buffer_size": 2551,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/torotha.php",
			"settings":
			{
				"buffer_size": 797,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/mograth.php",
			"settings":
			{
				"buffer_size": 791,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/fighter.php",
			"settings":
			{
				"buffer_size": 6595,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/zitomm.php",
			"settings":
			{
				"buffer_size": 3586,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/xonn.php",
			"settings":
			{
				"buffer_size": 5816,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/demos.php",
			"settings":
			{
				"buffer_size": 2001,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/gquan.php",
			"settings":
			{
				"buffer_size": 2901,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/vorchan.php",
			"settings":
			{
				"buffer_size": 772,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/xvell.php",
			"settings":
			{
				"buffer_size": 1004,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/vorchora.php",
			"settings":
			{
				"buffer_size": 732,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/haven.php",
			"settings":
			{
				"buffer_size": 706,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/shaveen.php",
			"settings":
			{
				"buffer_size": 876,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/autoload.php",
			"settings":
			{
				"buffer_size": 13592,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/kutai.php",
			"settings":
			{
				"buffer_size": 1451,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/dagkar.php",
			"settings":
			{
				"buffer_size": 3384,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/global.php",
			"settings":
			{
				"buffer_size": 448,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/fire.log",
			"settings":
			{
				"buffer_size": 8939,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/ximm.php",
			"settings":
			{
				"buffer_size": 798,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/xorr.php",
			"settings":
			{
				"buffer_size": 674,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/index.php",
			"settings":
			{
				"buffer_size": 2249,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/rongoth.php",
			"settings":
			{
				"buffer_size": 1476,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/trakk.php",
			"settings":
			{
				"buffer_size": 718,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/varnic.php",
			"settings":
			{
				"buffer_size": 1870,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/shokov.php",
			"settings":
			{
				"buffer_size": 796,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/thentus.php",
			"settings":
			{
				"buffer_size": 885,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/centurion.php",
			"settings":
			{
				"buffer_size": 2809,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/darkner.php",
			"settings":
			{
				"buffer_size": 827,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/endGame.php",
			"settings":
			{
				"buffer_size": 823,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/altarian.php",
			"settings":
			{
				"buffer_size": 2837,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
			"settings":
			{
				"buffer_size": 3478,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/tech.php",
			"settings":
			{
				"buffer_size": 3496,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/tinashi.php",
			"settings":
			{
				"buffer_size": 1844,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/rolentha.php",
			"settings":
			{
				"buffer_size": 1474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/fire/server/ships/whitestar.php",
			"settings":
			{
				"buffer_size": 1217,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"brack",
				"Preferences: Browse Packages"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 426.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/fire/index.css",
		"/C/xampp/htdocs/fire/server/manager.php",
		"/C/xampp/htdocs/fire/server/ships/Xonn.php",
		"/C/xampp/htdocs/fire/server/systems/structure.php",
		"/C/xampp/htdocs/fire/server/ships/vorchar.php",
		"/C/xampp/htdocs/fire/obstacle.js",
		"/C/xampp/htdocs/fire/game.js",
		"/C/xampp/htdocs/fire/server/systems/weapons/plasma.php",
		"/C/xampp/htdocs/fire/server/dbManager.php",
		"/C/xampp/htdocs/fire/server/ships/rongotha.php",
		"/C/xampp/htdocs/fire/server/fire.log",
		"/C/xampp/htdocs/fire/fire.log",
		"/C/xampp/htdocs/fire/serverfire.log",
		"/C/xampp/htdocs/fire/log.txt",
		"/C/xampp/htdocs/fire/createGame.php",
		"/C/xampp/htdocs/fire/server/ships/vorchan.php",
		"/C/xampp/htdocs/fire/server/builder.php",
		"/C/xampp/htdocs/fire/server/systems/nonweapon.php",
		"/C/xampp/htdocs/fire/shipclasses.js",
		"/C/xampp/htdocs/fire/test.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/area.php",
		"/C/xampp/htdocs/fire/imageloader.js",
		"/C/xampp/htdocs/fire/logout.php",
		"/C/xampp/htdocs/fire/server/ships/olympus.php",
		"/C/xampp/htdocs/fire/debug.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/ballistic.php",
		"/C/xampp/htdocs/fire/systems.js",
		"/C/xampp/htdocs/fire/server/systems/system.php",
		"/C/xampp/htdocs/fire/server/ships/whitestar.php",
		"/C/xampp/htdocs/fire/include.php",
		"/C/xampp/htdocs/fire/dbManager.php",
		"/C/xampp/htdocs/fire/starships.php",
		"/C/xampp/htdocs/fire/jquery-2.1.1.min.js",
		"/C/xampp/htdocs/fire/sublime/fire.sublime-workspace",
		"/C/xampp/htdocs/fire/server/ships/hyperion.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
		"/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
		"/C/xampp/htdocs/fire/index.php",
		"/C/xampp/htdocs/fire/gameSetup.php",
		"/C/xampp/htdocs/fire/getGameData.php",
		"/C/xampp/htdocs/fire/server/ships/omega.php",
		"/C/xampp/htdocs/fire/server/ships/sharlin.php",
		"/C/xampp/htdocs/fire/postGameData.php",
		"/C/xampp/htdocs/fire/lobby.php",
		"/C/xampp/htdocs/fire/script.js",
		"/C/xampp/htdocs/fire/ajax.js",
		"/C/xampp/htdocs/fire/cam.js",
		"/C/xampp/htdocs/fire/classes.js",
		"/C/xampp/htdocs/fire/server/classes.php",
		"/C/xampp/htdocs/fire/graphics.js",
		"/C/xampp/htdocs/fire/mathLib.js",
		"/C/xampp/htdocs/fire/server/math.php",
		"/C/xampp/htdocs/fire/shared.js",
		"/C/xampp/htdocs/fire/style.css",
		"/C/xampp/htdocs/fire/game.php",
		"/C/xampp/htdocs/fire/server/baseship.php",
		"/C/xampp/htdocs/fire/server/systems/systems.php",
		"/C/xampp/htdocs/fire/gameManager.php",
		"/C/xampp/htdocs/fire/server/systems/laser.php",
		"/C/xampp/htdocs/fire/server/systems/particle.php",
		"/C/xampp/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/fire/shipclasses.js",
		"/D/SecureWAMP_Portable/htdocs/fire/mathLib.js",
		"/D/SecureWAMP_Portable/htdocs/fire/log.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/fire/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/fire/script.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.js",
		"/D/SecureWAMP_Portable/htdocs/fire/ajax.js",
		"/D/SecureWAMP_Portable/htdocs/fire/style.css",
		"/D/SecureWAMP_Portable/htdocs/fire/shared.js",
		"/D/SecureWAMP_Portable/htdocs/fire/classes.js",
		"/D/SecureWAMP_Portable/htdocs/fire/systems.js",
		"/D/SecureWAMP_Portable/htdocs/fire/imageloader.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.php",
		"/D/SecureWAMP_Portable/htdocs/fire/lobby.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.php",
		"/D/SecureWAMP_Portable/htdocs/fire/game.js",
		"/D/SecureWAMP_Portable/htdocs/fire/index.html",
		"/D/SecureWAMP_Portable/htdocs/fire/starships.php",
		"/D/SecureWAMP_Portable/htdocs/fire/cam.js",
		"/D/SecureWAMP_Portable/htdocs/fire/graphics.txt",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-ui.js",
		"/D/SecureWAMP_Portable/htdocs/fire/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/fire/debug.php",
		"/D/SecureWAMP_Portable/htdocs/fire/logout.php",
		"/D/SecureWAMP_Portable/htdocs/fire/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/Grid.js",
		"/D/SecureWAMP_Portable/htdocs/baseEvents.js",
		"/D/SecureWAMP_Portable/htdocs/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/HexCalcs.js",
		"/D/SecureWAMP_Portable/htdocs/index.php",
		"/D/SecureWAMP_Portable/htdocs/index.html",
		"/D/SecureWAMP_Portable/htdocs/landing.html",
		"/D/SecureWAMP_Portable/htdocs/laneSubmit.php",
		"/D/SecureWAMP_Portable/htdocs/log.txt",
		"/D/SecureWAMP_Portable/htdocs/jquery-2.1.1.min.js",
		"/D/SecureWAMP_Portable/htdocs/movement.js",
		"/D/SecureWAMP_Portable/htdocs/manager.php",
		"/D/SecureWAMP_Portable/htdocs/style.css",
		"/D/SecureWAMP_Portable/htdocs/script.js",
		"/D/SecureWAMP_Portable/htdocs/test.php",
		"/D/SecureWAMP_Portable/htdocs/admin.js",
		"/D/SecureWAMP_Portable/htdocs/table.php",
		"/D/SecureWAMP_Portable/htdocs/baseClasses.js",
		"/D/SecureWAMP_Portable/htdocs/ajaxManager.js",
		"/C/Users/Chris/AppData/Local/Nox/record/727e8323665a4ce59d77aaa4c968d350",
		"/D/SecureWAMP_Portable/htdocs/fire/server/baseship.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/primus.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships/omega.php",
		"/D/SecureWAMP_Portable/htdocs/fire/ships.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/logout.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/createGame.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameSetup.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/postGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/getGameData.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/doProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/dbManager.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/table.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/gameProcess.php",
		"/D/SecureWAMP_Portable/htdocs/projectX/hexagon/HexagonTools.js",
		"/D/SecureWAMP_Portable/htdocs/projectX/log.txt"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			"*.js",
			"",
			"retrofit",
			"",
			"*.js",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"*.ks",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"*.js",
			"",
			"*.php",
			"*.js",
			"*,js",
			"",
			"*.php",
			"",
			"*.php!",
			"*.php",
			"",
			"*.php",
			"",
			"*.js",
			"",
			"*.js",
			"",
			"*.php",
			"*.hp",
			"",
			"*.php",
			"",
			"*.js",
			"*.php",
			"",
			"(",
			"",
			"*.js",
			"",
			"*.php",
			"",
			"*.js",
			"Ü.js",
			"",
			"*.php",
			"Ü.php",
			"",
			"game.js",
			"",
			"gameSetup.php",
			"",
			"*.php",
			"",
			"*.php"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"debug",
			"debug(",
			"animdata.jump",
			"animdata ",
			"animdata =",
			"drawself",
			"select",
			"endretrofitMode",
			"endre",
			"retrofit",
			"refit",
			"retrofit",
			"#focusGain",
			"#focusgain",
			"focusgain",
			"commandContainer .commandEntr",
			"crewdiv",
			"setascommand",
			"doConfirmSystemLoadout",
			"confirm",
			"totype.plus",
			"plus",
			"refit",
			"dorefit",
			"refit",
			"retro",
			"retrof",
			"boost ",
			"active fleet comm",
			"ent).find(\".outputMask\").h",
			"outputm",
			"options",
			"addsqu",
			"phasedelay = ",
			"phasedel",
			"ajax",
			"numbers",
			"undo com",
			"trysetcom",
			"assign focu",
			"trysetcom",
			"setcoom",
			"setco",
			"assignasf",
			"setflee",
			"you are l",
			"transfering",
			"FP)",
			"FP\"",
			"FP",
			"current morale",
			"testUnitMorale",
			"dump",
			"resolvefire",
			"targetDatatC",
			"rgetDataC",
			"id=\"targetDataC\"",
			"targetdatac",
			"focus / in",
			"focus in",
			"focus imn",
			"game.movePos =",
			"game.movePos",
			"sensorMode = 0",
			"sensormode",
			"turnm",
			"enable",
			"turning",
			"turnmdoe",
			"enablet",
			"alterFlight",
			"setfocusinfo",
			"showfleetmo",
			"color: green",
			"color: red",
			"font-color:",
			"font-color: ",
			".userid\"",
			".userid",
			"setFocusInfo",
			"focusInfo\" +",
			"focusinfo",
			"\"focusinfo",
			"playerInfo",
			"focusIncome",
			"showfleetmo",
			"showFocusInfo",
			"focusInfo",
			"focusInfo\nfocusInfo\nfocusInfo",
			"focusInfo\nfocusInfo",
			"focusInfo",
			"setfocus",
			"200px",
			"nth",
			".playerinfo",
			"playerstatus",
			".playerinfo",
			"220px",
			"removeclass(\"disabled\"",
			"playerstats",
			".disabled",
			"playerinfow",
			"upperGUI",
			"playerInfow",
			"current mo",
			"current m",
			"current Morale",
			"current M",
			"remaining M",
			"initial mor",
			"sensorMode = ",
			"avilable",
			"ship.",
			"mousemove",
			"planPhase",
			".deploying = ",
			"this.ships.push",
			"sensorhighl",
			"drawsensorarc",
			"deploying =",
			"deploying",
			"deploying =",
			".turnMode",
			"turnMode",
			"canvasmouse",
			"mouseclick",
			"turnMode",
			".deploying"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"endRetrofitMode",
			"retrofit",
			"Focus)",
			"userId\" +",
			"gameOverview",
			"Current Morale",
			"Current M",
			"current M",
			"available",
			"unit.",
			"game.mode == 2)",
			"mode = 3",
			"setMoveSlipAngles",
			"addAttachDivEvents",
			".targetDatat",
			"ui.weaponInfo",
			"addQuickFireEvents",
			"{unit.select(e);}",
			"phaseInfo",
			"switchDiv = function(e){",
			".switchDiv(e)",
			"LightParticle",
			"new HeavyAntimatterCannon",
			"AntimatterBlaster",
			"HeavyAntimatterCannon",
			"console.log",
			"Recent Damage",
			"public function getCritModMax($relDmg, $hits){",
			"game.appendSysDiv",
			"showSysDiv",
			"showInfoElement",
			"showSysDiv",
			"game.showInfoElement(",
			"game.showInfoElement = ",
			"debug",
			"terDual($this->getId(), $this->parentId,",
			"$parentId, $linked",
			"this.getInterference()",
			"echo ",
			"Debug::log(\"testObstruction on \".get_class($this).\" #\".$this->id);",
			"static::",
			" Math::getDist",
			"setCollisions",
			"getDist",
			"getAngle",
			"[i]",
			"lineLineIntersect",
			"isInPathOfRect",
			"isInPathCircular",
			"hasUnsetupedSystems",
			"$j",
			"$i",
			"optRange",
			"$fire->getSectionId($system)",
			"$fire->getSectionId(), ",
			"$fire->getSectionId, ",
			"sectionid",
			"getFacingSection",
			"getDmgsByFire",
			"$negation = $system->getArmour($fire);",
			"Can launch up to <span id=\"launchRate\"></span> kTs of units per cycle.",
			"Can store a total tonnage of up to <span id=\"capacity\"></span> kT.",
			"$fire->section->id,",
			"$fire->section->id",
			"canSwitchMode",
			"!this.isPowered()",
			"addTopDamages(",
			"getHitSystem",
			"getFacingElement",
			"specialId",
			"hasMovingObstacles",
			"drawDirectionIndicator",
			"drawHeadingIndicator",
			"getPlannedFacing",
			".h;",
			".h ",
			"new Move",
			"Move",
			"\"heading\"",
			"->heading",
			".heading",
			"heading",
			"hideMoraleDiv",
			"showMoraleDiv",
			" function setMove(){",
			"Recent EM Damage",
			"static::$phase",
			"static::$turn",
			"ui.collideWrapper",
			"doIssueMove",
			"\"unitid\"",
			"unitid",
			"game.turn == 0",
			"setCamFocus",
			"setGlobalCam",
			"setCamToGlobal",
			"doProgress",
			".doProgress()",
			"isDone",
			"getBaseDamage($fire, $system){",
			"getBaseDamage($fire, $hit, $system){",
			"public function getBaseDamage($fire, $system){",
			"next = ",
			"setNextMove",
			"this.appendCollisions(ele);",
			".weapon.animation[0] == ",
			"setInterferenceData",
			"$origin",
			"DamageControlResolved",
			"tPos",
			"oPos",
			"handleCollisions",
			"rams",
			"Interference",
			"setUnitTransform",
			"is->getUnitsFo",
			"[j]",
			"player[i][j]",
			"player[i].units[j]",
			"units[j]",
			"f (this.fireOrders[i].turn == game.turn && this.fireOrders[i].resolved == 1){",
			"this.fireOrders[i]",
			"[i]",
			"\t\t\tif ($this->destroyed){\n\t\t\t\t$fire->cancelShotResolution($i);\n\t\t\t\tDebug::log(\"aborting shot resolution vs dead target #\".$this->id);\n\t\t\t}",
			"resolved = 1",
			" => 0, ",
			"\n\t\t\t\"cost\" => static::$value,\n\t\t\t\"totalCost\" => 0,\n\t\t\t\"moraleCost\" = >0, \n\t\t\t\"gameid\" => 0,\n\t\t\t\"userid\" => 0,",
			"html += \"<span class='yellow'> Failed ! (Severity: \" + numbers[2] + \" + \" + (numbers[3]-numbers[2]) + \" = \" + numbers[3] +\")</span></br>\";"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 27,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/xampp/htdocs/fire/shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11540,
						"regions":
						{
						},
						"selection":
						[
							[
								924,
								924
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/xampp/htdocs/fire/classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28060,
						"regions":
						{
						},
						"selection":
						[
							[
								20898,
								20902
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13287.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/xampp/htdocs/fire/server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8193,
						"regions":
						{
						},
						"selection":
						[
							[
								7159,
								7159
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 299.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/xampp/htdocs/fire/systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 123524,
						"regions":
						{
						},
						"selection":
						[
							[
								75013,
								75013
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48773.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/xampp/htdocs/fire/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34008,
						"regions":
						{
						},
						"selection":
						[
							[
								12729,
								12729
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14238.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/fire/gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27047,
						"regions":
						{
						},
						"selection":
						[
							[
								10121,
								10136
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 617,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										127,
										132
									],
									[
										309,
										314
									],
									[
										391,
										396
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								617,
								617
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 465.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/xampp/htdocs/fire/ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10313,
						"regions":
						{
						},
						"selection":
						[
							[
								242,
								242
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/xampp/htdocs/fire/server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 777,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/xampp/htdocs/fire/server/ships/shokos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 726,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 157,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/xampp/htdocs/fire/server/ships/crius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1132,
						"regions":
						{
						},
						"selection":
						[
							[
								787,
								787
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/fire/game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12608,
						"regions":
						{
						},
						"selection":
						[
							[
								12412,
								12412
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8463.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/xampp/htdocs/fire/game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129903,
						"regions":
						{
						},
						"selection":
						[
							[
								91372,
								91372
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 59969.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/fire/obstacle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15033,
						"regions":
						{
						},
						"selection":
						[
							[
								13965,
								13942
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8019.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/fire/server/ships/Xonn.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5816,
						"regions":
						{
						},
						"selection":
						[
							[
								783,
								783
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 192.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/fire/server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7024,
						"regions":
						{
						},
						"selection":
						[
							[
								590,
								590
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 35.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/fire/graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20343,
						"regions":
						{
						},
						"selection":
						[
							[
								14507,
								14507
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8224.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/xampp/htdocs/fire/server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8706,
						"regions":
						{
						},
						"selection":
						[
							[
								2962,
								2962
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 67.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/fire/mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10598,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1703.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/fire/cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3032,
						"regions":
						{
						},
						"selection":
						[
							[
								1857,
								1857
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 794.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/xampp/htdocs/fire/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15488,
						"regions":
						{
						},
						"selection":
						[
							[
								6004,
								6004
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3033.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/fire/server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4549,
						"regions":
						{
						},
						"selection":
						[
							[
								2706,
								2706
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 58.0,
						"zoom_level": 1.0
					},
					"stack_index": 114,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3391,
						"regions":
						{
						},
						"selection":
						[
							[
								534,
								534
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 115,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/xampp/htdocs/fire/server/ships/hermes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 854,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/fire/squaddie.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19028,
						"regions":
						{
						},
						"selection":
						[
							[
								12080,
								12080
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7249.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/fire/server/dmgcalc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24721,
						"regions":
						{
						},
						"selection":
						[
							[
								2387,
								2387
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 768.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/xampp/htdocs/fire/server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69159,
						"regions":
						{
						},
						"selection":
						[
							[
								24648,
								24648
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15487.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/xampp/htdocs/fire/server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71862,
						"regions":
						{
						},
						"selection":
						[
							[
								52582,
								52582
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30313.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/xampp/htdocs/fire/mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19337,
						"regions":
						{
						},
						"selection":
						[
							[
								18588,
								18588
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 11199.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/C/xampp/htdocs/fire/postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4012,
						"regions":
						{
						},
						"selection":
						[
							[
								1117,
								1117
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/C/xampp/htdocs/fire/server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1115,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 154,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/C/xampp/htdocs/fire/lobby.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12662,
						"regions":
						{
						},
						"selection":
						[
							[
								591,
								591
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/C/xampp/htdocs/fire/server/squadron.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9962,
						"regions":
						{
						},
						"selection":
						[
							[
								642,
								642
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 64.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/C/xampp/htdocs/fire/server/squadbuilder.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5063,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 153,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/C/xampp/htdocs/fire/squadron.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28364,
						"regions":
						{
						},
						"selection":
						[
							[
								5493,
								5493
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3087.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2991,
						"regions":
						{
						},
						"selection":
						[
							[
								742,
								742
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/C/xampp/htdocs/fire/shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 138475,
						"regions":
						{
						},
						"selection":
						[
							[
								52099,
								52099
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 33059.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/C/xampp/htdocs/fire/structure.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11487,
						"regions":
						{
						},
						"selection":
						[
							[
								3139,
								3139
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1055.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/C/xampp/htdocs/fire/flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15401,
						"regions":
						{
						},
						"selection":
						[
							[
								7027,
								7027
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3775.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/C/xampp/htdocs/fire/server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45412,
						"regions":
						{
						},
						"selection":
						[
							[
								2109,
								2109
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 878.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/C/xampp/htdocs/fire/server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9067,
						"regions":
						{
						},
						"selection":
						[
							[
								7939,
								7941
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4465.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/fire/server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7024,
						"regions":
						{
						},
						"selection":
						[
							[
								6009,
								6009
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 507.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4256,
						"regions":
						{
						},
						"selection":
						[
							[
								713,
								713
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7551,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 208.0,
						"zoom_level": 1.0
					},
					"stack_index": 118,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/am.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2816,
						"regions":
						{
						},
						"selection":
						[
							[
								2361,
								2338
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 779.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/C/xampp/htdocs/fire/server/squaddie.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2946,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								87
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/C/xampp/htdocs/fire/server/obstacle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5192,
						"regions":
						{
						},
						"selection":
						[
							[
								2382,
								2382
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 347.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/C/xampp/htdocs/fire/server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3400,
						"regions":
						{
						},
						"selection":
						[
							[
								1517,
								1517
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 444.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/C/xampp/htdocs/fire/salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9266,
						"regions":
						{
						},
						"selection":
						[
							[
								4888,
								4888
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2383.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "/C/xampp/htdocs/fire/server/ships/olympus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3002,
						"regions":
						{
						},
						"selection":
						[
							[
								1070,
								1070
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "/C/xampp/htdocs/fire/server/ships/avenger.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3692,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"stack_index": 143,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "/C/xampp/htdocs/fire/server/ships/battlecrab.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1189,
						"regions":
						{
						},
						"selection":
						[
							[
								362,
								362
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 145,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/C/xampp/htdocs/fire/server/ships/artemis.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1996,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/C/xampp/htdocs/fire/server/ships/saggitarius.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4133,
						"regions":
						{
						},
						"selection":
						[
							[
								1538,
								1538
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 384.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/C/xampp/htdocs/fire/server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9791,
						"regions":
						{
						},
						"selection":
						[
							[
								8276,
								8276
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4298.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8062,
						"regions":
						{
						},
						"selection":
						[
							[
								6008,
								6008
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3150.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3796,
						"regions":
						{
						},
						"selection":
						[
							[
								737,
								735
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 122,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2071,
						"regions":
						{
						},
						"selection":
						[
							[
								896,
								896
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 123,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6768,
						"regions":
						{
						},
						"selection":
						[
							[
								2456,
								2456
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 339.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/C/xampp/htdocs/fire/server/ships/omega.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5640,
						"regions":
						{
						},
						"selection":
						[
							[
								974,
								974
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/C/xampp/htdocs/fire/server/ships/hyperion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2861,
						"regions":
						{
						},
						"selection":
						[
							[
								242,
								242
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/C/xampp/htdocs/fire/server/ships/primus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2996,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/C/xampp/htdocs/fire/server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7473,
						"regions":
						{
						},
						"selection":
						[
							[
								423,
								425
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7163,
						"regions":
						{
						},
						"selection":
						[
							[
								4418,
								4418
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2014.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3100,
						"regions":
						{
						},
						"selection":
						[
							[
								613,
								613
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 47.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/C/xampp/htdocs/fire/getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1845,
						"regions":
						{
						},
						"selection":
						[
							[
								621,
								621
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 120,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/C/xampp/htdocs/fire/server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9538,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/C/xampp/htdocs/fire/server/systems/single.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6840,
						"regions":
						{
						},
						"selection":
						[
							[
								4673,
								4673
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 259.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				}
			]
		},
		{
			"selected": 74,
			"sheets":
			[
				{
					"buffer": 38,
					"file": "/C/xampp/htdocs/fire/flights.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15401,
						"regions":
						{
						},
						"selection":
						[
							[
								10494,
								10494
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5103.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/C/xampp/htdocs/fire/salvo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9266,
						"regions":
						{
						},
						"selection":
						[
							[
								5656,
								5656
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2479.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/pulse.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6768,
						"regions":
						{
						},
						"selection":
						[
							[
								2523,
								2523
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1083.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/C/xampp/htdocs/fire/server/systems/single.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6840,
						"regions":
						{
						},
						"selection":
						[
							[
								6840,
								6840
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4271.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/plasma.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3796,
						"regions":
						{
						},
						"selection":
						[
							[
								3641,
								3641
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1922.0,
						"zoom_level": 1.0
					},
					"stack_index": 142,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/C/xampp/htdocs/fire/server/squaddie.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2946,
						"regions":
						{
						},
						"selection":
						[
							[
								210,
								210
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/fire/mathLib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10598,
						"regions":
						{
						},
						"selection":
						[
							[
								809,
								809
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/xampp/htdocs/fire/server/manager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71862,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 78.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "/C/xampp/htdocs/fire/server/ships/xill.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3772,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "/C/xampp/htdocs/fire/server/ships/zaatrr.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2652,
						"regions":
						{
						},
						"selection":
						[
							[
								322,
								322
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/em.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11,
						"regions":
						{
						},
						"selection":
						[
							[
								11,
								11
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 125,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "/C/xampp/htdocs/fire/server/ships/octurion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3317,
						"regions":
						{
						},
						"selection":
						[
							[
								70,
								70
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/fire/gameSetup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27047,
						"regions":
						{
						},
						"selection":
						[
							[
								9082,
								9082
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6057.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "/C/xampp/htdocs/fire/server/ships/gsten.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3269,
						"regions":
						{
						},
						"selection":
						[
							[
								530,
								667
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 80.0,
						"zoom_level": 1.0
					},
					"stack_index": 119,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "/C/xampp/htdocs/fire/server/ships/katoc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2412,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 148,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/xampp/htdocs/fire/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34008,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21807.0,
						"zoom_level": 1.0
					},
					"stack_index": 124,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/fire/server/dmgcalc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24721,
						"regions":
						{
						},
						"selection":
						[
							[
								1320,
								1320
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 552.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "/C/xampp/htdocs/fire/server/ships/tigara.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2551,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 141,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "/C/xampp/htdocs/fire/server/ships/torotha.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 797,
						"regions":
						{
						},
						"selection":
						[
							[
								797,
								797
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 55.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "/C/xampp/htdocs/fire/server/ships/mograth.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 791,
						"regions":
						{
						},
						"selection":
						[
							[
								428,
								428
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/fire/game.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12608,
						"regions":
						{
						},
						"selection":
						[
							[
								9983,
								9984
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6365.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "/C/xampp/htdocs/fire/shared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11540,
						"regions":
						{
						},
						"selection":
						[
							[
								1146,
								1152
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 259.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/fire/obstacle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15033,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 344.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/xampp/htdocs/fire/game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129903,
						"regions":
						{
						},
						"selection":
						[
							[
								104311,
								104315
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 68614.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/fire/graphics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20343,
						"regions":
						{
						},
						"selection":
						[
							[
								9545,
								9545
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5023.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/xampp/htdocs/fire/mixed.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19337,
						"regions":
						{
						},
						"selection":
						[
							[
								256,
								256
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/xampp/htdocs/fire/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15488,
						"regions":
						{
						},
						"selection":
						[
							[
								11476,
								11476
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6113.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/fire/server/flight.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4549,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "/C/xampp/htdocs/fire/server/fighter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6595,
						"regions":
						{
						},
						"selection":
						[
							[
								4418,
								4418
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2392.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "/C/xampp/htdocs/fire/server/ships/zitomm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3586,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								344
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "/C/xampp/htdocs/fire/server/ships/xonn.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5816,
						"regions":
						{
						},
						"selection":
						[
							[
								263,
								263
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/linked.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4256,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 131,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/particle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8062,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 117,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "/C/xampp/htdocs/fire/server/ships/demos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2001,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 126,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "/C/xampp/htdocs/fire/server/ships/gquan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2901,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 150,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "/C/xampp/htdocs/fire/server/ships/vorchan.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 772,
						"regions":
						{
						},
						"selection":
						[
							[
								443,
								443
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 132,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "/C/xampp/htdocs/fire/server/ships/xvell.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1004,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "/C/xampp/htdocs/fire/server/ships/vorchora.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 732,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 156,
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "/C/xampp/htdocs/fire/server/ships/haven.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 706,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 135,
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "/C/xampp/htdocs/fire/server/ships/shaveen.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 876,
						"regions":
						{
						},
						"selection":
						[
							[
								315,
								315
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/xampp/htdocs/fire/classes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28060,
						"regions":
						{
						},
						"selection":
						[
							[
								922,
								922
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 336.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "/C/xampp/htdocs/fire/autoload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13592,
						"regions":
						{
						},
						"selection":
						[
							[
								10411,
								10411
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2571.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "/C/xampp/htdocs/fire/server/ships/kutai.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1451,
						"regions":
						{
						},
						"selection":
						[
							[
								303,
								303
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 155,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/dual.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2991,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 130,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/xampp/htdocs/fire/server/classes.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8193,
						"regions":
						{
						},
						"selection":
						[
							[
								5853,
								5853
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4332.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/xampp/htdocs/fire/ajax.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10313,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/C/xampp/htdocs/fire/server/salvo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3400,
						"regions":
						{
						},
						"selection":
						[
							[
								2824,
								2824
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1491.0,
						"zoom_level": 1.0
					},
					"stack_index": 129,
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "/C/xampp/htdocs/fire/server/ships/dagkar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3384,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 151,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/C/xampp/htdocs/fire/server/debug.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1115,
						"regions":
						{
						},
						"selection":
						[
							[
								884,
								884
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 116,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/xampp/htdocs/fire/server/dbManager.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69159,
						"regions":
						{
						},
						"selection":
						[
							[
								27701,
								27701
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18997.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/xampp/htdocs/fire/server/math.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "/C/xampp/htdocs/fire/global.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 448,
						"regions":
						{
						},
						"selection":
						[
							[
								151,
								151
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 144,
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "/C/xampp/htdocs/fire/server/fire.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8939,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "/C/xampp/htdocs/fire/server/ships/ximm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 798,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								236
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 92,
					"file": "/C/xampp/htdocs/fire/server/ships/xorr.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 674,
						"regions":
						{
						},
						"selection":
						[
							[
								272,
								272
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/fire/cam.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3032,
						"regions":
						{
						},
						"selection":
						[
							[
								1401,
								1401
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 719.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/C/xampp/htdocs/fire/getGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1845,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 158,
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "/C/xampp/htdocs/fire/index.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2249,
						"regions":
						{
						},
						"selection":
						[
							[
								1777,
								1777
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 298.0,
						"zoom_level": 1.0
					},
					"stack_index": 127,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/C/xampp/htdocs/fire/server/mixed.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9067,
						"regions":
						{
						},
						"selection":
						[
							[
								8038,
								8038
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4296.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/C/xampp/htdocs/fire/squadron.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28364,
						"regions":
						{
						},
						"selection":
						[
							[
								17560,
								17560
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9937.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/fire/squaddie.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19028,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8682.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "/C/xampp/htdocs/fire/server/ships/rongoth.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1476,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 159,
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "/C/xampp/htdocs/fire/server/ships/trakk.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 718,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 134,
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "/C/xampp/htdocs/fire/server/ships/varnic.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1870,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 160,
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "/C/xampp/htdocs/fire/server/ships/shokov.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 796,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 137,
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "/C/xampp/htdocs/fire/server/ships/thentus.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 885,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 147,
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "/C/xampp/htdocs/fire/server/ships/centurion.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2809,
						"regions":
						{
						},
						"selection":
						[
							[
								2393,
								2400
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 478.0,
						"zoom_level": 1.0
					},
					"stack_index": 152,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/xampp/htdocs/fire/server/ships/shokos.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 726,
						"regions":
						{
						},
						"selection":
						[
							[
								190,
								190
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 136,
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "/C/xampp/htdocs/fire/server/ships/darkner.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 827,
						"regions":
						{
						},
						"selection":
						[
							[
								384,
								384
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 139,
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "/C/xampp/htdocs/fire/endGame.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 823,
						"regions":
						{
						},
						"selection":
						[
							[
								343,
								343
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 133,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/C/xampp/htdocs/fire/server/systems/nonweapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9791,
						"regions":
						{
						},
						"selection":
						[
							[
								642,
								642
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 102,
					"file": "/C/xampp/htdocs/fire/server/ships/altarian.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2837,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/C/xampp/htdocs/fire/server/ship.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45412,
						"regions":
						{
						},
						"selection":
						[
							[
								23253,
								23253
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13946.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/C/xampp/htdocs/fire/server/systems/structure.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9538,
						"regions":
						{
						},
						"selection":
						[
							[
								960,
								960
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 199.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/xampp/htdocs/fire/systems.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 123524,
						"regions":
						{
						},
						"selection":
						[
							[
								32137,
								32137
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21737.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/C/xampp/htdocs/fire/structure.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11487,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/C/xampp/htdocs/fire/server/obstacle.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5192,
						"regions":
						{
						},
						"selection":
						[
							[
								2780,
								2780
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1387.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/C/xampp/htdocs/fire/shipclasses.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 138475,
						"regions":
						{
						},
						"selection":
						[
							[
								39026,
								39033
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 25211.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/launcher.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3100,
						"regions":
						{
						},
						"selection":
						[
							[
								2918,
								2918
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 176.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/ammo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7551,
						"regions":
						{
						},
						"selection":
						[
							[
								290,
								290
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/area.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3391,
						"regions":
						{
						},
						"selection":
						[
							[
								110,
								110
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 121,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/C/xampp/htdocs/fire/server/systems/weapon.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7473,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/C/xampp/htdocs/fire/server/squadron.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9962,
						"regions":
						{
						},
						"selection":
						[
							[
								1848,
								1848
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 680.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/matter.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2071,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 128,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/C/xampp/htdocs/fire/server/systems/weapons/laser.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7163,
						"regions":
						{
						},
						"selection":
						[
							[
								802,
								803
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/fire/server/systems/system.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7024,
						"regions":
						{
						},
						"selection":
						[
							[
								5946,
								5946
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 149.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/C/xampp/htdocs/fire/postGameData.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4012,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 280.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 103,
					"file": "/C/xampp/htdocs/fire/server/ships/sharlin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3478,
						"regions":
						{
						},
						"selection":
						[
							[
								2562,
								2562
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "/C/xampp/htdocs/fire/server/ships/tech.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3496,
						"regions":
						{
						},
						"selection":
						[
							[
								875,
								875
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 149,
					"type": "text"
				},
				{
					"buffer": 105,
					"file": "/C/xampp/htdocs/fire/server/ships/tinashi.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1844,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 138,
					"type": "text"
				},
				{
					"buffer": 106,
					"file": "/C/xampp/htdocs/fire/server/ships/rolentha.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1474,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								402
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 146,
					"type": "text"
				},
				{
					"buffer": 107,
					"file": "/C/xampp/htdocs/fire/server/ships/whitestar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1217,
						"regions":
						{
						},
						"selection":
						[
							[
								1134,
								1213
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 140,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/xampp/htdocs/fire/server/ships/tethys.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 777,
						"regions":
						{
						},
						"selection":
						[
							[
								329,
								329
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.60392452181,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fire.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"man",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"sys",
				"C:\\xampp\\htdocs\\fire\\systems.js"
			],
			[
				"game",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"games",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"game.",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"sh",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"db",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"game.js",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"grap",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"cla",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"ga",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"dmg",
				"C:\\xampp\\htdocs\\fire\\server\\dmgcalc.php"
			],
			[
				"log",
				"C:\\xampp\\htdocs\\fire\\server\\fire.log"
			],
			[
				"scr",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"shav",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\shaveen.php"
			],
			[
				"sharl",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\sharlin.php"
			],
			[
				"sty",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"gam",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"las",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\laser.php"
			],
			[
				"par",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\particle.php"
			],
			[
				"sc",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"lob",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"post",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"tor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\torotha.php"
			],
			[
				"fig",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"ome",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\omega.php"
			],
			[
				"no",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"am",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\am.php"
			],
			[
				"fi",
				"C:\\xampp\\htdocs\\fire\\server\\fire.log"
			],
			[
				"dmgc",
				"C:\\xampp\\htdocs\\fire\\server\\dmgcalc.php"
			],
			[
				"lo",
				"C:\\xampp\\htdocs\\fire\\server\\fire.log"
			],
			[
				"shar",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"gra",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"sha",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"styl",
				"C:\\xampp\\htdocs\\fire\\style.css"
			],
			[
				"gaem",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"cam",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"shipc",
				"C:\\xampp\\htdocs\\fire\\shipclasses.js"
			],
			[
				"ob",
				"C:\\xampp\\htdocs\\fire\\obstacle.js"
			],
			[
				"sy",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\system.php"
			],
			[
				"po",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"mix",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"sal",
				"C:\\xampp\\htdocs\\fire\\salvo.js"
			],
			[
				"fl",
				"C:\\xampp\\htdocs\\fire\\flights.js"
			],
			[
				"mi",
				"C:\\xampp\\htdocs\\fire\\mixed.js"
			],
			[
				"cr",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\crius.php"
			],
			[
				"xv",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xvell.php"
			],
			[
				"xim",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\ximm.php"
			],
			[
				"her",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hermes.php"
			],
			[
				"xor",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xorr.php"
			],
			[
				"mog",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\mograth.php"
			],
			[
				"xon",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xonn.php"
			],
			[
				"hyp",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\hyperion.php"
			],
			[
				"pri",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\primus.php"
			],
			[
				"xil",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xill.php"
			],
			[
				"oly",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\olympus.php"
			],
			[
				"zit",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\zitomm.php"
			],
			[
				"art",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"zaa",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\zaatrr.php"
			],
			[
				"zat",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\zaatrr.php"
			],
			[
				"xi",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\ximm.php"
			],
			[
				"z",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\zitomm.php"
			],
			[
				"za",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\zaatrr.php"
			],
			[
				"xo",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\Xonn.php"
			],
			[
				"at",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"figh",
				"C:\\xampp\\htdocs\\fire\\server\\fighter.php"
			],
			[
				"au",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"auto",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"aut",
				"C:\\xampp\\htdocs\\fire\\autoload.php"
			],
			[
				"pul",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"gamese",
				"C:\\xampp\\htdocs\\fire\\gameSetup.php"
			],
			[
				"sin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\single.php"
			],
			[
				"li",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"mat",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"mathh",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"sag",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\saggitarius.php"
			],
			[
				"amm",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\ammo.php"
			],
			[
				"ar",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\artemis.php"
			],
			[
				"lin",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\linked.php"
			],
			[
				"sq",
				"C:\\xampp\\htdocs\\fire\\squadron.js"
			],
			[
				"pu",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\pulse.php"
			],
			[
				"str",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"lau",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"wea",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"non",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"we",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapon.php"
			],
			[
				"npn",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"si",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\single.php"
			],
			[
				"tur",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"st",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\structure.php"
			],
			[
				"sing",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\single.php"
			],
			[
				"",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\single.php"
			],
			[
				"xonn",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xonn.php"
			],
			[
				"oc",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\octurion.php"
			],
			[
				"xill",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xill.php"
			],
			[
				"alt",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\altarian.php"
			],
			[
				"pos",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"SQ",
				"C:\\xampp\\htdocs\\fire\\squaddie.js"
			],
			[
				"CAM",
				"C:\\xampp\\htdocs\\fire\\cam.js"
			],
			[
				"math",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"ma",
				"C:\\xampp\\htdocs\\fire\\server\\math.php"
			],
			[
				"nonw",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\nonweapon.php"
			],
			[
				"o",
				"C:\\xampp\\htdocs\\fire\\obstacle.js"
			],
			[
				"lobb",
				"C:\\xampp\\htdocs\\fire\\lobby.php"
			],
			[
				"lauc",
				"C:\\xampp\\htdocs\\fire\\server\\systems\\weapons\\launcher.php"
			],
			[
				"dbm",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"pb",
				"C:\\xampp\\htdocs\\fire\\obstacle.js"
			],
			[
				"d",
				"C:\\xampp\\htdocs\\fire\\server\\dbManager.php"
			],
			[
				"opb",
				"C:\\xampp\\htdocs\\fire\\server\\obstacle.php"
			],
			[
				"og",
				"C:\\xampp\\htdocs\\fire\\postGameData.php"
			],
			[
				"mth",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"mathl",
				"C:\\xampp\\htdocs\\fire\\mathLib.js"
			],
			[
				"obs",
				"C:\\xampp\\htdocs\\fire\\obstacle.js"
			],
			[
				"scrip",
				"C:\\xampp\\htdocs\\fire\\script.js"
			],
			[
				"m",
				"C:\\xampp\\htdocs\\fire\\server\\manager.php"
			],
			[
				"gr",
				"C:\\xampp\\htdocs\\fire\\graphics.js"
			],
			[
				"ob ",
				"C:\\xampp\\htdocs\\fire\\server\\obstacle.php"
			],
			[
				"shared",
				"C:\\xampp\\htdocs\\fire\\shared.js"
			],
			[
				"gs",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gsten.php"
			],
			[
				"gst",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\gsten.php"
			],
			[
				"clas",
				"C:\\xampp\\htdocs\\fire\\classes.js"
			],
			[
				"gae",
				"C:\\xampp\\htdocs\\fire\\game.js"
			],
			[
				"get",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"game.ph",
				"C:\\xampp\\htdocs\\fire\\game.php"
			],
			[
				"getGameData",
				"C:\\xampp\\htdocs\\fire\\getGameData.php"
			],
			[
				"aja",
				"C:\\xampp\\htdocs\\fire\\ajax.js"
			],
			[
				"xve",
				"C:\\xampp\\htdocs\\fire\\server\\ships\\xvell.php"
			],
			[
				"dg",
				"C:\\xampp\\htdocs\\fire\\server\\dmgcalc.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 121.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
